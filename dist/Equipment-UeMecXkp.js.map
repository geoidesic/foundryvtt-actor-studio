{"version":3,"file":"Equipment-UeMecXkp.js","sources":["../src/components/molecules/dnd5e/StartingGold.svelte","../src/components/atoms/button/IconButton.svelte","../src/components/molecules/dnd5e/v4/StartingGold.svelte","../src/components/molecules/dnd5e/StartingEquipment.svelte","../src/components/molecules/dnd5e/EquipmentSelection/EquipmentSelectorDetail.svelte","../src/components/molecules/dnd5e/EquipmentSelection/PlannedInventory.svelte","../src/components/organisms/dnd5e/Tabs/Equipment.svelte"],"sourcesContent":["<script>\n  import { localize } from \"#runtime/svelte/helper\";\n  import { getContext, onDestroy, onMount } from \"svelte\";\n  import { goldRoll } from \"~/src/stores/storeDefinitions\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import { writable } from 'svelte/store';\n\n  export let characterClass;\n  export let disabled = false;\n\n  let formula = \"\";\n\n  $: {\n    if (characterClass?.system?.wealth) {\n      formula = characterClass.system.wealth;\n      // If formula doesn't contain 'd', set goldRoll directly\n      if (!formula.includes('d')) {\n        $goldRoll = parseInt(formula) || 0;\n      }\n    } else {\n      // Use default gold dice from settings if no class-specific formula\n      formula = game.settings.get(MODULE_ID, \"defaultGoldDice\") || \"5d4 * 10\";\n    }\n  }\n\n  // Derive hasRolled from the goldRoll store value\n  $: hasRolled = $goldRoll > 0;\n\n  async function rollGold() {\n    if (disabled) return;\n    const roll = await new Roll(formula).evaluate();\n    const className = characterClass?.name || \"Character\";\n    const flavor = `Rolling starting gold for ${className}`;\n    roll.toMessage({\n      flavor,\n      speaker: ChatMessage.getSpeaker()\n    }, {rollMode: game.settings.get('core', 'rollMode')});\n\n    $goldRoll = roll.total;\n  }\n\n  export function resetGoldRoll() {\n    goldRoll.set(0);\n  }\n</script>\n\n<template lang=\"pug\">\n  section.starting-gold\n    .flexrow\n      +if(\"!disabled\")\n        .flex0.required(class=\"{!hasRolled ? 'active' : ''}\") *\n      .flex3\n        h2.left {localize('GAS.Equipment.Gold')}\n    \n    .flexcol.gold-section.gap-10(class=\"{disabled ? 'disabled' : ''}\")\n      +if(\"!hasRolled\")\n        .flexrow.left.gap-4\n          .flex1 Formula: \n          .flex1.badge.center {formula}\n      +if(\"!disabled\")\n        .flexrow.left.justify-flexrow-vertical\n          .flex3 \n            +if(\"hasRolled\")\n              .result.final-gold-result\n                .flexrow.justify-flexrow-vertical.no-wrap\n                  .flex0.relative.icon\n                    i.fas.fa-coins\n                  .flex2.left\n                    span.label Result: \n                    span.value {$goldRoll} gp\n          .flex0.right.controls(class=\"{hasRolled || disabled ? '' : 'active'}\" alt=\"Roll\" on:click!=\"{rollGold}\")\n            i.fas.fa-dice\n</template>\n\n<style lang=\"sass\">\n  @import \"../../../../styles/Mixins.scss\"\n  .badge\n    +badge()\n  .starting-gold\n    background: rgba(0, 0, 0, 0.2)\n    border-radius: var(--border-radius)\n    padding: 0.5rem\n\n  .gold-section\n    padding: 0.5rem\n    border-radius: var(--border-radius)\n    &:not(.disabled)\n      border: 1px solid var(--dnd5e-color-gold)\n      background: rgba(0, 0, 0, 0.2)\n      background: #000000\n      color: var(--dnd5e-color-gold)\n\n\n  .formula\n    .label\n      color: var(--color-text-dark-secondary)\n      margin-right: 0.5rem\n    .value\n      font-family: monospace\n\n  .controls\n    cursor: pointer\n    min-width: 24px\n    font-size: 1rem\n    background-color: rgba(0, 0, 0, 0.1)\n    padding: 2px 1px 0px 0px\n    visibility: hidden\n    border: 1px solid var(--color-positive)\n    border-radius: 4px\n    color: var(--color-positive)\n    &:hover\n      cursor: pointer\n      background-color: rgba(140, 90, 0, 0.2)\n    &.active\n      visibility: visible\n      border: 1px solid var(--dnd5e-color-gold)\n      color: var(--dnd5e-color-gold)\n      animation: pulse 1s infinite\n\n  .result\n    &.final-gold-result\n      padding: 0.5rem\n      border-radius: var(--border-radius)\n      border: 1px solid var(--dnd5e-color-gold)\n      background: #000000\n      color: var(--dnd5e-color-gold)\n      margin-top: 0.5rem\n      \n      .icon\n        min-width: 32px\n        max-height: 32px\n        margin-right: 0.5rem\n        display: flex\n        align-items: center\n        justify-content: center\n        \n        i\n          color: var(--dnd5e-color-gold)\n          font-size: 1.2em\n      \n      .label\n        color: var(--dnd5e-color-gold)\n        margin-right: 0.5rem\n      \n      .value\n        color: var(--dnd5e-color-gold)\n        font-weight: bold\n      font-weight: bold\n</style> ","<script>\n  import preventDefault from \"~/src/helpers/svelte-actions/PreventDefault.js\";\n\n  export let icon = void 0;\n  export let disabled = false;\n</script>\n\n<button on:click on:mousedown={preventDefault} {disabled}>\n  <div><i class={icon} /></div>\n</button>\n\n<style lang=\"scss\">\n  @import \"../../../../styles/Mixins.scss\";\n  button {\n    @include icon-button;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    clip-path: var(--tjs-icon-button-clip-path, none);\n    transform-style: preserve-3d;\n  }\n\n  button:hover {\n    background: radial-gradient(var(--button-background-highlight), var(--button-background));\n    clip-path: var(--tjs-icon-button-clip-path-hover, var(--tjs-icon-button-clip-path, none));\n  }\n</style>\n","<script>\n  import { localize as t } from \"#runtime/svelte/helper\";\n  import { getContext, onDestroy, onMount } from \"svelte\";\n  import { goldRoll } from \"~/src/stores/storeDefinitions\";\n  import { goldChoices, setClassGoldChoice, setBackgroundGoldChoice, clearGoldChoices } from \"~/src/stores/goldChoices\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import { clearEquipmentSelections } from \"~/src/stores/equipmentSelections\";\n  import IconButton from \"~/src/components/atoms/button/IconButton.svelte\";\n  \n  export let characterClass;\n  export let background;\n\n\n  let classGoldOnly = 0;\n  let classGoldWithEquipment = 0;\n  let backgroundGoldOnly = 0;\n  let backgroundGoldWithEquipment = 0;\n\n  export const scrape2024SecondaryGoldAward = (item) => {\n    // Extract awards using a regular expression\n    const awards = item.system?.description?.value?.match(/\\[\\[\\/award (\\d+)GP\\]\\]/g);\n    \n    if (awards) {\n      const extractedAwards = awards.map(award => parseInt(award.match(/(\\d+)GP/)[1], 10));\n      const max = Math.max(...extractedAwards);\n      const min = Math.min(...extractedAwards);\n      \n      return {max, min};\n    } else {\n      console.log('No awards found.');\n      return 0\n    }\n  }\n  \n  // @deprecated: not accurate.\n  // Function to extract gold value from description text\n  export function scrapeGoldFromBackground(background) {\n    // Look for pattern \", X GP;\" where X is a number\n    // const match = background.system.description?.value.match(/,\\s*(\\d+)\\s*GP;/i);\n    // Match all occurrences of digits followed by a space and 'GP'\n    const matches = background.system.description?.value.match(/(\\d+)\\s*GP/gi);\n    // Extract the number values as integers\n    const goldValues = matches ? matches.map(m => parseInt(m.match(/\\d+/)[0], 10)) : [];\n    window.GAS.log.d(\"scrapeGoldFromBackground goldValues\", goldValues);\n    if(goldValues) {\n      const max = Math.max(...goldValues);\n      const min = Math.min(...goldValues);\n      \n      return {max, min};\n    } else {\n      console.warn('No gold value found in description.');\n      return 0;\n    }\n\n  }\n\n  $: {\n    if (characterClass) {\n      // Gold only amount comes from system.wealth\n      classGoldOnly = characterClass.system.wealth || 0;\n      // With equipment amount comes from description\n      classGoldWithEquipment = scrape2024SecondaryGoldAward(characterClass)?.min || 0\n    }\n    \n    if (background) {\n      // Gold only amount comes from system.wealth\n      backgroundGoldOnly = background.system.wealth || 0;\n      // With equipment amount comes from description\n      backgroundGoldWithEquipment = scrapeGoldFromBackground(background)?.min || 0;\n    }\n  }\n\n  function handleClassChoice(choice) {\n    if (showEditButton) return;\n    const goldValue = choice === 'equipment' ? classGoldWithEquipment : classGoldOnly;\n    setClassGoldChoice(choice, goldValue);\n  }\n\n  function handleBackgroundChoice(choice) {\n    if (showEditButton) return;\n    const goldValue = choice === 'equipment' ? backgroundGoldWithEquipment : backgroundGoldOnly;\n    setBackgroundGoldChoice(choice, goldValue);\n  }\n\n  function makeClassChoiceHandler(choice) {\n    return function classChoiceHandler() {\n      handleClassChoice(choice);\n    };\n  }\n\n  function makeBackgroundChoiceHandler(choice) {\n    return function backgroundChoiceHandler() {\n      handleBackgroundChoice(choice);\n    };\n  }\n\n  function handleEdit() {\n    clearGoldChoices();\n    clearEquipmentSelections();\n  }\n\n  $: classChoice = $goldChoices.fromClass.choice;\n  $: backgroundChoice = $goldChoices.fromBackground.choice;\n  $: totalGold = parseInt($goldChoices.fromClass.goldValue) + parseInt($goldChoices.fromBackground.goldValue);\n  $: hasChoices = characterClass || background;\n  $: isComplete = classChoice && backgroundChoice;\n  $: showEditButton = classChoice && backgroundChoice;\n</script>\n\n<template lang=\"pug\">\nsection.starting-gold\n  .flexrow\n    +if(\"!showEditButton\")\n      .flex0.required(class!=\"{!classChoice || !backgroundChoice ? 'active' : ''}\")\n        span *\n    .flex3\n      h2.left\n        span {t('GAS.Equipment.Gold')}\n    +if(\"showEditButton\")\n      .flex0.right\n        IconButton.option(\n          on:click!=\"{handleEdit}\"\n          icon=\"fas fa-pencil\"\n        )\n  \n  .flexcol.gold-section.gap-10(class!=\"{showEditButton ? 'disabled' : ''}\")\n    \n    +if(\"background\")\n      .equipment-group\n        .flexrow.left\n          .flex.group-label {background.name} Options\n        .options\n          button.option(\n            class!=\"{backgroundChoice === 'equipment' ? 'selected' : ''} {showEditButton ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeBackgroundChoiceHandler('equipment')}\"\n            disabled!=\"{showEditButton}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-sack-dollar\n              .flex2.left.name\n                span {t('GAS.Equipment.Label')} + {backgroundGoldWithEquipment} gp\n          button.option(\n            class!=\"{backgroundChoice === 'gold' ? 'selected' : ''} {showEditButton ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeBackgroundChoiceHandler('gold')}\"\n            disabled!=\"{showEditButton}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-coins\n              .flex2.left.name\n                span {backgroundGoldOnly} gp\n    \n    +if(\"characterClass\")\n      .equipment-group\n        .flexrow.left\n          .flex.group-label {characterClass.name} Options\n        .options\n          button.option(\n            class!=\"{classChoice === 'equipment' ? 'selected' : ''} {showEditButton ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeClassChoiceHandler('equipment')}\"\n            disabled!=\"{showEditButton}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-sack-dollar\n              .flex2.left.name\n                span {t('GAS.Equipment.Label')} + {classGoldWithEquipment} gp\n          button.option(\n            class!=\"{classChoice === 'gold' ? 'selected' : ''} {showEditButton ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeClassChoiceHandler('gold')}\"\n            disabled!=\"{showEditButton}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-coins\n              .flex2.left.name\n                span {classGoldOnly} gp\n    \n    +if(\"classChoice && backgroundChoice\")\n      .equipment-group.final-gold\n        .flexrow.left.result\n          .flex0.relative.icon\n            i.fas.fa-coins\n          .flex2.left\n            .label\n              span Total Gold:\n            .value\n              span {totalGold} gp\n</template>\n\n<style lang=\"sass\">\n@import \"../../../../../styles/Mixins.scss\"\n.badge\n  +badge()\n.starting-gold\n  background: rgba(0, 0, 0, 0.2)\n  border-radius: var(--border-radius)\n  padding: 0.5rem\n\n.gold-section\n  padding: 0.5rem\n  border-radius: var(--border-radius)\n  &:not(.disabled)\n    border: 1px solid var(--dnd5e-color-gold)\n    background: rgba(0, 0, 0, 0.2)\n    background: #000000\n    color: var(--dnd5e-color-gold)\n\n.equipment-group\n  margin-bottom: 0.75rem\n  margin-right: 0.2rem\n  padding: 0.5rem\n  border-radius: var(--border-radius)\n  background: rgba(0, 0, 0, 0.2)\n  \n  &:last-child\n    margin-bottom: 0\n\n  &.final-gold\n    border: 1px solid var(--dnd5e-color-gold)\n    background: #000000\n    color: var(--dnd5e-color-gold)\n    \n    .icon\n      min-width: 32px\n      max-height: 32px\n      margin-right: 0.5rem\n      display: flex\n      align-items: center\n      justify-content: center\n      \n      i\n        color: var(--dnd5e-color-gold)\n        font-size: 1.2em\n    \n    .label\n      color: var(--dnd5e-color-gold)\n      margin-right: 0.5rem\n    \n    .value\n      color: var(--dnd5e-color-gold)\n      font-weight: bold\n\n.group-label\n  display: block\n  font-size: 1em\n  color: var(--dnd5e-color-gold)\n  margin-bottom: 0.5rem\n  font-style: italic\n\n.options\n  display: grid\n  grid-template-columns: repeat(1, 1fr)\n  gap: 0.2rem\n\n.option\n  display: flex\n  padding: 0.3rem 0.5rem\n  border: 1px solid rgba(255, 255, 255, 0.1)\n  border-radius: 4px\n  background: rgba(0, 0, 0, 0.4)\n  color: var(--li-background-color)\n  cursor: pointer\n  transition: all 0.5s ease\n  \n  &:hover:not(.disabled)\n    background: var(--dnd5e-color-gold)\n    border-color: rgba(255, 255, 255, 0.2)\n\n    .icon\n      i\n        color: var(--dnd5e-color-dark)\n    span\n      color: var(--dnd5e-color-dark)\n  &.selected\n    background: rgba(0, 0, 0, 0.8)\n    border-color: #b59e54\n    box-shadow: 0 0 10px rgba(181, 158, 84, 0.2)\n    &:hover:not(.disabled)\n      background: rgba(0, 0, 0, 0.8)\n      border-color: #b59e54\n      box-shadow: 0 0 10px rgba(181, 158, 84, 0.2)\n      span\n        color: #fff\n      .icon\n        i\n          color: #fff\n\n  &.disabled\n    cursor: not-allowed\n    opacity: 0.5\n    transition: opacity 0.5s ease\n\n  &.confirm\n    background: var(--color-positive)\n    border-color: var(--color-positive)\n    color: white\n    &:hover\n      background: var(--color-positive-dark)\n\n.icon\n  min-width: 32px\n  max-height: 32px\n  margin-right: 0.2rem\n  display: flex\n  align-items: center\n  justify-content: center\n  i\n    font-size: 1.2em\n    color: var(--dnd5e-color-gold)\n\n.name\n  font-size: smaller\n  line-height: 2rem\n\n.mt-sm\n  margin-top: 0.5rem\n</style> ","<script>\n  import { localize } from \"#runtime/svelte/helper\";\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import { equipmentSelections, selectEquipment, initializeGroup, editGroup, getEquipmentIcon, selectedItems } from \"~/src/stores/equipmentSelections\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import IconButton from \"~/src/components/atoms/button/IconButton.svelte\";\n  import ImageButton from \"~/src/components/atoms/button/ImageButton.svelte\";\n  // import EquipmentSelector from \"~/src/components/molecules/dnd5e/EquipmentSelector.svelte\";\n\n  export let startingEquipment = [];\n  export let classEquipment = [];\n  export let backgroundEquipment = [];\n  export let characterClass = null;\n  export let background = null;\n  export let disabled = false;\n  export let allEquipmentItems = [];\n\n  // Check if equipment selection is enabled in settings\n  const equipmentSelectionEnabled = game.settings.get(MODULE_ID, \"enableEquipmentSelection\");\n\n  function getGroupFromSelection(groupId) {\n    return $equipmentSelections[groupId];\n  }\n\n  $: window.GAS.log.d(\"StartingEquipment startingEquipment\", startingEquipment);\n\n  $: window.GAS.log.d(\"StartingEquipment equipmentSelections\", $equipmentSelections);\n  \n  // Group equipment by source for 2024 rules\n  $: equipmentBySource = (() => {\n    if (window.GAS.dnd5eVersion < 4 || window.GAS.dnd5eRules !== \"2024\") {\n      // For non-2024 rules, just return equipment without source grouping\n      return [{ source: null, equipment: startingEquipment }];\n    }\n    \n    const groups = [];\n    \n    // Add class equipment if available\n    if (classEquipment?.length > 0) {\n      groups.push({\n        source: 'class',\n        label: characterClass?.name || 'Class',\n        equipment: classEquipment\n      });\n    }\n    \n    // Add background equipment if available\n    if (backgroundEquipment?.length > 0) {\n      groups.push({\n        source: 'background', \n        label: background?.name || 'Background',\n        equipment: backgroundEquipment\n      });\n    }\n    \n    return groups;\n  })();\n  \n  // Process and group equipment\n  $: {\n    if (startingEquipment?.length) {\n      \n      startingEquipment\n        // @deprecated: this breaks the order of the items for v4 in the flattenedStartingEquipment store\n        // .sort((a, b) => {\n        //   // First sort by whether it's a standalone entry (not OR and no group)\n        //   if (a.type !== 'OR' && !a.group && (b.type === 'OR' || b.group)) return -1;\n        //   if (b.type !== 'OR' && !b.group && (a.type === 'OR' || a.group)) return 1;\n        //   // Then by sort value\n        // })\n        .forEach(entry => {\n          // window.GAS.log.d(\"StartingEquipment entry\", entry);\n          if (entry.type === 'OR') {\n            const children = startingEquipment.filter(item => item.group === entry._id);\n            \n            // If there's only one child in this OR group, treat it as a standalone entry\n            if (children.length === 1) {\n              const singleChild = children[0];\n              window.GAS.log.d(\"StartingEquipment flattening single-child OR group\", {\n                orGroupId: entry._id,\n                childType: singleChild.type,\n                childLabel: singleChild.label\n              });\n              \n              // Initialize as standalone instead of choice\n              initializeGroup(entry._id, {\n                type: 'standalone',\n                label: singleChild.label || entry.label,\n                items: [singleChild],\n                sort: entry.sort\n              });\n            } else {\n              // Normal OR group with multiple choices\n              initializeGroup(entry._id, {\n                type: 'choice',\n                label: 'Choose one...',\n                items: children,\n                sort: entry.sort\n              });\n            }\n          } else if (!entry.group) {\n            initializeGroup(entry._id || 'standalone', {\n              type: 'standalone',\n              label: entry.label,\n              items: [entry],\n              sort: entry.sort\n            });\n          }\n        });\n    }\n  }\n\n  // Sort groups by their sort value\n  $: sortedGroups = Object.values($equipmentSelections)\n    // .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n\n\n  // Group items by type for specialized handling\n  $: groupedByType = sortedGroups.reduce((acc, group) => {\n    // window.GAS.log.d(\"StartingEquipment groupedByType group\", group);\n    const itemTypes = group.items.map(item => item.type);\n    if (itemTypes.includes('focus')) {\n      if (!acc.focus) acc.focus = [];\n      acc.focus.push(group);\n    } else if (itemTypes.includes('weapon')) {\n      if (!acc.weapon) acc.weapon = [];\n      acc.weapon.push(group);\n    } else if (itemTypes.includes('armor')) {\n      if (!acc.armor) acc.armor = [];\n      acc.armor.push(group);\n    } else if (itemTypes.includes('tool')) {\n      if (!acc.tool) acc.tool = [];\n      acc.tool.push(group);\n    } else {\n      if (!acc.standard) acc.standard = [];\n      acc.standard.push(group);\n    }\n    return acc;\n  }, {});\n\n\n\n  // $: window.GAS.log.d(\"StartingEquipment equipmentSelections\", $equipmentSelections);\n  // $: window.GAS.log.d(\"StartingEquipment sortedGroups\", sortedGroups);\n  // $: window.GAS.log.d(\"StartingEquipment groupedByType\", groupedByType);\n  // $: window.GAS.log.d('$equipmentSelections', $equipmentSelections);\n\n\n  function handleSelection(groupId, item) {\n    window.GAS.log.d('[StartingEquipment] handleSelection ENTRY', {\n      groupId,\n      itemDetails: {\n        id: item?._id,\n        type: item?.type,\n        label: item?.label\n      },\n      groupState: {\n        type: $equipmentSelections[groupId]?.type,\n        inProgress: $equipmentSelections[groupId]?.inProgress,\n        completed: $equipmentSelections[groupId]?.completed,\n        selectedItem: $equipmentSelections[groupId]?.selectedItem,\n        items: $equipmentSelections[groupId]?.items?.map(i => ({\n          id: i._id,\n          type: i.type,\n          isAND: i.type === 'AND'\n        }))\n      }\n    });\n    \n    if (disabled) return;\n    \n    const group = $equipmentSelections[groupId];\n    \n    window.GAS.log.d('[StartingEquipment] Group evaluation', {\n      isStandalone: group?.type === 'standalone',\n      hasItems: !!group?.items?.length,\n      firstItemType: group?.items?.[0]?.type,\n      isFirstItemAND: group?.items?.[0]?.type === 'AND',\n      isChoiceGroup: group?.type === 'choice'\n    });\n\n    // For standalone groups with AND items\n    if (group?.type === 'standalone' && group.items[0]?.type === 'AND') {\n      window.GAS.log.d('[StartingEquipment] Handling standalone AND group', {\n        andItemDetails: {\n          id: group.items[0]._id,\n          children: group.items[0].children?.map(c => ({\n            id: c._id,\n            type: c.type,\n            label: c.label\n          }))\n        },\n        currentGranularSelections: group.granularSelections\n      });\n      selectEquipment(groupId, group.items[0]._id);\n    } \n    // For choice groups\n    else if (group?.type === 'choice') {\n      window.GAS.log.d('[StartingEquipment] Handling choice group', {\n        groupId,\n        selectedItemId: item._id,\n        selectedItemType: item.type,\n        isSelectedItemAND: item.type === 'AND',\n        groupItems: group.items.map(i => ({\n          id: i._id,\n          type: i.type\n        }))\n      });\n      selectEquipment(groupId, item._id);\n    }\n  }\n\n  function handleEditGroup(groupId) {\n    // window.GAS.log.d(\"[Starting Equipment] editGroup\", { groupId });\n    editGroup(groupId);\n  }\n\n  onMount(async () => {\n    // window.GAS.log.d(\"StartingEquipment\", startingEquipment);\n  });\n\n  function isOptionDisabled(group, item) {\n    return disabled || (group.inProgress && group.selectedItemId && group.selectedItemId !== item._id);\n  }\n\n  function getOptionClasses(group, item) {\n    const classes = [];\n    if (group.selectedItemId === item._id) classes.push('selected');\n    if (isOptionDisabled(group, item)) classes.push('disabled');\n    if (group.completed) classes.push('completed');\n    return classes.join(' ');\n  }\n\n  // Helper function to check if a group belongs to a specific equipment source\n  function isGroupFromSource(group, sourceEquipment) {\n    if (!group?.items?.length || !sourceEquipment?.length) return false;\n    \n    // Check if any of the group's items match items from the source equipment\n    return group.items.some(groupItem => \n      sourceEquipment.some(sourceItem => \n        groupItem._id === sourceItem._id || \n        (groupItem.group && sourceItem._id === groupItem.group)\n      )\n    );\n  }\n\n  function isGroupNonEditable(group) {\n    // Check if it's a standalone group and all items are linked type\n    return group.type === 'standalone' && group.items.every(item => {\n      if (item.type === 'linked') return true;\n      if (item.type === 'AND') {\n        return item.children.every(child => child.type === 'linked');\n      }\n      return false;\n    });\n  }\n\n</script>\n\n<template lang=\"pug\">\n  +if(\"startingEquipment?.length\")\n    section.starting-equipment\n      .flexrow\n        +if(\"!disabled\")\n          .flex0.required(class=\"{equipmentSelectionEnabled ? 'active' : ''}\") *\n        .flex3\n          h2.left {localize('GAS.Equipment.Label')}\n      \n      //- For 2024 rules, group by source\n      +if(\"window.GAS.dnd5eVersion >= 4 && window.GAS.dnd5eRules === '2024' && equipmentBySource.length > 1\")\n        +each(\"equipmentBySource as sourceGroup\")\n          +if(\"sourceGroup.equipment?.length\")\n            .equipment-source-section\n              h3.source-header {sourceGroup.label} Equipment\n              \n              //- Process each group within this source\n              +each(\"sortedGroups as group\")\n                +if(\"(group.completed || group.inProgress) && isGroupFromSource(group, sourceGroup.equipment)\")\n                  .equipment-group(class=\"{group.inProgress ? 'in-progress' : ''}\")\n                    .flexrow.justify-flexrow-vertical.no-wrap\n                      .flex3.left\n                        +if(\"group.type === 'choice'\")\n                          +if(\"group.completed\")\n                            span.group-label Completed:\n                            +else()\n                              span.group-label Choose one...\n                      +if(\"!group.inProgress && !isGroupNonEditable(group)\")\n                        .flex0.right\n                          IconButton.option(\n                            on:click=\"{handleEditGroup(group.id)}\"\n                            disabled=\"{disabled}\"\n                            icon=\"fas fa-pencil\"\n                          )\n                    .options\n                      +if(\"group.type === 'standalone' && group.inProgress\")\n                        .equipment-group\n                          .flexrow.justify-flexrow-vertical.no-wrap\n                            .flex3.left\n                              +if(\"!group.completed\")\n                                span.group-label All of the following:\n                          +if(\"group.items[0].type === 'AND'\")\n                            +each(\"group.items[0].children as item\")\n                              .equipment-item.option(\n                                class=\"{item.type === 'linked' ? 'selected' : ''} {item.type === 'focus' ? 'focus' : ''} {disabled ? 'disabled' : ''}\"\n                                on:click!=\"{item.type !== 'linked' ? handleSelection(group.id, item) : null}\"\n                              )\n                                .flexrow.justify-flexrow-vertical.no-wrap\n                                  .flex0.relative.icon\n                                    img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                                  .flex2.left.name.black-link\n                                    span {@html item.label}\n                            +else()\n                              +each(\"group.items as item\")\n                                .equipment-item.option(\n                                  class=\"{item.type === 'linked' ? 'selected' : ''} {item.type === 'focus' ? 'focus' : ''} {disabled ? 'disabled' : ''}\"\n                                  on:click!=\"{item.type !== 'linked' ? handleSelection(group.id, item) : null}\"\n                                )\n                                  .flexrow.justify-flexrow-vertical.no-wrap\n                                    .flex0.relative.icon\n                                      img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                                    .flex2.left.name.black-link\n                                      span {@html item.label}\n                        +else()\n                          .flex3.left\n                            +if(\"group.completed\")\n                              span.group-label Pre-selected:\n                          +each(\"group.items as item\")\n                            button.option(\n                              class=\"{getOptionClasses(group, item)}\"\n                              on:click!=\"{handleSelection(group.id, item)}\"\n                              disabled=\"{isOptionDisabled(group, item)}\"\n                            )\n                              .flexrow.justify-flexrow-vertical.no-wrap\n                                .flex0.relative.icon\n                                  img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                                .flex2.left.name.black-link\n                                  span {@html item.label}\n                                  +if(\"group.selectedItemId === item._id && $selectedItems[group.id]\")\n                                    span.selected-name &nbsp;({$selectedItems[group.id].name})\n        +else()\n          //- Fallback for single source or non-2024 rules\n          +each(\"sortedGroups as group\")\n            +if(\"group.completed || group.inProgress\")\n              .equipment-group(class=\"{group.inProgress ? 'in-progress' : ''}\")\n                .flexrow.justify-flexrow-vertical.no-wrap\n                  .flex3.left\n                    +if(\"group.type === 'choice'\")\n                      +if(\"group.completed\")\n                        span.group-label Completed:\n                        +else()\n                          span.group-label Choose one...\n                  +if(\"!group.inProgress && !isGroupNonEditable(group)\")\n                    .flex0.right\n                      IconButton.option(\n                        on:click=\"{handleEditGroup(group.id)}\"\n                        disabled=\"{disabled}\"\n                        icon=\"fas fa-pencil\"\n                      )\n                .options\n                  +if(\"group.type === 'standalone' && group.inProgress\")\n                    .equipment-group\n                      .flexrow.justify-flexrow-vertical.no-wrap\n                        .flex3.left\n                          +if(\"!group.completed\")\n                            span.group-label All of the following:\n                      +if(\"group.items[0].type === 'AND'\")\n                        +each(\"group.items[0].children as item\")\n                          .equipment-item.option(\n                            class=\"{item.type === 'linked' ? 'selected' : ''} {item.type === 'focus' ? 'focus' : ''} {disabled ? 'disabled' : ''}\"\n                            on:click!=\"{item.type !== 'linked' ? handleSelection(group.id, item) : null}\"\n                          )\n                            .flexrow.justify-flexrow-vertical.no-wrap\n                              .flex0.relative.icon\n                                img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                              .flex2.left.name.black-link\n                                span {@html item.label}\n                        +else()\n                          +each(\"group.items as item\")\n                            .equipment-item.option(\n                              class=\"{item.type === 'linked' ? 'selected' : ''} {item.type === 'focus' ? 'focus' : ''} {disabled ? 'disabled' : ''}\"\n                              on:click!=\"{item.type !== 'linked' ? handleSelection(group.id, item) : null}\"\n                            )\n                              .flexrow.justify-flexrow-vertical.no-wrap\n                                .flex0.relative.icon\n                                  img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                                .flex2.left.name.black-link\n                                  span {@html item.label}\n                    +else()\n                      .flex3.left\n                        +if(\"group.completed\")\n                          span.group-label Pre-selected:\n                      +each(\"group.items as item\")\n                        button.option(\n                          class=\"{getOptionClasses(group, item)}\"\n                          on:click!=\"{handleSelection(group.id, item)}\"\n                          disabled=\"{isOptionDisabled(group, item)}\"\n                        )\n                          .flexrow.justify-flexrow-vertical.no-wrap\n                            .flex0.relative.icon\n                              img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                            .flex2.left.name.black-link\n                              span {@html item.label}\n                              +if(\"group.selectedItemId === item._id && $selectedItems[group.id]\")\n                                span.selected-name &nbsp;({$selectedItems[group.id].name})\n</template>\n\n<style lang=\"sass\">\n.starting-equipment\n  background: rgba(0, 0, 0, 0.2)\n  border-radius: var(--border-radius)\n  padding: 0.5rem\n  margin-top: 1rem\n\n.section-header\n  font-size: 1.2em\n  font-weight: bold\n  margin-bottom: 1rem\n  color: var(--color-text-highlight)\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1)\n  padding-bottom: 0.5rem\n\n.equipment-group\n  margin-bottom: 0.75rem\n  margin-right: 0.2rem\n  padding: 0.5rem\n  border-radius: var(--border-radius)\n  background: rgba(0, 0, 0, 0.1)\n  \n  &:last-child\n    margin-bottom: 0\n\n  &.in-progress\n    box-shadow: 0px 0px 15px var(--color-highlight)\n    border: 1px solid var(--dnd5e-color-gold)\n    .option.selected\n      background: rgba(0, 90, 0, 0.8)\n\n\n  .group-label\n    display: block\n    font-size: 1em\n    color: var(--color-text-dark-secondary)\n    margin-bottom: 0.5rem\n    font-style: italic\n\n  .options\n    display: grid\n    grid-template-columns: repeat(1, 1fr)\n    gap: 0.2rem\n\n  .option, .equipment-item\n    display: flex\n    padding: 0.3rem 0.5rem\n    border: 1px solid rgba(255, 255, 255, 0.1)\n    border-radius: 4px\n    background: rgba(0, 0, 0, 0.4)\n    color: var(--li-background-color)\n    transition: all 0.2s ease\n\n  .option\n    cursor: pointer\n    \n    &:hover:not(.disabled, .selected, .completed)\n      background: rgba(0, 0, 0, 0.6)\n      border-color: rgba(255, 255, 255, 0.2)\n\n    &.selected\n      border-color: #b59e54\n      box-shadow: 0 0 10px rgba(181, 158, 84, 0.2)\n      background: rgba(0, 90, 0, 0.4)\n\n\n    &.completed\n      cursor: auto\n      &:hover\n        box-shadow: none\n\n    &.disabled\n      cursor: auto\n      &:not(.completed)\n        opacity: 0.7\n\n      &:hover\n        box-shadow: none\n    \n\n.equipment-item\n  margin-bottom: 0.5rem\n  \n  &.focus\n    border-left: 3px solid var(--color-text-highlight)\n\n\n.icon\n  filter: brightness(1) drop-shadow(0 2px 3px rgba(0, 0, 0, 0.5))\n  border: none\n  min-width: 32px\n  max-height: 32px\n  margin-right: 0.2rem\n  width: 90%\n  height: 90%\n  object-fit: cover\n  object-position: center\n\n.name\n  font-size: smaller\n  line-height: 0.8rem\n\n.count\n  margin-left: 0.75rem\n  color: var(--color-text-dark-secondary)\n  font-size: 0.9em\n</style> ","<script>\nimport { getContext, onMount } from \"svelte\";\nimport { equipmentSelections, addGranularSelection, removeGranularSelection, getEquipmentIcon, initializeGroup, addChildGranularSelection, getRequiredSelectionsCount, editGroup } from \"~/src/stores/equipmentSelections\";\nimport { localize } from \"#runtime/svelte/helper\";\nimport IconSelect from \"~/src/components/atoms/select/IconSelect.svelte\";\nimport { extractItemsFromPacksAsync, getPacksFromSettings } from \"~/src/helpers/Utility.js\";\nimport { MODULE_ID } from \"~/src/helpers/constants\";\n\n// Types that need additional configuration\nconst CONFIGURABLE_TYPES = ['tool', 'weapon', 'armor', 'focus'];\n\n// Get equipment sources\nlet packs = getPacksFromSettings(\"equipment\");\nlet allEquipmentItemsFromPacks = [];\n\nonMount(async () => {\n  // Fetch full item data including system data\n  const rawItems = await extractItemsFromPacksAsync(packs, [\n    \"name->label\",\n    \"img\",\n    \"type\",\n    \"folder\",\n    \"uuid->value\",\n    \"_id\"\n  ], [\"system.type\", \"system.magicalBonus\", \"system.properties\"]);\n\n  // Process items to only keep the needed system fields\n  allEquipmentItemsFromPacks = rawItems.map(item => ({\n    ...item,\n    system: item.system ? {\n      type: item.system.type,\n      magicalBonus: item.system.magicalBonus,\n      properties: item.system.properties\n    } : undefined\n  }));\n\n  // window.GAS.log.d('EquipmentSelectorDetail mounted', { \n  //   configurableSelections, \n  //   equipmentByType,\n  //   allEquipmentItemsFromPacks: allEquipmentItemsFromPacks.filter(item => item.type === 'focus')\n  // });\n});\n\nconst showPackLabelInSelect = game.settings.get(MODULE_ID, 'showPackLabelInSelect');\n\n// Get the currently selected items that need configuration\n$: configurableSelections = Object.values($equipmentSelections)\n  .filter(group => {\n    \n\n    // Skip if no selected item\n    if (!group.selectedItem) {\n     \n      return false;\n    }\n\n    // For OR groups with selected AND children, check if the AND group needs configuration\n    if (group.selectedItem.parent?.type === 'OR' && group.selectedItem.type === 'AND') {\n      const hasConfigurableChildren = group.selectedItem.children?.some(child => {\n        const isConfigurable = CONFIGURABLE_TYPES.includes(child.type);\n        const childSelections = group.granularSelections?.children?.[child._id]?.selections;\n        const requiredCount = getRequiredSelectionsCount(child);\n        const needsSelection = !childSelections?.length || childSelections.length < requiredCount;\n        \n       \n        \n        return isConfigurable && needsSelection;\n      });\n\n     \n\n      return hasConfigurableChildren;\n    }\n\n    // For direct OR group children that are configurable\n    if (group.selectedItem.parent?.type === 'OR') {\n      const isConfigurable = CONFIGURABLE_TYPES.includes(group.selectedItem.type);\n      const selfSelections = group.granularSelections?.self;\n      const requiredCount = getRequiredSelectionsCount(group.selectedItem);\n      const needsSelection = !selfSelections?.length || selfSelections.length < requiredCount;\n\n\n      return isConfigurable && needsSelection;\n    }\n\n    // Handle AND groups with configurable children\n    if (group.selectedItem.type === 'AND' && group.selectedItem.children) {\n      const hasConfigurableChildren = group.selectedItem.children.some(child => {\n        const isConfigurable = CONFIGURABLE_TYPES.includes(child.type);\n        const childSelections = group.granularSelections?.children?.[child._id]?.selections;\n        const requiredCount = getRequiredSelectionsCount(child);\n        const needsSelection = !childSelections?.length || childSelections.length < requiredCount;\n        \n        \n        return isConfigurable && needsSelection;\n      });\n\n      window.GAS.log.d('[EquipSelect DETAIL] AND group evaluation result:', {\n        groupId: group.id,\n        hasConfigurableChildren,\n        willInclude: hasConfigurableChildren\n      });\n\n      return hasConfigurableChildren;\n    }\n    \n    // Regular check for configurable items\n    const isConfigurable = CONFIGURABLE_TYPES.includes(group.selectedItem.type);\n    const selfSelections = group.granularSelections?.self;\n    const requiredCount = getRequiredSelectionsCount(group.selectedItem);\n    const needsSelection = !selfSelections?.length || selfSelections.length < requiredCount;\n    \n\n    return isConfigurable && needsSelection;\n  })\n  .flatMap(group => {\n    window.GAS.log.d('[EquipSelect DETAIL] Processing filtered group for flatMap:', {\n      groupId: group.id,\n      type: group.selectedItem?.type,\n      hasChildren: !!group.selectedItem?.children,\n      fullGroup: group\n    });\n\n    // If this is an AND group, create a config entry for each configurable child that needs selection\n    if (group.selectedItem?.type === 'AND' && group.selectedItem.children) {\n      const configurableChildren = group.selectedItem.children\n        .filter(child => {\n          const isConfigurable = CONFIGURABLE_TYPES.includes(child.type);\n          const childSelections = group.granularSelections?.children?.[child._id]?.selections;\n          const requiredCount = getRequiredSelectionsCount(child);\n          const needsSelection = !childSelections?.length || childSelections.length < requiredCount;\n     \n          \n          return isConfigurable && needsSelection;\n        })\n        .map(child => {\n          const result = {\n            ...group,\n            selectedItem: child,\n            parentGroup: group\n          };\n         \n          \n          return result;\n        });\n\n\n      return configurableChildren;\n    }\n\n    // For OR groups, ensure we process the selected item\n    if (group.selectedItem.parent?.type === 'OR') {\n      \n    }\n\n\n    return [group];\n  });\n\n\n// Filter equipment items by type for each configurable selection\n$: equipmentByType = configurableSelections.reduce((acc, group) => {\n  const type = group.selectedItem.type;\n  //- accumulate the items by group type\n  if (!acc[type]) {\n    acc[type] = allEquipmentItemsFromPacks\n      .filter(item => {\n        if (type === 'weapon' && group.selectedItem?.key) {\n          if (item.type !== type) return false;\n          // Handle composite weapon types\n          if (group.selectedItem.key === 'sim') {\n            return ['simpleM', 'simpleR'].includes(item.system?.type?.value) && !item.system?.magicalBonus && !item.system.properties?.includes('mgc');\n          }\n          if (group.selectedItem.key === 'mar') {\n            return ['martialM', 'martialR'].includes(item.system?.type?.value) && !item.system?.magicalBonus && !item.system.properties?.includes('mgc');\n          }\n          // Handle specific weapon types\n          if (['martialM', 'martialR', 'simpleM', 'simpleR'].includes(group.selectedItem.key)) {\n            return item.system?.type?.value === group.selectedItem.key && !item.system?.magicalBonus && !item.system.properties?.includes('mgc');\n          }\n          // Handle base item matching\n          return item.system?.baseItem === group.selectedItem.key;\n        }\n        if(type === 'focus' && group.selectedItem?.key) {\n          // window.GAS.log.d('EQUIPMENT DETAIL | Item matches type:', item, item.type, type );\n\n          return item.system?.properties?.includes('foc') && !item.system.properties?.includes('mgc');\n        }\n        if(type === 'armor' && group.selectedItem?.key) {\n          return item.system?.type?.value === group.selectedItem.key && !item.system.properties?.includes('mgc');\n        }\n        if(type === 'tool' && group.selectedItem?.key) {\n          return item.type === type && item.system.type.value === group.selectedItem.key && !item.system.properties?.includes('mgc');\n        }\n        return true;\n      })\n      .sort((a, b) => a.label.localeCompare(showPackLabelInSelect ? b.compoundLabel : b.label));\n  }\n  return acc;\n}, {});\n\n$: if(configurableSelections.length > 0) {\n  window.GAS.log.d('[EquipmentSelectorDetail] Configurable selections:', configurableSelections);\n  window.scrollTo(0, 0);\n  \n  // Delay scrolling to ensure the element is rendered\n  setTimeout(() => {\n    const firstEquipmentSelect = document.querySelector('.equipment-select');\n    if (firstEquipmentSelect) {\n      firstEquipmentSelect.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, 100); // Adjust the delay as necessary\n}\n\nfunction handleSelection(groupId, option, parentGroup) {\n  \n\n  const value = typeof option === 'object' ? option.value : option;\n  \n  if (parentGroup) {\n   \n    addChildGranularSelection(parentGroup.id, groupId._id, value);\n  } else {\n    \n    addGranularSelection(groupId, value);\n  }\n}\n\n/**\n * @description Create a handler factory function\n * @why The handler can only accept the selected value as a parameter, \n * so to pass the remaining parameters for the group, we need to create a factory function\n * which runs on mount and returns the handler function with the group details included\n * Then once selected, the handler is called with the selected value and the group details are included\n * @param {string} groupId - The id of the group\n * @param {object} parentGroup - The parent group\n * @returns {function} - The selection handler\n */\nfunction createSelectionHandler(groupId, parentGroup) {\n  \n  \n  return function selectionHandler(option) {\n    \n    handleSelection(groupId, option, parentGroup);\n  }\n}\n\n// Add this function to handle cancel\nfunction handleCancelSelection(group) {\n  const groupId = group.parentGroup ? group.parentGroup.id : group.id;\n  editGroup(groupId);\n}\n</script>\n\n<template lang=\"pug\">\nsection\n  +if(\"configurableSelections.length > 0\")\n    +each(\"configurableSelections as group\")\n      .equipment-config-item\n        .flexrow.justify-flexrow-vertical.no-wrap\n          .flex0.relative\n            img.icon(\n              src=\"{getEquipmentIcon(group.selectedItem.type)}\" \n              alt=\"{group.selectedItem.type}\"\n            )\n          .flex2.left.name.ml-sm\n            span {group.selectedItem.label}\n          .flex0.right\n            button.cancel-button(on:click!=\"{handleCancelSelection(group)}\")\n              i.fas.fa-times\n        \n        .equipment-select\n          +if(\"group.parentGroup\")\n            IconSelect.mb-md.icon-select(\n              options=\"{equipmentByType[group.selectedItem.type] || []}\"\n              active=\"{group.parentGroup.granularSelections?.children?.[group.selectedItem._id]?.selections?.[0]}\"\n              placeHolder=\"Select {group.selectedItem.type}\"\n              handler=\"{createSelectionHandler(group.selectedItem, group.parentGroup)}\"\n              id=\"equipment-select-{group.selectedItem._id}\"\n            )\n          +if(\"!group.parentGroup\")\n            IconSelect.mb-md.icon-select(\n              options=\"{equipmentByType[group.selectedItem.type] || []}\"\n              active=\"{group.granularSelections?.self?.[0]}\"\n              placeHolder=\"Select {group.selectedItem.type}\"\n              handler=\"{createSelectionHandler(group.id)}\"\n              id=\"equipment-select-{group.selectedItem._id}\"\n            )\n</template>\n\n<style lang=\"sass\">\n\n.empty-state\n  text-align: center\n  color: var(--color-text-dark-secondary)\n  font-style: italic\n  padding: 1rem\n\n.equipment-type-section\n  margin-bottom: 1.5rem\n  \n  &:last-child\n    margin-bottom: 0\n\n.type-header\n  color: var(--color-text-highlight)\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1)\n  padding-bottom: 0.5rem\n  margin-bottom: 1rem\n\n.equipment-config-item\n  background: rgba(0, 0, 0, 0.3)\n  border-radius: var(--border-radius)\n  padding: 0.3rem 1rem\n  margin-bottom: 0.3rem\n\n  &:last-child\n    margin-bottom: 0\n\n.icon\n  margin-right: 2rem\n  border: none\n  filter: brightness(1) drop-shadow(0 2px 3px rgba(0, 0, 0, 0.5))\n\n.name\n  font-size: 1.1em\n  line-height: 32px\n  color: var(--color-text-dark-primary)\n\n// Configuration section styles\n.tool-config,\n.armor-config,\n.weapon-config,\n.focus-config\n  margin-top: 0.3rem\n  padding-top: 0.3rem\n  border-top: 1px solid rgba(255, 255, 255, 0.1)\n\n.equipment-select\n  margin-top: 0.3rem\n  padding-top: 0.3  rem\n  border-top: 1px solid rgba(255, 255, 255, 0.1)\n\n:global(.icon-select)\n  position: relative\n\n.cancel-button\n  background: none\n  border: none\n  color: var(--color-text-dark-secondary)\n  padding: 0.5rem\n  cursor: pointer\n  transition: color 0.2s ease\n\n  &:hover\n    color: var(--color-text-highlight)\n\n  i\n    font-size: 1.2em\n</style>","<script>\nimport { getContext, onMount } from \"svelte\";\nimport { equipmentSelections, flattenedSelections } from \"~/src/stores/equipmentSelections\";\nimport { localize } from \"#runtime/svelte/helper\";\n\nlet plannedItems = [];\n\n// Track the raw selections\n$: rawSelections = $flattenedSelections || [];\n\n$: window.GAS.log.d('PLANNED INVENTORY | flattenedSelections', $flattenedSelections);\n\n// Handle async updates when selections change and group identical items\n$: {\n  Promise.all(rawSelections.map(async (selection) => {\n    if(selection.type === 'linked') {\n      return await fromUuid(selection.key);\n    }\n    if(selection.key) {\n      return await fromUuid(selection.key);\n    }\n    return selection;\n  })).then(items => {\n    // Group identical items and sum their quantities\n    const groupedItems = items.reduce((acc, item) => {\n      if (!item) return acc;\n      \n      const key = item.uuid || item._id;\n      if (!acc[key]) {\n        acc[key] = {\n          ...item,\n          system: {\n            ...item.system,\n            quantity: 1\n          },\n          uuid: key\n        };\n      } else {\n        acc[key].system.quantity = (acc[key].system.quantity || 1) + 1;\n      }\n      return acc;\n    }, {});\n\n    plannedItems = Object.values(groupedItems);\n  });\n}\n\nfunction getItemName(item) {\n  window.GAS.log.d('PLANNED INVENTORY | getItemName', item);\n  return `@UUID[${item?.uuid}]{${item?.name}}`\n}\n\n// $: window.GAS.log.d('[PlannedInventory] flattenedSelections', $flattenedSelections);\n// $: window.GAS.log.d('[PlannedInventory] plannedItems', plannedItems);\nlet unsubscribe;\n\nonMount(() => {\n\n});\n</script>\n\n<template lang=\"pug\">\n.planned-inventory\n  h3 {localize('GAS.Equipment.PlannedInventory')}\n  table.inventory-table\n    thead\n      tr\n        th \n        th.white {localize('GAS.Item')}\n        th.white {localize('GAS.Equipment.Weight')}\n        th.white {localize('GAS.Equipment.Quantity')}\n    tbody\n      +if('plannedItems.length === 0')\n        tr\n          td(colspan=\"4\").empty-message {localize('GAS.Equipment.NoItemsSelected')}\n        +else()\n          +each('plannedItems as item')\n            tr\n              td\n                +if('item && item.img')\n                  img(src=\"{item.img}\" width=\"32\" height=\"32\")\n                  +else()\n                    img(src=\"icons/svg/item-bag.svg\" width=\"32\" height=\"32\")\n              +await(\"TextEditor.enrichHTML(getItemName(item) || '')\")\n                +then(\"Html\")\n                  td= \"{@html Html || '--'}\"\n              td.weight= \"{item?.system?.weight?.value || 0}\"\n              td.quantity= \"{item?.system?.quantity || 1}\"\n</template>\n\n<style lang=\"sass\">\n.planned-inventory\n  margin-top: 1rem\n  padding: 1rem\n  background: rgba(0, 0, 0, 0.05)\n  border-radius: var(--border-radius)\n\n.inventory-table\n  width: 100%\n  border-collapse: collapse\n  margin-top: 0.5rem\n\n  th, td\n    text-align: left\n    padding: 0 0.5rem\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1)\n\n    img\n      margin-top: 0.3rem\n  th\n    font-weight: bold\n    color: var(--color-text-dark-primary)\n\n  td.quantity, td.weight\n    text-align: center\n\n  tbody tr:hover\n    background: rgba(0, 0, 0, 0.03)\n\n  .empty-message\n    text-align: center\n    color: var(--color-text-dark-secondary)\n    font-style: italic\n</style>","<script>\n  import { onMount } from \"svelte\";\n  import { goldRoll } from \"~/src/stores/storeDefinitions\";\n  import { localize as t } from \"#runtime/svelte/helper\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import { getContext } from \"svelte\";\n  import { goldChoices } from \"../../../../stores/goldChoices\";\n  import { areGoldChoicesComplete } from \"~/src/stores/goldChoices\";\n  import { destroyAdvancementManagers } from \"~/src/helpers/AdvancementManager\"\n  import { compatibleStartingEquipment, classStartingEquipment, backgroundStartingEquipment } from \"~/src/stores/startingEquipment\";\n  import { characterClass, characterSubClass, background } from \"~/src/stores/index\";\n  import StartingGold from \"~/src/components/molecules/dnd5e/StartingGold.svelte\";\n  import StartingGoldv4 from \"~/src/components/molecules/dnd5e/v4/StartingGold.svelte\";\n  \n  import StartingEquipment from \"~/src/components/molecules/dnd5e/StartingEquipment.svelte\";\n  import EquipmentSelectorDetail from \"~/src/components/molecules/dnd5e/EquipmentSelection/EquipmentSelectorDetail.svelte\";\n  import PlannedInventory from \"~/src/components/molecules/dnd5e/EquipmentSelection/PlannedInventory.svelte\";\n  const doc = getContext(\"#doc\");\n\n  // Get equipment selection setting\n  $: equipmentSelectionEnabled = game.settings.get(MODULE_ID, \"enableEquipmentSelection\");\n\n  // Track if gold has been rolled/selected based on version\n  $: isGoldComplete = window.GAS.dnd5eVersion >= 4  && window.GAS.dnd5eRules === \"2024\" ? $areGoldChoicesComplete : $goldRoll > 0;\n\n  // Get proficiencies from actor\n  $: proficiencies = $doc.system?.proficiencies || {};\n\n  $: window.GAS.log.d(\"Equipment goldChoices\", $goldChoices);\n\n  $: window.GAS.log.d(\"Equipment compatibleStartingEquipment\", $compatibleStartingEquipment);\n\n  onMount(() => {\n    if(game.settings.get(MODULE_ID, 'disableAdvancementCapture')) {\n      destroyAdvancementManagers();\n    }\n  });\n\n</script>\n\n<template lang=\"pug\">\n.container\n  .content\n    .flexrow\n      .flex2.pr-sm.col-a\n        //- pre dnd5eVersion { window.GAS.dnd5eVersion}\n        //- pre dnd5eRules { window.GAS.dnd5eRules}\n        h3 {t('GAS.Equipment.StartingGold')}\n        section.equipment-flow\n          +if(\"window.GAS.dnd5eVersion >= 4 && window.GAS.dnd5eRules === '2024'\")\n            StartingGoldv4(characterClass=\"{$characterClass}\" background=\"{$background}\")\n            +else()\n              StartingGold(characterClass=\"{$characterClass}\")\n          +if(\"isGoldComplete\")\n            h3 {t('GAS.Equipment.Selection')}\n            StartingEquipment(\n              startingEquipment=\"{$compatibleStartingEquipment}\" \n              classEquipment=\"{$classStartingEquipment}\"\n              backgroundEquipment=\"{$backgroundStartingEquipment}\"\n              characterClass=\"{$characterClass}\"\n              background=\"{$background}\"\n              proficiencies=\"{proficiencies}\"\n            )\n      .flex0.border-right.right-border-gradient-mask\n      .flex3.left.scroll.col-b\n        PlannedInventory\n        EquipmentSelectorDetail\n</template>\n\n<style lang=\"sass\">\n.container\n  height: 100%\n  \n  .col-a\n      max-width: 325px\n.content\n  height: 100%\n  overflow-y: auto\n\n.equipment-flow\n  margin-top: 1rem\n  display: flex\n  flex-direction: column\n  gap: 1rem\n\n\nsection\n  background: rgba(0, 0, 0, 0.05)\n  border-radius: var(--border-radius)\n  padding: 1rem\n\n:global(.equipment-flow .starting-gold)\n  background: transparent !important\n  margin-top: 0 !important\n  padding: 0 !important\n\n:global(.equipment-flow .starting-equipment)\n  background: transparent !important\n  margin-top: 0 !important\n  padding: 0 !important\n</style> "],"names":["ctx","create_if_block_1","create_if_block_3","create_if_block_2","create_if_block","characterClass","t","create_if_block_4","background","isConfigurable","requiredCount","needsSelection","selfSelections"],"mappings":"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"}