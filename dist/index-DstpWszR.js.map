{"version":3,"file":"index-DstpWszR.js","sources":["../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/environment.js","../node_modules/svelte/src/runtime/internal/loop.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/style_manager.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/spread.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/version.js","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/svelte/src/runtime/easing/index.js","../node_modules/svelte/src/runtime/transition/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/object/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/browser/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/cssVariables.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/store/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/dom/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/math/interpolate/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/transition/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/TJSGlassPane.svelte","../node_modules/svelte/src/runtime/store/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/AppShellContextInternal.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/helper/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/writable-derived/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/math/gl-matrix/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/animate/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/math/util/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/position/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSHeaderButton.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSApplicationHeader.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSFocusWrap.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/ResizableHandle.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/ApplicationShell.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/application/TJSApplicationShell.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/dialog/DialogContent.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/dialog/DialogShell.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/component/core/index.js","../src/helpers/constants.ts","../src/plugins/donation-tracker/index.js","../src/stores/storeDefinitions.js","../src/stores/goldChoices.js","../src/stores/startingEquipment.js","../src/helpers/AdvancementManager.js","../src/stores/advancements.js","../src/stores/index.js","../src/helpers/Utility.js","../src/app/WelcomeAppShell.svelte","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-app/ApplicationState.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-svelte/GetSvelteData.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/web-storage/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-reactive/SvelteReactive.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/util/applicationShellContract.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/util/isApplicationShell.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/util/loadSvelteConfig.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/TJSAppIndex.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/SvelteApplication.js","../node_modules/@typhonjs-fvtt/runtime/_dist/util/async/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/state-dialog/TJSDialogData.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/TJSDialog.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/reducer/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/fvtt/document/index.js","../src/app/WelcomeApplication.js","../src/helpers/svelte-actions/PreventDefault.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/action/animate/index.js","../src/components/molecules/Tabs.svelte","../src/stores/equipmentSelections.js","../src/stores/progress.js","../src/components/molecules/ProgressBar.svelte","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/fvtt/index.js","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/internal/cssVariables.js","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/button/TJSIconButton.svelte","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/folder/TJSSvgFolder.svelte","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/form/input/TJSInputNumber.svelte","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/form/input/TJSInputText.svelte","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/form/input/TJSInput.svelte","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/prosemirror/plugins/index.js","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/form/select/TJSSelect.svelte","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/settings/SettingEntry.svelte","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/settings/TJSSettingsEdit.svelte","../node_modules/@typhonjs-fvtt/svelte-standard/_dist/component/standard/index.js","../src/components/molecules/Footer.svelte","../src/app/PCAppShell.svelte","../src/app/PCApplication.js","../src/plugins/level-up/index.js","../src/settings/compendiumSourcesSubmenu.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/store/fvtt/settings/index.js","../src/settings/DonationTrackerGameSettings.js","../src/settings/DonationTrackerSettingsAppShell.svelte","../src/settings/DonationTrackerSettingsApp.js","../src/settings/DonationTrackerSettingsButton.js","../src/settings/index.ts","../src/plugins/subclass-level/index.js","../src/index.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.18';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import { cubicOut, cubicInOut, linear } from '../easing/index.js';\nimport { assign, split_css_unit, is_function } from '../internal/index.js';\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * https://svelte.dev/docs/svelte-transition#blur\n * @param {Element} node\n * @param {import('./public').BlurParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * https://svelte.dev/docs/svelte-transition#slide\n * @param {Element} node\n * @param {import('./public').SlideParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => `${e[0].toUpperCase()}${e.slice(1)}`\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * https://svelte.dev/docs/svelte-transition#scale\n * @param {Element} node\n * @param {import('./public').ScaleParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * https://svelte.dev/docs/svelte-transition#draw\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {import('./public').DrawParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * https://svelte.dev/docs/svelte-transition#crossfade\n * @param {import('./public').CrossfadeParams & {\n * \tfallback?: (node: Element, params: import('./public').CrossfadeParams, intro: boolean) => import('./public').TransitionConfig;\n * }} params\n * @returns {[(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig, (node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {import('./public').CrossfadeParams} params\n\t * @returns {import('./public').TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\tt + (1 - t) * dh\n\t\t\t});\n\t\t\t`\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(other_node, node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","function set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nfunction klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n\n/**\n * Provides common object manipulation utilities including depth traversal, obtaining accessors, safely setting values /\n * equality tests, and validation.\n */\nconst s_TAG_OBJECT = '[object Object]';\nconst s_TAG_MAP = '[object Map]';\nconst s_TAG_SET = '[object Set]';\nconst s_TAG_STRING = '[object String]';\n/**\n * Freezes all entries traversed that are objects including entries in arrays.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {Set<string>}   [skipFreezeKeys] - A Set of strings indicating keys of objects to not freeze.\n *\n * @returns {object | []} The frozen object.\n */\nfunction deepFreeze(data, skipFreezeKeys) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 4 */\n    if (skipFreezeKeys !== void 0 && !(skipFreezeKeys instanceof Set)) {\n        throw new TypeError(`'skipFreezeKeys' is not an 'Set'.`);\n    }\n    return _deepFreeze(data, skipFreezeKeys);\n}\n/**\n * Recursively deep merges all source objects into the target object in place. Like `Object.assign` if you provide `{}`\n * as the target a copy is produced. If the target and source property are object literals they are merged.\n * Deleting keys is supported by specifying a property starting with `-=`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction deepMerge(target = {}, ...sourceObj) {\n    if (Object.prototype.toString.call(target) !== s_TAG_OBJECT) {\n        throw new TypeError(`deepMerge error: 'target' is not an 'object'.`);\n    }\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        if (Object.prototype.toString.call(sourceObj[cntr]) !== s_TAG_OBJECT) {\n            throw new TypeError(`deepMerge error: 'sourceObj[${cntr}]' is not an 'object'.`);\n        }\n    }\n    return _deepMerge(target, ...sourceObj);\n}\n/**\n * Performs a naive depth traversal of an object / array. The data structure _must not_ have circular references.\n * The result of the callback function is used to modify in place the given data.\n *\n * @param {object | []}   data - An object or array.\n *\n * @param {(any) => any}  func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}       modify - If true then the result of the callback function is used to modify in place\n *                                  the given data.\n *\n * @returns {*} The data object.\n */\nfunction depthTraverse(data, func, modify = false) {\n    /* c8 ignore next 1 */\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    /* c8 ignore next 1 */\n    if (typeof func !== 'function') {\n        throw new TypeError(`'func' is not a 'function'.`);\n    }\n    return _depthTraverse(data, func, modify);\n}\n/**\n * Returns a list of accessor keys by traversing the given object.\n *\n * @param {object}   data - An object to traverse for accessor keys.\n *\n * @returns {string[]} Accessor list.\n */\nfunction getAccessorList(data) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`getAccessorList error: 'data' is not an 'object'.`);\n    }\n    return _getAccessorList(data);\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter & setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter and setter for accessor.\n */\nfunction hasAccessor(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a getter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the getter for accessor.\n */\nfunction hasGetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.get !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.get !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Returns whether the target is or has the given prototype walking up the prototype chain.\n *\n * @param {unknown}  target - Any target to test.\n *\n * @param {new (...args: any[]) => any} Prototype - Prototype function / class constructor to find.\n *\n * @returns {boolean} Target matches prototype.\n */\nfunction hasPrototype(target, Prototype) {\n    /* c8 ignore next */\n    if (typeof target !== 'function') {\n        return false;\n    }\n    if (target === Prototype) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n        if (proto === Prototype) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Provides a method to determine if the passed in Svelte component has a setter accessor.\n *\n * @param {object}   object - An object.\n *\n * @param {string}   accessor - Accessor to test.\n *\n * @returns {boolean} Whether the component has the setter for accessor.\n */\nfunction hasSetter(object, accessor) {\n    if (typeof object !== 'object' || object === null || object === void 0) {\n        return false;\n    }\n    // Check for instance accessor.\n    const iDescriptor = Object.getOwnPropertyDescriptor(object, accessor);\n    if (iDescriptor !== void 0 && iDescriptor.set !== void 0) {\n        return true;\n    }\n    // Walk parent prototype chain. Check for descriptor at each prototype level.\n    for (let o = Object.getPrototypeOf(object); o; o = Object.getPrototypeOf(o)) {\n        const descriptor = Object.getOwnPropertyDescriptor(o, accessor);\n        if (descriptor !== void 0 && descriptor.set !== void 0) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Tests for whether an object is async iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether value is async iterable.\n */\nfunction isAsyncIterable(value) {\n    if (typeof value !== 'object' || value === null || value === void 0) {\n        return false;\n    }\n    return Symbol.asyncIterator in value;\n}\n/**\n * Tests for whether an object is iterable.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Whether object is iterable.\n */\nfunction isIterable(value) {\n    if (value === null || value === void 0 || typeof value !== 'object') {\n        return false;\n    }\n    return Symbol.iterator in value;\n}\n/**\n * Tests for whether object is not null and a typeof object.\n *\n * @param {unknown} value - Any value.\n *\n * @returns {boolean} Is it an object.\n */\nfunction isObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n/**\n * Tests for whether the given value is a plain object.\n *\n * An object is plain if it is created by either: `{}`, `new Object()` or `Object.create(null)`.\n *\n * @param {unknown} value - Any value\n *\n * @returns {boolean} Is it a plain object.\n */\nfunction isPlainObject(value) {\n    if (Object.prototype.toString.call(value) !== s_TAG_OBJECT) {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Safely returns keys on an object or an empty array if not an object.\n *\n * @param {object} object - An object.\n *\n * @returns {string[]}  Object keys or empty array.\n */\nfunction objectKeys(object) {\n    return isObject(object) ? Object.keys(object) : [];\n}\n/**\n * Safely returns an objects size. Note for String objects unicode is not taken into consideration.\n *\n * @param {any} object - Any value, but size returned for object / Map / Set / arrays / strings.\n *\n * @returns {number} Size of object.\n */\nfunction objectSize(object) {\n    if (object === void 0 || object === null || typeof object !== 'object') {\n        return 0;\n    }\n    const tag = Object.prototype.toString.call(object);\n    if (tag === s_TAG_MAP || tag === s_TAG_SET) {\n        return object.size;\n    }\n    if (tag === s_TAG_STRING) {\n        return object.length;\n    }\n    return Object.keys(object).length;\n}\n/**\n * Provides a way to safely access an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access with keys separated by `.`.\n *\n * @param {any}      [defaultValue] - (Optional) A default value to return if an entry for accessor is not found.\n *\n * @returns {object} The data object.\n */\nfunction safeAccess(data, accessor, defaultValue) {\n    if (typeof data !== 'object') {\n        return defaultValue;\n    }\n    if (typeof accessor !== 'string') {\n        return defaultValue;\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If the next level of object access is undefined or null then return the empty string.\n        if (typeof data[access[cntr]] === 'undefined' || data[access[cntr]] === null) {\n            return defaultValue;\n        }\n        data = data[access[cntr]];\n    }\n    return data;\n}\n/**\n * Provides a way to safely batch set an objects data / entries given an array of accessor strings which describe the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk. If value is an object the accessor will be used to access a target value from `value` which is\n * subsequently set to `data` by the given operation. If `value` is not an object it will be used as the target\n * value to set across all accessors.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string[]} accessors - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {any}      [defaultAccessValue=0] - A new value to set if an entry for accessor is found.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects automatically.\n */\nfunction safeBatchSet(data, accessors, value, operation = 'set', defaultAccessValue = 0, createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeBatchSet Error: 'data' is not an 'object'.`);\n    }\n    if (!Array.isArray(accessors)) {\n        throw new TypeError(`safeBatchSet Error: 'accessors' is not an 'array'.`);\n    }\n    if (typeof value === 'object') {\n        accessors.forEach((accessor) => {\n            const targetValue = safeAccess(value, accessor, defaultAccessValue);\n            safeSet(data, accessor, targetValue, operation, createMissing);\n        });\n    }\n    else {\n        accessors.forEach((accessor) => {\n            safeSet(data, accessor, value, operation, createMissing);\n        });\n    }\n}\n/**\n * Compares a source object and values of entries against a target object. If the entries in the source object match\n * the target object then `true` is returned otherwise `false`. If either object is undefined or null then false\n * is returned.\n *\n * @param {object}   source - Source object.\n *\n * @param {object}   target - Target object.\n *\n * @returns {boolean} True if equal.\n */\nfunction safeEqual(source, target) {\n    if (typeof source === 'undefined' || source === null || typeof target === 'undefined' || target === null) {\n        return false;\n    }\n    const sourceAccessors = getAccessorList(source);\n    for (let cntr = 0; cntr < sourceAccessors.length; cntr++) {\n        const accessor = sourceAccessors[cntr];\n        const sourceObjectValue = safeAccess(source, accessor);\n        const targetObjectValue = safeAccess(target, accessor);\n        if (sourceObjectValue !== targetObjectValue) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Provides a way to safely set an objects data / entries given an accessor string which describes the\n * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n * to walk.\n *\n * @param {object}   data - An object to access entry data.\n *\n * @param {string}   accessor - A string describing the entries to access.\n *\n * @param {any}      value - A new value to set if an entry for accessor is found.\n *\n * @param {SafeSetOperation}   [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set',\n *        'set-undefined', 'sub'.\n *\n * @param {boolean}  [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n *\n * @returns {boolean} True if successful.\n */\nfunction safeSet(data, accessor, value, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`safeSet Error: 'data' is not an 'object'.`);\n    }\n    if (typeof accessor !== 'string') {\n        throw new TypeError(`safeSet Error: 'accessor' is not a 'string'.`);\n    }\n    const access = accessor.split('.');\n    // Walk through the given object by the accessor indexes.\n    for (let cntr = 0; cntr < access.length; cntr++) {\n        // If data is an array perform validation that the accessor is a positive integer otherwise quit.\n        if (Array.isArray(data)) {\n            const number = (+access[cntr]);\n            if (!Number.isInteger(number) || number < 0) {\n                return false;\n            }\n        }\n        if (cntr === access.length - 1) {\n            switch (operation) {\n                case 'add':\n                    data[access[cntr]] += value;\n                    break;\n                case 'div':\n                    data[access[cntr]] /= value;\n                    break;\n                case 'mult':\n                    data[access[cntr]] *= value;\n                    break;\n                case 'set':\n                    data[access[cntr]] = value;\n                    break;\n                case 'set-undefined':\n                    if (typeof data[access[cntr]] === 'undefined') {\n                        data[access[cntr]] = value;\n                    }\n                    break;\n                case 'sub':\n                    data[access[cntr]] -= value;\n                    break;\n            }\n        }\n        else {\n            // If createMissing is true and the next level of object access is undefined then create a new object entry.\n            if (createMissing && typeof data[access[cntr]] === 'undefined') {\n                data[access[cntr]] = {};\n            }\n            // Abort if the next level is null or not an object and containing a value.\n            if (data[access[cntr]] === null || typeof data[access[cntr]] !== 'object') {\n                return false;\n            }\n            data = data[access[cntr]];\n        }\n    }\n    return true;\n}\n/**\n * Performs bulk setting of values to the given data object.\n *\n * @param {object}            data - The data object to set data.\n *\n * @param {Record<string, any>}  accessorValues - Object of accessor keys to values to set.\n *\n * @param {SafeSetOperation}  [operation='set'] - Operation to perform including: 'add', 'div', 'mult', 'set', 'sub';\n *        default (`set`).\n *\n * @param {boolean}           [createMissing=true] - If true missing accessor entries will be created as objects\n *        automatically.\n */\nfunction safeSetAll(data, accessorValues, operation = 'set', createMissing = true) {\n    if (typeof data !== 'object') {\n        throw new TypeError(`'data' is not an 'object'.`);\n    }\n    if (typeof accessorValues !== 'object') {\n        throw new TypeError(`'accessorValues' is not an 'object'.`);\n    }\n    for (const accessor of Object.keys(accessorValues)) {\n        if (!Object.prototype.hasOwnProperty.call(accessorValues, accessor)) {\n            continue;\n        }\n        safeSet(data, accessor, accessorValues[accessor], operation, createMissing);\n    }\n}\n/**\n * Performs bulk validation of data given an object, `validationData`, which describes all entries to test.\n *\n * @param {object}                           data - The data object to test.\n *\n * @param {Record<string, ValidationEntry>}  validationData - Key is the accessor / value is a validation entry.\n *\n * @param {string}                           [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validate(data, validationData = {}, dataName = 'data') {\n    if (typeof data !== 'object') {\n        throw new TypeError(`'${dataName}' is not an 'object'.`);\n    }\n    if (typeof validationData !== 'object') {\n        throw new TypeError(`'validationData' is not an 'object'.`);\n    }\n    let result;\n    for (const key of Object.keys(validationData)) {\n        if (!Object.prototype.hasOwnProperty.call(validationData, key)) {\n            continue;\n        }\n        const entry = validationData[key];\n        switch (entry.test) {\n            case 'array':\n                result = validateArray(data, key, entry, dataName);\n                break;\n            case 'entry':\n                result = validateEntry(data, key, entry, dataName);\n                break;\n            case 'entry|array':\n                result = validateEntryOrArray(data, key, entry, dataName);\n                break;\n        }\n    }\n    return result;\n}\n/**\n * Validates all array entries against potential type and expected tests.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry object\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateArray(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataArray = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry?.required && typeof dataArray === 'undefined') {\n        return true;\n    }\n    if (!Array.isArray(dataArray)) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not an 'array'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if (typeof valEntry.type === 'string') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!(typeof dataArray[cntr] === valEntry.type)) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(TypeError, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not a '${valEntry.type}'.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    // If expected is a function then test all array entries against the test function. If expected is a Set then\n    // test all array entries for inclusion in the set. Otherwise, if expected is a string then test that all array\n    // entries as a `typeof` test against expected.\n    if (Array.isArray(valEntry.expected)) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.includes(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (valEntry.expected instanceof Set) {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            if (!valEntry.expected.has(dataArray[cntr])) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        for (let cntr = 0; cntr < dataArray.length; cntr++) {\n            try {\n                const result = valEntry.expected(dataArray[cntr]);\n                if (typeof result === 'undefined' || !result) {\n                    throw new Error(valEntry.message);\n                }\n            }\n            catch (err) {\n                if (valEntry.error) {\n                    const dataEntryString = typeof dataArray[cntr] === 'object' ? JSON.stringify(dataArray[cntr]) :\n                        dataArray[cntr];\n                    throw _validateError(Error, `'${dataName}.${accessor}[${cntr}]': '${dataEntryString}' failed validation: ${err.message}.`);\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\n/**\n * Validates data entry with a typeof check and potentially tests against the values in any given expected set.\n *\n * @param {object}            data - The object data to validate.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   entry - Validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntry(data, accessor, entry, dataName = 'data') {\n    const valEntry = Object.assign({ required: true, error: true }, entry);\n    const dataEntry = safeAccess(data, accessor);\n    // A non-required entry is missing so return without validation.\n    if (!valEntry.required && typeof dataEntry === 'undefined') {\n        return true;\n    }\n    if (valEntry.type && typeof dataEntry !== valEntry.type) {\n        if (valEntry.error) {\n            throw _validateError(TypeError, `'${dataName}.${accessor}' is not a '${valEntry.type}'.`);\n        }\n        else {\n            return false;\n        }\n    }\n    if ((valEntry.expected instanceof Set && !valEntry.expected.has(dataEntry)) ||\n        (Array.isArray(valEntry.expected) && !valEntry.expected.includes(dataEntry))) {\n        if (valEntry.error) {\n            const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n            throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' is not an expected value: ${JSON.stringify(valEntry.expected)}.`);\n        }\n        else {\n            return false;\n        }\n    }\n    else if (typeof valEntry.expected === 'function') {\n        try {\n            const result = valEntry.expected(dataEntry);\n            if (typeof result === 'undefined' || !result) {\n                throw new Error(valEntry.message);\n            }\n        }\n        catch (err) {\n            if (valEntry.error) {\n                const dataEntryString = typeof dataEntry === 'object' ? JSON.stringify(dataEntry) : dataEntry;\n                throw _validateError(Error, `'${dataName}.${accessor}': '${dataEntryString}' failed to validate: ${err.message}.`);\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * Dispatches validation of data entry to string or array validation depending on data entry type.\n *\n * @param {object}            data - The data object to test.\n *\n * @param {string}            accessor - A string describing the entries to access.\n *\n * @param {ValidationEntry}   [entry] - A validation entry.\n *\n * @param {string}            [dataName='data'] - Optional name of data.\n *\n * @returns {boolean} True if validation passes otherwise an exception is thrown.\n */\nfunction validateEntryOrArray(data, accessor, entry, dataName = 'data') {\n    const dataEntry = safeAccess(data, accessor);\n    let result;\n    if (Array.isArray(dataEntry)) {\n        result = validateArray(data, accessor, entry, dataName);\n    }\n    else {\n        result = validateEntry(data, accessor, entry, dataName);\n    }\n    return result;\n}\n// Module private ---------------------------------------------------------------------------------------------------\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}         data - An object or array or any leaf.\n *\n * @param {Set<string>} [skipFreezeKeys] - An array of strings indicating keys of objects to not freeze.\n *\n * @returns {*} The frozen object.\n * @ignore\n * @private\n */\nfunction _deepFreeze(data, skipFreezeKeys) {\n    if (Array.isArray(data)) {\n        for (let cntr = 0; cntr < data.length; cntr++) {\n            _deepFreeze(data[cntr], skipFreezeKeys);\n        }\n    }\n    else if (isObject(data)) {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key) && !skipFreezeKeys?.has?.(key)) {\n                _deepFreeze(data[key], skipFreezeKeys);\n            }\n        }\n    }\n    return Object.freeze(data);\n}\n/**\n * Internal implementation for `deepMerge`.\n *\n * @param {object}      target - Target object.\n *\n * @param {...object}   sourceObj - One or more source objects.\n *\n * @returns {object}    Target object.\n */\nfunction _deepMerge(target = {}, ...sourceObj) {\n    // Iterate and merge all source objects into target.\n    for (let cntr = 0; cntr < sourceObj.length; cntr++) {\n        const obj = sourceObj[cntr];\n        for (const prop in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                // Handle the special property starting with '-=' to delete keys.\n                if (prop.startsWith('-=')) {\n                    delete target[prop.slice(2)];\n                    continue;\n                }\n                // If target already has prop and both target[prop] and obj[prop] are object literals then merge them\n                // otherwise assign obj[prop] to target[prop].\n                target[prop] = Object.prototype.hasOwnProperty.call(target, prop) && target[prop]?.constructor === Object &&\n                    obj[prop]?.constructor === Object ? _deepMerge({}, target[prop], obj[prop]) : obj[prop];\n            }\n        }\n    }\n    return target;\n}\n/**\n * Private implementation of depth traversal.\n *\n * @param {any}      data - An object, array, or any leaf value\n *\n * @param {Function} func - A callback function to process leaf values in children arrays or object members.\n *\n * @param {boolean}  modify - If true then the result of the callback function is used to modify in place the\n *        given data.\n *\n * @returns {*} The data object.\n * @ignore\n * @private\n */\nfunction _depthTraverse(data, func, modify = false) {\n    if (modify) {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                data[cntr] = _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (isObject(data)) {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    data[key] = _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            data = func(data);\n        }\n    }\n    else {\n        if (Array.isArray(data)) {\n            for (let cntr = 0; cntr < data.length; cntr++) {\n                _depthTraverse(data[cntr], func, modify);\n            }\n        }\n        else if (typeof data === 'object') {\n            for (const key in data) {\n                if (Object.prototype.hasOwnProperty.call(data, key)) {\n                    _depthTraverse(data[key], func, modify);\n                }\n            }\n        }\n        else {\n            func(data);\n        }\n    }\n    return data;\n}\n/**\n * Private implementation of `getAccessorList`.\n *\n * @param {object}   data - An object to traverse.\n *\n * @returns {string[]} Accessor list.\n * @ignore\n * @private\n */\nfunction _getAccessorList(data) {\n    const accessors = [];\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            if (typeof data[key] === 'object') {\n                const childKeys = _getAccessorList(data[key]);\n                childKeys.forEach((childKey) => {\n                    accessors.push(Array.isArray(childKey) ? `${key}.${childKey.join('.')}` : `${key}.${childKey}`);\n                });\n            }\n            else {\n                accessors.push(key);\n            }\n        }\n    }\n    return accessors;\n}\n/**\n * Creates a new error of type `clazz` adding the field `_objectValidateError` set to true.\n *\n * @param {Error}    clazz - Error class to instantiate.\n *\n * @param {string}   message - An error message.\n *\n * @returns {*} Error of the clazz.\n * @ignore\n * @private\n */\nfunction _validateError(clazz, message = void 0) {\n    const error = new clazz(message);\n    error._objectValidateError = true;\n    return error;\n}\n\nexport { deepFreeze, deepMerge, depthTraverse, getAccessorList, hasAccessor, hasGetter, hasPrototype, hasSetter, isAsyncIterable, isIterable, isObject, isPlainObject, klona, objectKeys, objectSize, safeAccess, safeBatchSet, safeEqual, safeSet, safeSetAll, validate, validateArray, validateEntry, validateEntryOrArray };\n//# sourceMappingURL=index.js.map\n","import { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\n\nfunction isSpace(character) {\n    return character == \" \" || character == \"\\n\" || character == \"\\r\" || character == \"\\t\";\n}\nfunction isQuote(character) {\n    return character == '\"' || character == \"'\";\n}\nconst TAG_START = \"<\";\nconst TAG_END = \">\";\nconst ENCODED_TAG_START = \"&lt;\";\nconst ENCODED_TAG_END = \"&gt;\";\nclass InPlaintextState {\n    constructor(options) {\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_START) {\n            transition(new InTagNameState(this.options));\n            return \"\";\n        }\n        else if (character == TAG_END && this.options.encodePlaintextTagDelimiters) {\n            return ENCODED_TAG_END;\n        }\n        return character;\n    }\n}\nclass InTagNameState {\n    constructor(options) {\n        this.options = options;\n        this.nameBuffer = \"\";\n        this.isClosingTag = false;\n    }\n    consume(character, transition) {\n        if (this.nameBuffer.length == 0) {\n            if (isSpace(character)) {\n                transition(new InPlaintextState(this.options));\n                return ((this.options.encodePlaintextTagDelimiters ? ENCODED_TAG_START : \"<\") +\n                    character);\n            }\n            if (character == \"/\") {\n                this.isClosingTag = true;\n                return \"\";\n            }\n        }\n        if (isSpace(character)) {\n            if (this.isNameBufferAnAllowedTag()) {\n                transition(new InTagState(0 /* TagMode.Allowed */, this.options));\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                transition(new InTagState(1 /* TagMode.Disallowed */, this.options));\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == TAG_START) {\n            this.nameBuffer += ENCODED_TAG_START;\n            return \"\";\n        }\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n            if (this.isNameBufferAnAllowedTag()) {\n                return TAG_START + (this.isClosingTag ? \"/\" : \"\") + this.nameBuffer + character;\n            }\n            else {\n                return this.options.tagReplacementText;\n            }\n        }\n        if (character == \"-\" && this.nameBuffer == \"!-\") {\n            transition(new InCommentState(this.options));\n            return \"\";\n        }\n        this.nameBuffer += character;\n        return \"\";\n    }\n    isNameBufferAnAllowedTag() {\n        const tagName = this.nameBuffer.toLowerCase();\n        if (this.options.allowedTags) {\n            return this.options.allowedTags.has(tagName);\n        }\n        else if (this.options.disallowedTags) {\n            return !this.options.disallowedTags.has(tagName);\n        }\n        else {\n            return false;\n        }\n    }\n}\nclass InTagState {\n    constructor(mode, options) {\n        this.mode = mode;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == TAG_END) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (isQuote(character)) {\n            transition(new InQuotedStringInTagState(this.mode, character, this.options));\n        }\n        if (this.mode == 1 /* TagMode.Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InQuotedStringInTagState {\n    constructor(mode, quoteCharacter, options) {\n        this.mode = mode;\n        this.quoteCharacter = quoteCharacter;\n        this.options = options;\n    }\n    consume(character, transition) {\n        if (character == this.quoteCharacter) {\n            transition(new InTagState(this.mode, this.options));\n        }\n        if (this.mode == 1 /* TagMode.Disallowed */) {\n            return \"\";\n        }\n        if (character == TAG_START) {\n            return ENCODED_TAG_START;\n        }\n        else if (character == TAG_END) {\n            return ENCODED_TAG_END;\n        }\n        else {\n            return character;\n        }\n    }\n}\nclass InCommentState {\n    constructor(options) {\n        this.options = options;\n        this.consecutiveHyphens = 0;\n    }\n    consume(character, transition) {\n        if (character == \">\" && this.consecutiveHyphens >= 2) {\n            transition(new InPlaintextState(this.options));\n        }\n        else if (character == \"-\") {\n            this.consecutiveHyphens++;\n        }\n        else {\n            this.consecutiveHyphens = 0;\n        }\n        return \"\";\n    }\n}\n\nconst DefaultStateMachineOptions = {\n    tagReplacementText: \"\",\n    encodePlaintextTagDelimiters: true,\n};\nclass StateMachine {\n    constructor(partialOptions = {}) {\n        this.state = new InPlaintextState(Object.assign(Object.assign({}, DefaultStateMachineOptions), partialOptions));\n        this.transitionFunction = ((next) => {\n            this.state = next;\n        }).bind(this);\n    }\n    consume(text) {\n        let outputBuffer = \"\";\n        for (const character of text) {\n            outputBuffer += this.state.consume(character, this.transitionFunction);\n        }\n        return outputBuffer;\n    }\n}\nfunction striptags(text, options = {}) {\n    return new StateMachine(options).consume(text);\n}\n\n/**\n * Provides several helpful utility methods for accessibility and keyboard navigation.\n */\nclass A11yHelper\n{\n   /**\n    * Apply focus to the HTMLElement targets in a given A11yFocusSource data object. An iterable list `options.focusEl`\n    * can contain HTMLElements or selector strings. If multiple focus targets are provided in a list then the first\n    * valid target found will be focused. If focus target is a string then a lookup via `document.querySelector` is\n    * performed. In this case you should provide a unique selector for the desired focus target.\n    *\n    * Note: The body of this method is postponed to the next clock tick to allow any changes in the DOM to occur that\n    * might alter focus targets before applying.\n    *\n    * @param {A11yFocusSource|{ focusSource: A11yFocusSource }}   options - The focus options instance to apply.\n    */\n   static applyFocusSource(options)\n   {\n      if (!isObject(options)) { return; }\n\n      // Handle the case of receiving an object with embedded `focusSource`.\n      const focusOpts = isObject(options?.focusSource) ? options.focusSource : options;\n\n      setTimeout(() =>\n      {\n         const debug = typeof focusOpts.debug === 'boolean' ? focusOpts.debug : false;\n\n         if (isIterable(focusOpts.focusEl))\n         {\n            if (debug)\n            {\n               console.debug(`A11yHelper.applyFocusSource debug - Attempting to apply focus target: `, focusOpts.focusEl);\n            }\n\n            for (const target of focusOpts.focusEl)\n            {\n               if (target instanceof HTMLElement && target.isConnected)\n               {\n                  target.focus();\n                  if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, target);\n                  }\n                  break;\n               }\n               else if (typeof target === 'string')\n               {\n                  const element = document.querySelector(target);\n                  if (element instanceof HTMLElement && element.isConnected)\n                  {\n                     element.focus();\n                     if (debug)\n                     {\n                        console.debug(`A11yHelper.applyFocusSource debug - Applied focus to target: `, element);\n                     }\n                     break;\n                  }\n                  else if (debug)\n                  {\n                     console.debug(`A11yHelper.applyFocusSource debug - Could not query selector: `, target);\n                  }\n               }\n            }\n         }\n         else if (debug)\n         {\n            console.debug(`A11yHelper.applyFocusSource debug - No focus targets defined.`);\n         }\n      }, 0);\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] - Optional element to start query.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>} [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @returns {HTMLElement} First focusable child element\n    */\n   static getFirstFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[0] : void 0;\n   }\n\n   /**\n    * Returns all focusable elements within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] Optional element to start query.\n    *\n    * @param {object}            [options] - Optional parameters.\n    *\n    * @param {boolean}           [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>}  [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>}  [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @param {string}            [options.selectors] - Custom list of focusable selectors for `querySelectorAll`.\n    *\n    * @returns {Array<HTMLElement>} Child keyboard focusable\n    */\n   static getFocusableElements(element = document, { anchorHref = true, ignoreClasses, ignoreElements, selectors } = {})\n   {\n      if (!(element instanceof HTMLElement) && !(element instanceof Document))\n      {\n         throw new TypeError(`'element' is not a HTMLElement or Document instance.`);\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      if (ignoreElements !== void 0 && !(ignoreElements instanceof Set))\n      {\n         throw new TypeError(`'ignoreElements' is not a Set.`);\n      }\n\n      if (selectors !== void 0 && typeof selectors !== 'string')\n      {\n         throw new TypeError(`'selectors' is not a string.`);\n      }\n\n      const selectorQuery = selectors ?? this.#getFocusableSelectors(anchorHref);\n\n      const allElements = [...element.querySelectorAll(selectorQuery)];\n\n      if (ignoreElements && ignoreClasses)\n      {\n         return allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && !ignoreElements.has(el) && el.style.display !== 'none' &&\n             el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') && !el.hasAttribute('inert') &&\n              el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreClasses)\n      {\n         return allElements.filter((el) =>\n         {\n            let hasIgnoreClass = false;\n            for (const ignoreClass of ignoreClasses)\n            {\n               if (el.classList.contains(ignoreClass))\n               {\n                  hasIgnoreClass = true;\n                  break;\n               }\n            }\n\n            return !hasIgnoreClass && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else if (ignoreElements)\n      {\n         return allElements.filter((el) =>\n         {\n            return !ignoreElements.has(el) && el.style.display !== 'none' && el.style.visibility !== 'hidden' &&\n             !el.hasAttribute('disabled') && !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n      else\n      {\n         return allElements.filter((el) =>\n         {\n            return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n             !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n         });\n      }\n   }\n\n   /**\n    * Returns the default focusable selectors query.\n    *\n    * @param {boolean}  [anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @returns {string} Focusable selectors for `querySelectorAll`.\n    */\n   static #getFocusableSelectors(anchorHref = true)\n   {\n      return `button, [contenteditable=\"\"], [contenteditable=\"true\"], details summary:not([tabindex=\"-1\"]), embed, a${\n       anchorHref ? '[href]' : ''}, iframe, object, input:not([type=hidden]), select, textarea, ` +\n        `[tabindex]:not([tabindex=\"-1\"])`;\n   }\n\n   /**\n    * Gets a A11yFocusSource object from the given DOM event allowing for optional X / Y screen space overrides.\n    * Browsers (Firefox / Chrome) forwards a mouse event for the context menu keyboard button. Provides detection of\n    * when the context menu event is from the keyboard. Firefox as of (1/23) does not provide the correct screen space\n    * coordinates, so for keyboard context menu presses coordinates are generated from the centroid point of the\n    * element.\n    *\n    * A default fallback element or selector string may be provided to provide the focus target. If the event comes from\n    * the keyboard however the source focused element is inserted as the target with the fallback value appended to the\n    * list of focus targets. When A11yFocusSource is applied by {@link A11yHelper.applyFocusSource} the target focus\n    * list is iterated through until a connected target is found and focus applied.\n    *\n    * @param {object} options - Options\n    *\n    * @param {KeyboardEvent|MouseEvent}   [options.event] - The source DOM event.\n    *\n    * @param {boolean} [options.debug] - When true {@link A11yHelper.applyFocusSource} logs focus target data.\n    *\n    * @param {HTMLElement|string} [options.focusEl] - A specific HTMLElement or selector string as the focus target.\n    *\n    * @param {number}   [options.x] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @param {number}   [options.y] - Used when an event isn't provided; integer of event source in screen space.\n    *\n    * @returns {A11yFocusSource} A A11yFocusSource object.\n    *\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1426671\n    * @see https://bugzilla.mozilla.org/show_bug.cgi?id=314314\n    *\n    * TODO: Evaluate / test against touch input devices.\n    */\n   static getFocusSource({ event, x, y, focusEl, debug = false })\n   {\n      if (focusEl !== void 0 && !(focusEl instanceof HTMLElement) && typeof focusEl !== 'string')\n      {\n         throw new TypeError(\n          `A11yHelper.getFocusSource error: 'focusEl' is not a HTMLElement or string.`);\n      }\n\n      if (debug !== void 0 && typeof debug !== 'boolean')\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'debug' is not a boolean.`);\n      }\n\n      // Handle the case when no event is provided and x, y, or focusEl is explicitly defined.\n      if (event === void 0)\n      {\n         if (typeof x !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'x' is not a number.`);\n         }\n\n         if (typeof y !== 'number')\n         {\n            throw new TypeError(`A11yHelper.getFocusSource error: 'event' not defined and 'y' is not a number.`);\n         }\n\n         return {\n            debug,\n            focusEl: focusEl !== void 0 ? [focusEl] : void 0,\n            x,\n            y,\n         };\n      }\n\n      if (!(event instanceof KeyboardEvent) && !(event instanceof MouseEvent))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'event' is not a KeyboardEvent or MouseEvent.`);\n      }\n\n      if (x !== void 0 && !Number.isInteger(x))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'x' is not a number.`);\n      }\n\n      if (y !== void 0 && !Number.isInteger(y))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'y' is not a number.`);\n      }\n\n      /** @type {HTMLElement} */\n      const targetEl = event.target;\n\n      if (!(targetEl instanceof HTMLElement))\n      {\n         throw new TypeError(`A11yHelper.getFocusSource error: 'event.target' is not an HTMLElement.`);\n      }\n\n      const result = { debug };\n\n      if (event instanceof MouseEvent)\n      {\n         // Firefox currently (1/23) does not correctly determine the location of a keyboard originated\n         // context menu location, so calculate position from middle of the event target.\n         // Firefox fires a mouse event for the context menu key.\n         if (event?.button !== 2 && event.type === 'contextmenu')\n         {\n            const rect = targetEl.getBoundingClientRect();\n            result.x = x ?? rect.left + (rect.width / 2);\n            result.y = y ?? rect.top + (rect.height / 2);\n            result.focusEl = focusEl !== void 0 ? [targetEl, focusEl] : [targetEl];\n            result.source = 'keyboard';\n         }\n         else\n         {\n            result.x = x ?? event.pageX;\n            result.y = y ?? event.pageY;\n            result.focusEl = focusEl !== void 0 ? [focusEl] : void 0;\n         }\n      }\n      else\n      {\n         const rect = targetEl.getBoundingClientRect();\n         result.x = x ?? rect.left + (rect.width / 2);\n         result.y = y ?? rect.top + (rect.height / 2);\n         result.focusEl = focusEl !== void 0 ? [targetEl, focusEl] : [targetEl];\n         result.source = 'keyboard';\n      }\n\n      return result;\n   }\n\n   /**\n    * Returns first focusable element within a specified element.\n    *\n    * @param {HTMLElement|Document} [element=document] - Optional element to start query.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @param {Set<HTMLElement>} [options.ignoreElements] - Set of elements to ignore.\n    *\n    * @returns {HTMLElement} First focusable child element\n    */\n   static getLastFocusableElement(element = document, options)\n   {\n      const focusableElements = this.getFocusableElements(element, options);\n\n      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : void 0;\n   }\n\n   /**\n    * Tests if the given element is focusable.\n    *\n    * @param {HTMLElement} [el] - Element to test.\n    *\n    * @param {object} [options] - Optional parameters.\n    *\n    * @param {boolean} [options.anchorHref=true] - When true anchors must have an HREF.\n    *\n    * @param {Iterable<string>} [options.ignoreClasses] - Iterable list of classes to ignore elements.\n    *\n    * @returns {boolean} Element is focusable.\n    */\n   static isFocusable(el, { anchorHref = true, ignoreClasses } = {})\n   {\n      if (el === void 0 || el === null || !(el instanceof HTMLElement) || el?.hidden || !el?.isConnected)\n      {\n         return false;\n      }\n\n      if (typeof anchorHref !== 'boolean')\n      {\n         throw new TypeError(`'anchorHref' is not a boolean.`);\n      }\n\n      if (ignoreClasses !== void 0 && !isIterable(ignoreClasses))\n      {\n         throw new TypeError(`'ignoreClasses' is not an iterable list.`);\n      }\n\n      const contenteditableAttr = el.getAttribute('contenteditable');\n      const contenteditableFocusable = typeof contenteditableAttr === 'string' &&\n       (contenteditableAttr === '' || contenteditableAttr === 'true');\n\n      const tabindexAttr = el.getAttribute('tabindex');\n      const tabindexFocusable = typeof tabindexAttr === 'string' && tabindexAttr !== '-1';\n\n      const isAnchor = el instanceof HTMLAnchorElement;\n\n      if (contenteditableFocusable || tabindexFocusable || isAnchor || el instanceof HTMLButtonElement ||\n       el instanceof HTMLDetailsElement || el instanceof HTMLEmbedElement || el instanceof HTMLIFrameElement ||\n        el instanceof HTMLInputElement || el instanceof HTMLObjectElement || el instanceof HTMLSelectElement ||\n         el instanceof HTMLTextAreaElement)\n      {\n         if (isAnchor && anchorHref && typeof el.getAttribute('href') !== 'string')\n         {\n            return false;\n         }\n\n         return el.style.display !== 'none' && el.style.visibility !== 'hidden' && !el.hasAttribute('disabled') &&\n          !el.hasAttribute('inert') && el.getAttribute('aria-hidden') !== 'true';\n      }\n\n      return false;\n   }\n\n   /**\n    * Convenience method to check if the given data is a valid focus source.\n    *\n    * @param {HTMLElement|string}   data - Either an HTMLElement or selector string.\n    *\n    * @returns {boolean} Is valid focus source.\n    */\n   static isFocusSource(data)\n   {\n      return data instanceof HTMLElement || typeof data === 'string';\n   }\n}\n\n/**\n * @typedef {object} A11yFocusSource Provides essential data to return focus to an HTMLElement after a series of UI\n * actions like working with context menus and modal dialogs.\n *\n * @property {boolean} [debug] When true logs to console the actions taken in {@link A11yHelper.applyFocusSource}.\n *\n * @property {Iterable<HTMLElement|string>} [focusEl] List of targets to attempt to focus.\n *\n * @property {string} [source] The source of the event: 'keyboard' for instance.\n *\n * @property {number} [x] Potential X coordinate of initial event.\n *\n * @property {number} [y] Potential Y coordinate of initial event.\n */\n\n/**\n * Provides utility methods for checking browser capabilities.\n *\n * @see https://kilianvalkhof.com/2021/web/detecting-media-query-support-in-css-and-javascript/\n * TODO: perhaps add support for various standard media query checks for level 4 & 5.\n */\nclass BrowserSupports\n{\n   /**\n    * Check for container query support.\n    *\n    * @returns {boolean} True if container queries supported.\n    */\n   static get containerQueries()\n   {\n      return 'container' in document.documentElement.style;\n   }\n}\n\n/**\n * Provides access to the Clipboard API for reading / writing text strings. This requires a secure context.\n *\n * Note: `writeText` will attempt to use the older `execCommand` if available when `navigator.clipboard` is not\n * available.\n */\nclass ClipboardAccess\n{\n   /**\n    * Uses `navigator.clipboard` if available to read text from the clipboard.\n    *\n    * Note: Always returns `undefined` when `navigator.clipboard` is not available or the clipboard contains the\n    * empty string.\n    *\n    * @returns {Promise<string|undefined>} The current clipboard text or undefined.\n    */\n   static async readText()\n   {\n      let result;\n\n      if (globalThis?.navigator?.clipboard)\n      {\n         try\n         {\n            result = await globalThis.navigator.clipboard.readText();\n         }\n         catch (err) { /**/ }\n      }\n\n      return result === '' ? void 0 : result;\n   }\n\n   /**\n    * Uses `navigator.clipboard` if available then falls back to `document.execCommand('copy')` if available to copy\n    * the given text to the clipboard.\n    *\n    * @param {string}   text - Text to copy to the browser clipboard.\n    *\n    * @returns {Promise<boolean>} Copy successful.\n    */\n   static async writeText(text)\n   {\n      if (typeof text !== 'string')\n      {\n         throw new TypeError(`ClipboardAccess.writeText error: 'text' is not a string.`);\n      }\n\n      let success = false;\n\n      if (globalThis?.navigator?.clipboard)\n      {\n         try\n         {\n            await globalThis.navigator.clipboard.writeText(text);\n            success = true;\n         }\n         catch (err) { /**/ }\n      }\n      else if (globalThis?.document?.execCommand instanceof Function)\n      {\n         const textArea = globalThis.document.createElement('textarea');\n\n         // Place in the top-left corner of screen regardless of scroll position.\n         textArea.style.position = 'fixed';\n         textArea.style.top = '0';\n         textArea.style.left = '0';\n\n         // Ensure it has a small width and height. Setting to 1px / 1em\n         // doesn't work as this gives a negative w/h on some browsers.\n         textArea.style.width = '2em';\n         textArea.style.height = '2em';\n\n         // We don't need padding, reducing the size if it does flash render.\n         textArea.style.padding = '0';\n\n         // Clean up any borders.\n         textArea.style.border = 'none';\n         textArea.style.outline = 'none';\n         textArea.style.boxShadow = 'none';\n\n         // Avoid flash of the white box if rendered for any reason.\n         textArea.style.background = 'transparent';\n\n         textArea.value = text;\n\n         globalThis.document.body.appendChild(textArea);\n         textArea.focus();\n         textArea.select();\n\n         try\n         {\n            success = document.execCommand('copy');\n         }\n         catch (err) { /**/ }\n\n         document.body.removeChild(textArea);\n      }\n\n      return success;\n   }\n}\n\n/**\n * Recursive function that finds the closest parent stacking context.\n * See also https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n *\n * Original author: Kerry Liu / https://github.com/gwwar\n *\n * @see https://github.com/gwwar/z-context/blob/master/content-script.js\n * @see https://github.com/gwwar/z-context/blob/master/LICENSE\n *\n * @param {Element} node -\n *\n * @returns {StackingContext} The closest parent stacking context\n */\nfunction getStackingContext(node)\n{\n   // the root element (HTML).\n   if (!node || node.nodeName === 'HTML')\n   {\n      return { node: document.documentElement, reason: 'root' };\n   }\n\n   // handle shadow root elements.\n   if (node.nodeName === '#document-fragment')\n   {\n      return getStackingContext(node.host);\n   }\n\n   const computedStyle = globalThis.getComputedStyle(node);\n\n   // position: fixed or sticky.\n   if (computedStyle.position === 'fixed' || computedStyle.position === 'sticky')\n   {\n      return { node, reason: `position: ${computedStyle.position}` };\n   }\n\n   // positioned (absolutely or relatively) with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto' && computedStyle.position !== 'static')\n   {\n      return { node, reason: `position: ${computedStyle.position}; z-index: ${computedStyle.zIndex}` };\n   }\n\n   // elements with an opacity value less than 1.\n   if (computedStyle.opacity !== '1')\n   {\n      return { node, reason: `opacity: ${computedStyle.opacity}` };\n   }\n\n   // elements with a transform value other than \"none\".\n   if (computedStyle.transform !== 'none')\n   {\n      return { node, reason: `transform: ${computedStyle.transform}` };\n   }\n\n   // elements with a mix-blend-mode value other than \"normal\".\n   if (computedStyle.mixBlendMode !== 'normal')\n   {\n      return { node, reason: `mixBlendMode: ${computedStyle.mixBlendMode}` };\n   }\n\n   // elements with a filter value other than \"none\".\n   if (computedStyle.filter !== 'none')\n   {\n      return { node, reason: `filter: ${computedStyle.filter}` };\n   }\n\n   // elements with a perspective value other than \"none\".\n   if (computedStyle.perspective !== 'none')\n   {\n      return { node, reason: `perspective: ${computedStyle.perspective}` };\n   }\n\n   // elements with a clip-path value other than \"none\".\n   if (computedStyle.clipPath !== 'none')\n   {\n      return { node, reason: `clip-path: ${computedStyle.clipPath} ` };\n   }\n\n   // elements with a mask value other than \"none\".\n   const mask = computedStyle.mask || computedStyle.webkitMask;\n   if (mask !== 'none' && mask !== undefined)\n   {\n      return { node, reason: `mask:  ${mask}` };\n   }\n\n   // elements with a mask-image value other than \"none\".\n   const maskImage = computedStyle.maskImage || computedStyle.webkitMaskImage;\n   if (maskImage !== 'none' && maskImage !== undefined)\n   {\n      return { node, reason: `mask-image: ${maskImage}` };\n   }\n\n   // elements with a mask-border value other than \"none\".\n   const maskBorder = computedStyle.maskBorder || computedStyle.webkitMaskBorder;\n   if (maskBorder !== 'none' && maskBorder !== undefined)\n   {\n      return { node, reason: `mask-border: ${maskBorder}` };\n   }\n\n   // elements with isolation set to \"isolate\".\n   if (computedStyle.isolation === 'isolate')\n   {\n      return { node, reason: `isolation: ${computedStyle.isolation}` };\n   }\n\n   // transform or opacity in will-change even if you don't specify values for these attributes directly.\n   if (computedStyle.willChange === 'transform' || computedStyle.willChange === 'opacity')\n   {\n      return { node, reason: `willChange: ${computedStyle.willChange}` };\n   }\n\n   // elements with -webkit-overflow-scrolling set to \"touch\".\n   if (computedStyle.webkitOverflowScrolling === 'touch')\n   {\n      return { node, reason: '-webkit-overflow-scrolling: touch' };\n   }\n\n   // an item with a z-index value other than \"auto\".\n   if (computedStyle.zIndex !== 'auto')\n   {\n      const parentStyle = globalThis.getComputedStyle(node.parentNode);\n      // with a flex|inline-flex parent.\n      if (parentStyle.display === 'flex' || parentStyle.display === 'inline-flex')\n      {\n         return { node, reason: `flex-item; z-index: ${computedStyle.zIndex}` };\n         // with a grid parent.\n      }\n      else if (parentStyle.grid !== 'none / none / none / row / auto / auto')\n      {\n         return { node, reason: `child of grid container; z-index: ${computedStyle.zIndex}` };\n      }\n   }\n\n   // contain with a value of layout, or paint, or a composite value that includes either of them\n   const contain = computedStyle.contain;\n   if (['layout', 'paint', 'strict', 'content'].indexOf(contain) > -1 ||\n    contain.indexOf('paint') > -1 ||\n    contain.indexOf('layout') > -1\n   )\n   {\n      return { node, reason: `contain: ${contain}` };\n   }\n\n   return getStackingContext(node.parentNode);\n}\n\n/**\n * @typedef {object} StackingContext\n *\n * @property {Element} node - A DOM Element.\n *\n * @property {string}  reason - Reason for why a stacking context was created.\n */\n\n/**\n * Provides resources for parsing style strings.\n */\nclass StyleParse\n{\n   static #regexPixels = /(\\d+)\\s*px/;\n\n   /**\n    * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n    *\n    * @param {string}   value - Value to parse.\n    *\n    * @returns {number|undefined} The integer component of a pixel string.\n    */\n   static pixels(value)\n   {\n      if (typeof value !== 'string') { return void 0; }\n\n      const isPixels = this.#regexPixels.test(value);\n      const number = parseInt(value);\n\n      return isPixels && Number.isFinite(number) ? number : void 0;\n   }\n}\n\n/**\n * Provides a managed dynamic style sheet / element useful in configuring global CSS variables. When creating an\n * instance of TJSStyleManager you must provide a \"document key\" / string for the style element added. The style element\n * can be accessed via `document[docKey]`.\n *\n * Instances of TJSStyleManager can also be versioned by supplying a positive integer greater than or equal to `1` via\n * the 'version' option. This version number is assigned to the associated style element. When a TJSStyleManager\n * instance is created and there is an existing instance with a version that is lower than the current instance all CSS\n * rules are removed letting the higher version to take precedence. This isn't a perfect system and requires thoughtful\n * construction of CSS variables exposed, but allows multiple independently compiled TRL packages to load the latest\n * CSS variables. It is recommended to always set `overwrite` option of {@link TJSStyleManager.setProperty} and\n * {@link TJSStyleManager.setProperties} to `false` when loading initial values.\n */\nclass TJSStyleManager\n{\n   /** @type {CSSStyleRule} */\n   #cssRule;\n\n   /** @type {string} */\n   #docKey;\n\n   /** @type {string} */\n   #selector;\n\n   /** @type {HTMLStyleElement} */\n   #styleElement;\n\n   /** @type {number} */\n   #version;\n\n   /**\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.docKey - Required key providing a link to a specific style sheet element.\n    *\n    * @param {string}   [opts.selector=:root] - Selector element.\n    *\n    * @param {Document} [opts.document] - Target document to load styles into.\n    *\n    * @param {number}   [opts.version] - An integer representing the version / level of styles being managed.\n    */\n   constructor({ docKey, selector = ':root', document = globalThis.document, version } = {})\n   {\n      if (typeof docKey !== 'string') { throw new TypeError(`StyleManager error: 'docKey' is not a string.`); }\n\n      // TODO: Verify 'document' type from Popout FVTT module. For some reason the popout document trips this\n      //  unintentionally.\n      // if (!(document instanceof Document))\n      // {\n      //    throw new TypeError(`TJSStyleManager error: 'document' is not an instance of Document.`);\n      // }\n\n      if (typeof selector !== 'string') { throw new TypeError(`StyleManager error: 'selector' is not a string.`); }\n\n      if (version !== void 0 && !Number.isSafeInteger(version) && version < 1)\n      {\n         throw new TypeError(`StyleManager error: 'version' is defined and is not a positive integer >= 1.`);\n      }\n\n      this.#selector = selector;\n      this.#docKey = docKey;\n      this.#version = version;\n\n      if (document[this.#docKey] === void 0)\n      {\n         this.#styleElement = document.createElement('style');\n\n         document.head.append(this.#styleElement);\n\n         // Set initial style manager version if any supplied.\n         this.#styleElement._STYLE_MANAGER_VERSION = version;\n\n         this.#styleElement.sheet.insertRule(`${selector} {}`, 0);\n\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         document[docKey] = this.#styleElement;\n      }\n      else\n      {\n         this.#styleElement = document[docKey];\n         this.#cssRule = this.#styleElement.sheet.cssRules[0];\n\n         if (version)\n         {\n            const existingVersion = this.#styleElement._STYLE_MANAGER_VERSION ?? 0;\n\n            // Remove all existing CSS rules / text if version is greater than existing version.\n            if (version > existingVersion)\n            {\n               this.#cssRule.style.cssText = '';\n            }\n         }\n      }\n   }\n\n   /**\n    * @returns {string} Provides an accessor to get the `cssText` for the style sheet.\n    */\n   get cssText()\n   {\n      return this.#cssRule.style.cssText;\n   }\n\n   /**\n    * @returns {number} Returns the version of this instance.\n    */\n   get version()\n   {\n      return this.#version;\n   }\n\n   /**\n    * Provides a copy constructor to duplicate an existing TJSStyleManager instance into a new document.\n    *\n    * Note: This is used to support the `PopOut` module.\n    *\n    * @param {Document} [document] Target browser document to clone into.\n    *\n    * @returns {TJSStyleManager} New style manager instance.\n    */\n   clone(document = globalThis.document)\n   {\n      const newStyleManager = new TJSStyleManager({\n         selector: this.#selector,\n         docKey: this.#docKey,\n         document,\n         version: this.#version\n      });\n\n      newStyleManager.#cssRule.style.cssText = this.#cssRule.style.cssText;\n\n      return newStyleManager;\n   }\n\n   get()\n   {\n      const cssText = this.#cssRule.style.cssText;\n\n      const result = {};\n\n      if (cssText !== '')\n      {\n         for (const entry of cssText.split(';'))\n         {\n            if (entry !== '')\n            {\n               const values = entry.split(':');\n               result[values[0].trim()] = values[1];\n            }\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * Gets a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} Returns CSS variable value.\n    */\n   getProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.getPropertyValue(key);\n   }\n\n   /**\n    * Set rules by property / value; useful for CSS variables.\n    *\n    * @param {{ [key: string]: string }}  rules - An object with property / value string pairs to load.\n    *\n    * @param {boolean}                 [overwrite=true] - When true overwrites any existing values.\n    */\n   setProperties(rules, overwrite = true)\n   {\n      if (!isObject(rules)) { throw new TypeError(`StyleManager error: 'rules' is not an object.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         for (const [key, value] of Object.entries(rules))\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n      else\n      {\n         // Only set property keys for entries that don't have an existing rule set.\n         for (const [key, value] of Object.entries(rules))\n         {\n            if (this.#cssRule.style.getPropertyValue(key) === '')\n            {\n               this.#cssRule.style.setProperty(key, value);\n            }\n         }\n      }\n   }\n\n   /**\n    * Sets a particular property.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @param {string}   value - CSS variable value.\n    *\n    * @param {boolean}  [overwrite=true] - Overwrite any existing value.\n    */\n   setProperty(key, value, overwrite = true)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      if (typeof value !== 'string') { throw new TypeError(`StyleManager error: 'value' is not a string.`); }\n\n      if (typeof overwrite !== 'boolean') { throw new TypeError(`StyleManager error: 'overwrite' is not a boolean.`); }\n\n      if (overwrite)\n      {\n         this.#cssRule.style.setProperty(key, value);\n      }\n      else\n      {\n         if (this.#cssRule.style.getPropertyValue(key) === '')\n         {\n            this.#cssRule.style.setProperty(key, value);\n         }\n      }\n   }\n\n   /**\n    * Removes the property keys specified. If `keys` is an iterable list then all property keys in the list are removed.\n    *\n    * @param {Iterable<string>} keys - The property keys to remove.\n    */\n   removeProperties(keys)\n   {\n      if (!isIterable(keys)) { throw new TypeError(`StyleManager error: 'keys' is not an iterable list.`); }\n\n      for (const key of keys)\n      {\n         if (typeof key === 'string') { this.#cssRule.style.removeProperty(key); }\n      }\n   }\n\n   /**\n    * Removes a particular CSS variable.\n    *\n    * @param {string}   key - CSS variable property key.\n    *\n    * @returns {string} CSS variable value when removed.\n    */\n   removeProperty(key)\n   {\n      if (typeof key !== 'string') { throw new TypeError(`StyleManager error: 'key' is not a string.`); }\n\n      return this.#cssRule.style.removeProperty(key);\n   }\n}\n\nexport { A11yHelper, BrowserSupports, ClipboardAccess, StyleParse, TJSStyleManager, getStackingContext, striptags };\n//# sourceMappingURL=index.js.map\n","import { TJSStyleManager } from '@typhonjs-fvtt/runtime/util/browser';\n\nexport const cssVariables = new TJSStyleManager({ docKey: '#__trl-root-styles', version: 1 });\n","class Hashing\n{\n   static #regexUuidv = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n\n   /**\n    * Provides a solid string hashing algorithm.\n    *\n    * Sourced from: https://stackoverflow.com/a/52171480\n    *\n    * @param {string}   str - String to hash.\n    *\n    * @param {number}   seed - A seed value altering the hash.\n    *\n    * @returns {number} Hash code.\n    */\n   static hashCode(str, seed = 0)\n   {\n      if (typeof str !== 'string') { return 0; }\n\n      let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n\n      for (let ch, i = 0; i < str.length; i++)\n      {\n         ch = str.charCodeAt(i);\n         h1 = Math.imul(h1 ^ ch, 2654435761);\n         h2 = Math.imul(h2 ^ ch, 1597334677);\n      }\n\n      h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n      h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n      return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n   }\n\n   /**\n    * Validates that the given string is formatted as a UUIDv4 string.\n    *\n    * @param {string}   uuid - UUID string to test.\n    *\n    * @returns {boolean} Is UUIDv4 string.\n    */\n   static isUuidv4(uuid)\n   {\n      return this.#regexUuidv.test(uuid);\n   }\n\n   /**\n    * Generates a UUID v4 compliant ID. Please use a complete UUID generation package for guaranteed compliance.\n    *\n    * This code is an evolution of the following Gist.\n    * https://gist.github.com/jed/982883\n    *\n    * There is a public domain / free copy license attached to it that is not a standard OSS license...\n    * https://gist.github.com/jed/982883#file-license-txt\n    *\n    * @returns {string} UUIDv4\n    */\n   static uuidv4()\n   {\n      return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\n       (c ^ (globalThis.crypto ?? globalThis.msCrypto).getRandomValues(\n        new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n   }\n}\n\n/**\n * Provides utility functions for strings.\n */\nclass Strings\n{\n   /**\n    * Escape a given input string prefacing special characters with backslashes for use in a regular expression.\n    *\n    * @param {string}   string - An un-escaped input string.\n    *\n    * @returns {string} The escaped string suitable for use in a regular expression.\n    */\n   static escape(string)\n   {\n      return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n   }\n\n   /**\n    * Normalizes a string.\n    *\n    * @param {string}   string - A string to normalize for comparisons.\n    *\n    * @returns {string} Cleaned string.\n    *\n    * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n    */\n   static normalize(string)\n   {\n      return string.trim().normalize('NFD').replace(/[\\x00-\\x1F]/gm, ''); // eslint-disable-line no-control-regex\n   }\n}\n\n/**\n * Provides timing related higher-order functions.\n */\nclass Timing\n{\n   /**\n    * Wraps a callback in a debounced timeout.\n    *\n    * Delay execution of the callback function until the function has not been called for the given delay in milliseconds.\n    *\n    * @param {Function} callback - A function to execute once the debounced threshold has been passed.\n    *\n    * @param {number}   delay - An amount of time in milliseconds to delay.\n    *\n    * @returns {Function} A wrapped function that can be called to debounce execution.\n    */\n   static debounce(callback, delay)\n   {\n      let timeoutId;\n\n      return function(...args)\n      {\n         globalThis.clearTimeout(timeoutId);\n         timeoutId = globalThis.setTimeout(() => { callback.apply(this, args); }, delay);\n      };\n   }\n\n   /**\n    * @param {object}   opts - Optional parameters.\n    *\n    * @param {Function} opts.single - Single click callback.\n    *\n    * @param {Function} opts.double - Double click callback.\n    *\n    * @param {number}   [opts.delay=400] - Double click delay.\n    *\n    * @returns {(event: Event) => void} The gated double-click handler.\n    */\n   static doubleClick({ single, double, delay = 400 })\n   {\n      let clicks = 0;\n      let timeoutId;\n\n      return (event) =>\n      {\n         clicks++;\n\n         if (clicks === 1)\n         {\n            timeoutId = globalThis.setTimeout(() =>\n            {\n               if (typeof single === 'function') { single(event); }\n               clicks = 0;\n            }, delay);\n         }\n         else\n         {\n            globalThis.clearTimeout(timeoutId);\n            if (typeof double === 'function') { double(event); }\n            clicks = 0;\n         }\n      };\n   }\n}\n\nexport { Hashing, Strings, Timing };\n//# sourceMappingURL=index.js.map\n","/**\n * Provides a basic test for a given variable to test if it has the shape of a readable store by having a `subscribe`\n * function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isReadableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * function and an `update` function.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ a `subscribe` function.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isUpdatableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.update === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Provides a basic test for a given variable to test if it has the shape of a writable store by having a `subscribe`\n * `set`, and `update` functions.\n *\n * Note: functions are also objects, so test that the variable might be a function w/ `subscribe` & `set` functions.\n *\n * @param {*}  store - variable to test that might be a store.\n *\n * @returns {boolean} Whether the variable tested has the shape of a store.\n */\nfunction isWritableStore(store)\n{\n   if (store === null || store === void 0) { return false; }\n\n   switch (typeof store)\n   {\n      case 'function':\n      case 'object':\n         return typeof store.subscribe === 'function' && typeof store.set === 'function';\n   }\n\n   return false;\n}\n\n/**\n * Wraps a writable stores set method invoking a callback after the store is set. This allows hard coupled parent /\n * child relationships between stores to update directly without having to subscribe to the child store. This is a\n * particular powerful pattern when the `setCallback` is a debounced function that syncs a parent store and / or\n * serializes data.\n *\n * Note: Do consider carefully if this is an optimum solution; this is a quick implementation helper, but a better\n * solution is properly managing store relationships through subscription.\n *\n * @template T\n *\n * @param {import('svelte/store').Writable<T>} store - A store to wrap.\n *\n * @param {(store?: import('svelte/store').Writable<T>, value?: T) => void} setCallback - A callback to invoke after\n *        store set.\n *\n * @returns {import('svelte/store').Writable<T>} Wrapped store.\n */\nfunction storeCallback(store, setCallback)\n{\n   if (!isWritableStore(store)) { throw new TypeError(`'store' is not a writable store.`); }\n   if (typeof setCallback !== 'function') { throw new TypeError(`'setCallback' is not a function.`); }\n\n   /** @type {import('svelte/store').Writable<T>} */\n   return {\n      set: (value) =>\n      {\n         store.set(value);\n         setCallback(store, value);\n      },\n\n      subscribe: store.subscribe,\n\n      update: typeof store.update === 'function' ? store.update : void 0\n   };\n}\n\n/**\n * Subscribes to the given store with the update function provided and ignores the first automatic\n * update. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} update - function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeIgnoreFirst(store, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\n/**\n * Subscribes to the given store with two update functions provided. The first function is invoked on the initial\n * subscription. All future updates are dispatched to the update function.\n *\n * @param {import('svelte/store').Readable | import('svelte/store').Writable} store -\n *  Store to subscribe to...\n *\n * @param {import('svelte/store').Updater} first - Function to receive first update.\n *\n * @param {import('svelte/store').Updater} update - Function to receive future updates.\n *\n * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n */\nfunction subscribeFirstRest(store, first, update)\n{\n   let firedFirst = false;\n\n   return store.subscribe((value) =>\n   {\n      if (!firedFirst)\n      {\n         firedFirst = true;\n         first(value);\n      }\n      else\n      {\n         update(value);\n      }\n   });\n}\n\nexport { isReadableStore, isUpdatableStore, isWritableStore, storeCallback, subscribeFirstRest, subscribeIgnoreFirst };\n//# sourceMappingURL=index.js.map\n","import { Timing } from '@typhonjs-fvtt/runtime/util';\nimport { isUpdatableStore, isWritableStore } from '@typhonjs-fvtt/runtime/util/store';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/browser';\nimport { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides an action to always blur the element when any pointer up event occurs on the element.\n *\n * @param {HTMLElement}   node - The node to handle always blur on pointer up.\n *\n * @returns {import('svelte/action').ActionReturn} Lifecycle functions.\n */\nfunction alwaysBlur(node)\n{\n   /**\n    * Blurs node if active element.\n    */\n   function blurNode()\n   {\n      setTimeout(() => { if (document.activeElement === node) { node.blur(); } }, 0);\n   }\n\n   node.addEventListener('pointerup', blurNode);\n\n   return {\n      destroy: () => node.removeEventListener('pointerup', blurNode)\n   };\n}\n\n/**\n * Provides an action to monitor the given HTMLElement node with `ResizeObserver` posting width / height changes\n * to the target in various ways depending on the shape of the target. The target can be one of the following and the\n * precedence order is listed from top to bottom:\n *\n * - has a `resizeObserved` function as attribute; offset then content width / height are passed as parameters.\n * - has a `setContentBounds` function as attribute; content width / height are passed as parameters.\n * - has a `setDimension` function as attribute; offset width / height are passed as parameters.\n * - target is an object; offset and content width / height attributes directly set on target.\n * - target is a function; the function invoked with offset then content width / height parameters.\n * - has a writable store `resizeObserved` as an attribute; updated with offset & content width / height.\n * - has an object 'stores' that has a writable store `resizeObserved` as an attribute; updated with offset &\n *   content width / height.\n *\n * Note: Svelte currently uses an archaic IFrame based workaround to monitor offset / client width & height changes.\n * A more up to date way to do this is with ResizeObserver. To track when Svelte receives ResizeObserver support\n * monitor this issue: {@link https://github.com/sveltejs/svelte/issues/4233}\n *\n * Can-I-Use: {@link https://caniuse.com/resizeobserver}\n *\n * @param {HTMLElement}          node - The node associated with the action.\n *\n * @param {ResizeObserverTarget} target - An object or function to update with observed width & height changes.\n *\n * @returns {import('svelte/action').ActionReturn<ResizeObserverTarget>} The action lifecycle methods.\n * @see {@link https://github.com/sveltejs/svelte/issues/4233}\n */\nfunction resizeObserver(node, target)\n{\n   ResizeObserverManager.add(node, target);\n\n   return {\n      /**\n       * @param {ResizeObserverTarget} newTarget - An object or function to update with observed width & height changes.\n       */\n      update: (newTarget) =>\n      {\n         ResizeObserverManager.remove(node, target);\n         target = newTarget;\n         ResizeObserverManager.add(node, target);\n      },\n\n      destroy: () =>\n      {\n         ResizeObserverManager.remove(node, target);\n      }\n   };\n}\n\n/**\n * Provides a function that when invoked with an element updates the cached styles for each subscriber of the element.\n *\n * The style attributes cached to calculate offset height / width include border & padding dimensions. You only need\n * to update the cache if you change border or padding attributes of the element.\n *\n * @param {HTMLElement} el - An HTML element.\n */\nresizeObserver.updateCache = function(el)\n{\n   if (!(el instanceof HTMLElement)) { throw new TypeError(`resizeObserverUpdate error: 'el' is not an HTMLElement.`); }\n\n   const subscribers = s_MAP.get(el);\n\n   if (Array.isArray(subscribers))\n   {\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      const additionalWidth = borderLeft + borderRight + paddingLeft + paddingRight;\n      const additionalHeight = borderTop + borderBottom + paddingTop + paddingBottom;\n\n      for (const subscriber of subscribers)\n      {\n         subscriber.styles.additionalWidth = additionalWidth;\n         subscriber.styles.additionalHeight = additionalHeight;\n         s_UPDATE_SUBSCRIBER(subscriber, subscriber.contentWidth, subscriber.contentHeight);\n      }\n   }\n};\n\n// Below is the static ResizeObserverManager ------------------------------------------------------------------------\n\nconst s_MAP = new Map();\n\n/**\n * Provides a static / single instance of ResizeObserver that can notify listeners in different ways.\n *\n * The action, {@link resizeObserver}, utilizes ResizeObserverManager for automatic registration and removal\n * via Svelte.\n */\nclass ResizeObserverManager\n{\n   /**\n    * Add an HTMLElement and ResizeObserverTarget instance for monitoring. Create cached style attributes for the\n    * given element include border & padding dimensions for offset width / height calculations.\n    *\n    * @param {HTMLElement}    el - The element to observe.\n    *\n    * @param {ResizeObserverTarget} target - A target that contains one of several mechanisms for updating resize data.\n    */\n   static add(el, target)\n   {\n      const updateType = s_GET_UPDATE_TYPE(target);\n\n      if (updateType === 0)\n      {\n         throw new Error(`'target' does not match supported ResizeObserverManager update mechanisms.`);\n      }\n\n      const computed = globalThis.getComputedStyle(el);\n\n      // Cache styles first from any inline styles then computed styles defaulting to 0 otherwise.\n      // Used to create the offset width & height values from the context box ResizeObserver provides.\n      const borderBottom = StyleParse.pixels(el.style.borderBottom) ?? StyleParse.pixels(computed.borderBottom) ?? 0;\n      const borderLeft = StyleParse.pixels(el.style.borderLeft) ?? StyleParse.pixels(computed.borderLeft) ?? 0;\n      const borderRight = StyleParse.pixels(el.style.borderRight) ?? StyleParse.pixels(computed.borderRight) ?? 0;\n      const borderTop = StyleParse.pixels(el.style.borderTop) ?? StyleParse.pixels(computed.borderTop) ?? 0;\n      const paddingBottom = StyleParse.pixels(el.style.paddingBottom) ?? StyleParse.pixels(computed.paddingBottom) ?? 0;\n      const paddingLeft = StyleParse.pixels(el.style.paddingLeft) ?? StyleParse.pixels(computed.paddingLeft) ?? 0;\n      const paddingRight = StyleParse.pixels(el.style.paddingRight) ?? StyleParse.pixels(computed.paddingRight) ?? 0;\n      const paddingTop = StyleParse.pixels(el.style.paddingTop) ?? StyleParse.pixels(computed.paddingTop) ?? 0;\n\n      const data = {\n         updateType,\n         target,\n\n         // Stores most recent contentRect.width and contentRect.height values from ResizeObserver.\n         contentWidth: 0,\n         contentHeight: 0,\n\n         // Convenience data for total border & padding for offset width & height calculations.\n         styles: {\n            additionalWidth: borderLeft + borderRight + paddingLeft + paddingRight,\n            additionalHeight: borderTop + borderBottom + paddingTop + paddingBottom\n         }\n      };\n\n      if (s_MAP.has(el))\n      {\n         const subscribers = s_MAP.get(el);\n         subscribers.push(data);\n      }\n      else\n      {\n         s_MAP.set(el, [data]);\n      }\n\n      s_RESIZE_OBSERVER.observe(el);\n   }\n\n   /**\n    * Removes all targets from monitoring when just an element is provided otherwise removes a specific target\n    * from the monitoring map. If no more targets remain then the element is removed from monitoring.\n    *\n    * @param {HTMLElement}          el - Element to remove from monitoring.\n    *\n    * @param {ResizeObserverTarget} [target] - A specific target to remove from monitoring.\n    */\n   static remove(el, target = void 0)\n   {\n      const subscribers = s_MAP.get(el);\n      if (Array.isArray(subscribers))\n      {\n         const index = subscribers.findIndex((entry) => entry.target === target);\n         if (index >= 0)\n         {\n            // Update target subscriber with undefined values.\n            s_UPDATE_SUBSCRIBER(subscribers[index], void 0, void 0);\n\n            subscribers.splice(index, 1);\n         }\n\n         // Remove element monitoring if last target removed.\n         if (subscribers.length === 0)\n         {\n            s_MAP.delete(el);\n            s_RESIZE_OBSERVER.unobserve(el);\n         }\n      }\n   }\n}\n\n/**\n * Defines the various shape / update type of the given target.\n *\n * @type {Record<string, number>}\n */\nconst s_UPDATE_TYPES = {\n   none: 0,\n   attribute: 1,\n   function: 2,\n   resizeObserved: 3,\n   setContentBounds: 4,\n   setDimension: 5,\n   storeObject: 6,\n   storesObject: 7\n};\n\nconst s_RESIZE_OBSERVER = new ResizeObserver((entries) =>\n{\n   for (const entry of entries)\n   {\n      const subscribers = s_MAP.get(entry?.target);\n\n      if (Array.isArray(subscribers))\n      {\n         const contentWidth = entry.contentRect.width;\n         const contentHeight = entry.contentRect.height;\n\n         for (const subscriber of subscribers)\n         {\n            s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight);\n         }\n      }\n   }\n});\n\n/**\n * Determines the shape of the target instance regarding valid update mechanisms to set width & height changes.\n *\n * @param {*}  target - The target instance.\n *\n * @returns {number} Update type value.\n */\nfunction s_GET_UPDATE_TYPE(target)\n{\n   if (target?.resizeObserved instanceof Function) { return s_UPDATE_TYPES.resizeObserved; }\n   if (target?.setDimension instanceof Function) { return s_UPDATE_TYPES.setDimension; }\n   if (target?.setContentBounds instanceof Function) { return s_UPDATE_TYPES.setContentBounds; }\n\n   const targetType = typeof target;\n\n   // Does the target have resizeObserved writable store?\n   if (targetType !== null && (targetType === 'object' || targetType === 'function'))\n   {\n      if (isUpdatableStore(target.resizeObserved))\n      {\n         return s_UPDATE_TYPES.storeObject;\n      }\n\n      // Now check for a child stores object which is a common TRL pattern for exposing stores.\n      const stores = target?.stores;\n      if (isObject(stores) || typeof stores === 'function')\n      {\n         if (isUpdatableStore(stores.resizeObserved))\n         {\n            return s_UPDATE_TYPES.storesObject;\n         }\n      }\n   }\n\n   if (targetType !== null && targetType === 'object') { return s_UPDATE_TYPES.attribute; }\n\n   if (targetType === 'function') { return s_UPDATE_TYPES.function; }\n\n   return s_UPDATE_TYPES.none;\n}\n\n/**\n * Updates a subscriber target with given content width & height values. Offset width & height is calculated from\n * the content values + cached styles.\n *\n * @param {object}            subscriber - Internal data about subscriber.\n *\n * @param {number|undefined}  contentWidth - ResizeObserver contentRect.width value or undefined.\n *\n * @param {number|undefined}  contentHeight - ResizeObserver contentRect.height value or undefined.\n */\nfunction s_UPDATE_SUBSCRIBER(subscriber, contentWidth, contentHeight)\n{\n   const styles = subscriber.styles;\n\n   subscriber.contentWidth = contentWidth;\n   subscriber.contentHeight = contentHeight;\n\n   const offsetWidth = Number.isFinite(contentWidth) ? contentWidth + styles.additionalWidth : void 0;\n   const offsetHeight = Number.isFinite(contentHeight) ? contentHeight + styles.additionalHeight : void 0;\n\n   const target = subscriber.target;\n\n   switch (subscriber.updateType)\n   {\n      case s_UPDATE_TYPES.attribute:\n         target.contentWidth = contentWidth;\n         target.contentHeight = contentHeight;\n         target.offsetWidth = offsetWidth;\n         target.offsetHeight = offsetHeight;\n         break;\n\n      case s_UPDATE_TYPES.function:\n         target?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.resizeObserved:\n         target.resizeObserved?.(offsetWidth, offsetHeight, contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setContentBounds:\n         target.setContentBounds?.(contentWidth, contentHeight);\n         break;\n\n      case s_UPDATE_TYPES.setDimension:\n         target.setDimension?.(offsetWidth, offsetHeight);\n         break;\n\n      case s_UPDATE_TYPES.storeObject:\n         target.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n\n      case s_UPDATE_TYPES.storesObject:\n         target.stores.resizeObserved.update((object) =>\n         {\n            object.contentHeight = contentHeight;\n            object.contentWidth = contentWidth;\n            object.offsetHeight = offsetHeight;\n            object.offsetWidth = offsetWidth;\n\n            return object;\n         });\n         break;\n   }\n}\n\n/**\n * @typedef {(\n *    offsetWidth: number,\n *    offsetHeight: number,\n *    contentWidth: number,\n *    contentHeight: number\n * ) => void } ResizeObserverFunction A function that receives offset / content height & width.\n */\n\n/**\n * @typedef {ResizeObserverObject | ResizeObserverObjectExtended | ResizeObserverFunction} ResizeObserverTarget The\n *          receiving target for observed resize data.\n */\n\n/**\n * @typedef {object} ResizeObserverObject A direct object to update observed resize updates.\n *\n * @property {number} [contentHeight] Direct attribute to store contentHeight.\n *\n * @property {number} [contentWidth] Direct attribute to store contentWidth.\n *\n * @property {number} [offsetHeight] Direct attribute to store offsetHeight.\n *\n * @property {number} [offsetWidth] Direct attribute to store offsetWidth.\n */\n\n/**\n * @typedef {object} ResizeObserverObjectExtended Provides extended attributes supported for observed resize updates.\n *\n * @property {import('svelte/store').Writable<ResizeObserverObject> | ResizeObserverFunction} [resizedObserver] Either\n *           a function or a writable store.\n *\n * @property {(contentWidth: number, contentHeight: number) => void} [setContentBounds] - A function that is invoked\n *           with content width & height changes.\n *\n * @property {(offsetWidth: number, offsetHeight: number) => void} [setDimension] - A function that is invoked with\n *           offset width & height changes.\n *\n * @property {{resizedObserver: import('svelte/store').Writable<ResizeObserverObject>}} [stores] - An object with a\n *           `stores` attribute and subsequent `resizedObserver` writable store.\n */\n\n/**\n * Provides an action to save `scrollTop` of an element with a vertical scrollbar. This action should be used on the\n * scrollable element and must include a writable store that holds the active store for the current `scrollTop` value.\n * You may switch the stores externally and this action will set the `scrollTop` based on the newly set store. This is\n * useful for instance providing a select box that controls the scrollable container.\n *\n * @param {HTMLElement} element - The target scrollable HTML element.\n *\n * @param {import('svelte/store').Writable<number>}   store - A writable store that stores the element scrollTop.\n *\n * @returns {import('svelte/action').ActionReturn<import('svelte/store').Writable<number>>} Lifecycle functions.\n */\nfunction applyScrolltop(element, store)\n{\n   if (!isWritableStore(store))\n   {\n      throw new TypeError(`applyScrolltop error: 'store' must be a writable Svelte store.`);\n   }\n\n   /**\n    * Updates element `scrollTop`.\n    *\n    * @param {number}   value -\n    */\n   function storeUpdate(value)\n   {\n      if (!Number.isFinite(value)) { return; }\n\n      // For some reason for scrollTop to take on first update from a new element setTimeout is necessary.\n      setTimeout(() => element.scrollTop = value, 0);\n   }\n\n   let unsubscribe = store.subscribe(storeUpdate);\n\n   const resizeControl = resizeObserver(element, Timing.debounce(() =>\n   {\n      if (element.isConnected) { store.set(element.scrollTop); }\n   }, 500));\n\n   /**\n    * Save target `scrollTop` to the current set store.\n    *\n    * @param {Event} event -\n    */\n   function onScroll(event)\n   {\n      store.set(event.target.scrollTop);\n   }\n\n   const debounceFn = Timing.debounce((e) => onScroll(e), 500);\n\n   element.addEventListener('scroll', debounceFn);\n\n   return {\n      /**\n       * @param {import('svelte/store').Writable<number>} newStore - A writable store that stores the element scrollTop.\n       */\n      update: (newStore) =>\n      {\n         unsubscribe();\n         store = newStore;\n\n         if (!isWritableStore(store))\n         {\n            throw new TypeError(`applyScrolltop.update error: 'store' must be a writable Svelte store.`);\n         }\n\n         unsubscribe = store.subscribe(storeUpdate);\n      },\n\n      destroy: () =>\n      {\n         element.removeEventListener('scroll', debounceFn);\n         unsubscribe();\n         resizeControl.destroy();\n      }\n   };\n}\n\n/**\n * Provides an action to apply style properties provided as an object.\n *\n * @param {HTMLElement} node - Target element\n *\n * @param {Record<string, string>}  properties - Key / value object of properties to set.\n *\n * @returns {import('svelte/action').ActionReturn<Record<string, string>>} Lifecycle functions.\n */\nfunction applyStyles(node, properties)\n{\n   /** Sets properties on node. */\n   function setProperties()\n   {\n      if (!isObject(properties)) { return; }\n\n      for (const prop of Object.keys(properties))\n      {\n         node.style.setProperty(`${prop}`, properties[prop]);\n      }\n   }\n\n   setProperties();\n\n   return {\n      /**\n       * @param {Record<string, string>}  newProperties - Key / value object of properties to set.\n       */\n      update: (newProperties) =>\n      {\n         properties = newProperties;\n         setProperties();\n      }\n   };\n}\n\n/**\n * Provides an action to blur the element when any pointer down event occurs outside the element. This can be useful\n * for input elements including select to blur / unfocus the element when any pointer down occurs outside the element.\n *\n * @param {HTMLElement}   node - The node to handle automatic blur on focus loss.\n *\n * @returns {import('svelte/action').ActionReturn} Lifecycle functions.\n */\nfunction autoBlur(node)\n{\n   /**\n    * Removes listener on blur.\n    */\n   function onBlur() { document.body.removeEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Adds listener on focus.\n    */\n   function onFocus() { document.body.addEventListener('pointerdown', onPointerDown); }\n\n   /**\n    * Blur the node if a pointer down event happens outside the node.\n    *\n    * @param {PointerEvent} event -\n    */\n   function onPointerDown(event)\n   {\n      if (event.target === node || node.contains(event.target)) { return; }\n\n      if (document.activeElement === node) { node.blur(); }\n   }\n\n   node.addEventListener('blur', onBlur);\n   node.addEventListener('focus', onFocus);\n\n   return {\n      destroy: () =>\n      {\n         document.body.removeEventListener('pointerdown', onPointerDown);\n         node.removeEventListener('blur', onBlur);\n         node.removeEventListener('focus', onFocus);\n      }\n   };\n}\n\n/**\n * Provides an action to monitor focus state of a given element and set an associated store with current focus state.\n *\n * This action is usable with any writable store.\n *\n * @param {HTMLElement} node - Target element.\n *\n * @param {import('svelte/store').Writable<boolean>}  storeFocused - Update store for focus changes.\n *\n * @returns {import('svelte/action').ActionReturn<import('svelte/store').Writable<boolean>>} Lifecycle functions.\n */\nfunction isFocused(node, storeFocused)\n{\n   let localFocused = false;\n\n   /**\n    * Updates `storeFocused` w/ current focused state.\n    *\n    * @param {boolean}  current - current focused state.\n    */\n   function setFocused(current)\n   {\n      localFocused = current;\n\n      if (isWritableStore(storeFocused)) { storeFocused.set(localFocused); }\n   }\n\n   /**\n    * Focus event listener.\n    */\n   function onFocus()\n   {\n      setFocused(true);\n   }\n\n   /**\n    * Blur event listener.\n    */\n   function onBlur()\n   {\n      setFocused(false);\n   }\n\n   /**\n    * Activate listeners.\n    */\n   function activateListeners()\n   {\n      node.addEventListener('focus', onFocus);\n      node.addEventListener('blur', onBlur);\n   }\n\n   /**\n    * Remove listeners.\n    */\n   function removeListeners()\n   {\n      node.removeEventListener('focus', onFocus);\n      node.removeEventListener('blur', onBlur);\n   }\n\n   activateListeners();\n\n   return {\n      /**\n       * @param {import('svelte/store').Writable<boolean>}  newStoreFocused - Update store for focus changes.\n       */\n      update: (newStoreFocused) =>\n      {\n         storeFocused = newStoreFocused;\n         setFocused(localFocused);\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\nexport { alwaysBlur, applyScrolltop, applyStyles, autoBlur, isFocused, resizeObserver };\n//# sourceMappingURL=index.js.map\n","/**\n * Performs linear interpolation between a start & end value by given amount between 0 - 1 inclusive.\n *\n * @param {number}   start - Start value.\n *\n * @param {number}   end - End value.\n *\n * @param {number}   amount - Current amount between 0 - 1 inclusive.\n *\n * @returns {number} Linear interpolated value between start & end.\n */\nfunction lerp(start, end, amount)\n{\n   return (1 - amount) * start + amount * end;\n}\n\nexport { lerp };\n//# sourceMappingURL=index.js.map\n","import { linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { fade, slide } from 'svelte/transition';\n\n/**\n * Provides a rotate transition. For options `easing` is applied to the rotate transition. The default easing is\n * linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easing=linear] - The easing function to apply to the\n *        rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotate(node, options)\n{\n   const easingRotate = options.easing ?? linear;\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const rotateT = easingRotate(t);\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg)`;\n      }\n   };\n}\n\n/**\n * Combines rotate & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingRotate` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * Note: that when reversing the transition that time goes from `1 - 0`, so if specific options are applied for\n * rotating out transition then `end` and `initial` are swapped.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easing=linear] - The easing function to apply to both\n *        slide & fade transitions.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easingFade=linear] - The easing function to apply to\n *        the fade transition.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easingRotate=linear] - The easing function to apply\n *        to the rotate transition.\n *\n * @param {number}      [options.end=0] - End rotation in degrees.\n *\n * @param {number}      [options.initial=0] - Initial rotation in degrees.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction rotateFade(node, options)\n{\n   const easingFade = options.easingFade || options.easing || linear;\n   const easingRotate = options.easingRotate || options.easing || linear;\n\n   const fadeTransition = fade(node);\n\n   const initialDeg = options.initial ?? 0;\n   const endDeg = options.end ?? 0;\n\n   return {\n      delay: options.delay ?? 0,\n      duration: options.duration ?? 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = easingFade(t);\n         const rotateT = easingRotate(t);\n\n         return `transform: rotate(${lerp(initialDeg, endDeg, rotateT)}deg); ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Combines slide & fade transitions into a single transition. For options `easing` this is applied to both transitions,\n * however if provided `easingSlide` and / or `easingFade` will take precedence. The default easing is linear.\n *\n * @param {HTMLElement} node - The transition node.\n *\n * @param {object}      [options] - Optional parameters.\n *\n * @param {number}      [options.delay] - Delay in ms before start of transition.\n *\n * @param {number}      [options.duration] - Total transition length in ms.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easing=linear] - The easing function to apply to both\n *        slide & fade transitions.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easingFade=linear] - The easing function to apply to\n *        the fade transition.\n *\n * @param {import('svelte/transition').EasingFunction}   [options.easingSlide=linear] - The easing function to apply to\n *        the slide transition.\n *\n * @returns {import('svelte/transition').TransitionConfig} Transition config.\n */\nfunction slideFade(node, options)\n{\n   const fadeEasing = options.easingFade || options.easing || linear;\n   const slideEasing = options.easingSlide || options.easing || linear;\n\n   const fadeTransition = fade(node);\n   const slideTransition = slide(node);\n\n   return {\n      delay: options.delay || 0,\n      duration: options.duration || 500,\n      easing: linear,\n      css: (t) =>\n      {\n         const fadeT = fadeEasing(t);\n         const slideT = slideEasing(t);\n         return `${slideTransition.css(slideT, 1 - slideT)}; ${fadeTransition.css(fadeT, 1 - fadeT)}`;\n      }\n   };\n}\n\n/**\n * Converts a Svelte transition to an animation. Both transitions & animations use the same CSS / styles solution and\n * resulting data so wrap the transition function with the signature of an animation.\n *\n * @param {(node: Element, ...rest: any[]) => import('svelte/transition').TransitionConfig} fn -\n *        A Svelte transition function.\n *\n * @returns {(\n *    node: Element,\n *    data: { from: DOMRect, to: DOMRect },\n *    ...rest: any\n * ) => import('svelte/animation').AnimationConfig} - Transition function converted to an animation.\n */\nfunction toAnimation(fn)\n{\n   return (node, animations, ...rest) => fn(node, ...rest);\n}\n\n/**\n * Provides static data useful for handling custom props / options to components that allow dynamic configuration of\n * transitions. This is used in all application shells and components that have configurable transitions.\n *\n * @ignore\n */\nclass TJSDefaultTransition\n{\n   static #options = {};\n\n   static #default = () => void 0;\n\n   /**\n    * @returns {() => undefined} Default empty transition.\n    */\n   static get default() { return this.#default; }\n\n   /**\n    * @returns {{}} Default empty options.\n    */\n   static get options() { return this.#options; }\n}\n\nexport { TJSDefaultTransition, rotate, rotateFade, slideFade, toAnimation };\n//# sourceMappingURL=index.js.map\n","<script>\n   import { createEventDispatcher }    from 'svelte';\n\n   import { applyStyles }              from '@typhonjs-fvtt/runtime/svelte/action/dom';\n   import { TJSDefaultTransition }     from '@typhonjs-fvtt/runtime/svelte/transition';\n   import { isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\n   /** @type {string} */\n   export let background = '#50505080';\n\n   /** @type {boolean} */\n   export let captureInput = true;\n\n   /**\n    * When true any input fires an event `close:glasspane`.\n    *\n    * @type {boolean}\n    */\n   export let closeOnInput = void 0;\n\n   /** @type {string} */\n   export let id = void 0;\n\n   /** @type {boolean} */\n   export let slotSeparate = void 0;\n\n   /** @type {Record<string, string>} */\n   export let styles = void 0;\n\n   /** @type {number} */\n   export let zIndex = Number.MAX_SAFE_INTEGER;\n\n   const dispatch = createEventDispatcher();\n\n   /** @type {HTMLDivElement} */\n   let backgroundEl, containerEl, glassPaneEl;\n\n   $: slotSeparate = typeof slotSeparate === 'boolean' ? slotSeparate : false;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = void 0;\n   export let inTransition = void 0;\n   export let outTransition = void 0;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = TJSDefaultTransition.options;\n   export let outTransitionOptions = TJSDefaultTransition.options;\n\n   // Tracks last transition state.\n   let oldTransition = void 0;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : void 0;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== TJSDefaultTransition.options && isObject(transitionOptions) ?\n       transitionOptions : TJSDefaultTransition.options;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = void 0; }\n\n   // Handle cases if outTransition is unset; assign noop default transition function.\n   $: if (typeof outTransition !== 'function') { outTransition = void 0; }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(inTransitionOptions)) { inTransitionOptions = TJSDefaultTransition.options; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(outTransitionOptions)) { outTransitionOptions = TJSDefaultTransition.options; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Swallows / stops propagation for all events where the event target is not contained by the glass pane element.\n    *\n    * @param {Event} event - The event to swallow.\n    */\n   function swallow(event)\n   {\n      const targetEl = event.target;\n\n      if (targetEl !== glassPaneEl && targetEl !== backgroundEl  && targetEl !== containerEl &&\n        glassPaneEl.contains(targetEl))\n      {\n         return;\n      }\n\n      if (captureInput)\n      {\n         event.preventDefault();\n         event.stopImmediatePropagation();\n      }\n\n      if (event?.type === 'pointerdown' && closeOnInput)\n      {\n         dispatch('close:glasspane');\n      }\n   }\n</script>\n\n<!-- Capture all input -->\n<svelte:window\n        on:contextmenu|capture={swallow}\n        on:dblclick|capture={swallow}\n        on:keydown|capture={swallow}\n        on:keyup|capture={swallow}\n        on:mousedown|capture={swallow}\n        on:mousemove|capture={swallow}\n        on:mouseup|capture={swallow}\n        on:pointerdown|capture={swallow}\n        on:pointermove|capture={swallow}\n        on:pointerup|capture={swallow}\n        on:touchend|capture={swallow}\n        on:touchmove|capture={swallow}\n        on:touchstart|capture={swallow}\n        on:wheel|capture={swallow}\n/>\n\n<div id={id}\n     bind:this={glassPaneEl}\n     class=tjs-glass-pane\n     style:z-index={zIndex}>\n\n   {#if slotSeparate}\n      <div class=tjs-glass-pane-background\n           bind:this={backgroundEl}\n           style:background={background}\n           in:inTransition|global={inTransitionOptions}\n           out:outTransition|global={outTransitionOptions}\n           use:applyStyles={styles} />\n\n      <div class=tjs-glass-pane-container bind:this={containerEl}>\n         <slot />\n      </div>\n   {:else}\n      <div class=tjs-glass-pane-background\n           bind:this={backgroundEl}\n           style:background={background}\n           in:inTransition|global={inTransitionOptions}\n           out:outTransition|global={outTransitionOptions}\n           use:applyStyles={styles} >\n         <slot />\n      </div>\n   {/if}\n</div>\n\n<style>\n   .tjs-glass-pane, .tjs-glass-pane-background , .tjs-glass-pane-container {\n      position: absolute;\n      overflow: hidden;\n\n      height: 100%;\n      width: 100%;\n      max-height: 100%;\n      max-width: 100%;\n   }\n</style>\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { writable } from 'svelte/store';\n\n/**\n * Provides the internal context to all application shells.\n */\nexport class AppShellContextInternal\n{\n   /** @type {InternalAppStores} */\n   #stores;\n\n   constructor()\n   {\n      this.#stores = {\n         elementContent: writable(void 0),\n         elementRoot: writable(void 0)\n      };\n\n      Object.freeze(this.#stores);\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {InternalAppStores} The internal context stores for elementContent / elementRoot\n    */\n   get stores()\n   {\n      return this.#stores;\n   }\n}\n\n/**\n * @typedef {object} InternalAppStores\n *\n * @property {import('svelte/store').Writable<HTMLElement>} elementContent The window content element.\n *\n * @property {import('svelte/store').Writable<HTMLElement>} elementRoot The window root element.\n */\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\nimport { group_outros, transition_out, check_outros } from 'svelte/internal';\n\n/**\n * Provides basic duck typing to determine if the provided object is a HMR ProxyComponent instance or class.\n *\n * @param {*}  comp - Data to check as a HMR proxy component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isHMRProxy(comp)\n{\n   const instanceName = comp?.constructor?.name;\n   if (typeof instanceName === 'string' && (instanceName.startsWith('Proxy<') || instanceName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   const prototypeName = comp?.prototype?.constructor?.name;\n   return typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') ||\n    prototypeName === 'ProxyComponent');\n}\n\n/**\n * Provides basic duck typing to determine if the provided function is a constructor function for a Svelte component.\n *\n * @param {*}  comp - Data to check as a Svelte component.\n *\n * @returns {boolean} Whether basic duck typing succeeds.\n */\nfunction isSvelteComponent(comp)\n{\n   if (comp === null || comp === void 0 || typeof comp !== 'function') { return false; }\n\n   // When using Vite in a developer build the SvelteComponent is wrapped in a ProxyComponent class.\n   // This class doesn't define methods on the prototype, so we must check if the constructor name\n   // starts with `Proxy<` as it provides the wrapped component as `Proxy<_wrapped component name_>`.\n   const prototypeName = comp?.prototype?.constructor?.name;\n   if (typeof prototypeName === 'string' && (prototypeName.startsWith('Proxy<') || prototypeName === 'ProxyComponent'))\n   {\n      return true;\n   }\n\n   return typeof window !== 'undefined' ?\n    typeof comp.prototype.$destroy === 'function' && typeof comp.prototype.$on === 'function' : // client-side\n     typeof comp.render === 'function'; // server-side\n}\n\n/**\n * Validates `config` argument whether it is a valid {@link TJSSvelteConfig}.\n *\n * @param {*}  config - The potential config object to validate.\n *\n * @param {boolean}  [raiseException=false] - If validation fails raise an exception.\n *\n * @returns {boolean} Is the config a valid TJSSvelteConfig.\n *\n * @throws {TypeError}  Any validation error when `raiseException` is enabled.\n */\nfunction isTJSSvelteConfig(config, raiseException = false)\n{\n   if (!isObject(config))\n   {\n      if (raiseException) { throw new TypeError(`isTJSSvelteConfig error: 'config' is not an object.`); }\n      return false;\n   }\n\n   if (!isSvelteComponent(config.class))\n   {\n      if (raiseException)\n      {\n         throw new TypeError(`isTJSSvelteConfig error: 'config.class' is not a Svelte component constructor.`);\n      }\n      return false;\n   }\n\n   return true;\n}\n\n/* eslint-disable */  // jsdoc/valid-types doesn't like the Google closure constructor function. TODO: verify in future eslint-plugin-jsdoc version\n/**\n * @typedef {object} TJSSvelteConfig Defines the TRL / client side configuration object to load a Svelte component.\n *\n * @property {({\n *    new(options: import('svelte').ComponentConstructorOptions):\n *     import('svelte').SvelteComponent | import('svelte').SvelteComponentTyped\n * })} class The Svelte component class / constructor function.\n *\n * @property {HTMLElement | ShadowRoot}   [target=document.body] A {@link HTMLElement} or {@link ShadowRoot} to\n * render to. By default, `document.body` is used as the target if not otherwise defined.\n *\n * @property {HTMLElement} [anchor] A child of `target` to render the component immediately before.\n *\n * @property {() => Record<string, *> | Record<string, *>} [props] Props to pass to the component.\n *\n * @property {() => (Record<string, *> | Map<string, *>) | Map<string, *> | Record<string, *>} [context] The root-level\n * context to pass to the component.\n *\n * @property {boolean}  [hydrate] See description in main Svelte docs\n * {@link https://svelte.dev/docs/client-side-component-api#creating-a-component | Creating a component.}\n *\n * @property {boolean} [intro] If true, will play transitions on initial render, rather than waiting for subsequent\n * state changes.\n*/\n/* eslint-enable */\n\n/**\n * Runs outro transition then destroys Svelte component.\n *\n * Workaround for https://github.com/sveltejs/svelte/issues/4056\n *\n * @param {*}  instance - A Svelte component.\n */\nasync function outroAndDestroy(instance)\n{\n   return new Promise((resolve) =>\n   {\n      if (instance.$$.fragment && instance.$$.fragment.o)\n      {\n         group_outros();\n         transition_out(instance.$$.fragment, 0, 0, () =>\n         {\n            instance.$destroy();\n            resolve();\n         });\n         check_outros();\n      }\n      else\n      {\n         instance.$destroy();\n         resolve();\n      }\n   });\n}\n\n/**\n * Parses a TyphonJS Svelte config object ensuring that classes specified are Svelte components and props are set\n * correctly.\n *\n * @param {object}   config - Svelte config object.\n *\n * @param {*}        [thisArg] - `This` reference to set for invoking any props function.\n *\n * @returns {object} The processed Svelte config object.\n */\nfunction parseTJSSvelteConfig(config, thisArg = void 0)\n{\n   if (!isObject(config))\n   {\n      throw new TypeError(`parseSvelteConfig - 'config' is not an object:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (!isSvelteComponent(config.class))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'class' is not a Svelte component constructor for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.hydrate !== void 0 && typeof config.hydrate !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'hydrate' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.intro !== void 0 && typeof config.intro !== 'boolean')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'intro' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   if (config.target !== void 0 && typeof config.target !== 'string' && !(config.target instanceof HTMLElement) &&\n    !(config.target instanceof ShadowRoot) && !(config.target instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'target' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.anchor !== void 0 && typeof config.anchor !== 'string' && !(config.anchor instanceof HTMLElement) &&\n    !(config.anchor instanceof ShadowRoot) && !(config.anchor instanceof DocumentFragment))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'anchor' is not a string, HTMLElement, ShadowRoot, or DocumentFragment for config:\\n${\n        JSON.stringify(config)}.`);\n   }\n\n   if (config.context !== void 0 && typeof config.context !== 'function' && !(config.context instanceof Map) &&\n    !isObject(config.context))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'context' is not a Map, function or object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate extra TyphonJS options --------------------------------------------------------------------------------\n\n   // `selectorTarget` optionally stores a target element found in main element.\n   if (config.selectorTarget !== void 0 && typeof config.selectorTarget !== 'string')\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'selectorTarget' is not a string for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // `options` stores `injectApp`, `injectEventbus`, and `selectorElement`.\n   if (config.options !== void 0 && !isObject(config.options))\n   {\n      throw new TypeError(\n       `parseSvelteConfig - 'options' is not an object for config:\\n${JSON.stringify(config)}.`);\n   }\n\n   // Validate TyphonJS standard options.\n   if (config.options !== void 0)\n   {\n      if (config.options.injectApp !== void 0 && typeof config.options.injectApp !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectApp' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      if (config.options.injectEventbus !== void 0 && typeof config.options.injectEventbus !== 'boolean')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'options.injectEventbus' is not a boolean for config:\\n${JSON.stringify(config)}.`);\n      }\n\n      // `selectorElement` optionally stores a main element selector to be found in a HTMLElement target.\n      if (config.options.selectorElement !== void 0 && typeof config.options.selectorElement !== 'string')\n      {\n         throw new TypeError(\n          `parseSvelteConfig - 'selectorElement' is not a string for config:\\n${JSON.stringify(config)}.`);\n      }\n   }\n\n   const svelteConfig = { ...config };\n\n   // Delete extra Svelte options.\n   delete svelteConfig.options;\n\n   let externalContext = {};\n\n   // If a context callback function is provided then invoke it with `this` being the Foundry app.\n   // If an object is returned it adds the entries to external context.\n   if (typeof svelteConfig.context === 'function')\n   {\n      const contextFunc = svelteConfig.context;\n      delete svelteConfig.context;\n\n      const result = contextFunc.call(thisArg);\n      if (isObject(result))\n      {\n         externalContext = { ...result };\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'context' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (svelteConfig.context instanceof Map)\n   {\n      externalContext = Object.fromEntries(svelteConfig.context);\n      delete svelteConfig.context;\n   }\n   else if (isObject(svelteConfig.context))\n   {\n      externalContext = svelteConfig.context;\n      delete svelteConfig.context;\n   }\n\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   svelteConfig.props = s_PROCESS_PROPS(svelteConfig.props, thisArg, config);\n\n   // Process children components attaching to external context.\n   if (Array.isArray(svelteConfig.children))\n   {\n      const children = [];\n\n      for (let cntr = 0; cntr < svelteConfig.children.length; cntr++)\n      {\n         const child = svelteConfig.children[cntr];\n\n         if (!isSvelteComponent(child.class))\n         {\n            throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for child[${cntr}] for config:\\n${\n             JSON.stringify(config)}`);\n         }\n\n         child.props = s_PROCESS_PROPS(child.props, thisArg, config);\n\n         children.push(child);\n      }\n\n      if (children.length > 0)\n      {\n         externalContext.children = children;\n      }\n\n      delete svelteConfig.children;\n   }\n   else if (isObject(svelteConfig.children))\n   {\n      if (!isSvelteComponent(svelteConfig.children.class))\n      {\n         throw new Error(`parseSvelteConfig - 'class' is not a Svelte component for children object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n\n      svelteConfig.children.props = s_PROCESS_PROPS(svelteConfig.children.props, thisArg, config);\n\n      externalContext.children = [svelteConfig.children];\n      delete svelteConfig.children;\n   }\n\n   if (!(svelteConfig.context instanceof Map))\n   {\n      svelteConfig.context = new Map();\n   }\n\n   svelteConfig.context.set('#external', externalContext);\n\n   return svelteConfig;\n}\n\n/**\n * Processes Svelte props. Potentially props can be a function to invoke with `thisArg`.\n *\n * @param {object|Function}   props - Svelte props.\n *\n * @param {*}                 thisArg - `This` reference to set for invoking any props function.\n *\n * @param {object}            config - Svelte config\n *\n * @returns {object|void}     Svelte props.\n */\nfunction s_PROCESS_PROPS(props, thisArg, config)\n{\n   // If a props is a function then invoke it with `this` being the Foundry app.\n   // If an object is returned set it as the props.\n   if (typeof props === 'function')\n   {\n      const result = props.call(thisArg);\n      if (isObject(result))\n      {\n         return result;\n      }\n      else\n      {\n         throw new Error(`parseSvelteConfig - 'props' is a function that did not return an object for config:\\n${\n          JSON.stringify(config)}`);\n      }\n   }\n   else if (isObject(props))\n   {\n      return props;\n   }\n   else if (props !== void 0)\n   {\n      throw new Error(\n       `parseSvelteConfig - 'props' is not a function or an object for config:\\n${JSON.stringify(config)}`);\n   }\n\n   return {};\n}\n\nexport { isHMRProxy, isSvelteComponent, isTJSSvelteConfig, outroAndDestroy, parseTJSSvelteConfig };\n//# sourceMappingURL=index.js.map\n","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * A helper to create a set of radio checkbox input elements in a named set.\n * The provided keys are the possible radio values while the provided values are human readable labels.\n *\n * @param {string} name         The radio checkbox field name\n *\n * @param {object} choices      A mapping of radio checkbox values to human readable labels\n *\n * @param {object} options      Options which customize the radio boxes creation\n *\n * @param {string} options.checked    Which key is currently checked?\n *\n * @param {boolean} options.localize  Pass each label through string localization?\n *\n * @returns {string} HTML for radio boxes.\n *\n * @example <caption>The provided input data</caption>\n * let groupName = \"importantChoice\";\n * let choices = {a: \"Choice A\", b: \"Choice B\"};\n * let chosen = \"a\";\n *\n * @example <caption>The template HTML structure</caption>\n * <div class=\"form-group\">\n *   <label>Radio Group Label</label>\n *   <div class=\"form-fields\">\n *     {@html radioBoxes(groupName, choices, { checked: chosen, localize: true})}\n *   </div>\n * </div>\n */\nfunction radioBoxes(name, choices, options)\n{\n   const checked = options['checked'] || null;\n\n   const localize = options['localize'] || false;\n\n   let html = '';\n\n   for (let [key, label] of Object.entries(choices)) // eslint-disable-line prefer-const\n   {\n      if (localize) { label = globalThis.game.i18n.localize(label); }\n      const isChecked = checked === key;\n      html += `<label class=\"checkbox\"><input type=\"radio\" name=\"${name}\" value=\"${key}\" ${isChecked ? \"checked\" : \"\"}> ${label}</label>`;\n   }\n\n   return new globalThis.Handlebars.SafeString(html);\n}\n\n/**\n * Converts the `selectOptions` Handlebars helper to be Svelte compatible. This is useful when initially converting\n * over an app to Svelte and for essential usage to several dialogs that mirror the core Foundry experience. For\n * an example of usage see {@link TJSDocumentOwnership}.\n *\n * A helper to create a set of <option> elements in a <select> block based on a provided dictionary.\n * The provided keys are the option values while the provided values are human-readable labels.\n * This helper supports both single-select and multi-select input fields.\n *\n * @param {object} choices                     A mapping of radio checkbox values to human-readable labels\n *\n * @param {object} options                     Helper options\n *\n * @param {string|string[]} [options.selected] Which key or array of keys that are currently selected?\n *\n * @param {boolean} [options.localize=false]   Pass each label through string localization?\n *\n * @param {string} [options.blank]             Add a blank option as the first option with this label\n *\n * @param {string} [options.nameAttr]          Look up a property in the choice object values to use as the option value\n *\n * @param {string} [options.labelAttr]         Look up a property in the choice object values to use as the option label\n *\n * @param {boolean} [options.inverted=false]   Use the choice object value as the option value, and the key as the label\n *                                             instead of vice-versa\n *\n * @param {boolean} [options.sort=false]       When true sort by label name.\n *\n * @returns {string} The <options> HTML element(s).\n *\n * @example <caption>The provided input data</caption>\n * let choices = {a: 'Choice A', b: 'Choice B'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices { selected: value, localize: true })}\n * </select>\n *\n * @example <caption>The resulting HTML</caption>\n * <select name=\"importantChoice\">\n *   <option value=\"a\" selected>Choice A</option>\n *   <option value=\"b\">Choice B</option>\n * </select>\n *\n * @example <caption>Using inverted</caption>\n * let choices = {'Choice A': 'a', 'Choice B': 'b'};\n * let value = 'a';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, inverted: true })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with objects</caption>\n * let choices = {foo: {key: 'a', label: 'Choice A'}, bar: {key: 'b', label: 'Choice B'}};\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n *\n * @example <caption>Using nameAttr and labelAttr with arrays</caption>\n * let choices = [{key: 'a', label: 'Choice A'}, {key: 'b', label: 'Choice B'}];\n * let value = 'b';\n *\n * @example <caption>The template HTML structure</caption>\n * <select name=\"importantChoice\">\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\n * </select>\n */\nfunction selectOptions(choices, options)\n{\n   const { localize = false, blank = null, sort = false, nameAttr, labelAttr, inverted } = options;\n   let { selected = null } = options;\n\n   selected = selected instanceof Array ? selected.map(String) : [String(selected)];\n\n   // Prepare the choices as an array of objects\n   const selectChoices = [];\n\n   if (choices instanceof Array)\n   {\n      for (const choice of choices)\n      {\n         const name = String(choice[nameAttr]);\n         let label = choice[labelAttr];\n         if (localize) { label = globalThis.game.i18n.localize(label); }\n         selectChoices.push({ name, label });\n      }\n   }\n   else\n   {\n      for (const choice of Object.entries(choices))\n      {\n         const [key, value] = inverted ? choice.reverse() : choice;\n         const name = String(nameAttr ? value[nameAttr] : key);\n         let label = labelAttr ? value[labelAttr] : value;\n         if (localize) { label = globalThis.game.i18n.localize(label); }\n         selectChoices.push({ name, label });\n      }\n   }\n\n   // Sort the array of options\n   if (sort) { selectChoices.sort((a, b) => a.label.localeCompare(b.label)); }\n\n   // Prepend a blank option\n   if (blank !== null)\n   {\n      const label = localize ? globalThis.game.i18n.localize(blank) : blank;\n      selectChoices.unshift({ name: '', label });\n   }\n\n   // Create the HTML\n   let html = '';\n   for (const option of selectChoices)\n   {\n      const label = globalThis.Handlebars.escapeExpression(option.label);\n      const isSelected = selected.includes(option.name);\n      html += `<option value=\"${option.name}\" ${isSelected ? \"selected\" : \"\"}>${label}</option>`;\n   }\n\n   return new globalThis.Handlebars.SafeString(html);\n}\n\n/**\n * Localize a string including variable formatting for input arguments. Provide a string ID which defines the localized\n * template. Variables can be included in the template enclosed in braces and will be substituted using those named\n * keys.\n *\n * @param {string}   stringId - The string ID to translate.\n *\n * @param {object}   [data] - Provided input data.\n *\n * @returns {string} The translated and formatted string\n */\nfunction localize(stringId, data)\n{\n   const result = !isObject(data) ? globalThis.game.i18n.localize(stringId) :\n    globalThis.game.i18n.format(stringId, data);\n\n   return result !== void 0 ? result : '';\n}\n\nexport { localize, radioBoxes, selectOptions };\n//# sourceMappingURL=index.js.map\n","import { derived, get } from 'svelte/store';\n\n/**\n * @external Store\n * @see [Svelte stores](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)\n */\n\n/**\n * Create a store similar to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-writable),\n * but which has its own `set` and `update` methods and can send values back to the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#default-export-writablederived)\n * \n * @param {Store|Store[]} origins One or more stores to derive from. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 1st parameter.\n * @param {!Function} derive The callback to determine the derived value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 2nd parameter.\n * @param {!Function} reflect Called when the derived store gets a new value via its `set` or\n * `update` methods, and determines new values for the origin stores.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#new-parameter-reflect)\n * @param [initial] The new store's initial value. Same as\n * [`derived`](https://svelte.dev/docs#run-time-svelte-store-writable)'s 3rd parameter.\n * \n * @returns {Store} A writable store.\n */\nfunction writableDerived(origins, derive, reflect, initial) {\n\tvar childDerivedSetter, originValues, blockNextDerive = false;\n\tvar reflectOldValues = reflect.length >= 2;\n\tvar wrappedDerive = (got, set, update) => {\n\t\tchildDerivedSetter = set;\n\t\tif (reflectOldValues) {\n\t\t\toriginValues = got;\n\t\t}\n\t\tif (!blockNextDerive) {\n\t\t\tlet returned = derive(got, set, update);\n\t\t\tif (derive.length < 2) {\n\t\t\t\tset(returned);\n\t\t\t} else {\n\t\t\t\treturn returned;\n\t\t\t}\n\t\t}\n\t\tblockNextDerive = false;\n\t};\n\tvar childDerived = derived(origins, wrappedDerive, initial);\n\t\n\tvar singleOrigin = !Array.isArray(origins);\n\tfunction doReflect(reflecting) {\n\t\tvar setWith = reflect(reflecting, originValues);\n\t\tif (singleOrigin) {\n\t\t\tblockNextDerive = true;\n\t\t\torigins.set(setWith);\n\t\t} else {\n\t\t\tsetWith.forEach( (value, i) => {\n\t\t\t\tblockNextDerive = true;\n\t\t\t\torigins[i].set(value);\n\t\t\t} );\n\t\t}\n\t\tblockNextDerive = false;\n\t}\n\t\n\tvar tryingSet = false;\n\tfunction update(fn) {\n\t\tvar isUpdated, mutatedBySubscriptions, oldValue, newValue;\n\t\tif (tryingSet) {\n\t\t\tnewValue = fn( get(childDerived) );\n\t\t\tchildDerivedSetter(newValue);\n\t\t\treturn;\n\t\t}\n\t\tvar unsubscribe = childDerived.subscribe( (value) => {\n\t\t\tif (!tryingSet) {\n\t\t\t\toldValue = value;\n\t\t\t} else if (!isUpdated) {\n\t\t\t\tisUpdated = true;\n\t\t\t} else {\n\t\t\t\tmutatedBySubscriptions = true;\n\t\t\t}\n\t\t} );\n\t\tnewValue = fn(oldValue);\n\t\ttryingSet = true;\n\t\tchildDerivedSetter(newValue);\n\t\tunsubscribe();\n\t\ttryingSet = false;\n\t\tif (mutatedBySubscriptions) {\n\t\t\tnewValue = get(childDerived);\n\t\t}\n\t\tif (isUpdated) {\n\t\t\tdoReflect(newValue);\n\t\t}\n\t}\n\treturn {\n\t\tsubscribe: childDerived.subscribe,\n\t\tset(value) { update( () => value ); },\n\t\tupdate,\n\t};\n}\n\n/**\n * Create a store for a property value in an object contained in another store.\n * [Read more...](https://github.com/PixievoltNo1/svelte-writable-derived#named-export-propertystore)\n * \n * @param {Store} origin The store containing the object to get/set from.\n * @param {string|number|symbol|Array<string|number|symbol>} propName The property to get/set, or a path of\n * properties in nested objects.\n *\n * @returns {Store} A writable store.\n */\nfunction propertyStore(origin, propName) {\n\tif (!Array.isArray(propName)) {\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(object) => object[propName],\n\t\t\t(reflecting, object) => {\n\t\t\t\tobject[propName] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t} else {\n\t\tlet props = propName.concat();\n\t\treturn writableDerived(\n\t\t\torigin,\n\t\t\t(value) => {\n\t\t\t\tfor (let i = 0; i < props.length; ++i) {\n\t\t\t\t\tvalue = value[ props[i] ];\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reflecting, object) => {\n\t\t\t\tlet target = object;\n\t\t\t\tfor (let i = 0; i < props.length - 1; ++i) {\n\t\t\t\t\ttarget = target[ props[i] ];\n\t\t\t\t}\n\t\t\t\ttarget[ props[props.length - 1] ] = reflecting;\n\t\t\t\treturn object;\n\t\t\t},\n\t\t);\n\t}\n}\n\nexport { propertyStore, writableDerived };\n//# sourceMappingURL=index.js.map\n","const EPSILON = 0.000001;\n\nconst IDENTITY_2X2 = new Float32Array([\n    1, 0,\n    0, 1\n]);\n/**\n * A 2x2 Matrix\n */\nclass Mat2 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Mat2}.\n     */\n    static BYTE_LENGTH = 4 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Mat2}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 4:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 4);\n                break;\n            case 1:\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([\n                        v, v,\n                        v, v\n                    ]);\n                }\n                else {\n                    super(v, 0, 4);\n                }\n                break;\n            default:\n                super(IDENTITY_2X2);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Mat2.str(this);`\n     */\n    get str() {\n        return Mat2.str(this);\n    }\n    //===================\n    // Instance methods\n    //===================\n    /**\n     * Copy the values from another {@link Mat2} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity matrix\n     * Equivalent to Mat2.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this.set(IDENTITY_2X2);\n        return this;\n    }\n    /**\n     * Multiplies this {@link Mat2} against another one\n     * Equivalent to `Mat2.multiply(this, this, b);`\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `this`\n     */\n    multiply(b) {\n        return Mat2.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Mat2.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Transpose this {@link Mat2}\n     * Equivalent to `Mat2.transpose(this, this);`\n     *\n     * @returns `this`\n     */\n    transpose() {\n        return Mat2.transpose(this, this);\n    }\n    /**\n     * Inverts this {@link Mat2}\n     * Equivalent to `Mat4.invert(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        return Mat2.invert(this, this);\n    }\n    /**\n     * Scales this {@link Mat2} by the dimensions in the given vec3 not using vectorization\n     * Equivalent to `Mat2.scale(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to scale the matrix by\n     * @returns `this`\n     */\n    scale(v) {\n        return Mat2.scale(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat2} by the given angle around the given axis\n     * Equivalent to `Mat2.rotate(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    rotate(rad) {\n        return Mat2.rotate(this, this, rad);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, identity {@link Mat2}\n     * @category Static\n     *\n     * @returns A new {@link Mat2}\n     */\n    static create() {\n        return new Mat2();\n    }\n    /**\n     * Creates a new {@link Mat2} initialized with values from an existing matrix\n     * @category Static\n     *\n     * @param a - Matrix to clone\n     * @returns A new {@link Mat2}\n     */\n    static clone(a) {\n        return new Mat2(a);\n    }\n    /**\n     * Copy the values from one {@link Mat2} to another\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - Matrix to copy\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Create a new {@link Mat2} with the given values\n     * @category Static\n     *\n     * @param values - Matrix components\n     * @returns A new {@link Mat2}\n     */\n    static fromValues(...values) {\n        return new Mat2(...values);\n    }\n    /**\n     * Set the components of a {@link Mat2} to the given values\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @param values - Matrix components\n     * @returns `out`\n     */\n    static set(out, ...values) {\n        out[0] = values[0];\n        out[1] = values[1];\n        out[2] = values[2];\n        out[3] = values[3];\n        return out;\n    }\n    /**\n     * Set a {@link Mat2} to the identity matrix\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        return out;\n    }\n    /**\n     * Transpose the values of a {@link Mat2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static transpose(out, a) {\n        // If we are transposing ourselves we can skip a few steps but have to cache\n        // some values\n        if (out === a) {\n            let a1 = a[1];\n            out[1] = a[2];\n            out[2] = a1;\n        }\n        else {\n            out[0] = a[0];\n            out[1] = a[2];\n            out[2] = a[1];\n            out[3] = a[3];\n        }\n        return out;\n    }\n    /**\n     * Inverts a {@link Mat2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        // Calculate the determinant\n        let det = a0 * a3 - a2 * a1;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = a3 * det;\n        out[1] = -a1 * det;\n        out[2] = -a2 * det;\n        out[3] = a0 * det;\n        return out;\n    }\n    /**\n     * Calculates the adjugate of a {@link Mat2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static adjoint(out, a) {\n        // Caching this value is necessary if out == a\n        const a0 = a[0];\n        out[0] = a[3];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = a0;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a {@link Mat2}\n     * @category Static\n     *\n     * @param a - the source matrix\n     * @returns determinant of a\n     */\n    static determinant(a) {\n        return a[0] * a[3] - a[2] * a[1];\n    }\n    /**\n     * Adds two {@link Mat2}'s\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        return out;\n    }\n    /**\n     * Alias for {@link Mat2.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiplies two {@link Mat2}s\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        out[0] = a0 * b0 + a2 * b1;\n        out[1] = a1 * b0 + a3 * b1;\n        out[2] = a0 * b2 + a2 * b3;\n        out[3] = a1 * b2 + a3 * b3;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat2.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Rotates a {@link Mat2} by the given angle\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotate(out, a, rad) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = a0 * c + a2 * s;\n        out[1] = a1 * c + a3 * s;\n        out[2] = a0 * -s + a2 * c;\n        out[3] = a1 * -s + a3 * c;\n        return out;\n    }\n    /**\n     * Scales the {@link Mat2} by the dimensions in the given {@link Vec2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param v - the {@link Vec2} to scale the matrix by\n     * @returns `out`\n     **/\n    static scale(out, a, v) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const v0 = v[0];\n        const v1 = v[1];\n        out[0] = a0 * v0;\n        out[1] = a1 * v0;\n        out[2] = a2 * v1;\n        out[3] = a3 * v1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat2} from a given angle around a given axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat2.identity(dest);\n     *     mat2.rotate(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - {@link Mat2} receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromRotation(out, rad) {\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = c;\n        out[1] = s;\n        out[2] = -s;\n        out[3] = c;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat2} from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat2.identity(dest);\n     *     mat2.scale(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat2} receiving operation result\n     * @param v - Scaling vector\n     * @returns `out`\n     */\n    static fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = v[1];\n        return out;\n    }\n    /**\n     * Returns Frobenius norm of a {@link Mat2}\n     * @category Static\n     *\n     * @param a - the matrix to calculate Frobenius norm of\n     * @returns Frobenius norm\n     */\n    static frob(a) {\n        return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3]);\n    }\n    /**\n     * Multiply each element of a {@link Mat2} by a scalar.\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param b - amount to scale the matrix's elements by\n     * @returns `out`\n     */\n    static multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        return out;\n    }\n    /**\n     * Adds two {@link Mat2}'s after multiplying each element of the second operand by a scalar value.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b's elements by before adding\n     * @returns `out`\n     */\n    static multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        return out;\n    }\n    /**\n     * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n     * @category Static\n     *\n     * @param L - the lower triangular matrix\n     * @param D - the diagonal matrix\n     * @param U - the upper triangular matrix\n     * @param a - the input matrix to factorize\n     */\n    static LDU(L, D, U, a) {\n        L[2] = a[2] / a[0];\n        U[0] = a[0];\n        U[1] = a[1];\n        U[3] = a[3] - L[2] * U[1];\n        return [L, D, U];\n    }\n    /**\n     * Returns whether or not two {@link Mat2}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3]);\n    }\n    /**\n     * Returns whether or not two {@link Mat2}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)));\n    }\n    /**\n     * Returns a string representation of a {@link Mat2}\n     * @category Static\n     *\n     * @param a - matrix to represent as a string\n     * @returns string representation of the matrix\n     */\n    static str(a) {\n        return `Mat2(${a.join(', ')})`;\n    }\n}\n// Instance method alias assignments\nMat2.prototype.mul = Mat2.prototype.multiply;\n// Static method alias assignments\nMat2.mul = Mat2.multiply;\nMat2.sub = Mat2.subtract;\n\nconst IDENTITY_2X3 = new Float32Array([\n    1, 0,\n    0, 1,\n    0, 0,\n]);\n/**\n * A 2x3 Matrix\n */\nclass Mat2d extends Float32Array {\n    /**\n     * The number of bytes in a {@link Mat2d}.\n     */\n    static BYTE_LENGTH = 6 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Mat2}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 6:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 6);\n                break;\n            case 1:\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([\n                        v, v,\n                        v, v,\n                        v, v\n                    ]);\n                }\n                else {\n                    super(v, 0, 6);\n                }\n                break;\n            default:\n                super(IDENTITY_2X3);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Mat2d.str(this);`\n     */\n    get str() {\n        return Mat2d.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Mat2d} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity matrix\n     * Equivalent to Mat2d.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this.set(IDENTITY_2X3);\n        return this;\n    }\n    /**\n     * Multiplies this {@link Mat2d} against another one\n     * Equivalent to `Mat2d.multiply(this, this, b);`\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `this`\n     */\n    multiply(b) {\n        return Mat2d.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Mat2d.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Translate this {@link Mat2d} by the given vector\n     * Equivalent to `Mat2d.translate(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to translate by\n     * @returns `this`\n     */\n    translate(v) {\n        return Mat2d.translate(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat2d} by the given angle around the given axis\n     * Equivalent to `Mat2d.rotate(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    rotate(rad) {\n        return Mat2d.rotate(this, this, rad);\n    }\n    /**\n     * Scales this {@link Mat2d} by the dimensions in the given vec3 not using vectorization\n     * Equivalent to `Mat2d.scale(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to scale the matrix by\n     * @returns `this`\n     */\n    scale(v) {\n        return Mat2d.scale(this, this, v);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, identity {@link Mat2d}\n     * @category Static\n     *\n     * @returns A new {@link Mat2d}\n     */\n    static create() {\n        return new Mat2d();\n    }\n    /**\n     * Creates a new {@link Mat2d} initialized with values from an existing matrix\n     * @category Static\n     *\n     * @param a - Matrix to clone\n     * @returns A new {@link Mat2d}\n     */\n    static clone(a) {\n        return new Mat2d(a);\n    }\n    /**\n     * Copy the values from one {@link Mat2d} to another\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - Matrix to copy\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        return out;\n    }\n    /**\n     * Create a new {@link Mat2d} with the given values\n     * @category Static\n     *\n     * @param values - Matrix components\n     * @returns A new {@link Mat2d}\n     */\n    static fromValues(...values) {\n        return new Mat2d(...values);\n    }\n    /**\n     * Set the components of a {@link Mat2d} to the given values\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @param values - Matrix components\n     * @returns `out`\n     */\n    static set(out, ...values) {\n        out[0] = values[0];\n        out[1] = values[1];\n        out[2] = values[2];\n        out[3] = values[3];\n        out[4] = values[4];\n        out[5] = values[5];\n        return out;\n    }\n    /**\n     * Set a {@link Mat2d} to the identity matrix\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = 0;\n        out[5] = 0;\n        return out;\n    }\n    /**\n     * Inverts a {@link Mat2d}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const aa = a[0];\n        const ab = a[1];\n        const ac = a[2];\n        const ad = a[3];\n        const atx = a[4];\n        const aty = a[5];\n        let det = aa * ad - ab * ac;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = ad * det;\n        out[1] = -ab * det;\n        out[2] = -ac * det;\n        out[3] = aa * det;\n        out[4] = (ac * aty - ad * atx) * det;\n        out[5] = (ab * atx - aa * aty) * det;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a {@link Mat2d}\n     * @category Static\n     *\n     * @param a - the source matrix\n     * @returns determinant of a\n     */\n    static determinant(a) {\n        return a[0] * a[3] - a[1] * a[2];\n    }\n    /**\n     * Adds two {@link Mat2d}'s\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        out[4] = a[4] - b[4];\n        out[5] = a[5] - b[5];\n        return out;\n    }\n    /**\n     * Alias for {@link Mat2d.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiplies two {@link Mat2d}s\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        out[0] = a0 * b0 + a2 * b1;\n        out[1] = a1 * b0 + a3 * b1;\n        out[2] = a0 * b2 + a2 * b3;\n        out[3] = a1 * b2 + a3 * b3;\n        out[4] = a0 * b4 + a2 * b5 + a4;\n        out[5] = a1 * b4 + a3 * b5 + a5;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat2d.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Translate a {@link Mat2d} by the given vector\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to translate\n     * @param v - vector to translate by\n     * @returns `out`\n     */\n    static translate(out, a, v) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const v0 = v[0];\n        const v1 = v[1];\n        out[0] = a0;\n        out[1] = a1;\n        out[2] = a2;\n        out[3] = a3;\n        out[4] = a0 * v0 + a2 * v1 + a4;\n        out[5] = a1 * v0 + a3 * v1 + a5;\n        return out;\n    }\n    /**\n     * Rotates a {@link Mat2d} by the given angle\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotate(out, a, rad) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = a0 * c + a2 * s;\n        out[1] = a1 * c + a3 * s;\n        out[2] = a0 * -s + a2 * c;\n        out[3] = a1 * -s + a3 * c;\n        out[4] = a4;\n        out[5] = a5;\n        return out;\n    }\n    /**\n     * Scales the {@link Mat2d} by the dimensions in the given {@link Vec2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param v - the {@link Vec2} to scale the matrix by\n     * @returns `out`\n     **/\n    static scale(out, a, v) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const v0 = v[0];\n        const v1 = v[1];\n        out[0] = a0 * v0;\n        out[1] = a1 * v0;\n        out[2] = a2 * v1;\n        out[3] = a3 * v1;\n        out[4] = a4;\n        out[5] = a5;\n        return out;\n    }\n    // TODO: Got to fromRotation\n    /**\n     * Creates a {@link Mat2d} from a vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     Mat2d.identity(dest);\n     *     Mat2d.translate(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat2d} receiving operation result\n     * @param v - Translation vector\n     * @returns `out`\n     */\n    static fromTranslation(out, v) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = v[0];\n        out[5] = v[1];\n        return out;\n    }\n    /**\n     * Creates a {@link Mat2d} from a given angle around a given axis\n     * This is equivalent to (but much faster than):\n     *\n     *     Mat2d.identity(dest);\n     *     Mat2d.rotate(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - {@link Mat2d} receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromRotation(out, rad) {\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = c;\n        out[1] = s;\n        out[2] = -s;\n        out[3] = c;\n        out[4] = 0;\n        out[5] = 0;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat2d} from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     Mat2d.identity(dest);\n     *     Mat2d.scale(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat2d} receiving operation result\n     * @param v - Scaling vector\n     * @returns `out`\n     */\n    static fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = v[1];\n        out[4] = 0;\n        out[5] = 0;\n        return out;\n    }\n    /**\n     * Returns Frobenius norm of a {@link Mat2d}\n     * @category Static\n     *\n     * @param a - the matrix to calculate Frobenius norm of\n     * @returns Frobenius norm\n     */\n    static frob(a) {\n        return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3] + a[4] * a[4] + a[5] * a[5] + 1);\n    }\n    /**\n     * Multiply each element of a {@link Mat2d} by a scalar.\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param b - amount to scale the matrix's elements by\n     * @returns `out`\n     */\n    static multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        return out;\n    }\n    /**\n     * Adds two {@link Mat2d}'s after multiplying each element of the second operand by a scalar value.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b's elements by before adding\n     * @returns `out`\n     */\n    static multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        out[4] = a[4] + b[4] * scale;\n        out[5] = a[5] + b[5] * scale;\n        return out;\n    }\n    /**\n     * Returns whether or not two {@link Mat2d}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3] &&\n            a[4] === b[4] &&\n            a[5] === b[5]);\n    }\n    /**\n     * Returns whether or not two {@link Mat2d}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)));\n    }\n    /**\n     * Returns a string representation of a {@link Mat2d}\n     * @category Static\n     *\n     * @param a - matrix to represent as a string\n     * @returns string representation of the matrix\n     */\n    static str(a) {\n        return `Mat2d(${a.join(', ')})`;\n    }\n}\n// Static method alias assignments\nMat2d.mul = Mat2d.multiply;\nMat2d.sub = Mat2d.subtract;\n\nconst IDENTITY_3X3 = new Float32Array([\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1,\n]);\n/**\n * A 3x3 Matrix\n */\nclass Mat3 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Mat3}.\n     */\n    static BYTE_LENGTH = 9 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Mat3}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 9:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 9);\n                break;\n            case 1:\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([\n                        v, v, v,\n                        v, v, v,\n                        v, v, v\n                    ]);\n                }\n                else {\n                    super(v, 0, 9);\n                }\n                break;\n            default:\n                super(IDENTITY_3X3);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Mat3.str(this);`\n     */\n    get str() {\n        return Mat3.str(this);\n    }\n    //===================\n    // Instance methods\n    //===================\n    /**\n     * Copy the values from another {@link Mat3} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity matrix\n     * Equivalent to Mat3.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this.set(IDENTITY_3X3);\n        return this;\n    }\n    /**\n     * Multiplies this {@link Mat3} against another one\n     * Equivalent to `Mat3.multiply(this, this, b);`\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `this`\n     */\n    multiply(b) {\n        return Mat3.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Mat3.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Transpose this {@link Mat3}\n     * Equivalent to `Mat3.transpose(this, this);`\n     *\n     * @returns `this`\n     */\n    transpose() {\n        return Mat3.transpose(this, this);\n    }\n    /**\n     * Inverts this {@link Mat3}\n     * Equivalent to `Mat4.invert(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        return Mat3.invert(this, this);\n    }\n    /**\n     * Translate this {@link Mat3} by the given vector\n     * Equivalent to `Mat3.translate(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to translate by\n     * @returns `this`\n     */\n    translate(v) {\n        return Mat3.translate(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat3} by the given angle around the given axis\n     * Equivalent to `Mat3.rotate(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    rotate(rad) {\n        return Mat3.rotate(this, this, rad);\n    }\n    /**\n     * Scales this {@link Mat3} by the dimensions in the given vec3 not using vectorization\n     * Equivalent to `Mat3.scale(this, this, v);`\n     *\n     * @param v - The {@link Vec2} to scale the matrix by\n     * @returns `this`\n     */\n    scale(v) {\n        return Mat3.scale(this, this, v);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, identity {@link Mat3}\n     * @category Static\n     *\n     * @returns A new {@link Mat3}\n     */\n    static create() {\n        return new Mat3();\n    }\n    /**\n     * Creates a new {@link Mat3} initialized with values from an existing matrix\n     * @category Static\n     *\n     * @param a - Matrix to clone\n     * @returns A new {@link Mat3}\n     */\n    static clone(a) {\n        return new Mat3(a);\n    }\n    /**\n     * Copy the values from one {@link Mat3} to another\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - Matrix to copy\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        return out;\n    }\n    /**\n     * Create a new {@link Mat3} with the given values\n     * @category Static\n     *\n     * @param values - Matrix components\n     * @returns A new {@link Mat3}\n     */\n    static fromValues(...values) {\n        return new Mat3(...values);\n    }\n    /**\n     * Set the components of a {@link Mat3} to the given values\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @param values - Matrix components\n     * @returns `out`\n     */\n    static set(out, ...values) {\n        out[0] = values[0];\n        out[1] = values[1];\n        out[2] = values[2];\n        out[3] = values[3];\n        out[4] = values[4];\n        out[5] = values[5];\n        out[6] = values[6];\n        out[7] = values[7];\n        out[8] = values[8];\n        return out;\n    }\n    /**\n     * Set a {@link Mat3} to the identity matrix\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 1;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Transpose the values of a {@link Mat3}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static transpose(out, a) {\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\n        if (out === a) {\n            const a01 = a[1], a02 = a[2], a12 = a[5];\n            out[1] = a[3];\n            out[2] = a[6];\n            out[3] = a01;\n            out[5] = a[7];\n            out[6] = a02;\n            out[7] = a12;\n        }\n        else {\n            out[0] = a[0];\n            out[1] = a[3];\n            out[2] = a[6];\n            out[3] = a[1];\n            out[4] = a[4];\n            out[5] = a[7];\n            out[6] = a[2];\n            out[7] = a[5];\n            out[8] = a[8];\n        }\n        return out;\n    }\n    /**\n     * Inverts a {@link Mat3}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const a00 = a[0], a01 = a[1], a02 = a[2];\n        const a10 = a[3], a11 = a[4], a12 = a[5];\n        const a20 = a[6], a21 = a[7], a22 = a[8];\n        const b01 = a22 * a11 - a12 * a21;\n        const b11 = -a22 * a10 + a12 * a20;\n        const b21 = a21 * a10 - a11 * a20;\n        // Calculate the determinant\n        let det = a00 * b01 + a01 * b11 + a02 * b21;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = b01 * det;\n        out[1] = (-a22 * a01 + a02 * a21) * det;\n        out[2] = (a12 * a01 - a02 * a11) * det;\n        out[3] = b11 * det;\n        out[4] = (a22 * a00 - a02 * a20) * det;\n        out[5] = (-a12 * a00 + a02 * a10) * det;\n        out[6] = b21 * det;\n        out[7] = (-a21 * a00 + a01 * a20) * det;\n        out[8] = (a11 * a00 - a01 * a10) * det;\n        return out;\n    }\n    /**\n     * Calculates the adjugate of a {@link Mat3}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static adjoint(out, a) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        out[0] = a11 * a22 - a12 * a21;\n        out[1] = a02 * a21 - a01 * a22;\n        out[2] = a01 * a12 - a02 * a11;\n        out[3] = a12 * a20 - a10 * a22;\n        out[4] = a00 * a22 - a02 * a20;\n        out[5] = a02 * a10 - a00 * a12;\n        out[6] = a10 * a21 - a11 * a20;\n        out[7] = a01 * a20 - a00 * a21;\n        out[8] = a00 * a11 - a01 * a10;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a {@link Mat3}\n     * @category Static\n     *\n     * @param a - the source matrix\n     * @returns determinant of a\n     */\n    static determinant(a) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        return (a00 * (a22 * a11 - a12 * a21) +\n            a01 * (-a22 * a10 + a12 * a20) +\n            a02 * (a21 * a10 - a11 * a20));\n    }\n    /**\n     * Adds two {@link Mat3}'s\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        out[6] = a[6] + b[6];\n        out[7] = a[7] + b[7];\n        out[8] = a[8] + b[8];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        out[4] = a[4] - b[4];\n        out[5] = a[5] - b[5];\n        out[6] = a[6] - b[6];\n        out[7] = a[7] - b[7];\n        out[8] = a[8] - b[8];\n        return out;\n    }\n    /**\n     * Alias for {@link Mat3.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiplies two {@link Mat3}s\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        let b0 = b[0];\n        let b1 = b[1];\n        let b2 = b[2];\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20;\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21;\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22;\n        b0 = b[3];\n        b1 = b[4];\n        b2 = b[5];\n        out[3] = b0 * a00 + b1 * a10 + b2 * a20;\n        out[4] = b0 * a01 + b1 * a11 + b2 * a21;\n        out[5] = b0 * a02 + b1 * a12 + b2 * a22;\n        b0 = b[6];\n        b1 = b[7];\n        b2 = b[8];\n        out[6] = b0 * a00 + b1 * a10 + b2 * a20;\n        out[7] = b0 * a01 + b1 * a11 + b2 * a21;\n        out[8] = b0 * a02 + b1 * a12 + b2 * a22;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat3.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Translate a {@link Mat3} by the given vector\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to translate\n     * @param v - vector to translate by\n     * @returns `out`\n     */\n    static translate(out, a, v) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        const x = v[0];\n        const y = v[1];\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a10;\n        out[4] = a11;\n        out[5] = a12;\n        out[6] = x * a00 + y * a10 + a20;\n        out[7] = x * a01 + y * a11 + a21;\n        out[8] = x * a02 + y * a12 + a22;\n        return out;\n    }\n    /**\n     * Rotates a {@link Mat3} by the given angle\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotate(out, a, rad) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a10 = a[3];\n        const a11 = a[4];\n        const a12 = a[5];\n        const a20 = a[6];\n        const a21 = a[7];\n        const a22 = a[8];\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = c * a00 + s * a10;\n        out[1] = c * a01 + s * a11;\n        out[2] = c * a02 + s * a12;\n        out[3] = c * a10 - s * a00;\n        out[4] = c * a11 - s * a01;\n        out[5] = c * a12 - s * a02;\n        out[6] = a20;\n        out[7] = a21;\n        out[8] = a22;\n        return out;\n    }\n    /**\n     * Scales the {@link Mat3} by the dimensions in the given {@link Vec2}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param v - the {@link Vec2} to scale the matrix by\n     * @returns `out`\n     **/\n    static scale(out, a, v) {\n        const x = v[0];\n        const y = v[1];\n        out[0] = x * a[0];\n        out[1] = x * a[1];\n        out[2] = x * a[2];\n        out[3] = y * a[3];\n        out[4] = y * a[4];\n        out[5] = y * a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        return out;\n    }\n    /**\n     * Creates a {@link Mat3} from a vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat3.identity(dest);\n     *     mat3.translate(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat3} receiving operation result\n     * @param v - Translation vector\n     * @returns `out`\n     */\n    static fromTranslation(out, v) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 1;\n        out[5] = 0;\n        out[6] = v[0];\n        out[7] = v[1];\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat3} from a given angle around a given axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat3.identity(dest);\n     *     mat3.rotate(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - {@link Mat3} receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromRotation(out, rad) {\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        out[0] = c;\n        out[1] = s;\n        out[2] = 0;\n        out[3] = -s;\n        out[4] = c;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat3} from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat3.identity(dest);\n     *     mat3.scale(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat3} receiving operation result\n     * @param v - Scaling vector\n     * @returns `out`\n     */\n    static fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = v[1];\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Copies the upper-left 3x3 values of a {@link Mat2d} into the given\n     * {@link Mat3}.\n     * @category Static\n     *\n     * @param out - the receiving 3x3 matrix\n     * @param a - the source 2x3 matrix\n     * @returns `out`\n     */\n    static fromMat2d(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = 0;\n        out[3] = a[2];\n        out[4] = a[3];\n        out[5] = 0;\n        out[6] = a[4];\n        out[7] = a[5];\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Calculates a {@link Mat3} from the given quaternion\n     *\n     * @param out - {@link Mat3} receiving operation result\n     * @param q - {@link Quat} to create matrix from\n     * @returns `out`\n     */\n    static fromQuat(out, q) {\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const yx = y * x2;\n        const yy = y * y2;\n        const zx = z * x2;\n        const zy = z * y2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[0] = 1 - yy - zz;\n        out[3] = yx - wz;\n        out[6] = zx + wy;\n        out[1] = yx + wz;\n        out[4] = 1 - xx - zz;\n        out[7] = zy - wx;\n        out[2] = zx - wy;\n        out[5] = zy + wx;\n        out[8] = 1 - xx - yy;\n        return out;\n    }\n    /**\n     * Copies the upper-left 3x3 values of a {@link Mat4} into the given\n     * {@link Mat3}.\n     * @category Static\n     *\n     * @param out - the receiving 3x3 matrix\n     * @param a - the source 4x4 matrix\n     * @returns `out`\n     */\n    static fromMat4(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[4];\n        out[4] = a[5];\n        out[5] = a[6];\n        out[6] = a[8];\n        out[7] = a[9];\n        out[8] = a[10];\n        return out;\n    }\n    /**\n     * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n     * @category Static\n     *\n     * @param {mat3} out mat3 receiving operation result\n     * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n     * @returns `out`\n     */\n    static normalFromMat4(out, a) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a03 = a[3];\n        const a10 = a[4];\n        const a11 = a[5];\n        const a12 = a[6];\n        const a13 = a[7];\n        const a20 = a[8];\n        const a21 = a[9];\n        const a22 = a[10];\n        const a23 = a[11];\n        const a30 = a[12];\n        const a31 = a[13];\n        const a32 = a[14];\n        const a33 = a[15];\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n        // Calculate the determinant\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n        return out;\n    }\n    /**\n     * Generates a 2D projection matrix with the given bounds\n     * @category Static\n     *\n     * @param out mat3 frustum matrix will be written into\n     * @param width Width of your gl context\n     * @param height Height of gl context\n     * @returns `out`\n     */\n    static projection(out, width, height) {\n        out[0] = 2 / width;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = -2 / height;\n        out[5] = 0;\n        out[6] = -1;\n        out[7] = 1;\n        out[8] = 1;\n        return out;\n    }\n    /**\n     * Returns Frobenius norm of a {@link Mat3}\n     * @category Static\n     *\n     * @param a - the matrix to calculate Frobenius norm of\n     * @returns Frobenius norm\n     */\n    static frob(a) {\n        return Math.sqrt(a[0] * a[0] +\n            a[1] * a[1] +\n            a[2] * a[2] +\n            a[3] * a[3] +\n            a[4] * a[4] +\n            a[5] * a[5] +\n            a[6] * a[6] +\n            a[7] * a[7] +\n            a[8] * a[8]);\n    }\n    /**\n     * Multiply each element of a {@link Mat3} by a scalar.\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param b - amount to scale the matrix's elements by\n     * @returns `out`\n     */\n    static multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        out[6] = a[6] * b;\n        out[7] = a[7] * b;\n        out[8] = a[8] * b;\n        return out;\n    }\n    /**\n     * Adds two {@link Mat3}'s after multiplying each element of the second operand by a scalar value.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b's elements by before adding\n     * @returns `out`\n     */\n    static multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        out[4] = a[4] + b[4] * scale;\n        out[5] = a[5] + b[5] * scale;\n        out[6] = a[6] + b[6] * scale;\n        out[7] = a[7] + b[7] * scale;\n        out[8] = a[8] + b[8] * scale;\n        return out;\n    }\n    /**\n     * Returns whether or not two {@link Mat3}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3] &&\n            a[4] === b[4] &&\n            a[5] === b[5] &&\n            a[6] === b[6] &&\n            a[7] === b[7] &&\n            a[8] === b[8]);\n    }\n    /**\n     * Returns whether or not two {@link Mat3}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const a6 = a[6];\n        const a7 = a[7];\n        const a8 = a[8];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        const b6 = b[6];\n        const b7 = b[7];\n        const b8 = b[8];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8)));\n    }\n    /**\n     * Returns a string representation of a {@link Mat3}\n     * @category Static\n     *\n     * @param a - matrix to represent as a string\n     * @returns string representation of the matrix\n     */\n    static str(a) {\n        return `Mat3(${a.join(', ')})`;\n    }\n}\n// Instance method alias assignments\nMat3.prototype.mul = Mat3.prototype.multiply;\n// Static method alias assignments\nMat3.mul = Mat3.multiply;\nMat3.sub = Mat3.subtract;\n\nconst IDENTITY_4X4 = new Float32Array([\n    1, 0, 0, 0,\n    0, 1, 0, 0,\n    0, 0, 1, 0,\n    0, 0, 0, 1,\n]);\n/**\n * A 4x4 Matrix\n */\nclass Mat4 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Mat4}.\n     */\n    static BYTE_LENGTH = 16 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Mat4}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 16:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 16);\n                break;\n            case 1:\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([\n                        v, v, v, v,\n                        v, v, v, v,\n                        v, v, v, v,\n                        v, v, v, v\n                    ]);\n                }\n                else {\n                    super(v, 0, 16);\n                }\n                break;\n            default:\n                super(IDENTITY_4X4);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Mat4.str(this);`\n     */\n    get str() {\n        return Mat4.str(this);\n    }\n    //===================\n    // Instance methods\n    //===================\n    /**\n     * Copy the values from another {@link Mat4} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity matrix\n     * Equivalent to Mat4.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this.set(IDENTITY_4X4);\n        return this;\n    }\n    /**\n     * Multiplies this {@link Mat4} against another one\n     * Equivalent to `Mat4.multiply(this, this, b);`\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `this`\n     */\n    multiply(b) {\n        return Mat4.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Mat4.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Transpose this {@link Mat4}\n     * Equivalent to `Mat4.transpose(this, this);`\n     *\n     * @returns `this`\n     */\n    transpose() {\n        return Mat4.transpose(this, this);\n    }\n    /**\n     * Inverts this {@link Mat4}\n     * Equivalent to `Mat4.invert(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        return Mat4.invert(this, this);\n    }\n    /**\n     * Translate this {@link Mat4} by the given vector\n     * Equivalent to `Mat4.translate(this, this, v);`\n     *\n     * @param v - The {@link Vec3} to translate by\n     * @returns `this`\n     */\n    translate(v) {\n        return Mat4.translate(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat4} by the given angle around the given axis\n     * Equivalent to `Mat4.rotate(this, this, rad, axis);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @param axis - the axis to rotate around\n     * @returns `out`\n     */\n    rotate(rad, axis) {\n        return Mat4.rotate(this, this, rad, axis);\n    }\n    /**\n     * Scales this {@link Mat4} by the dimensions in the given vec3 not using vectorization\n     * Equivalent to `Mat4.scale(this, this, v);`\n     *\n     * @param v - The {@link Vec3} to scale the matrix by\n     * @returns `this`\n     */\n    scale(v) {\n        return Mat4.scale(this, this, v);\n    }\n    /**\n     * Rotates this {@link Mat4} by the given angle around the X axis\n     * Equivalent to `Mat4.rotateX(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `this`\n     */\n    rotateX(rad) {\n        return Mat4.rotateX(this, this, rad);\n    }\n    /**\n     * Rotates this {@link Mat4} by the given angle around the Y axis\n     * Equivalent to `Mat4.rotateY(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `this`\n     */\n    rotateY(rad) {\n        return Mat4.rotateY(this, this, rad);\n    }\n    /**\n     * Rotates this {@link Mat4} by the given angle around the Z axis\n     * Equivalent to `Mat4.rotateZ(this, this, rad);`\n     *\n     * @param rad - the angle to rotate the matrix by\n     * @returns `this`\n     */\n    rotateZ(rad) {\n        return Mat4.rotateZ(this, this, rad);\n    }\n    /**\n     * Generates a perspective projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n     * which matches WebGL/OpenGL's clip volume.\n     * Passing null/undefined/no value for far will generate infinite projection matrix.\n     * Equivalent to `Mat4.perspectiveNO(this, fovy, aspect, near, far);`\n     *\n     * @param fovy - Vertical field of view in radians\n     * @param aspect - Aspect ratio. typically viewport width/height\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum, can be null or Infinity\n     * @returns `this`\n     */\n    perspectiveNO(fovy, aspect, near, far) {\n        return Mat4.perspectiveNO(this, fovy, aspect, near, far);\n    }\n    /**\n     * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n     * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n     * Passing null/undefined/no value for far will generate infinite projection matrix.\n     * Equivalent to `Mat4.perspectiveZO(this, fovy, aspect, near, far);`\n     *\n     * @param fovy - Vertical field of view in radians\n     * @param aspect - Aspect ratio. typically viewport width/height\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum, can be null or Infinity\n     * @returns `this`\n     */\n    perspectiveZO(fovy, aspect, near, far) {\n        return Mat4.perspectiveZO(this, fovy, aspect, near, far);\n    }\n    /**\n     * Generates a orthogonal projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n     * which matches WebGL/OpenGL's clip volume.\n     * Equivalent to `Mat4.orthoNO(this, left, right, bottom, top, near, far);`\n     *\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `this`\n     */\n    orthoNO(left, right, bottom, top, near, far) {\n        return Mat4.orthoNO(this, left, right, bottom, top, near, far);\n    }\n    /**\n     * Generates a orthogonal projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n     * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n     * Equivalent to `Mat4.orthoZO(this, left, right, bottom, top, near, far);`\n     *\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `this`\n     */\n    orthoZO(left, right, bottom, top, near, far) {\n        return Mat4.orthoZO(this, left, right, bottom, top, near, far);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, identity {@link Mat4}\n     * @category Static\n     *\n     * @returns A new {@link Mat4}\n     */\n    static create() {\n        return new Mat4();\n    }\n    /**\n     * Creates a new {@link Mat4} initialized with values from an existing matrix\n     * @category Static\n     *\n     * @param a - Matrix to clone\n     * @returns A new {@link Mat4}\n     */\n    static clone(a) {\n        return new Mat4(a);\n    }\n    /**\n     * Copy the values from one {@link Mat4} to another\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - Matrix to copy\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        out[8] = a[8];\n        out[9] = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n        return out;\n    }\n    /**\n     * Create a new mat4 with the given values\n     * @category Static\n     *\n     * @param values - Matrix components\n     * @returns A new {@link Mat4}\n     */\n    static fromValues(...values) {\n        return new Mat4(...values);\n    }\n    /**\n     * Set the components of a mat4 to the given values\n     * @category Static\n     *\n     * @param out - The receiving matrix\n     * @param values - Matrix components\n     * @returns `out`\n     */\n    static set(out, ...values) {\n        out[0] = values[0];\n        out[1] = values[1];\n        out[2] = values[2];\n        out[3] = values[3];\n        out[4] = values[4];\n        out[5] = values[5];\n        out[6] = values[6];\n        out[7] = values[7];\n        out[8] = values[8];\n        out[9] = values[9];\n        out[10] = values[10];\n        out[11] = values[11];\n        out[12] = values[12];\n        out[13] = values[13];\n        out[14] = values[14];\n        out[15] = values[15];\n        return out;\n    }\n    /**\n     * Set a {@link Mat4} to the identity matrix\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = 1;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 1;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Transpose the values of a {@link Mat4}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static transpose(out, a) {\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\n        if (out === a) {\n            const a01 = a[1], a02 = a[2], a03 = a[3];\n            const a12 = a[6], a13 = a[7];\n            const a23 = a[11];\n            out[1] = a[4];\n            out[2] = a[8];\n            out[3] = a[12];\n            out[4] = a01;\n            out[6] = a[9];\n            out[7] = a[13];\n            out[8] = a02;\n            out[9] = a12;\n            out[11] = a[14];\n            out[12] = a03;\n            out[13] = a13;\n            out[14] = a23;\n        }\n        else {\n            out[0] = a[0];\n            out[1] = a[4];\n            out[2] = a[8];\n            out[3] = a[12];\n            out[4] = a[1];\n            out[5] = a[5];\n            out[6] = a[9];\n            out[7] = a[13];\n            out[8] = a[2];\n            out[9] = a[6];\n            out[10] = a[10];\n            out[11] = a[14];\n            out[12] = a[3];\n            out[13] = a[7];\n            out[14] = a[11];\n            out[15] = a[15];\n        }\n        return out;\n    }\n    /**\n     * Inverts a {@link Mat4}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n        // Calculate the determinant\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n        if (!det) {\n            return null;\n        }\n        det = 1.0 / det;\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n        return out;\n    }\n    /**\n     * Calculates the adjugate of a {@link Mat4}\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the source matrix\n     * @returns `out`\n     */\n    static adjoint(out, a) {\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        const b00 = a00 * a11 - a01 * a10;\n        const b01 = a00 * a12 - a02 * a10;\n        const b02 = a00 * a13 - a03 * a10;\n        const b03 = a01 * a12 - a02 * a11;\n        const b04 = a01 * a13 - a03 * a11;\n        const b05 = a02 * a13 - a03 * a12;\n        const b06 = a20 * a31 - a21 * a30;\n        const b07 = a20 * a32 - a22 * a30;\n        const b08 = a20 * a33 - a23 * a30;\n        const b09 = a21 * a32 - a22 * a31;\n        const b10 = a21 * a33 - a23 * a31;\n        const b11 = a22 * a33 - a23 * a32;\n        out[0] = a11 * b11 - a12 * b10 + a13 * b09;\n        out[1] = a02 * b10 - a01 * b11 - a03 * b09;\n        out[2] = a31 * b05 - a32 * b04 + a33 * b03;\n        out[3] = a22 * b04 - a21 * b05 - a23 * b03;\n        out[4] = a12 * b08 - a10 * b11 - a13 * b07;\n        out[5] = a00 * b11 - a02 * b08 + a03 * b07;\n        out[6] = a32 * b02 - a30 * b05 - a33 * b01;\n        out[7] = a20 * b05 - a22 * b02 + a23 * b01;\n        out[8] = a10 * b10 - a11 * b08 + a13 * b06;\n        out[9] = a01 * b08 - a00 * b10 - a03 * b06;\n        out[10] = a30 * b04 - a31 * b02 + a33 * b00;\n        out[11] = a21 * b02 - a20 * b04 - a23 * b00;\n        out[12] = a11 * b07 - a10 * b09 - a12 * b06;\n        out[13] = a00 * b09 - a01 * b07 + a02 * b06;\n        out[14] = a31 * b01 - a30 * b03 - a32 * b00;\n        out[15] = a20 * b03 - a21 * b01 + a22 * b00;\n        return out;\n    }\n    /**\n     * Calculates the determinant of a {@link Mat4}\n     * @category Static\n     *\n     * @param a - the source matrix\n     * @returns determinant of a\n     */\n    static determinant(a) {\n        const a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3];\n        const a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];\n        const a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];\n        const a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n        const b0 = a00 * a11 - a01 * a10;\n        const b1 = a00 * a12 - a02 * a10;\n        const b2 = a01 * a12 - a02 * a11;\n        const b3 = a20 * a31 - a21 * a30;\n        const b4 = a20 * a32 - a22 * a30;\n        const b5 = a21 * a32 - a22 * a31;\n        const b6 = a00 * b5 - a01 * b4 + a02 * b3;\n        const b7 = a10 * b5 - a11 * b4 + a12 * b3;\n        const b8 = a20 * b2 - a21 * b1 + a22 * b0;\n        const b9 = a30 * b2 - a31 * b1 + a32 * b0;\n        // Calculate the determinant\n        return a13 * b6 - a03 * b7 + a33 * b8 - a23 * b9;\n    }\n    /**\n     * Multiplies two {@link Mat4}s\n     * @category Static\n     *\n     * @param out - The receiving Matrix\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a03 = a[3];\n        const a10 = a[4];\n        const a11 = a[5];\n        const a12 = a[6];\n        const a13 = a[7];\n        const a20 = a[8];\n        const a21 = a[9];\n        const a22 = a[10];\n        const a23 = a[11];\n        const a30 = a[12];\n        const a31 = a[13];\n        const a32 = a[14];\n        const a33 = a[15];\n        // Cache only the current line of the second matrix\n        let b0 = b[0];\n        let b1 = b[1];\n        let b2 = b[2];\n        let b3 = b[3];\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = b[4];\n        b1 = b[5];\n        b2 = b[6];\n        b3 = b[7];\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = b[8];\n        b1 = b[9];\n        b2 = b[10];\n        b3 = b[11];\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        b0 = b[12];\n        b1 = b[13];\n        b2 = b[14];\n        b3 = b[15];\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat4.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Translate a {@link Mat4} by the given vector\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to translate\n     * @param v - vector to translate by\n     * @returns `out`\n     */\n    static translate(out, a, v) {\n        const x = v[0];\n        const y = v[1];\n        const z = v[2];\n        if (a === out) {\n            out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n            out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n            out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n            out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n        }\n        else {\n            const a00 = a[0];\n            const a01 = a[1];\n            const a02 = a[2];\n            const a03 = a[3];\n            const a10 = a[4];\n            const a11 = a[5];\n            const a12 = a[6];\n            const a13 = a[7];\n            const a20 = a[8];\n            const a21 = a[9];\n            const a22 = a[10];\n            const a23 = a[11];\n            out[0] = a00;\n            out[1] = a01;\n            out[2] = a02;\n            out[3] = a03;\n            out[4] = a10;\n            out[5] = a11;\n            out[6] = a12;\n            out[7] = a13;\n            out[8] = a20;\n            out[9] = a21;\n            out[10] = a22;\n            out[11] = a23;\n            out[12] = a00 * x + a10 * y + a20 * z + a[12];\n            out[13] = a01 * x + a11 * y + a21 * z + a[13];\n            out[14] = a02 * x + a12 * y + a22 * z + a[14];\n            out[15] = a03 * x + a13 * y + a23 * z + a[15];\n        }\n        return out;\n    }\n    /**\n     * Scales the {@link Mat4} by the dimensions in the given {@link Vec3} not using vectorization\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param v - the {@link Vec3} to scale the matrix by\n     * @returns `out`\n     **/\n    static scale(out, a, v) {\n        const x = v[0];\n        const y = v[1];\n        const z = v[2];\n        out[0] = a[0] * x;\n        out[1] = a[1] * x;\n        out[2] = a[2] * x;\n        out[3] = a[3] * x;\n        out[4] = a[4] * y;\n        out[5] = a[5] * y;\n        out[6] = a[6] * y;\n        out[7] = a[7] * y;\n        out[8] = a[8] * z;\n        out[9] = a[9] * z;\n        out[10] = a[10] * z;\n        out[11] = a[11] * z;\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n        return out;\n    }\n    /**\n     * Rotates a {@link Mat4} by the given angle around the given axis\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @param axis - the axis to rotate around\n     * @returns `out`\n     */\n    static rotate(out, a, rad, axis) {\n        let x = axis[0];\n        let y = axis[1];\n        let z = axis[2];\n        let len = Math.sqrt(x * x + y * y + z * z);\n        if (len < EPSILON) {\n            return null;\n        }\n        len = 1 / len;\n        x *= len;\n        y *= len;\n        z *= len;\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        const t = 1 - c;\n        const a00 = a[0];\n        const a01 = a[1];\n        const a02 = a[2];\n        const a03 = a[3];\n        const a10 = a[4];\n        const a11 = a[5];\n        const a12 = a[6];\n        const a13 = a[7];\n        const a20 = a[8];\n        const a21 = a[9];\n        const a22 = a[10];\n        const a23 = a[11];\n        // Construct the elements of the rotation matrix\n        const b00 = x * x * t + c;\n        const b01 = y * x * t + z * s;\n        const b02 = z * x * t - y * s;\n        const b10 = x * y * t - z * s;\n        const b11 = y * y * t + c;\n        const b12 = z * y * t + x * s;\n        const b20 = x * z * t + y * s;\n        const b21 = y * z * t - x * s;\n        const b22 = z * z * t + c;\n        // Perform rotation-specific matrix multiplication\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged last row\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        }\n        return out;\n    }\n    /**\n     * Rotates a matrix by the given angle around the X axis\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotateX(out, a, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        let a10 = a[4];\n        let a11 = a[5];\n        let a12 = a[6];\n        let a13 = a[7];\n        let a20 = a[8];\n        let a21 = a[9];\n        let a22 = a[10];\n        let a23 = a[11];\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged rows\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        }\n        // Perform axis-specific matrix multiplication\n        out[4] = a10 * c + a20 * s;\n        out[5] = a11 * c + a21 * s;\n        out[6] = a12 * c + a22 * s;\n        out[7] = a13 * c + a23 * s;\n        out[8] = a20 * c - a10 * s;\n        out[9] = a21 * c - a11 * s;\n        out[10] = a22 * c - a12 * s;\n        out[11] = a23 * c - a13 * s;\n        return out;\n    }\n    /**\n     * Rotates a matrix by the given angle around the Y axis\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotateY(out, a, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        let a00 = a[0];\n        let a01 = a[1];\n        let a02 = a[2];\n        let a03 = a[3];\n        let a20 = a[8];\n        let a21 = a[9];\n        let a22 = a[10];\n        let a23 = a[11];\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged rows\n            out[4] = a[4];\n            out[5] = a[5];\n            out[6] = a[6];\n            out[7] = a[7];\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        }\n        // Perform axis-specific matrix multiplication\n        out[0] = a00 * c - a20 * s;\n        out[1] = a01 * c - a21 * s;\n        out[2] = a02 * c - a22 * s;\n        out[3] = a03 * c - a23 * s;\n        out[8] = a00 * s + a20 * c;\n        out[9] = a01 * s + a21 * c;\n        out[10] = a02 * s + a22 * c;\n        out[11] = a03 * s + a23 * c;\n        return out;\n    }\n    /**\n     * Rotates a matrix by the given angle around the Z axis\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to rotate\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static rotateZ(out, a, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        let a00 = a[0];\n        let a01 = a[1];\n        let a02 = a[2];\n        let a03 = a[3];\n        let a10 = a[4];\n        let a11 = a[5];\n        let a12 = a[6];\n        let a13 = a[7];\n        if (a !== out) {\n            // If the source and destination differ, copy the unchanged last row\n            out[8] = a[8];\n            out[9] = a[9];\n            out[10] = a[10];\n            out[11] = a[11];\n            out[12] = a[12];\n            out[13] = a[13];\n            out[14] = a[14];\n            out[15] = a[15];\n        }\n        // Perform axis-specific matrix multiplication\n        out[0] = a00 * c + a10 * s;\n        out[1] = a01 * c + a11 * s;\n        out[2] = a02 * c + a12 * s;\n        out[3] = a03 * c + a13 * s;\n        out[4] = a10 * c - a00 * s;\n        out[5] = a11 * c - a01 * s;\n        out[6] = a12 * c - a02 * s;\n        out[7] = a13 * c - a03 * s;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat4} from a vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat4} receiving operation result\n     * @param v - Translation vector\n     * @returns `out`\n     */\n    static fromTranslation(out, v) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = 1;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 1;\n        out[11] = 0;\n        out[12] = v[0];\n        out[13] = v[1];\n        out[14] = v[2];\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat4} from a vector scaling\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.scale(dest, dest, vec);\n     * @category Static\n     *\n     * @param out - {@link Mat4} receiving operation result\n     * @param v - Scaling vector\n     * @returns `out`\n     */\n    static fromScaling(out, v) {\n        out[0] = v[0];\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = v[1];\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = v[2];\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a {@link Mat4} from a given angle around a given axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotate(dest, dest, rad, axis);\n     * @category Static\n     *\n     * @param out - {@link Mat4} receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @param axis - the axis to rotate around\n     * @returns `out`\n     */\n    static fromRotation(out, rad, axis) {\n        let x = axis[0];\n        let y = axis[1];\n        let z = axis[2];\n        let len = Math.sqrt(x * x + y * y + z * z);\n        if (len < EPSILON) {\n            return null;\n        }\n        len = 1 / len;\n        x *= len;\n        y *= len;\n        z *= len;\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        const t = 1 - c;\n        // Perform rotation-specific matrix multiplication\n        out[0] = x * x * t + c;\n        out[1] = y * x * t + z * s;\n        out[2] = z * x * t - y * s;\n        out[3] = 0;\n        out[4] = x * y * t - z * s;\n        out[5] = y * y * t + c;\n        out[6] = z * y * t + x * s;\n        out[7] = 0;\n        out[8] = x * z * t + y * s;\n        out[9] = y * z * t - x * s;\n        out[10] = z * z * t + c;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from the given angle around the X axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotateX(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromXRotation(out, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        // Perform axis-specific matrix multiplication\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = c;\n        out[6] = s;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = -s;\n        out[10] = c;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from the given angle around the Y axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotateY(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromYRotation(out, rad) {\n        let s = Math.sin(rad);\n        let c = Math.cos(rad);\n        // Perform axis-specific matrix multiplication\n        out[0] = c;\n        out[1] = 0;\n        out[2] = -s;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = 1;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = s;\n        out[9] = 0;\n        out[10] = c;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from the given angle around the Z axis\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.rotateZ(dest, dest, rad);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param rad - the angle to rotate the matrix by\n     * @returns `out`\n     */\n    static fromZRotation(out, rad) {\n        const s = Math.sin(rad);\n        const c = Math.cos(rad);\n        // Perform axis-specific matrix multiplication\n        out[0] = c;\n        out[1] = s;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = -s;\n        out[5] = c;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 1;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a quaternion rotation and vector translation\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, vec);\n     *     let quatMat = mat4.create();\n     *     quat4.toMat4(quat, quatMat);\n     *     mat4.multiply(dest, quatMat);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param q - Rotation quaternion\n     * @param v - Translation vector\n     * @returns `out`\n     */\n    static fromRotationTranslation(out, q, v) {\n        // Quaternion math\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[0] = 1 - (yy + zz);\n        out[1] = xy + wz;\n        out[2] = xz - wy;\n        out[3] = 0;\n        out[4] = xy - wz;\n        out[5] = 1 - (xx + zz);\n        out[6] = yz + wx;\n        out[7] = 0;\n        out[8] = xz + wy;\n        out[9] = yz - wx;\n        out[10] = 1 - (xx + yy);\n        out[11] = 0;\n        out[12] = v[0];\n        out[13] = v[1];\n        out[14] = v[2];\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Sets a {@link Mat4} from a {@link Quat2}.\n     * @category Static\n     *\n     * @param out - Matrix\n     * @param a - Dual Quaternion\n     * @returns `out`\n     */\n    static fromQuat2(out, a) {\n        let translation = [0, 0, 0];\n        const bx = -a[0];\n        const by = -a[1];\n        const bz = -a[2];\n        const bw = a[3];\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        let magnitude = bx * bx + by * by + bz * bz + bw * bw;\n        //Only scale if it makes sense\n        if (magnitude > 0) {\n            translation[0] = ((ax * bw + aw * bx + ay * bz - az * by) * 2) / magnitude;\n            translation[1] = ((ay * bw + aw * by + az * bx - ax * bz) * 2) / magnitude;\n            translation[2] = ((az * bw + aw * bz + ax * by - ay * bx) * 2) / magnitude;\n        }\n        else {\n            translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n            translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n            translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n        }\n        Mat4.fromRotationTranslation(out, a, translation);\n        return out;\n    }\n    /**\n     * Returns the translation vector component of a transformation\n     * matrix. If a matrix is built with fromRotationTranslation,\n     * the returned vector will be the same as the translation vector\n     * originally supplied.\n     * @category Static\n     *\n     * @param  {vec3} out Vector to receive translation component\n     * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n     * @return {vec3} out\n     */\n    static getTranslation(out, mat) {\n        out[0] = mat[12];\n        out[1] = mat[13];\n        out[2] = mat[14];\n        return out;\n    }\n    /**\n     * Returns the scaling factor component of a transformation\n     * matrix. If a matrix is built with fromRotationTranslationScale\n     * with a normalized Quaternion paramter, the returned vector will be\n     * the same as the scaling vector\n     * originally supplied.\n     * @category Static\n     *\n     * @param  {vec3} out Vector to receive scaling factor component\n     * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n     * @return {vec3} out\n     */\n    static getScaling(out, mat) {\n        const m11 = mat[0];\n        const m12 = mat[1];\n        const m13 = mat[2];\n        const m21 = mat[4];\n        const m22 = mat[5];\n        const m23 = mat[6];\n        const m31 = mat[8];\n        const m32 = mat[9];\n        const m33 = mat[10];\n        out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n        out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n        out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n        return out;\n    }\n    /**\n     * Returns a quaternion representing the rotational component\n     * of a transformation matrix. If a matrix is built with\n     * fromRotationTranslation, the returned quaternion will be the\n     * same as the quaternion originally supplied.\n     * @category Static\n     *\n     * @param out - Quaternion to receive the rotation component\n     * @param mat - Matrix to be decomposed (input)\n     * @return `out`\n     */\n    static getRotation(out, mat) {\n        Mat4.getScaling(tmpVec3$1, mat);\n        const is1 = 1 / tmpVec3$1[0];\n        const is2 = 1 / tmpVec3$1[1];\n        const is3 = 1 / tmpVec3$1[2];\n        const sm11 = mat[0] * is1;\n        const sm12 = mat[1] * is2;\n        const sm13 = mat[2] * is3;\n        const sm21 = mat[4] * is1;\n        const sm22 = mat[5] * is2;\n        const sm23 = mat[6] * is3;\n        const sm31 = mat[8] * is1;\n        const sm32 = mat[9] * is2;\n        const sm33 = mat[10] * is3;\n        const trace = sm11 + sm22 + sm33;\n        let S = 0;\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        }\n        else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        }\n        else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        }\n        else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n        return out;\n    }\n    /**\n     * Decomposes a transformation matrix into its rotation, translation\n     * and scale components. Returns only the rotation component\n     * @category Static\n     *\n     * @param out_r - Quaternion to receive the rotation component\n     * @param out_t - Vector to receive the translation vector\n     * @param out_s - Vector to receive the scaling factor\n     * @param mat - Matrix to be decomposed (input)\n     * @returns `out_r`\n     */\n    static decompose(out_r, out_t, out_s, mat) {\n        out_t[0] = mat[12];\n        out_t[1] = mat[13];\n        out_t[2] = mat[14];\n        const m11 = mat[0];\n        const m12 = mat[1];\n        const m13 = mat[2];\n        const m21 = mat[4];\n        const m22 = mat[5];\n        const m23 = mat[6];\n        const m31 = mat[8];\n        const m32 = mat[9];\n        const m33 = mat[10];\n        out_s[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n        out_s[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n        out_s[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n        const is1 = 1 / out_s[0];\n        const is2 = 1 / out_s[1];\n        const is3 = 1 / out_s[2];\n        const sm11 = m11 * is1;\n        const sm12 = m12 * is2;\n        const sm13 = m13 * is3;\n        const sm21 = m21 * is1;\n        const sm22 = m22 * is2;\n        const sm23 = m23 * is3;\n        const sm31 = m31 * is1;\n        const sm32 = m32 * is2;\n        const sm33 = m33 * is3;\n        const trace = sm11 + sm22 + sm33;\n        let S = 0;\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out_r[3] = 0.25 * S;\n            out_r[0] = (sm23 - sm32) / S;\n            out_r[1] = (sm31 - sm13) / S;\n            out_r[2] = (sm12 - sm21) / S;\n        }\n        else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out_r[3] = (sm23 - sm32) / S;\n            out_r[0] = 0.25 * S;\n            out_r[1] = (sm12 + sm21) / S;\n            out_r[2] = (sm31 + sm13) / S;\n        }\n        else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out_r[3] = (sm31 - sm13) / S;\n            out_r[0] = (sm12 + sm21) / S;\n            out_r[1] = 0.25 * S;\n            out_r[2] = (sm23 + sm32) / S;\n        }\n        else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out_r[3] = (sm12 - sm21) / S;\n            out_r[0] = (sm31 + sm13) / S;\n            out_r[1] = (sm23 + sm32) / S;\n            out_r[2] = 0.25 * S;\n        }\n        return out_r;\n    }\n    /**\n     * Creates a matrix from a quaternion rotation, vector translation and vector scale\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, vec);\n     *     let quatMat = mat4.create();\n     *     quat4.toMat4(quat, quatMat);\n     *     mat4.multiply(dest, quatMat);\n     *     mat4.scale(dest, scale);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param q - Rotation quaternion\n     * @param v - Translation vector\n     * @param s - Scaling vector\n     * @returns `out`\n     */\n    static fromRotationTranslationScale(out, q, v, s) {\n        // Quaternion math\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        const sx = s[0];\n        const sy = s[1];\n        const sz = s[2];\n        out[0] = (1 - (yy + zz)) * sx;\n        out[1] = (xy + wz) * sx;\n        out[2] = (xz - wy) * sx;\n        out[3] = 0;\n        out[4] = (xy - wz) * sy;\n        out[5] = (1 - (xx + zz)) * sy;\n        out[6] = (yz + wx) * sy;\n        out[7] = 0;\n        out[8] = (xz + wy) * sz;\n        out[9] = (yz - wx) * sz;\n        out[10] = (1 - (xx + yy)) * sz;\n        out[11] = 0;\n        out[12] = v[0];\n        out[13] = v[1];\n        out[14] = v[2];\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n     * This is equivalent to (but much faster than):\n     *\n     *     mat4.identity(dest);\n     *     mat4.translate(dest, vec);\n     *     mat4.translate(dest, origin);\n     *     let quatMat = mat4.create();\n     *     quat4.toMat4(quat, quatMat);\n     *     mat4.multiply(dest, quatMat);\n     *     mat4.scale(dest, scale)\n     *     mat4.translate(dest, negativeOrigin);\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param q - Rotation quaternion\n     * @param v - Translation vector\n     * @param s - Scaling vector\n     * @param o - The origin vector around which to scale and rotate\n     * @returns `out`\n     */\n    static fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n        // Quaternion math\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const xy = x * y2;\n        const xz = x * z2;\n        const yy = y * y2;\n        const yz = y * z2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        const sx = s[0];\n        const sy = s[1];\n        const sz = s[2];\n        const ox = o[0];\n        const oy = o[1];\n        const oz = o[2];\n        const out0 = (1 - (yy + zz)) * sx;\n        const out1 = (xy + wz) * sx;\n        const out2 = (xz - wy) * sx;\n        const out4 = (xy - wz) * sy;\n        const out5 = (1 - (xx + zz)) * sy;\n        const out6 = (yz + wx) * sy;\n        const out8 = (xz + wy) * sz;\n        const out9 = (yz - wx) * sz;\n        const out10 = (1 - (xx + yy)) * sz;\n        out[0] = out0;\n        out[1] = out1;\n        out[2] = out2;\n        out[3] = 0;\n        out[4] = out4;\n        out[5] = out5;\n        out[6] = out6;\n        out[7] = 0;\n        out[8] = out8;\n        out[9] = out9;\n        out[10] = out10;\n        out[11] = 0;\n        out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n        out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n        out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Calculates a 4x4 matrix from the given quaternion\n     * @category Static\n     *\n     * @param out - mat4 receiving operation result\n     * @param q - Quaternion to create matrix from\n     * @returns `out`\n     */\n    static fromQuat(out, q) {\n        const x = q[0];\n        const y = q[1];\n        const z = q[2];\n        const w = q[3];\n        const x2 = x + x;\n        const y2 = y + y;\n        const z2 = z + z;\n        const xx = x * x2;\n        const yx = y * x2;\n        const yy = y * y2;\n        const zx = z * x2;\n        const zy = z * y2;\n        const zz = z * z2;\n        const wx = w * x2;\n        const wy = w * y2;\n        const wz = w * z2;\n        out[0] = 1 - yy - zz;\n        out[1] = yx + wz;\n        out[2] = zx - wy;\n        out[3] = 0;\n        out[4] = yx - wz;\n        out[5] = 1 - xx - zz;\n        out[6] = zy + wx;\n        out[7] = 0;\n        out[8] = zx + wy;\n        out[9] = zy - wx;\n        out[10] = 1 - xx - yy;\n        out[11] = 0;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = 0;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Generates a frustum matrix with the given bounds\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `out`\n     */\n    static frustum(out, left, right, bottom, top, near, far) {\n        const rl = 1 / (right - left);\n        const tb = 1 / (top - bottom);\n        const nf = 1 / (near - far);\n        out[0] = near * 2 * rl;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = near * 2 * tb;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = (right + left) * rl;\n        out[9] = (top + bottom) * tb;\n        out[10] = (far + near) * nf;\n        out[11] = -1;\n        out[12] = 0;\n        out[13] = 0;\n        out[14] = far * near * 2 * nf;\n        out[15] = 0;\n        return out;\n    }\n    /**\n     * Generates a perspective projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n     * which matches WebGL/OpenGL's clip volume.\n     * Passing null/undefined/no value for far will generate infinite projection matrix.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param fovy - Vertical field of view in radians\n     * @param aspect - Aspect ratio. typically viewport width/height\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum, can be null or Infinity\n     * @returns `out`\n     */\n    static perspectiveNO(out, fovy, aspect, near, far) {\n        const f = 1.0 / Math.tan(fovy / 2);\n        out[0] = f / aspect;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = f;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[11] = -1;\n        out[12] = 0;\n        out[13] = 0;\n        out[15] = 0;\n        if (far != null && far !== Infinity) {\n            const nf = 1 / (near - far);\n            out[10] = (far + near) * nf;\n            out[14] = 2 * far * near * nf;\n        }\n        else {\n            out[10] = -1;\n            out[14] = -2 * near;\n        }\n        return out;\n    }\n    /**\n     * Alias for {@link Mat4.perspectiveNO}\n     * @category Static\n     * @deprecated Use {@link Mat4.perspectiveNO} or {@link Mat4.perspectiveZO} explicitly\n     */\n    static perspective(out, fovy, aspect, near, far) { return out; }\n    /**\n     * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n     * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n     * Passing null/undefined/no value for far will generate infinite projection matrix.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param fovy - Vertical field of view in radians\n     * @param aspect - Aspect ratio. typically viewport width/height\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum, can be null or Infinity\n     * @returns `out`\n     */\n    static perspectiveZO(out, fovy, aspect, near, far) {\n        const f = 1.0 / Math.tan(fovy / 2);\n        out[0] = f / aspect;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = f;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[11] = -1;\n        out[12] = 0;\n        out[13] = 0;\n        out[15] = 0;\n        if (far != null && far !== Infinity) {\n            const nf = 1 / (near - far);\n            out[10] = far * nf;\n            out[14] = far * near * nf;\n        }\n        else {\n            out[10] = -1;\n            out[14] = -near;\n        }\n        return out;\n    }\n    /**\n     * Generates a perspective projection matrix with the given field of view.\n     * This is primarily useful for generating projection matrices to be used\n     * with the still experiemental WebVR API.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param fov - Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `out`\n     * @deprecated\n     */\n    static perspectiveFromFieldOfView(out, fov, near, far) {\n        const upTan = Math.tan((fov.upDegrees * Math.PI) / 180.0);\n        const downTan = Math.tan((fov.downDegrees * Math.PI) / 180.0);\n        const leftTan = Math.tan((fov.leftDegrees * Math.PI) / 180.0);\n        const rightTan = Math.tan((fov.rightDegrees * Math.PI) / 180.0);\n        const xScale = 2.0 / (leftTan + rightTan);\n        const yScale = 2.0 / (upTan + downTan);\n        out[0] = xScale;\n        out[1] = 0.0;\n        out[2] = 0.0;\n        out[3] = 0.0;\n        out[4] = 0.0;\n        out[5] = yScale;\n        out[6] = 0.0;\n        out[7] = 0.0;\n        out[8] = -((leftTan - rightTan) * xScale * 0.5);\n        out[9] = (upTan - downTan) * yScale * 0.5;\n        out[10] = far / (near - far);\n        out[11] = -1.0;\n        out[12] = 0.0;\n        out[13] = 0.0;\n        out[14] = (far * near) / (near - far);\n        out[15] = 0.0;\n        return out;\n    }\n    /**\n     * Generates a orthogonal projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n     * which matches WebGL/OpenGL's clip volume.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `out`\n     */\n    static orthoNO(out, left, right, bottom, top, near, far) {\n        const lr = 1 / (left - right);\n        const bt = 1 / (bottom - top);\n        const nf = 1 / (near - far);\n        out[0] = -2 * lr;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = -2 * bt;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = 2 * nf;\n        out[11] = 0;\n        out[12] = (left + right) * lr;\n        out[13] = (top + bottom) * bt;\n        out[14] = (far + near) * nf;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Alias for {@link Mat4.orthoNO}\n     * @category Static\n     * @deprecated Use {@link Mat4.orthoNO} or {@link Mat4.orthoZO} explicitly\n     */\n    static ortho(out, left, right, bottom, top, near, far) { return out; }\n    /**\n     * Generates a orthogonal projection matrix with the given bounds.\n     * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n     * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param left - Left bound of the frustum\n     * @param right - Right bound of the frustum\n     * @param bottom - Bottom bound of the frustum\n     * @param top - Top bound of the frustum\n     * @param near - Near bound of the frustum\n     * @param far - Far bound of the frustum\n     * @returns `out`\n     */\n    static orthoZO(out, left, right, bottom, top, near, far) {\n        const lr = 1 / (left - right);\n        const bt = 1 / (bottom - top);\n        const nf = 1 / (near - far);\n        out[0] = -2 * lr;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 0;\n        out[4] = 0;\n        out[5] = -2 * bt;\n        out[6] = 0;\n        out[7] = 0;\n        out[8] = 0;\n        out[9] = 0;\n        out[10] = nf;\n        out[11] = 0;\n        out[12] = (left + right) * lr;\n        out[13] = (top + bottom) * bt;\n        out[14] = near * nf;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Generates a look-at matrix with the given eye position, focal point, and up axis.\n     * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param eye - Position of the viewer\n     * @param center - Point the viewer is looking at\n     * @param up - vec3 pointing up\n     * @returns `out`\n     */\n    static lookAt(out, eye, center, up) {\n        const eyex = eye[0];\n        const eyey = eye[1];\n        const eyez = eye[2];\n        const upx = up[0];\n        const upy = up[1];\n        const upz = up[2];\n        const centerx = center[0];\n        const centery = center[1];\n        const centerz = center[2];\n        if (Math.abs(eyex - centerx) < EPSILON &&\n            Math.abs(eyey - centery) < EPSILON &&\n            Math.abs(eyez - centerz) < EPSILON) {\n            return Mat4.identity(out);\n        }\n        let z0 = eyex - centerx;\n        let z1 = eyey - centery;\n        let z2 = eyez - centerz;\n        let len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n        let x0 = upy * z2 - upz * z1;\n        let x1 = upz * z0 - upx * z2;\n        let x2 = upx * z1 - upy * z0;\n        len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n        if (!len) {\n            x0 = 0;\n            x1 = 0;\n            x2 = 0;\n        }\n        else {\n            len = 1 / len;\n            x0 *= len;\n            x1 *= len;\n            x2 *= len;\n        }\n        let y0 = z1 * x2 - z2 * x1;\n        let y1 = z2 * x0 - z0 * x2;\n        let y2 = z0 * x1 - z1 * x0;\n        len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n        if (!len) {\n            y0 = 0;\n            y1 = 0;\n            y2 = 0;\n        }\n        else {\n            len = 1 / len;\n            y0 *= len;\n            y1 *= len;\n            y2 *= len;\n        }\n        out[0] = x0;\n        out[1] = y0;\n        out[2] = z0;\n        out[3] = 0;\n        out[4] = x1;\n        out[5] = y1;\n        out[6] = z1;\n        out[7] = 0;\n        out[8] = x2;\n        out[9] = y2;\n        out[10] = z2;\n        out[11] = 0;\n        out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n        out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n        out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Generates a matrix that makes something look at something else.\n     * @category Static\n     *\n     * @param out - mat4 frustum matrix will be written into\n     * @param eye - Position of the viewer\n     * @param target - Point the viewer is looking at\n     * @param up - vec3 pointing up\n     * @returns `out`\n     */\n    static targetTo(out, eye, target, up) {\n        const eyex = eye[0];\n        const eyey = eye[1];\n        const eyez = eye[2];\n        const upx = up[0];\n        const upy = up[1];\n        const upz = up[2];\n        let z0 = eyex - target[0];\n        let z1 = eyey - target[1];\n        let z2 = eyez - target[2];\n        let len = z0 * z0 + z1 * z1 + z2 * z2;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            z0 *= len;\n            z1 *= len;\n            z2 *= len;\n        }\n        let x0 = upy * z2 - upz * z1;\n        let x1 = upz * z0 - upx * z2;\n        let x2 = upx * z1 - upy * z0;\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n            x0 *= len;\n            x1 *= len;\n            x2 *= len;\n        }\n        out[0] = x0;\n        out[1] = x1;\n        out[2] = x2;\n        out[3] = 0;\n        out[4] = z1 * x2 - z2 * x1;\n        out[5] = z2 * x0 - z0 * x2;\n        out[6] = z0 * x1 - z1 * x0;\n        out[7] = 0;\n        out[8] = z0;\n        out[9] = z1;\n        out[10] = z2;\n        out[11] = 0;\n        out[12] = eyex;\n        out[13] = eyey;\n        out[14] = eyez;\n        out[15] = 1;\n        return out;\n    }\n    /**\n     * Returns Frobenius norm of a {@link Mat4}\n     * @category Static\n     *\n     * @param a - the matrix to calculate Frobenius norm of\n     * @returns Frobenius norm\n     */\n    static frob(a) {\n        return Math.sqrt(a[0] * a[0] +\n            a[1] * a[1] +\n            a[2] * a[2] +\n            a[3] * a[3] +\n            a[4] * a[4] +\n            a[5] * a[5] +\n            a[6] * a[6] +\n            a[7] * a[7] +\n            a[8] * a[8] +\n            a[9] * a[9] +\n            a[10] * a[10] +\n            a[11] * a[11] +\n            a[12] * a[12] +\n            a[13] * a[13] +\n            a[14] * a[14] +\n            a[15] * a[15]);\n    }\n    /**\n     * Adds two {@link Mat4}'s\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        out[6] = a[6] + b[6];\n        out[7] = a[7] + b[7];\n        out[8] = a[8] + b[8];\n        out[9] = a[9] + b[9];\n        out[10] = a[10] + b[10];\n        out[11] = a[11] + b[11];\n        out[12] = a[12] + b[12];\n        out[13] = a[13] + b[13];\n        out[14] = a[14] + b[14];\n        out[15] = a[15] + b[15];\n        return out;\n    }\n    /**\n     * Subtracts matrix b from matrix a\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        out[4] = a[4] - b[4];\n        out[5] = a[5] - b[5];\n        out[6] = a[6] - b[6];\n        out[7] = a[7] - b[7];\n        out[8] = a[8] - b[8];\n        out[9] = a[9] - b[9];\n        out[10] = a[10] - b[10];\n        out[11] = a[11] - b[11];\n        out[12] = a[12] - b[12];\n        out[13] = a[13] - b[13];\n        out[14] = a[14] - b[14];\n        out[15] = a[15] - b[15];\n        return out;\n    }\n    /**\n     * Alias for {@link Mat4.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiply each element of the matrix by a scalar.\n     * @category Static\n     *\n     * @param out - the receiving matrix\n     * @param a - the matrix to scale\n     * @param b - amount to scale the matrix's elements by\n     * @returns `out`\n     */\n    static multiplyScalar(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        out[6] = a[6] * b;\n        out[7] = a[7] * b;\n        out[8] = a[8] * b;\n        out[9] = a[9] * b;\n        out[10] = a[10] * b;\n        out[11] = a[11] * b;\n        out[12] = a[12] * b;\n        out[13] = a[13] * b;\n        out[14] = a[14] * b;\n        out[15] = a[15] * b;\n        return out;\n    }\n    /**\n     * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b's elements by before adding\n     * @returns `out`\n     */\n    static multiplyScalarAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        out[4] = a[4] + b[4] * scale;\n        out[5] = a[5] + b[5] * scale;\n        out[6] = a[6] + b[6] * scale;\n        out[7] = a[7] + b[7] * scale;\n        out[8] = a[8] + b[8] * scale;\n        out[9] = a[9] + b[9] * scale;\n        out[10] = a[10] + b[10] * scale;\n        out[11] = a[11] + b[11] * scale;\n        out[12] = a[12] + b[12] * scale;\n        out[13] = a[13] + b[13] * scale;\n        out[14] = a[14] + b[14] * scale;\n        out[15] = a[15] + b[15] * scale;\n        return out;\n    }\n    /**\n     * Returns whether or not two {@link Mat4}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3] &&\n            a[4] === b[4] &&\n            a[5] === b[5] &&\n            a[6] === b[6] &&\n            a[7] === b[7] &&\n            a[8] === b[8] &&\n            a[9] === b[9] &&\n            a[10] === b[10] &&\n            a[11] === b[11] &&\n            a[12] === b[12] &&\n            a[13] === b[13] &&\n            a[14] === b[14] &&\n            a[15] === b[15]);\n    }\n    /**\n     * Returns whether or not two {@link Mat4}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first matrix.\n     * @param b - The second matrix.\n     * @returns True if the matrices are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const a6 = a[6];\n        const a7 = a[7];\n        const a8 = a[8];\n        const a9 = a[9];\n        const a10 = a[10];\n        const a11 = a[11];\n        const a12 = a[12];\n        const a13 = a[13];\n        const a14 = a[14];\n        const a15 = a[15];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        const b6 = b[6];\n        const b7 = b[7];\n        const b8 = b[8];\n        const b9 = b[9];\n        const b10 = b[10];\n        const b11 = b[11];\n        const b12 = b[12];\n        const b13 = b[13];\n        const b14 = b[14];\n        const b15 = b[15];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= EPSILON * Math.max(1, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= EPSILON * Math.max(1, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= EPSILON * Math.max(1, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= EPSILON * Math.max(1, Math.abs(a7), Math.abs(b7)) &&\n            Math.abs(a8 - b8) <= EPSILON * Math.max(1, Math.abs(a8), Math.abs(b8)) &&\n            Math.abs(a9 - b9) <= EPSILON * Math.max(1, Math.abs(a9), Math.abs(b9)) &&\n            Math.abs(a10 - b10) <= EPSILON * Math.max(1, Math.abs(a10), Math.abs(b10)) &&\n            Math.abs(a11 - b11) <= EPSILON * Math.max(1, Math.abs(a11), Math.abs(b11)) &&\n            Math.abs(a12 - b12) <= EPSILON * Math.max(1, Math.abs(a12), Math.abs(b12)) &&\n            Math.abs(a13 - b13) <= EPSILON * Math.max(1, Math.abs(a13), Math.abs(b13)) &&\n            Math.abs(a14 - b14) <= EPSILON * Math.max(1, Math.abs(a14), Math.abs(b14)) &&\n            Math.abs(a15 - b15) <= EPSILON * Math.max(1, Math.abs(a15), Math.abs(b15)));\n    }\n    /**\n     * Returns a string representation of a {@link Mat4}\n     * @category Static\n     *\n     * @param a - matrix to represent as a string\n     * @returns string representation of the matrix\n     */\n    static str(a) {\n        return `Mat4(${a.join(', ')})`;\n    }\n}\n// Temporary variables to prevent repeated allocations in the algorithms above.\nconst tmpVec3$1 = [0, 0, 0];\n// Instance method alias assignments\nMat4.prototype.mul = Mat4.prototype.multiply;\n// Static method alias assignments\nMat4.sub = Mat4.subtract;\nMat4.mul = Mat4.multiply;\nMat4.perspective = Mat4.perspectiveNO;\nMat4.ortho = Mat4.orthoNO;\n\n/**\n * 3 Dimensional Vector\n */\nclass Vec3 extends Float32Array {\n    /**\n    * The number of bytes in a {@link Vec3}.\n    */\n    static BYTE_LENGTH = 3 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n    * Create a {@link Vec3}.\n    */\n    constructor(...values) {\n        switch (values.length) {\n            case 3:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 3);\n                break;\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v, v]);\n                }\n                else {\n                    super(v, 0, 3);\n                }\n                break;\n            }\n            default:\n                super(3);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    // Getters and setters to make component access read better.\n    // These are likely to be a little bit slower than direct array access.\n    /**\n     * The x component of the vector. Equivalent to `this[0];`\n     * @category Vector components\n     */\n    get x() { return this[0]; }\n    set x(value) { this[0] = value; }\n    /**\n     * The y component of the vector. Equivalent to `this[1];`\n     * @category Vector components\n     */\n    get y() { return this[1]; }\n    set y(value) { this[1] = value; }\n    /**\n     * The z component of the vector. Equivalent to `this[2];`\n     * @category Vector components\n     */\n    get z() { return this[2]; }\n    set z(value) { this[2] = value; }\n    // Alternate set of getters and setters in case this is being used to define\n    // a color.\n    /**\n     * The r component of the vector. Equivalent to `this[0];`\n     * @category Color components\n     */\n    get r() { return this[0]; }\n    set r(value) { this[0] = value; }\n    /**\n     * The g component of the vector. Equivalent to `this[1];`\n     * @category Color components\n     */\n    get g() { return this[1]; }\n    set g(value) { this[1] = value; }\n    /**\n     * The b component of the vector. Equivalent to `this[2];`\n     * @category Color components\n     */\n    get b() { return this[2]; }\n    set b(value) { this[2] = value; }\n    /**\n     * The magnitude (length) of this.\n     * Equivalent to `Vec3.magnitude(this);`\n     *\n     * Magnitude is used because the `length` attribute is already defined by\n     * `Float32Array` to mean the number of elements in the array.\n     */\n    get magnitude() {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n    /**\n     * Alias for {@link Vec3.magnitude}\n     */\n    get mag() { return this.magnitude; }\n    /**\n     * The squared magnitude (length) of `this`.\n     * Equivalent to `Vec3.squaredMagnitude(this);`\n     */\n    get squaredMagnitude() {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n        return x * x + y * y + z * z;\n    }\n    /**\n     * Alias for {@link Vec3.squaredMagnitude}\n     */\n    get sqrMag() { return this.squaredMagnitude; }\n    /**\n     * A string representation of `this`\n     * Equivalent to `Vec3.str(this);`\n     */\n    get str() {\n        return Vec3.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Vec3} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    /**\n     * Adds a {@link Vec3} to `this`.\n     * Equivalent to `Vec3.add(this, this, b);`\n     *\n     * @param b - The vector to add to `this`\n     * @returns `this`\n     */\n    add(b) {\n        this[0] += b[0];\n        this[1] += b[1];\n        this[2] += b[2];\n        return this;\n    }\n    /**\n     * Subtracts a {@link Vec3} from `this`.\n     * Equivalent to `Vec3.subtract(this, this, b);`\n     *\n     * @param b - The vector to subtract from `this`\n     * @returns `this`\n     */\n    subtract(b) {\n        this[0] -= b[0];\n        this[1] -= b[1];\n        this[2] -= b[2];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec3.subtract}\n     */\n    sub(b) { return this; }\n    /**\n     * Multiplies `this` by a {@link Vec3}.\n     * Equivalent to `Vec3.multiply(this, this, b);`\n     *\n     * @param b - The vector to multiply `this` by\n     * @returns `this`\n     */\n    multiply(b) {\n        this[0] *= b[0];\n        this[1] *= b[1];\n        this[2] *= b[2];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec3.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Divides `this` by a {@link Vec3}.\n     * Equivalent to `Vec3.divide(this, this, b);`\n     *\n     * @param b - The vector to divide `this` by\n     * @returns `this`\n     */\n    divide(b) {\n        this[0] /= b[0];\n        this[1] /= b[1];\n        this[2] /= b[2];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec3.divide}\n     */\n    div(b) { return this; }\n    /**\n     * Scales `this` by a scalar number.\n     * Equivalent to `Vec3.scale(this, this, b);`\n     *\n     * @param b - Amount to scale `this` by\n     * @returns `this`\n     */\n    scale(b) {\n        this[0] *= b;\n        this[1] *= b;\n        this[2] *= b;\n        return this;\n    }\n    /**\n     * Calculates `this` scaled by a scalar value then adds the result to `this`.\n     * Equivalent to `Vec3.scaleAndAdd(this, this, b, scale);`\n     *\n     * @param b - The vector to add to `this`\n     * @param scale - The amount to scale `b` by before adding\n     * @returns `this`\n     */\n    scaleAndAdd(b, scale) {\n        this[0] += b[0] * scale;\n        this[1] += b[1] * scale;\n        this[2] += b[2] * scale;\n        return this;\n    }\n    /**\n     * Calculates the euclidian distance between another {@link Vec3} and `this`.\n     * Equivalent to `Vec3.distance(this, b);`\n     *\n     * @param b - The vector to calculate the distance to\n     * @returns Distance between `this` and `b`\n     */\n    distance(b) {\n        return Vec3.distance(this, b);\n    }\n    /**\n     * Alias for {@link Vec3.distance}\n     */\n    dist(b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between another {@link Vec3} and `this`.\n     * Equivalent to `Vec3.squaredDistance(this, b);`\n     *\n     * @param b The vector to calculate the squared distance to\n     * @returns Squared distance between `this` and `b`\n     */\n    squaredDistance(b) {\n        return Vec3.squaredDistance(this, b);\n    }\n    /**\n     * Alias for {@link Vec3.squaredDistance}\n     */\n    sqrDist(b) { return 0; }\n    /**\n     * Negates the components of `this`.\n     * Equivalent to `Vec3.negate(this, this);`\n     *\n     * @returns `this`\n     */\n    negate() {\n        this[0] *= -1;\n        this[1] *= -1;\n        this[2] *= -1;\n        return this;\n    }\n    /**\n     * Inverts the components of `this`.\n     * Equivalent to `Vec3.inverse(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        this[0] = 1.0 / this[0];\n        this[1] = 1.0 / this[1];\n        this[2] = 1.0 / this[2];\n        return this;\n    }\n    /**\n     * Calculates the dot product of this and another {@link Vec3}.\n     * Equivalent to `Vec3.dot(this, b);`\n     *\n     * @param b - The second operand\n     * @returns Dot product of `this` and `b`\n     */\n    dot(b) {\n        return this[0] * b[0] + this[1] * b[1] + this[2] * b[2];\n    }\n    /**\n     * Normalize `this`.\n     * Equivalent to `Vec3.normalize(this, this);`\n     *\n     * @returns `this`\n     */\n    normalize() {\n        return Vec3.normalize(this, this);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, empty vec3\n     * @category Static\n     *\n     * @returns a new 3D vector\n     */\n    static create() {\n        return new Vec3();\n    }\n    /**\n     * Creates a new vec3 initialized with values from an existing vector\n     * @category Static\n     *\n     * @param a - vector to clone\n     * @returns a new 3D vector\n     */\n    static clone(a) {\n        return new Vec3(a);\n    }\n    /**\n     * Calculates the magnitude (length) of a {@link Vec3}\n     * @category Static\n     *\n     * @param a - Vector to calculate magnitude of\n     * @returns Magnitude of a\n     */\n    static magnitude(a) {\n        let x = a[0];\n        let y = a[1];\n        let z = a[2];\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n    /**\n     * Alias for {@link Vec3.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Vec3.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec3.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     *\n     * @param a - vector to calculate length of\n     * @returns length of a\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Vec3.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec3.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Creates a new vec3 initialized with the given values\n     * @category Static\n     *\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @returns a new 3D vector\n     */\n    static fromValues(x, y, z) {\n        return new Vec3(x, y, z);\n    }\n    /**\n     * Copy the values from one vec3 to another\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the source vector\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        return out;\n    }\n    /**\n     * Set the components of a vec3 to the given values\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @returns `out`\n     */\n    static set(out, x, y, z) {\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        return out;\n    }\n    /**\n     * Adds two {@link Vec3}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        return out;\n    }\n    /**\n     * Subtracts vector b from vector a\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec3.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return [0, 0, 0]; }\n    ;\n    /**\n     * Multiplies two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        out[0] = a[0] * b[0];\n        out[1] = a[1] * b[1];\n        out[2] = a[2] * b[2];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec3.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return [0, 0, 0]; }\n    /**\n     * Divides two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static divide(out, a, b) {\n        out[0] = a[0] / b[0];\n        out[1] = a[1] / b[1];\n        out[2] = a[2] / b[2];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec3.divide}\n     * @category Static\n     */\n    static div(out, a, b) { return [0, 0, 0]; }\n    ;\n    /**\n     * Math.ceil the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to ceil\n     * @returns `out`\n     */\n    static ceil(out, a) {\n        out[0] = Math.ceil(a[0]);\n        out[1] = Math.ceil(a[1]);\n        out[2] = Math.ceil(a[2]);\n        return out;\n    }\n    /**\n     * Math.floor the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to floor\n     * @returns `out`\n     */\n    static floor(out, a) {\n        out[0] = Math.floor(a[0]);\n        out[1] = Math.floor(a[1]);\n        out[2] = Math.floor(a[2]);\n        return out;\n    }\n    /**\n     * Returns the minimum of two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static min(out, a, b) {\n        out[0] = Math.min(a[0], b[0]);\n        out[1] = Math.min(a[1], b[1]);\n        out[2] = Math.min(a[2], b[2]);\n        return out;\n    }\n    /**\n     * Returns the maximum of two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static max(out, a, b) {\n        out[0] = Math.max(a[0], b[0]);\n        out[1] = Math.max(a[1], b[1]);\n        out[2] = Math.max(a[2], b[2]);\n        return out;\n    }\n    /**\n     * symmetric round the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to round\n     * @returns `out`\n     */\n    /*static round(out: Vec3Like, a: Readonly<Vec3Like>): Vec3Like {\n      out[0] = glMatrix.round(a[0]);\n      out[1] = glMatrix.round(a[1]);\n      out[2] = glMatrix.round(a[2]);\n      return out;\n    }*/\n    /**\n     * Scales a vec3 by a scalar number\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to scale\n     * @param scale - amount to scale the vector by\n     * @returns `out`\n     */\n    static scale(out, a, scale) {\n        out[0] = a[0] * scale;\n        out[1] = a[1] * scale;\n        out[2] = a[2] * scale;\n        return out;\n    }\n    /**\n     * Adds two vec3's after scaling the second operand by a scalar value\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b by before adding\n     * @returns `out`\n     */\n    static scaleAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        return out;\n    }\n    /**\n     * Calculates the euclidian distance between two vec3's\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns distance between a and b\n     */\n    static distance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        const z = b[2] - a[2];\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n    /**\n     * Alias for {@link Vec3.distance}\n     */\n    static dist(a, b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between two vec3's\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns squared distance between a and b\n     */\n    static squaredDistance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        const z = b[2] - a[2];\n        return x * x + y * y + z * z;\n    }\n    /**\n     * Alias for {@link Vec3.squaredDistance}\n     */\n    static sqrDist(a, b) { return 0; }\n    /**\n     * Calculates the squared length of a vec3\n     * @category Static\n     *\n     * @param a - vector to calculate squared length of\n     * @returns squared length of a\n     */\n    static squaredLength(a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        return x * x + y * y + z * z;\n    }\n    /**\n     * Alias for {@link Vec3.squaredLength}\n     */\n    static sqrLen(a, b) { return 0; }\n    /**\n     * Negates the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to negate\n     * @returns `out`\n     */\n    static negate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        return out;\n    }\n    /**\n     * Returns the inverse of the components of a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to invert\n     * @returns `out`\n     */\n    static inverse(out, a) {\n        out[0] = 1.0 / a[0];\n        out[1] = 1.0 / a[1];\n        out[2] = 1.0 / a[2];\n        return out;\n    }\n    /**\n     * Normalize a vec3\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        let len = x * x + y * y + z * z;\n        if (len > 0) {\n            //TODO: evaluate use of glm_invsqrt here?\n            len = 1 / Math.sqrt(len);\n        }\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two vec3's\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns dot product of a and b\n     */\n    static dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    }\n    /**\n     * Computes the cross product of two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static cross(out, a, b) {\n        const ax = a[0], ay = a[1], az = a[2];\n        const bx = b[0], by = b[1], bz = b[2];\n        out[0] = ay * bz - az * by;\n        out[1] = az * bx - ax * bz;\n        out[2] = ax * by - ay * bx;\n        return out;\n    }\n    /**\n     * Performs a linear interpolation between two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) {\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        out[0] = ax + t * (b[0] - ax);\n        out[1] = ay + t * (b[1] - ay);\n        out[2] = az + t * (b[2] - az);\n        return out;\n    }\n    /**\n     * Performs a spherical linear interpolation between two vec3's\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static slerp(out, a, b, t) {\n        const angle = Math.acos(Math.min(Math.max(Vec3.dot(a, b), -1), 1));\n        const sinTotal = Math.sin(angle);\n        const ratioA = Math.sin((1 - t) * angle) / sinTotal;\n        const ratioB = Math.sin(t * angle) / sinTotal;\n        out[0] = ratioA * a[0] + ratioB * b[0];\n        out[1] = ratioA * a[1] + ratioB * b[1];\n        out[2] = ratioA * a[2] + ratioB * b[2];\n        return out;\n    }\n    /**\n     * Performs a hermite interpolation with two control points\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param c - the third operand\n     * @param d - the fourth operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static hermite(out, a, b, c, d, t) {\n        const factorTimes2 = t * t;\n        const factor1 = factorTimes2 * (2 * t - 3) + 1;\n        const factor2 = factorTimes2 * (t - 2) + t;\n        const factor3 = factorTimes2 * (t - 1);\n        const factor4 = factorTimes2 * (3 - 2 * t);\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n        return out;\n    }\n    /**\n     * Performs a bezier interpolation with two control points\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param c - the third operand\n     * @param d - the fourth operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static bezier(out, a, b, c, d, t) {\n        const inverseFactor = 1 - t;\n        const inverseFactorTimesTwo = inverseFactor * inverseFactor;\n        const factorTimes2 = t * t;\n        const factor1 = inverseFactorTimesTwo * inverseFactor;\n        const factor2 = 3 * t * inverseFactorTimesTwo;\n        const factor3 = 3 * factorTimes2 * inverseFactor;\n        const factor4 = factorTimes2 * t;\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n        return out;\n    }\n    /**\n     * Generates a random vector with the given scale\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param {Number} [scale] Length of the resulting vector. If omitted, a unit vector will be returned\n     * @returns `out`\n     */\n    /*static random(out: Vec3Like, scale) {\n      scale = scale === undefined ? 1.0 : scale;\n  \n      let r = glMatrix.RANDOM() * 2.0 * Math.PI;\n      let z = glMatrix.RANDOM() * 2.0 - 1.0;\n      let zScale = Math.sqrt(1.0 - z * z) * scale;\n  \n      out[0] = Math.cos(r) * zScale;\n      out[1] = Math.sin(r) * zScale;\n      out[2] = z * scale;\n      return out;\n    }*/\n    /**\n     * Transforms the vec3 with a mat4.\n     * 4th vector component is implicitly '1'\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param m - matrix to transform with\n     * @returns `out`\n     */\n    static transformMat4(out, a, m) {\n        const x = a[0], y = a[1], z = a[2];\n        const w = (m[3] * x + m[7] * y + m[11] * z + m[15]) || 1.0;\n        out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n        out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n        out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n        return out;\n    }\n    /**\n     * Transforms the vec3 with a mat3.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param m - the 3x3 matrix to transform with\n     * @returns `out`\n     */\n    static transformMat3(out, a, m) {\n        let x = a[0], y = a[1], z = a[2];\n        out[0] = x * m[0] + y * m[3] + z * m[6];\n        out[1] = x * m[1] + y * m[4] + z * m[7];\n        out[2] = x * m[2] + y * m[5] + z * m[8];\n        return out;\n    }\n    /**\n     * Transforms the vec3 with a quat\n     * Can also be used for dual quaternions. (Multiply it with the real part)\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param q - quaternion to transform with\n     * @returns `out`\n     */\n    static transformQuat(out, a, q) {\n        // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n        const qx = q[0];\n        const qy = q[1];\n        const qz = q[2];\n        const w2 = q[3] * 2;\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        // var qvec = [qx, qy, qz];\n        // var uv = vec3.cross([], qvec, a);\n        const uvx = (qy * z - qz * y);\n        const uvy = (qz * x - qx * z);\n        const uvz = (qx * y - qy * x);\n        // var uuv = vec3.cross([], qvec, uv);\n        // vec3.scale(uuv, uuv, 2);\n        const uuvx = (qy * uvz - qz * uvy) * 2;\n        const uuvy = (qz * uvx - qx * uvz) * 2;\n        const uuvz = (qx * uvy - qy * uvx) * 2;\n        // vec3.scale(uv, uv, 2 * w);\n        // return vec3.add(out, a, vec3.add(out, uv, uuv));\n        out[0] = x + (uvx * w2) + uuvx;\n        out[1] = y + (uvy * w2) + uuvy;\n        out[2] = z + (uvz * w2) + uuvz;\n        return out;\n    }\n    /**\n     * Rotate a 3D vector around the x-axis\n     * @param out - The receiving vec3\n     * @param a - The vec3 point to rotate\n     * @param b - The origin of the rotation\n     * @param rad - The angle of rotation in radians\n     * @returns `out`\n     */\n    static rotateX(out, a, b, rad) {\n        const by = b[1];\n        const bz = b[2];\n        //Translate point to the origin\n        const py = a[1] - by;\n        const pz = a[2] - bz;\n        //perform rotation\n        //translate to correct position\n        out[0] = a[0];\n        out[1] = (py * Math.cos(rad) - pz * Math.sin(rad)) + by;\n        out[2] = (py * Math.sin(rad) + pz * Math.cos(rad)) + bz;\n        return out;\n    }\n    /**\n     * Rotate a 3D vector around the y-axis\n     * @param out - The receiving vec3\n     * @param a - The vec3 point to rotate\n     * @param b - The origin of the rotation\n     * @param rad - The angle of rotation in radians\n     * @returns `out`\n     */\n    static rotateY(out, a, b, rad) {\n        const bx = b[0];\n        const bz = b[2];\n        //Translate point to the origin\n        const px = a[0] - bx;\n        const pz = a[2] - bz;\n        //perform rotation\n        //translate to correct position\n        out[0] = (pz * Math.sin(rad) + px * Math.cos(rad)) + bx;\n        out[1] = a[1];\n        out[2] = (pz * Math.cos(rad) - px * Math.sin(rad)) + bz;\n        return out;\n    }\n    /**\n     * Rotate a 3D vector around the z-axis\n     * @param out - The receiving vec3\n     * @param a - The vec3 point to rotate\n     * @param b - The origin of the rotation\n     * @param rad - The angle of rotation in radians\n     * @returns `out`\n     */\n    static rotateZ(out, a, b, rad) {\n        const bx = b[0];\n        const by = b[1];\n        //Translate point to the origin\n        const px = a[0] - bx;\n        const py = a[1] - by;\n        //perform rotation\n        //translate to correct position\n        out[0] = (px * Math.cos(rad) - py * Math.sin(rad)) + bx;\n        out[1] = (px * Math.sin(rad) + py * Math.cos(rad)) + by;\n        out[2] = b[2];\n        return out;\n    }\n    /**\n     * Get the angle between two 3D vectors\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns The angle in radians\n     */\n    static angle(a, b) {\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const bx = b[0];\n        const by = b[1];\n        const bz = b[2];\n        const mag = Math.sqrt((ax * ax + ay * ay + az * az) * (bx * bx + by * by + bz * bz));\n        const cosine = mag && Vec3.dot(a, b) / mag;\n        return Math.acos(Math.min(Math.max(cosine, -1), 1));\n    }\n    /**\n     * Set the components of a vec3 to zero\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @returns `out`\n     */\n    static zero(out) {\n        out[0] = 0.0;\n        out[1] = 0.0;\n        out[2] = 0.0;\n        return out;\n    }\n    /**\n     * Returns a string representation of a vector\n     * @category Static\n     *\n     * @param a - vector to represent as a string\n     * @returns string representation of the vector\n     */\n    static str(a) {\n        return `Vec3(${a.join(', ')})`;\n    }\n    /**\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n    }\n    /**\n     * Returns whether or not the vectors have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)));\n    }\n}\n// Instance method alias assignments\nVec3.prototype.sub = Vec3.prototype.subtract;\nVec3.prototype.mul = Vec3.prototype.multiply;\nVec3.prototype.div = Vec3.prototype.divide;\nVec3.prototype.dist = Vec3.prototype.distance;\nVec3.prototype.sqrDist = Vec3.prototype.squaredDistance;\n// Static method alias assignments\nVec3.sub = Vec3.subtract;\nVec3.mul = Vec3.multiply;\nVec3.div = Vec3.divide;\nVec3.dist = Vec3.distance;\nVec3.sqrDist = Vec3.squaredDistance;\nVec3.sqrLen = Vec3.squaredLength;\nVec3.mag = Vec3.magnitude;\nVec3.length = Vec3.magnitude;\nVec3.len = Vec3.magnitude;\n\n/**\n * 4 Dimensional Vector\n */\nclass Vec4 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Vec4}.\n     */\n    static BYTE_LENGTH = 4 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Vec4}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 4:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 4);\n                break;\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v, v, v]);\n                }\n                else {\n                    super(v, 0, 4);\n                }\n                break;\n            }\n            default:\n                super(4);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    // Getters and setters to make component access read better.\n    // These are likely to be a little bit slower than direct array access.\n    /**\n     * The x component of the vector. Equivalent to `this[0];`\n     * @category Vector components\n     */\n    get x() { return this[0]; }\n    set x(value) { this[0] = value; }\n    /**\n     * The y component of the vector. Equivalent to `this[1];`\n     * @category Vector components\n     */\n    get y() { return this[1]; }\n    set y(value) { this[1] = value; }\n    /**\n     * The z component of the vector. Equivalent to `this[2];`\n     * @category Vector components\n     */\n    get z() { return this[2]; }\n    set z(value) { this[2] = value; }\n    /**\n     * The w component of the vector. Equivalent to `this[3];`\n     * @category Vector components\n     */\n    get w() { return this[3]; }\n    set w(value) { this[3] = value; }\n    // Alternate set of getters and setters in case this is being used to define\n    // a color.\n    /**\n     * The r component of the vector. Equivalent to `this[0];`\n     * @category Color components\n     */\n    get r() { return this[0]; }\n    set r(value) { this[0] = value; }\n    /**\n     * The g component of the vector. Equivalent to `this[1];`\n     * @category Color components\n     */\n    get g() { return this[1]; }\n    set g(value) { this[1] = value; }\n    /**\n     * The b component of the vector. Equivalent to `this[2];`\n     * @category Color components\n     */\n    get b() { return this[2]; }\n    set b(value) { this[2] = value; }\n    /**\n     * The a component of the vector. Equivalent to `this[3];`\n     * @category Color components\n     */\n    get a() { return this[3]; }\n    set a(value) { this[3] = value; }\n    /**\n     * The magnitude (length) of this.\n     * Equivalent to `Vec4.magnitude(this);`\n     *\n     * Magnitude is used because the `length` attribute is already defined by\n     * `Float32Array` to mean the number of elements in the array.\n     */\n    get magnitude() {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n        const w = this[3];\n        return Math.sqrt(x * x + y * y + z * z + w * w);\n    }\n    /**\n     * Alias for {@link Vec4.magnitude}\n     */\n    get mag() { return this.magnitude; }\n    /**\n     * A string representation of `this`\n     * Equivalent to `Vec4.str(this);`\n     */\n    get str() {\n        return Vec4.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Vec4} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        super.set(a);\n        return this;\n    }\n    /**\n     * Adds a {@link Vec4} to `this`.\n     * Equivalent to `Vec4.add(this, this, b);`\n     *\n     * @param b - The vector to add to `this`\n     * @returns `this`\n     */\n    add(b) {\n        this[0] += b[0];\n        this[1] += b[1];\n        this[2] += b[2];\n        this[3] += b[3];\n        return this;\n    }\n    /**\n     * Subtracts a {@link Vec4} from `this`.\n     * Equivalent to `Vec4.subtract(this, this, b);`\n     *\n     * @param b - The vector to subtract from `this`\n     * @returns `this`\n     */\n    subtract(b) {\n        this[0] -= b[0];\n        this[1] -= b[1];\n        this[2] -= b[2];\n        this[3] -= b[3];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec4.subtract}\n     */\n    sub(b) { return this; }\n    /**\n     * Multiplies `this` by a {@link Vec4}.\n     * Equivalent to `Vec4.multiply(this, this, b);`\n     *\n     * @param b - The vector to multiply `this` by\n     * @returns `this`\n     */\n    multiply(b) {\n        this[0] *= b[0];\n        this[1] *= b[1];\n        this[2] *= b[2];\n        this[3] *= b[3];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec4.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Divides `this` by a {@link Vec4}.\n     * Equivalent to `Vec4.divide(this, this, b);`\n     *\n     * @param b - The vector to divide `this` by\n     * @returns `this`\n     */\n    divide(b) {\n        this[0] /= b[0];\n        this[1] /= b[1];\n        this[2] /= b[2];\n        this[3] /= b[3];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec4.divide}\n     */\n    div(b) { return this; }\n    /**\n     * Scales `this` by a scalar number.\n     * Equivalent to `Vec4.scale(this, this, b);`\n     *\n     * @param b - Amount to scale `this` by\n     * @returns `this`\n     */\n    scale(b) {\n        this[0] *= b;\n        this[1] *= b;\n        this[2] *= b;\n        this[3] *= b;\n        return this;\n    }\n    /**\n     * Calculates `this` scaled by a scalar value then adds the result to `this`.\n     * Equivalent to `Vec4.scaleAndAdd(this, this, b, scale);`\n     *\n     * @param b - The vector to add to `this`\n     * @param scale - The amount to scale `b` by before adding\n     * @returns `this`\n     */\n    scaleAndAdd(b, scale) {\n        this[0] += b[0] * scale;\n        this[1] += b[1] * scale;\n        this[2] += b[2] * scale;\n        this[3] += b[3] * scale;\n        return this;\n    }\n    /**\n     * Calculates the euclidian distance between another {@link Vec4} and `this`.\n     * Equivalent to `Vec4.distance(this, b);`\n     *\n     * @param b - The vector to calculate the distance to\n     * @returns Distance between `this` and `b`\n     */\n    distance(b) {\n        return Vec4.distance(this, b);\n    }\n    /**\n     * Alias for {@link Vec4.distance}\n     */\n    dist(b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between another {@link Vec4} and `this`.\n     * Equivalent to `Vec4.squaredDistance(this, b);`\n     *\n     * @param b The vector to calculate the squared distance to\n     * @returns Squared distance between `this` and `b`\n     */\n    squaredDistance(b) {\n        return Vec4.squaredDistance(this, b);\n    }\n    /**\n     * Alias for {@link Vec4.squaredDistance}\n     */\n    sqrDist(b) { return 0; }\n    /**\n     * Negates the components of `this`.\n     * Equivalent to `Vec4.negate(this, this);`\n     *\n     * @returns `this`\n     */\n    negate() {\n        this[0] *= -1;\n        this[1] *= -1;\n        this[2] *= -1;\n        this[3] *= -1;\n        return this;\n    }\n    /**\n     * Inverts the components of `this`.\n     * Equivalent to `Vec4.inverse(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        this[0] = 1.0 / this[0];\n        this[1] = 1.0 / this[1];\n        this[2] = 1.0 / this[2];\n        this[3] = 1.0 / this[3];\n        return this;\n    }\n    /**\n     * Calculates the dot product of this and another {@link Vec4}.\n     * Equivalent to `Vec4.dot(this, b);`\n     *\n     * @param b - The second operand\n     * @returns Dot product of `this` and `b`\n     */\n    dot(b) {\n        return this[0] * b[0] + this[1] * b[1] + this[2] * b[2] + this[3] * b[3];\n    }\n    /**\n     * Normalize `this`.\n     * Equivalent to `Vec4.normalize(this, this);`\n     *\n     * @returns `this`\n     */\n    normalize() {\n        return Vec4.normalize(this, this);\n    }\n    //===================\n    // Static methods\n    //===================\n    /**\n     * Creates a new, empty {@link Vec4}\n     * @category Static\n     *\n     * @returns a new 4D vector\n     */\n    static create() {\n        return new Vec4();\n    }\n    /**\n     * Creates a new {@link Vec4} initialized with values from an existing vector\n     * @category Static\n     *\n     * @param a - vector to clone\n     * @returns a new 4D vector\n     */\n    static clone(a) {\n        return new Vec4(a);\n    }\n    /**\n     * Creates a new {@link Vec4} initialized with the given values\n     * @category Static\n     *\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @param w - W component\n     * @returns a new 4D vector\n     */\n    static fromValues(x, y, z, w) {\n        return new Vec4(x, y, z, w);\n    }\n    /**\n     * Copy the values from one {@link Vec4} to another\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the source vector\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Set the components of a {@link Vec4} to the given values\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @param w - W component\n     * @returns `out`\n     */\n    static set(out, x, y, z, w) {\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        out[3] = w;\n        return out;\n    }\n    /**\n     * Adds two {@link Vec4}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        return out;\n    }\n    /**\n     * Subtracts vector b from vector a\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        out[2] = a[2] - b[2];\n        out[3] = a[3] - b[3];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec4.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return out; }\n    /**\n     * Multiplies two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        out[0] = a[0] * b[0];\n        out[1] = a[1] * b[1];\n        out[2] = a[2] * b[2];\n        out[3] = a[3] * b[3];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec4.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Divides two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static divide(out, a, b) {\n        out[0] = a[0] / b[0];\n        out[1] = a[1] / b[1];\n        out[2] = a[2] / b[2];\n        out[3] = a[3] / b[3];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec4.divide}\n     * @category Static\n     */\n    static div(out, a, b) { return out; }\n    /**\n     * Math.ceil the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to ceil\n     * @returns `out`\n     */\n    static ceil(out, a) {\n        out[0] = Math.ceil(a[0]);\n        out[1] = Math.ceil(a[1]);\n        out[2] = Math.ceil(a[2]);\n        out[3] = Math.ceil(a[3]);\n        return out;\n    }\n    /**\n     * Math.floor the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to floor\n     * @returns `out`\n     */\n    static floor(out, a) {\n        out[0] = Math.floor(a[0]);\n        out[1] = Math.floor(a[1]);\n        out[2] = Math.floor(a[2]);\n        out[3] = Math.floor(a[3]);\n        return out;\n    }\n    /**\n     * Returns the minimum of two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static min(out, a, b) {\n        out[0] = Math.min(a[0], b[0]);\n        out[1] = Math.min(a[1], b[1]);\n        out[2] = Math.min(a[2], b[2]);\n        out[3] = Math.min(a[3], b[3]);\n        return out;\n    }\n    /**\n     * Returns the maximum of two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static max(out, a, b) {\n        out[0] = Math.max(a[0], b[0]);\n        out[1] = Math.max(a[1], b[1]);\n        out[2] = Math.max(a[2], b[2]);\n        out[3] = Math.max(a[3], b[3]);\n        return out;\n    }\n    /**\n     * Math.round the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to round\n     * @returns `out`\n     */\n    static round(out, a) {\n        out[0] = Math.round(a[0]);\n        out[1] = Math.round(a[1]);\n        out[2] = Math.round(a[2]);\n        out[3] = Math.round(a[3]);\n        return out;\n    }\n    /**\n     * Scales a {@link Vec4} by a scalar number\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to scale\n     * @param scale - amount to scale the vector by\n     * @returns `out`\n     */\n    static scale(out, a, scale) {\n        out[0] = a[0] * scale;\n        out[1] = a[1] * scale;\n        out[2] = a[2] * scale;\n        out[3] = a[3] * scale;\n        return out;\n    }\n    /**\n     * Adds two {@link Vec4}'s after scaling the second operand by a scalar value\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param scale - the amount to scale b by before adding\n     * @returns `out`\n     */\n    static scaleAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        out[2] = a[2] + b[2] * scale;\n        out[3] = a[3] + b[3] * scale;\n        return out;\n    }\n    /**\n     * Calculates the euclidian distance between two {@link Vec4}'s\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns distance between a and b\n     */\n    static distance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        const z = b[2] - a[2];\n        const w = b[3] - a[3];\n        return Math.hypot(x, y, z, w);\n    }\n    /**\n     * Alias for {@link Vec4.distance}\n     * @category Static\n     */\n    static dist(a, b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between two {@link Vec4}'s\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns squared distance between a and b\n     */\n    static squaredDistance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        const z = b[2] - a[2];\n        const w = b[3] - a[3];\n        return x * x + y * y + z * z + w * w;\n    }\n    /**\n     * Alias for {@link Vec4.squaredDistance}\n     * @category Static\n     */\n    static sqrDist(a, b) { return 0; }\n    /**\n     * Calculates the magnitude (length) of a {@link Vec4}\n     * @category Static\n     *\n     * @param a - vector to calculate length of\n     * @returns length of `a`\n     */\n    static magnitude(a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const w = a[3];\n        return Math.sqrt(x * x + y * y + z * z + w * w);\n    }\n    /**\n     * Alias for {@link Vec4.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Vec4.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec4.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Vec4.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec4.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Calculates the squared length of a {@link Vec4}\n     * @category Static\n     *\n     * @param a - vector to calculate squared length of\n     * @returns squared length of a\n     */\n    static squaredLength(a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const w = a[3];\n        return x * x + y * y + z * z + w * w;\n    }\n    /**\n     * Alias for {@link Vec4.squaredLength}\n     * @category Static\n     */\n    static sqrLen(a) { return 0; }\n    /**\n     * Negates the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to negate\n     * @returns `out`\n     */\n    static negate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = -a[3];\n        return out;\n    }\n    /**\n     * Returns the inverse of the components of a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to invert\n     * @returns `out`\n     */\n    static inverse(out, a) {\n        out[0] = 1.0 / a[0];\n        out[1] = 1.0 / a[1];\n        out[2] = 1.0 / a[2];\n        out[3] = 1.0 / a[3];\n        return out;\n    }\n    /**\n     * Normalize a {@link Vec4}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - vector to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const w = a[3];\n        let len = x * x + y * y + z * z + w * w;\n        if (len > 0) {\n            len = 1 / Math.sqrt(len);\n        }\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two {@link Vec4}'s\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns dot product of a and b\n     */\n    static dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    }\n    /**\n     * Returns the cross-product of three vectors in a 4-dimensional space\n     * @category Static\n     *\n     * @param out the receiving vector\n     * @param u - the first vector\n     * @param v - the second vector\n     * @param w - the third vector\n     * @returns result\n     */\n    static cross(out, u, v, w) {\n        const a = v[0] * w[1] - v[1] * w[0];\n        const b = v[0] * w[2] - v[2] * w[0];\n        const c = v[0] * w[3] - v[3] * w[0];\n        const d = v[1] * w[2] - v[2] * w[1];\n        const e = v[1] * w[3] - v[3] * w[1];\n        const f = v[2] * w[3] - v[3] * w[2];\n        const g = u[0];\n        const h = u[1];\n        const i = u[2];\n        const j = u[3];\n        out[0] = h * f - i * e + j * d;\n        out[1] = -(g * f) + i * c - j * b;\n        out[2] = g * e - h * c + j * a;\n        out[3] = -(g * d) + h * b - i * a;\n        return out;\n    }\n    /**\n     * Performs a linear interpolation between two {@link Vec4}'s\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) {\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        out[0] = ax + t * (b[0] - ax);\n        out[1] = ay + t * (b[1] - ay);\n        out[2] = az + t * (b[2] - az);\n        out[3] = aw + t * (b[3] - aw);\n        return out;\n    }\n    /**\n     * Generates a random vector with the given scale\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param [scale] - Length of the resulting vector. If ommitted, a unit vector will be returned\n     * @returns `out`\n     */\n    /*static random(out: Vec4Like, scale): Vec4Like {\n      scale = scale || 1.0;\n  \n      // Marsaglia, George. Choosing a Point from the Surface of a\n      // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n      // http://projecteuclid.org/euclid.aoms/1177692644;\n      var v1, v2, v3, v4;\n      var s1, s2;\n      do {\n        v1 = glMatrix.RANDOM() * 2 - 1;\n        v2 = glMatrix.RANDOM() * 2 - 1;\n        s1 = v1 * v1 + v2 * v2;\n      } while (s1 >= 1);\n      do {\n        v3 = glMatrix.RANDOM() * 2 - 1;\n        v4 = glMatrix.RANDOM() * 2 - 1;\n        s2 = v3 * v3 + v4 * v4;\n      } while (s2 >= 1);\n  \n      var d = Math.sqrt((1 - s1) / s2);\n      out[0] = scale * v1;\n      out[1] = scale * v2;\n      out[2] = scale * v3 * d;\n      out[3] = scale * v4 * d;\n      return out;\n    }*/\n    /**\n     * Transforms the {@link Vec4} with a {@link Mat4}.\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param m - matrix to transform with\n     * @returns `out`\n     */\n    static transformMat4(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const w = a[3];\n        out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n        out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n        out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n        out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec4} with a {@link Quat}\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to transform\n     * @param q - quaternion to transform with\n     * @returns `out`\n     */\n    static transformQuat(out, a, q) {\n        const x = a[0];\n        const y = a[1];\n        const z = a[2];\n        const qx = q[0];\n        const qy = q[1];\n        const qz = q[2];\n        const qw = q[3];\n        // calculate quat * vec\n        const ix = qw * x + qy * z - qz * y;\n        const iy = qw * y + qz * x - qx * z;\n        const iz = qw * z + qx * y - qy * x;\n        const iw = -qx * x - qy * y - qz * z;\n        // calculate result * inverse quat\n        out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Set the components of a {@link Vec4} to zero\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @returns `out`\n     */\n    static zero(out) {\n        out[0] = 0.0;\n        out[1] = 0.0;\n        out[2] = 0.0;\n        out[3] = 0.0;\n        return out;\n    }\n    /**\n     * Returns a string representation of a {@link Vec4}\n     * @category Static\n     *\n     * @param a - vector to represent as a string\n     * @returns string representation of the vector\n     */\n    static str(a) {\n        return `Vec4(${a.join(', ')})`;\n    }\n    /**\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n    }\n    /**\n     * Returns whether or not the vectors have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)));\n    }\n}\n// Instance method alias assignments\nVec4.prototype.sub = Vec4.prototype.subtract;\nVec4.prototype.mul = Vec4.prototype.multiply;\nVec4.prototype.div = Vec4.prototype.divide;\nVec4.prototype.dist = Vec4.prototype.distance;\nVec4.prototype.sqrDist = Vec4.prototype.squaredDistance;\n// Static method alias assignments\nVec4.sub = Vec4.subtract;\nVec4.mul = Vec4.multiply;\nVec4.div = Vec4.divide;\nVec4.dist = Vec4.distance;\nVec4.sqrDist = Vec4.squaredDistance;\nVec4.sqrLen = Vec4.squaredLength;\nVec4.mag = Vec4.magnitude;\nVec4.length = Vec4.magnitude;\nVec4.len = Vec4.magnitude;\n\n/**\n * Quaternion\n */\nclass Quat extends Float32Array {\n    /**\n     * The number of bytes in a {@link Quat}.\n     */\n    static BYTE_LENGTH = 4 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Quat}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 4:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 4);\n                break;\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v, v, v]);\n                }\n                else {\n                    super(v, 0, 4);\n                }\n                break;\n            }\n            default:\n                super(4);\n                this[3] = 1;\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    // Getters and setters to make component access read better.\n    // These are likely to be a little bit slower than direct array access.\n    /**\n     * The x component of the quaternion. Equivalent to `this[0];`\n     * @category Quaternion components\n     */\n    get x() { return this[0]; }\n    set x(value) { this[0] = value; }\n    /**\n     * The y component of the quaternion. Equivalent to `this[1];`\n     * @category Quaternion components\n     */\n    get y() { return this[1]; }\n    set y(value) { this[1] = value; }\n    /**\n     * The z component of the quaternion. Equivalent to `this[2];`\n     * @category Quaternion components\n     */\n    get z() { return this[2]; }\n    set z(value) { this[2] = value; }\n    /**\n     * The w component of the quaternion. Equivalent to `this[3];`\n     * @category Quaternion components\n     */\n    get w() { return this[3]; }\n    set w(value) { this[3] = value; }\n    /**\n     * The magnitude (length) of this.\n     * Equivalent to `Quat.magnitude(this);`\n     *\n     * Magnitude is used because the `length` attribute is already defined by\n     * `Float32Array` to mean the number of elements in the array.\n     */\n    get magnitude() {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n        const w = this[3];\n        return Math.sqrt(x * x + y * y + z * z + w * w);\n    }\n    /**\n     * Alias for {@link Quat.magnitude}\n     */\n    get mag() { return this.magnitude; }\n    /**\n     * A string representation of `this`\n     * Equivalent to `Quat.str(this);`\n     */\n    get str() {\n        return Quat.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Quat} into `this`.\n     *\n     * @param a the source quaternion\n     * @returns `this`\n     */\n    copy(a) {\n        super.set(a);\n        return this;\n    }\n    /**\n     * Set `this` to the identity quaternion\n     * Equivalent to Quat.identity(this)\n     *\n     * @returns `this`\n     */\n    identity() {\n        this[0] = 0;\n        this[1] = 0;\n        this[2] = 0;\n        this[3] = 1;\n        return this;\n    }\n    /**\n     * Multiplies `this` by a {@link Quat}.\n     * Equivalent to `Quat.multiply(this, this, b);`\n     *\n     * @param b - The vector to multiply `this` by\n     * @returns `this`\n     */\n    multiply(b) {\n        return Quat.multiply(this, this, b);\n    }\n    /**\n     * Alias for {@link Quat.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Rotates `this` by the given angle about the X axis\n     * Equivalent to `Quat.rotateX(this, this, rad);`\n     *\n     * @param rad - angle (in radians) to rotate\n     * @returns `this`\n     */\n    rotateX(rad) {\n        return Quat.rotateX(this, this, rad);\n    }\n    /**\n     * Rotates `this` by the given angle about the Y axis\n     * Equivalent to `Quat.rotateY(this, this, rad);`\n     *\n     * @param rad - angle (in radians) to rotate\n     * @returns `this`\n     */\n    rotateY(rad) {\n        return Quat.rotateY(this, this, rad);\n    }\n    /**\n     * Rotates `this` by the given angle about the Z axis\n     * Equivalent to `Quat.rotateZ(this, this, rad);`\n     *\n     * @param rad - angle (in radians) to rotate\n     * @returns `this`\n     */\n    rotateZ(rad) {\n        return Quat.rotateZ(this, this, rad);\n    }\n    /**\n     * Inverts `this`\n     * Equivalent to `Quat.invert(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        return Quat.invert(this, this);\n    }\n    /**\n     * Scales `this` by a scalar number\n     * Equivalent to `Quat.scale(this, this, scale);`\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to scale\n     * @param scale - amount to scale the vector by\n     * @returns `this`\n     */\n    scale(scale) {\n        this[0] *= scale;\n        this[1] *= scale;\n        this[2] *= scale;\n        this[3] *= scale;\n        return this;\n    }\n    /**\n     * Calculates the dot product of `this` and another {@link Quat}\n     * Equivalent to `Quat.dot(this, b);`\n     *\n     * @param b - the second operand\n     * @returns dot product of `this` and b\n     */\n    dot(b) {\n        return Quat.dot(this, b);\n    }\n    //===================\n    // Static methods\n    //===================\n    /**\n     * Creates a new identity quat\n     * @category Static\n     *\n     * @returns a new quaternion\n     */\n    static create() {\n        return new Quat();\n    }\n    /**\n     * Set a quat to the identity quaternion\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        return out;\n    }\n    /**\n     * Sets a quat from the given angle and rotation axis,\n     * then returns it.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param axis - the axis around which to rotate\n     * @param rad - the angle in radians\n     * @returns `out`\n     **/\n    static setAxisAngle(out, axis, rad) {\n        rad = rad * 0.5;\n        const s = Math.sin(rad);\n        out[0] = s * axis[0];\n        out[1] = s * axis[1];\n        out[2] = s * axis[2];\n        out[3] = Math.cos(rad);\n        return out;\n    }\n    /**\n     * Gets the rotation axis and angle for a given\n     *  quaternion. If a quaternion is created with\n     *  setAxisAngle, this method will return the same\n     *  values as providied in the original parameter list\n     *  OR functionally equivalent values.\n     * Example: The quaternion formed by axis [0, 0, 1] and\n     *  angle -90 is the same as the quaternion formed by\n     *  [0, 0, 1] and 270. This method favors the latter.\n     * @category Static\n     *\n     * @param out_axis - Vector receiving the axis of rotation\n     * @param q - Quaternion to be decomposed\n     * @return Angle, in radians, of the rotation\n     */\n    static getAxisAngle(out_axis, q) {\n        const rad = Math.acos(q[3]) * 2.0;\n        const s = Math.sin(rad / 2.0);\n        if (s > EPSILON) {\n            out_axis[0] = q[0] / s;\n            out_axis[1] = q[1] / s;\n            out_axis[2] = q[2] / s;\n        }\n        else {\n            // If s is zero, return any axis (no rotation - axis does not matter)\n            out_axis[0] = 1;\n            out_axis[1] = 0;\n            out_axis[2] = 0;\n        }\n        return rad;\n    }\n    /**\n     * Gets the angular distance between two unit quaternions\n     * @category Static\n     *\n     * @param  {ReadonlyQuat} a     Origin unit quaternion\n     * @param  {ReadonlyQuat} b     Destination unit quaternion\n     * @return {Number}     Angle, in radians, between the two quaternions\n     */\n    static getAngle(a, b) {\n        const dotproduct = Quat.dot(a, b);\n        return Math.acos(2 * dotproduct * dotproduct - 1);\n    }\n    /**\n     * Multiplies two quat's\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        const bx = b[0];\n        const by = b[1];\n        const bz = b[2];\n        const bw = b[3];\n        out[0] = ax * bw + aw * bx + ay * bz - az * by;\n        out[1] = ay * bw + aw * by + az * bx - ax * bz;\n        out[2] = az * bw + aw * bz + ax * by - ay * bx;\n        out[3] = aw * bw - ax * bx - ay * by - az * bz;\n        return out;\n    }\n    /**\n     * Rotates a quaternion by the given angle about the X axis\n     * @category Static\n     *\n     * @param out - quat receiving operation result\n     * @param a - quat to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateX(out, a, rad) {\n        rad *= 0.5;\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        const bx = Math.sin(rad);\n        const bw = Math.cos(rad);\n        out[0] = ax * bw + aw * bx;\n        out[1] = ay * bw + az * bx;\n        out[2] = az * bw - ay * bx;\n        out[3] = aw * bw - ax * bx;\n        return out;\n    }\n    /**\n     * Rotates a quaternion by the given angle about the Y axis\n     * @category Static\n     *\n     * @param out - quat receiving operation result\n     * @param a - quat to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateY(out, a, rad) {\n        rad *= 0.5;\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        const by = Math.sin(rad);\n        const bw = Math.cos(rad);\n        out[0] = ax * bw - az * by;\n        out[1] = ay * bw + aw * by;\n        out[2] = az * bw + ax * by;\n        out[3] = aw * bw - ay * by;\n        return out;\n    }\n    /**\n     * Rotates a quaternion by the given angle about the Z axis\n     * @category Static\n     *\n     * @param out - quat receiving operation result\n     * @param a - quat to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateZ(out, a, rad) {\n        rad *= 0.5;\n        const ax = a[0];\n        const ay = a[1];\n        const az = a[2];\n        const aw = a[3];\n        const bz = Math.sin(rad);\n        const bw = Math.cos(rad);\n        out[0] = ax * bw + ay * bz;\n        out[1] = ay * bw - ax * bz;\n        out[2] = az * bw + aw * bz;\n        out[3] = aw * bw - az * bz;\n        return out;\n    }\n    /**\n     * Calculates the W component of a quat from the X, Y, and Z components.\n     * Assumes that quaternion is 1 unit in length.\n     * Any existing W component will be ignored.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate W component of\n     * @returns `out`\n     */\n    static calculateW(out, a) {\n        const x = a[0], y = a[1], z = a[2];\n        out[0] = x;\n        out[1] = y;\n        out[2] = z;\n        out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n        return out;\n    }\n    /**\n     * Calculate the exponential of a unit quaternion.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate the exponential of\n     * @returns `out`\n     */\n    static exp(out, a) {\n        const x = a[0], y = a[1], z = a[2], w = a[3];\n        const r = Math.sqrt(x * x + y * y + z * z);\n        const et = Math.exp(w);\n        const s = r > 0 ? (et * Math.sin(r)) / r : 0;\n        out[0] = x * s;\n        out[1] = y * s;\n        out[2] = z * s;\n        out[3] = et * Math.cos(r);\n        return out;\n    }\n    /**\n     * Calculate the natural logarithm of a unit quaternion.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate the exponential of\n     * @returns `out`\n     */\n    static ln(out, a) {\n        const x = a[0], y = a[1], z = a[2], w = a[3];\n        const r = Math.sqrt(x * x + y * y + z * z);\n        const t = r > 0 ? Math.atan2(r, w) / r : 0;\n        out[0] = x * t;\n        out[1] = y * t;\n        out[2] = z * t;\n        out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n        return out;\n    }\n    /**\n     * Calculate the scalar power of a unit quaternion.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate the exponential of\n     * @param b - amount to scale the quaternion by\n     * @returns `out`\n     */\n    static pow(out, a, b) {\n        Quat.ln(out, a);\n        Quat.scale(out, out, b);\n        Quat.exp(out, out);\n        return out;\n    }\n    /**\n     * Performs a spherical linear interpolation between two quat\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static slerp(out, a, b, t) {\n        // benchmarks:\n        //    http://jsperf.com/quaternion-slerp-implementations\n        const ax = a[0], ay = a[1], az = a[2], aw = a[3];\n        let bx = b[0], by = b[1], bz = b[2], bw = b[3];\n        let scale0;\n        let scale1;\n        // calc cosine\n        let cosom = ax * bx + ay * by + az * bz + aw * bw;\n        // adjust signs (if necessary)\n        if (cosom < 0.0) {\n            cosom = -cosom;\n            bx = -bx;\n            by = -by;\n            bz = -bz;\n            bw = -bw;\n        }\n        // calculate coefficients\n        if (1.0 - cosom > EPSILON) {\n            // standard case (slerp)\n            const omega = Math.acos(cosom);\n            const sinom = Math.sin(omega);\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\n            scale1 = Math.sin(t * omega) / sinom;\n        }\n        else {\n            // \"from\" and \"to\" quaternions are very close\n            //  ... so we can do a linear interpolation\n            scale0 = 1.0 - t;\n            scale1 = t;\n        }\n        // calculate final values\n        out[0] = scale0 * ax + scale1 * bx;\n        out[1] = scale0 * ay + scale1 * by;\n        out[2] = scale0 * az + scale1 * bz;\n        out[3] = scale0 * aw + scale1 * bw;\n        return out;\n    }\n    /**\n     * Generates a random unit quaternion\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @returns `out`\n     */\n    /*static random(out: QuatLike): QuatLike {\n      // Implementation of http://planning.cs.uiuc.edu/node198.html\n      // TODO: Calling random 3 times is probably not the fastest solution\n      let u1 = glMatrix.RANDOM();\n      let u2 = glMatrix.RANDOM();\n      let u3 = glMatrix.RANDOM();\n  \n      let sqrt1MinusU1 = Math.sqrt(1 - u1);\n      let sqrtU1 = Math.sqrt(u1);\n  \n      out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n      out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n      out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n      out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n      return out;\n    }*/\n    /**\n     * Calculates the inverse of a quat\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate inverse of\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n        const dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n        const invDot = dot ? 1.0 / dot : 0;\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n        out[0] = -a0 * invDot;\n        out[1] = -a1 * invDot;\n        out[2] = -a2 * invDot;\n        out[3] = a3 * invDot;\n        return out;\n    }\n    /**\n     * Calculates the conjugate of a quat\n     * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quat to calculate conjugate of\n     * @returns `out`\n     */\n    static conjugate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Creates a quaternion from the given 3x3 rotation matrix.\n     *\n     * NOTE: The resultant quaternion is not normalized, so you should be sure\n     * to renormalize the quaternion yourself where necessary.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param m - rotation matrix\n     * @returns `out`\n     */\n    static fromMat3(out, m) {\n        // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n        // article \"Quaternion Calculus and Fast Animation\".\n        const fTrace = m[0] + m[4] + m[8];\n        let fRoot;\n        if (fTrace > 0.0) {\n            // |w| > 1/2, may as well choose w > 1/2\n            fRoot = Math.sqrt(fTrace + 1.0); // 2w\n            out[3] = 0.5 * fRoot;\n            fRoot = 0.5 / fRoot; // 1/(4w)\n            out[0] = (m[5] - m[7]) * fRoot;\n            out[1] = (m[6] - m[2]) * fRoot;\n            out[2] = (m[1] - m[3]) * fRoot;\n        }\n        else {\n            // |w| <= 1/2\n            let i = 0;\n            if (m[4] > m[0])\n                i = 1;\n            if (m[8] > m[i * 3 + i])\n                i = 2;\n            let j = (i + 1) % 3;\n            let k = (i + 2) % 3;\n            fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n            out[i] = 0.5 * fRoot;\n            fRoot = 0.5 / fRoot;\n            out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n            out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n            out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n        }\n        return out;\n    }\n    /**\n     * Creates a quaternion from the given euler angle x, y, z.\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param x - Angle to rotate around X axis in degrees.\n     * @param y - Angle to rotate around Y axis in degrees.\n     * @param z - Angle to rotate around Z axis in degrees.\n     * @returns `out`\n     */\n    static fromEuler(out, x, y, z) {\n        let halfToRad = (0.5 * Math.PI) / 180.0;\n        x *= halfToRad;\n        y *= halfToRad;\n        z *= halfToRad;\n        let sx = Math.sin(x);\n        let cx = Math.cos(x);\n        let sy = Math.sin(y);\n        let cy = Math.cos(y);\n        let sz = Math.sin(z);\n        let cz = Math.cos(z);\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n        return out;\n    }\n    /**\n     * Returns a string representation of a quatenion\n     * @category Static\n     *\n     * @param a - vector to represent as a string\n     * @returns string representation of the vector\n     */\n    static str(a) {\n        return `Quat(${a.join(', ')})`;\n    }\n    /**\n     * Creates a new quat initialized with values from an existing quaternion\n     * @category Static\n     *\n     * @param a - quaternion to clone\n     * @returns a new quaternion\n     */\n    static clone(a) {\n        return new Quat(a);\n    }\n    /**\n     * Creates a new quat initialized with the given values\n     * @category Static\n     *\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @param w - W component\n     * @returns a new quaternion\n     */\n    static fromValues(x, y, z, w) {\n        return new Quat(x, y, z, w);\n    }\n    /**\n     * Copy the values from one quat to another\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the source quaternion\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    /**\n     * Set the components of a {@link Quat} to the given values\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param x - X component\n     * @param y - Y component\n     * @param z - Z component\n     * @param w - W component\n     * @returns `out`\n     */\n    static set(out, x, y, z, w) { return out; }\n    /**\n     * Adds two {@link Quat}'s\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) { return out; }\n    /**\n     * Alias for {@link Quat.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Scales a quat by a scalar number\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - the vector to scale\n     * @param b - amount to scale the vector by\n     * @returns `out`\n     */\n    static scale(out, a, scale) {\n        out[0] = a[0] * scale;\n        out[1] = a[1] * scale;\n        out[2] = a[2] * scale;\n        out[3] = a[3] * scale;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two quat's\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns dot product of a and b\n     */\n    static dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    }\n    /**\n     * Performs a linear interpolation between two quat's\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) { return out; }\n    /**\n     * Calculates the magnitude (length) of a {@link Quat}\n     * @category Static\n     *\n     * @param a - quaternion to calculate length of\n     * @returns length of `a`\n     */\n    static magnitude(a) { return 0; }\n    /**\n     * Alias for {@link Quat.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Quat.magnitude}\n     * @category Static\n     * @deprecated Use {@link Quat.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Quat.magnitude}\n     * @category Static\n     * @deprecated Use {@link Quat.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Calculates the squared length of a {@link Quat}\n     * @category Static\n     *\n     * @param a - quaternion to calculate squared length of\n     * @returns squared length of a\n     */\n    static squaredLength(a) { return 0; }\n    /**\n     * Alias for {@link Quat.squaredLength}\n     * @category Static\n     */\n    static sqrLen(a) { return 0; }\n    /**\n     * Normalize a {@link Quat}\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - quaternion to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) { return out; }\n    /**\n     * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first quaternion.\n     * @param b - The second quaternion.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static exactEquals(a, b) { return false; }\n    /**\n     * Returns whether or not the quaternions have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns True if the vectors are equal, false otherwise.\n     */\n    static equals(a, b) { return false; }\n    /**\n     * Sets a quaternion to represent the shortest rotation from one\n     * vector to another.\n     *\n     * Both vectors are assumed to be unit length.\n     * @category Static\n     *\n     * @param out - the receiving quaternion.\n     * @param a - the initial vector\n     * @param b - the destination vector\n     * @returns `out`\n     */\n    static rotationTo(out, a, b) {\n        let dot = Vec3.dot(a, b);\n        if (dot < -0.999999) {\n            Vec3.cross(tmpVec3, xUnitVec3, a);\n            if (Vec3.len(tmpVec3) < 0.000001)\n                Vec3.cross(tmpVec3, yUnitVec3, a);\n            Vec3.normalize(tmpVec3, tmpVec3);\n            Quat.setAxisAngle(out, tmpVec3, Math.PI);\n            return out;\n        }\n        else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        }\n        else {\n            Vec3.cross(tmpVec3, a, b);\n            out[0] = tmpVec3[0];\n            out[1] = tmpVec3[1];\n            out[2] = tmpVec3[2];\n            out[3] = 1 + dot;\n            return Quat.normalize(out, out);\n        }\n    }\n    /**\n     * Performs a spherical linear interpolation with two control points\n     * @category Static\n     *\n     * @param out - the receiving quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param c - the third operand\n     * @param d - the fourth operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static sqlerp(out, a, b, c, d, t) {\n        Quat.slerp(temp1, a, d, t);\n        Quat.slerp(temp2, b, c, t);\n        Quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n        return out;\n    }\n    /**\n     * Sets the specified quaternion with values corresponding to the given\n     * axes. Each axis is a vec3 and is expected to be unit length and\n     * perpendicular to all other specified axes.\n     * @category Static\n     *\n     * @param out - The receiving quaternion\n     * @param view - the vector representing the viewing direction\n     * @param right - the vector representing the local \"right\" direction\n     * @param up - the vector representing the local \"up\" direction\n     * @returns `out`\n     */\n    static setAxes(out, view, right, up) {\n        tempMat3[0] = right[0];\n        tempMat3[3] = right[1];\n        tempMat3[6] = right[2];\n        tempMat3[1] = up[0];\n        tempMat3[4] = up[1];\n        tempMat3[7] = up[2];\n        tempMat3[2] = -view[0];\n        tempMat3[5] = -view[1];\n        tempMat3[8] = -view[2];\n        return Quat.normalize(out, Quat.fromMat3(out, tempMat3));\n    }\n}\n// Temporary variables to prevent repeated allocations in the algorithms above.\nconst temp1 = [0, 0, 0, 0];\nconst temp2 = [0, 0, 0, 0];\nconst tempMat3 = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nconst tmpVec3 = [0, 0, 0];\nconst xUnitVec3 = [1, 0, 0];\nconst yUnitVec3 = [0, 1, 0];\n// Methods which re-use the Vec4 implementation\nQuat.set = Vec4.set;\nQuat.add = Vec4.add;\nQuat.lerp = Vec4.lerp;\nQuat.normalize = Vec4.normalize;\nQuat.squaredLength = Vec4.squaredLength;\nQuat.sqrLen = Vec4.squaredLength;\nQuat.exactEquals = Vec4.exactEquals;\nQuat.equals = Vec4.equals;\nQuat.magnitude = Vec4.magnitude;\n// Instance method alias assignments\nQuat.prototype.mul = Quat.prototype.multiply;\n// Static method alias assignments\nQuat.mul = Quat.multiply;\nQuat.mag = Quat.magnitude;\nQuat.length = Quat.magnitude;\nQuat.len = Quat.magnitude;\n\n/**\n * Dual Quaternion\n */\nclass Quat2 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Quat}.\n     */\n    static BYTE_LENGTH = 8 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Quat2}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 8:\n                super(values);\n                break;\n            case 2:\n                super(values[0], values[1], 8);\n                break;\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v, v, v, v, v, v, v]);\n                }\n                else {\n                    super(v, 0, 8);\n                }\n                break;\n            }\n            default:\n                super(8);\n                this[3] = 1;\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    /**\n     * A string representation of `this`\n     * Equivalent to `Quat2.str(this);`\n     */\n    get str() {\n        return Quat2.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Quat2} into `this`.\n     *\n     * @param a the source dual quaternion\n     * @returns `this`\n     */\n    copy(a) {\n        super.set(a);\n        return this;\n    }\n    //===================\n    // Static methods\n    //===================\n    /**\n     * Creates a new identity {@link Quat2}\n     * @category Static\n     *\n     * @returns a new dual quaternion [real -> rotation, dual -> translation]\n     */\n    static create() {\n        return new Quat2();\n    }\n    /**\n     * Creates a {@link Quat2} quat initialized with values from an existing quaternion\n     * @category Static\n     *\n     * @param a - dual quaternion to clone\n     * @returns a new dual quaternion\n     */\n    static clone(a) {\n        return new Quat2(a);\n    }\n    /**\n     * Creates a new {@link Quat2}  initialized with the given values\n     * @category Static\n     *\n     * @param x1 - 1st X component\n     * @param y1 - 1st Y component\n     * @param z1 - 1st Z component\n     * @param w1 - 1st W component\n     * @param x2 - 2nd X component\n     * @param y2 - 2nd Y component\n     * @param z2 - 2nd Z component\n     * @param w2 - 2nd W component\n     * @returns a new dual quaternion\n     */\n    static fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n        return new Quat2(x1, y1, z1, w1, x2, y2, z2, w2);\n    }\n    /**\n     * Creates a new {@link Quat2} from the given values (quat and translation)\n     * @category Static\n     *\n     * @param x1 - X component (rotation)\n     * @param y1 - Y component (rotation)\n     * @param z1 - Z component (rotation)\n     * @param w1 - W component (rotation)\n     * @param x2 - X component (translation)\n     * @param y2 - Y component (translation)\n     * @param z2 - Z component (translation)\n     * @returns a new dual quaternion\n     */\n    static fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n        const ax = x2 * 0.5;\n        const ay = y2 * 0.5;\n        const az = z2 * 0.5;\n        return new Quat2(x1, y1, z1, w1, ax * w1 + ay * z1 - az * y1, ay * w1 + az * x1 - ax * z1, az * w1 + ax * y1 - ay * x1, -ax * x1 - ay * y1 - az * z1);\n    }\n    /**\n     * Sets a {@link Quat2} from a quaternion and a translation\n     * @category Static\n     *\n     * @param out - dual quaternion receiving operation result\n     * @param q - a normalized quaternion\n     * @param t - translation vector\n     * @returns `out`\n     */\n    static fromRotationTranslation(out, q, t) {\n        const ax = t[0] * 0.5;\n        const ay = t[1] * 0.5;\n        const az = t[2] * 0.5;\n        const bx = q[0];\n        const by = q[1];\n        const bz = q[2];\n        const bw = q[3];\n        out[0] = bx;\n        out[1] = by;\n        out[2] = bz;\n        out[3] = bw;\n        out[4] = ax * bw + ay * bz - az * by;\n        out[5] = ay * bw + az * bx - ax * bz;\n        out[6] = az * bw + ax * by - ay * bx;\n        out[7] = -ax * bx - ay * by - az * bz;\n        return out;\n    }\n    /**\n     * Sets a {@link Quat2} from a translation\n     * @category Static\n     *\n     * @param out - dual quaternion receiving operation result\n     * @param t - translation vector\n     * @returns `out`\n     */\n    static fromTranslation(out, t) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = t[0] * 0.5;\n        out[5] = t[1] * 0.5;\n        out[6] = t[2] * 0.5;\n        out[7] = 0;\n        return out;\n    }\n    /**\n     * Sets a {@link Quat2} from a quaternion\n     * @category Static\n     *\n     * @param out - dual quaternion receiving operation result\n     * @param q - a normalized quaternion\n     * @returns `out`\n     */\n    static fromRotation(out, q) {\n        out[0] = q[0];\n        out[1] = q[1];\n        out[2] = q[2];\n        out[3] = q[3];\n        out[4] = 0;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        return out;\n    }\n    /**\n     * Sets a {@link Quat2} from a quaternion\n     * @category Static\n     *\n     * @param out - dual quaternion receiving operation result\n     * @param a - the matrix\n     * @returns `out`\n     */\n    static fromMat4(out, a) {\n        Mat4.getRotation(tempQuat, a);\n        Mat4.getTranslation(tempVec3, a);\n        return Quat2.fromRotationTranslation(out, tempQuat, tempVec3);\n    }\n    /**\n     * Copy the values from one {@link Quat2} to another\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the source dual quaternion\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        out[4] = a[4];\n        out[5] = a[5];\n        out[6] = a[6];\n        out[7] = a[7];\n        return out;\n    }\n    /**\n     * Set a {@link Quat2} to the identity dual quaternion\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @returns `out`\n     */\n    static identity(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = 0;\n        out[3] = 1;\n        out[4] = 0;\n        out[5] = 0;\n        out[6] = 0;\n        out[7] = 0;\n        return out;\n    }\n    /**\n     * Set the components of a {@link Quat2} to the given values\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param x1 - 1st X component\n     * @param y1 - 1st Y component\n     * @param z1 - 1st Z component\n     * @param w1 - 1st W component\n     * @param x2 - 2nd X component\n     * @param y2 - 2nd Y component\n     * @param z2 - 2nd Z component\n     * @param w2 - 2nd W component\n     * @returns `out`\n     */\n    static set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n        out[0] = x1;\n        out[1] = y1;\n        out[2] = z1;\n        out[3] = w1;\n        out[4] = x2;\n        out[5] = y2;\n        out[6] = z2;\n        out[7] = w2;\n        return out;\n    }\n    /**\n     * Gets the real part of a dual quat\n     * @category Static\n     *\n     * @param out - real part\n     * @param a - Dual Quaternion\n     * @return `out`\n     */\n    static getReal(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    ;\n    /**\n     * Gets the dual part of a dual quat\n     * @category Static\n     *\n     * @param out - dual part\n     * @param a - Dual Quaternion\n     * @return `out`\n     */\n    static getDual(out, a) {\n        out[0] = a[4];\n        out[1] = a[5];\n        out[2] = a[6];\n        out[3] = a[7];\n        return out;\n    }\n    /**\n     * Set the real component of a {@link Quat2} to the given quaternion\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - a quaternion representing the real part\n     * @return `out`\n     */\n    static setReal(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        out[2] = a[2];\n        out[3] = a[3];\n        return out;\n    }\n    ;\n    /**\n     * Set the dual component of a {@link Quat2} to the given quaternion\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - a quaternion representing the dual part\n     * @return `out`\n     */\n    static setDual(out, a) {\n        out[4] = a[0];\n        out[5] = a[1];\n        out[6] = a[2];\n        out[7] = a[3];\n        return out;\n    }\n    /**\n     * Gets the translation of a normalized {@link Quat2}\n     * @category Static\n     *\n     * @param out - the receiving translation vector\n     * @param a - Dual Quaternion to be decomposed\n     * @return `out`\n     */\n    static getTranslation(out, a) {\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        const bx = -a[0];\n        const by = -a[1];\n        const bz = -a[2];\n        const bw = a[3];\n        out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n        out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n        out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n        return out;\n    }\n    /**\n     * Translates a {@link Quat2} by the given vector\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to translate\n     * @param v - vector to translate by\n     * @returns `out`\n     */\n    static translate(out, a, v) {\n        const ax1 = a[0];\n        const ay1 = a[1];\n        const az1 = a[2];\n        const aw1 = a[3];\n        const bx1 = v[0] * 0.5;\n        const by1 = v[1] * 0.5;\n        const bz1 = v[2] * 0.5;\n        const ax2 = a[4];\n        const ay2 = a[5];\n        const az2 = a[6];\n        const aw2 = a[7];\n        out[0] = ax1;\n        out[1] = ay1;\n        out[2] = az1;\n        out[3] = aw1;\n        out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n        out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n        out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n        out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} around the X axis\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateX(out, a, rad) {\n        let bx = -a[0];\n        let by = -a[1];\n        let bz = -a[2];\n        let bw = a[3];\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n        const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n        const az1 = az * bw + aw * bz + ax * by - ay * bx;\n        const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n        Quat.rotateX(out, a, rad);\n        bx = out[0];\n        by = out[1];\n        bz = out[2];\n        bw = out[3];\n        out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} around the Y axis\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateY(out, a, rad) {\n        let bx = -a[0];\n        let by = -a[1];\n        let bz = -a[2];\n        let bw = a[3];\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n        const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n        const az1 = az * bw + aw * bz + ax * by - ay * bx;\n        const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n        Quat.rotateY(out, a, rad);\n        bx = out[0];\n        by = out[1];\n        bz = out[2];\n        bw = out[3];\n        out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} around the Z axis\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param rad - angle (in radians) to rotate\n     * @returns `out`\n     */\n    static rotateZ(out, a, rad) {\n        let bx = -a[0];\n        let by = -a[1];\n        let bz = -a[2];\n        let bw = a[3];\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        const ax1 = ax * bw + aw * bx + ay * bz - az * by;\n        const ay1 = ay * bw + aw * by + az * bx - ax * bz;\n        const az1 = az * bw + aw * bz + ax * by - ay * bx;\n        const aw1 = aw * bw - ax * bx - ay * by - az * bz;\n        Quat.rotateZ(out, a, rad);\n        bx = out[0];\n        by = out[1];\n        bz = out[2];\n        bw = out[3];\n        out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} by a given quaternion (a * q)\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param q - quaternion to rotate by\n     * @returns `out`\n     */\n    static rotateByQuatAppend(out, a, q) {\n        const qx = q[0];\n        const qy = q[1];\n        const qz = q[2];\n        const qw = q[3];\n        let ax = a[0];\n        let ay = a[1];\n        let az = a[2];\n        let aw = a[3];\n        out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n        out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n        out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n        out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n        ax = a[4];\n        ay = a[5];\n        az = a[6];\n        aw = a[7];\n        out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n        out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n        out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n        out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} by a given quaternion (q * a)\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param q - quaternion to rotate by\n     * @param a - the dual quaternion to rotate\n     * @returns `out`\n     */\n    static rotateByQuatPrepend(out, q, a) {\n        const qx = q[0];\n        const qy = q[1];\n        const qz = q[2];\n        const qw = q[3];\n        let bx = a[0];\n        let by = a[1];\n        let bz = a[2];\n        let bw = a[3];\n        out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n        out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n        out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n        out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n        bx = a[4];\n        by = a[5];\n        bz = a[6];\n        bw = a[7];\n        out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n        out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n        out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n        out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n        return out;\n    }\n    /**\n     * Rotates a {@link Quat2} around a given axis. Does the normalization automatically\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the dual quaternion to rotate\n     * @param axis - the axis to rotate around\n     * @param rad - how far the rotation should be\n     * @returns `out`\n     */\n    static rotateAroundAxis(out, a, axis, rad) {\n        //Special case for rad = 0\n        if (Math.abs(rad) < EPSILON) {\n            return Quat2.copy(out, a);\n        }\n        const axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n        rad = rad * 0.5;\n        const s = Math.sin(rad);\n        const bx = (s * axis[0]) / axisLength;\n        const by = (s * axis[1]) / axisLength;\n        const bz = (s * axis[2]) / axisLength;\n        const bw = Math.cos(rad);\n        const ax1 = a[0];\n        const ay1 = a[1];\n        const az1 = a[2];\n        const aw1 = a[3];\n        out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n        out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n        out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n        out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n        const ax = a[4];\n        const ay = a[5];\n        const az = a[6];\n        const aw = a[7];\n        out[4] = ax * bw + aw * bx + ay * bz - az * by;\n        out[5] = ay * bw + aw * by + az * bx - ax * bz;\n        out[6] = az * bw + aw * bz + ax * by - ay * bx;\n        out[7] = aw * bw - ax * bx - ay * by - az * bz;\n        return out;\n    }\n    /**\n     * Adds two {@link Quat2}s\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        out[2] = a[2] + b[2];\n        out[3] = a[3] + b[3];\n        out[4] = a[4] + b[4];\n        out[5] = a[5] + b[5];\n        out[6] = a[6] + b[6];\n        out[7] = a[7] + b[7];\n        return out;\n    }\n    /**\n     * Multiplies two {@link Quat2}s\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns {quat2} out\n     */\n    static multiply(out, a, b) {\n        const ax0 = a[0];\n        const ay0 = a[1];\n        const az0 = a[2];\n        const aw0 = a[3];\n        const bx1 = b[4];\n        const by1 = b[5];\n        const bz1 = b[6];\n        const bw1 = b[7];\n        const ax1 = a[4];\n        const ay1 = a[5];\n        const az1 = a[6];\n        const aw1 = a[7];\n        const bx0 = b[0];\n        const by0 = b[1];\n        const bz0 = b[2];\n        const bw0 = b[3];\n        out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n        out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n        out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n        out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n        out[4] =\n            ax0 * bw1 +\n                aw0 * bx1 +\n                ay0 * bz1 -\n                az0 * by1 +\n                ax1 * bw0 +\n                aw1 * bx0 +\n                ay1 * bz0 -\n                az1 * by0;\n        out[5] =\n            ay0 * bw1 +\n                aw0 * by1 +\n                az0 * bx1 -\n                ax0 * bz1 +\n                ay1 * bw0 +\n                aw1 * by0 +\n                az1 * bx0 -\n                ax1 * bz0;\n        out[6] =\n            az0 * bw1 +\n                aw0 * bz1 +\n                ax0 * by1 -\n                ay0 * bx1 +\n                az1 * bw0 +\n                aw1 * bz0 +\n                ax1 * by0 -\n                ay1 * bx0;\n        out[7] =\n            aw0 * bw1 -\n                ax0 * bx1 -\n                ay0 * by1 -\n                az0 * bz1 +\n                aw1 * bw0 -\n                ax1 * bx0 -\n                ay1 * by0 -\n                az1 * bz0;\n        return out;\n    }\n    /**\n     * Alias for {@link Quat2.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return out; }\n    /**\n     * Scales a {@link Quat2} by a scalar value\n     * @category Static\n     *\n     * @param out - the receiving dual quaterion\n     * @param a - the dual quaternion to scale\n     * @param b - scalar value to scale the dual quaterion by\n     * @returns `out`\n     */\n    static scale(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        out[2] = a[2] * b;\n        out[3] = a[3] * b;\n        out[4] = a[4] * b;\n        out[5] = a[5] * b;\n        out[6] = a[6] * b;\n        out[7] = a[7] * b;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two {@link Quat2}s (The dot product of the real parts)\n     * @category Static\n     *\n     * @param a - the first operand\n     * @param b - the second operand\n     * @returns dot product of a and b\n     */\n    static dot(a, b) { return 0; }\n    /**\n     * Performs a linear interpolation between two {@link Quat2}s\n     * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when `t = 0.5`)\n     * @category Static\n     *\n     * @param out - the receiving dual quat\n     * @param a - the first operand\n     * @param b - the second operand\n     * @param t - interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) {\n        const mt = 1 - t;\n        if (Quat2.dot(a, b) < 0)\n            t = -t;\n        out[0] = a[0] * mt + b[0] * t;\n        out[1] = a[1] * mt + b[1] * t;\n        out[2] = a[2] * mt + b[2] * t;\n        out[3] = a[3] * mt + b[3] * t;\n        out[4] = a[4] * mt + b[4] * t;\n        out[5] = a[5] * mt + b[5] * t;\n        out[6] = a[6] * mt + b[6] * t;\n        out[7] = a[7] * mt + b[7] * t;\n        return out;\n    }\n    /**\n     * Calculates the inverse of a {@link Quat2}. If they are normalized, conjugate is cheaper\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - dual quat to calculate inverse of\n     * @returns `out`\n     */\n    static invert(out, a) {\n        const sqlen = Quat2.squaredLength(a);\n        out[0] = -a[0] / sqlen;\n        out[1] = -a[1] / sqlen;\n        out[2] = -a[2] / sqlen;\n        out[3] = a[3] / sqlen;\n        out[4] = -a[4] / sqlen;\n        out[5] = -a[5] / sqlen;\n        out[6] = -a[6] / sqlen;\n        out[7] = a[7] / sqlen;\n        return out;\n    }\n    /**\n     * Calculates the conjugate of a {@link Quat2}\n     * If the dual quaternion is normalized, this function is faster than {@link Quat2.invert} and produces the same result.\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - dual quaternion to calculate conjugate of\n     * @returns `out`\n     */\n    static conjugate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        out[2] = -a[2];\n        out[3] = a[3];\n        out[4] = -a[4];\n        out[5] = -a[5];\n        out[6] = -a[6];\n        out[7] = a[7];\n        return out;\n    }\n    /**\n     * Calculates the magnitude (length) of a {@link Quat2}\n     * @category Static\n     *\n     * @param a - dual quaternion to calculate length of\n     * @returns length of `a`\n     */\n    static magnitude(a) { return 0; }\n    /**\n     * Alias for {@link Quat2.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Quat2.magnitude}\n     * @category Static\n     * @deprecated Use {@link Quat2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Quat2.magnitude}\n     * @category Static\n     * @deprecated Use {@link Quat2.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Calculates the squared length of a {@link Quat2}\n     * @category Static\n     *\n     * @param a - dual quaternion to calculate squared length of\n     * @returns squared length of a\n     */\n    static squaredLength(a) { return 0; }\n    /**\n     * Alias for {@link Quat2.squaredLength}\n     * @category Static\n     */\n    static sqrLen(a) { return 0; }\n    /**\n     * Normalize a {@link Quat2}\n     * @category Static\n     *\n     * @param out - the receiving dual quaternion\n     * @param a - dual quaternion to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) {\n        let magnitude = Quat2.squaredLength(a);\n        if (magnitude > 0) {\n            magnitude = Math.sqrt(magnitude);\n            const a0 = a[0] / magnitude;\n            const a1 = a[1] / magnitude;\n            const a2 = a[2] / magnitude;\n            const a3 = a[3] / magnitude;\n            const b0 = a[4];\n            const b1 = a[5];\n            const b2 = a[6];\n            const b3 = a[7];\n            const a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n            out[0] = a0;\n            out[1] = a1;\n            out[2] = a2;\n            out[3] = a3;\n            out[4] = (b0 - a0 * a_dot_b) / magnitude;\n            out[5] = (b1 - a1 * a_dot_b) / magnitude;\n            out[6] = (b2 - a2 * a_dot_b) / magnitude;\n            out[7] = (b3 - a3 * a_dot_b) / magnitude;\n        }\n        return out;\n    }\n    /**\n     * Returns a string representation of a {@link Quat2}\n     * @category Static\n     *\n     * @param a - dual quaternion to represent as a string\n     * @returns string representation of the vector\n     */\n    static str(a) {\n        return `Quat2(${a.join(', ')})`;\n    }\n    /**\n     * Returns whether or not the {@link Quat2}s have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first dual quaternion.\n     * @param b - The second dual quaternion.\n     * @returns True if the dual quaternions are equal, false otherwise.\n     */\n    static exactEquals(a, b) {\n        return (a[0] === b[0] &&\n            a[1] === b[1] &&\n            a[2] === b[2] &&\n            a[3] === b[3] &&\n            a[4] === b[4] &&\n            a[5] === b[5] &&\n            a[6] === b[6] &&\n            a[7] === b[7]);\n    }\n    /**\n     * Returns whether or not the {@link Quat2}s have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first dual quaternion.\n     * @param b - The second dual quaternion.\n     * @returns True if the dual quaternions are equal, false otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const a2 = a[2];\n        const a3 = a[3];\n        const a4 = a[4];\n        const a5 = a[5];\n        const a6 = a[6];\n        const a7 = a[7];\n        const b0 = b[0];\n        const b1 = b[1];\n        const b2 = b[2];\n        const b3 = b[3];\n        const b4 = b[4];\n        const b5 = b[5];\n        const b6 = b[6];\n        const b7 = b[7];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\n            Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\n            Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\n            Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\n            Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)));\n    }\n}\n// Temporary variables to prevent repeated allocations in the algorithms above.\nconst tempQuat = [0, 0, 0, 0];\nconst tempVec3 = [0, 0, 0];\n// Methods which re-use the Quat implementation\n// @ts-ignore\nQuat2.dot = Quat.dot;\n// @ts-ignore\nQuat2.squaredLength = Quat.squaredLength;\n// @ts-ignore\nQuat2.sqrLen = Quat.squaredLength;\n// @ts-ignore\nQuat2.mag = Quat.magnitude;\n// @ts-ignore\nQuat2.length = Quat.magnitude;\n// @ts-ignore\nQuat2.len = Quat.magnitude;\n// Static method alias assignments\nQuat2.mul = Quat2.multiply;\n\n/**\n * 2 Dimensional Vector\n */\nclass Vec2 extends Float32Array {\n    /**\n     * The number of bytes in a {@link Vec2}.\n     */\n    static BYTE_LENGTH = 2 * Float32Array.BYTES_PER_ELEMENT;\n    /**\n     * Create a {@link Vec2}.\n     */\n    constructor(...values) {\n        switch (values.length) {\n            case 2: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, values[1]]);\n                }\n                else {\n                    super(v, values[1], 2);\n                }\n                break;\n            }\n            case 1: {\n                const v = values[0];\n                if (typeof v === 'number') {\n                    super([v, v]);\n                }\n                else {\n                    super(v, 0, 2);\n                }\n                break;\n            }\n            default:\n                super(2);\n                break;\n        }\n    }\n    //============\n    // Attributes\n    //============\n    // Getters and setters to make component access read better.\n    // These are likely to be a little bit slower than direct array access.\n    /**\n     * The x component of the vector. Equivalent to `this[0];`\n     * @category Vector components\n     */\n    get x() { return this[0]; }\n    set x(value) { this[0] = value; }\n    /**\n     * The y component of the vector. Equivalent to `this[1];`\n     * @category Vector components\n     */\n    get y() { return this[1]; }\n    set y(value) { this[1] = value; }\n    // Alternate set of getters and setters in case this is being used to define\n    // a color.\n    /**\n     * The r component of the vector. Equivalent to `this[0];`\n     * @category Color components\n     */\n    get r() { return this[0]; }\n    set r(value) { this[0] = value; }\n    /**\n     * The g component of the vector. Equivalent to `this[1];`\n     * @category Color components\n     */\n    get g() { return this[1]; }\n    set g(value) { this[1] = value; }\n    /**\n     * The magnitude (length) of this.\n     * Equivalent to `Vec2.magnitude(this);`\n     *\n     * Magnitude is used because the `length` attribute is already defined by\n     * `Float32Array` to mean the number of elements in the array.\n     */\n    get magnitude() {\n        return Math.hypot(this[0], this[1]);\n    }\n    /**\n     * Alias for {@link Vec2.magnitude}\n     */\n    get mag() { return this.magnitude; }\n    /**\n     * The squared magnitude (length) of `this`.\n     * Equivalent to `Vec2.squaredMagnitude(this);`\n     */\n    get squaredMagnitude() {\n        const x = this[0];\n        const y = this[1];\n        return x * x + y * y;\n    }\n    /**\n     * Alias for {@link Vec2.squaredMagnitude}\n     */\n    get sqrMag() { return this.squaredMagnitude; }\n    /**\n     * A string representation of `this`\n     * Equivalent to `Vec2.str(this);`\n     */\n    get str() {\n        return Vec2.str(this);\n    }\n    //===================\n    // Instances methods\n    //===================\n    /**\n     * Copy the values from another {@link Vec2} into `this`.\n     *\n     * @param a the source vector\n     * @returns `this`\n     */\n    copy(a) {\n        this.set(a);\n        return this;\n    }\n    // Instead of zero(), use a.fill(0) for instances;\n    /**\n     * Adds a {@link Vec2} to `this`.\n     * Equivalent to `Vec2.add(this, this, b);`\n     *\n     * @param b - The vector to add to `this`\n     * @returns `this`\n     */\n    add(b) {\n        this[0] += b[0];\n        this[1] += b[1];\n        return this;\n    }\n    /**\n     * Subtracts a {@link Vec2} from `this`.\n     * Equivalent to `Vec2.subtract(this, this, b);`\n     *\n     * @param b - The vector to subtract from `this`\n     * @returns `this`\n     */\n    subtract(b) {\n        this[0] -= b[0];\n        this[1] -= b[1];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec2.subtract}\n     */\n    sub(b) { return this; }\n    /**\n     * Multiplies `this` by a {@link Vec2}.\n     * Equivalent to `Vec2.multiply(this, this, b);`\n     *\n     * @param b - The vector to multiply `this` by\n     * @returns `this`\n     */\n    multiply(b) {\n        this[0] *= b[0];\n        this[1] *= b[1];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec2.multiply}\n     */\n    mul(b) { return this; }\n    /**\n     * Divides `this` by a {@link Vec2}.\n     * Equivalent to `Vec2.divide(this, this, b);`\n     *\n     * @param b - The vector to divide `this` by\n     * @returns {Vec2} `this`\n     */\n    divide(b) {\n        this[0] /= b[0];\n        this[1] /= b[1];\n        return this;\n    }\n    /**\n     * Alias for {@link Vec2.divide}\n     */\n    div(b) { return this; }\n    /**\n     * Scales `this` by a scalar number.\n     * Equivalent to `Vec2.scale(this, this, b);`\n     *\n     * @param b - Amount to scale `this` by\n     * @returns `this`\n     */\n    scale(b) {\n        this[0] *= b;\n        this[1] *= b;\n        return this;\n    }\n    /**\n     * Calculates `this` scaled by a scalar value then adds the result to `this`.\n     * Equivalent to `Vec2.scaleAndAdd(this, this, b, scale);`\n     *\n     * @param b - The vector to add to `this`\n     * @param scale - The amount to scale `b` by before adding\n     * @returns `this`\n     */\n    scaleAndAdd(b, scale) {\n        this[0] += b[0] * scale;\n        this[1] += b[1] * scale;\n        return this;\n    }\n    /**\n     * Calculates the euclidian distance between another {@link Vec2} and `this`.\n     * Equivalent to `Vec2.distance(this, b);`\n     *\n     * @param b - The vector to calculate the distance to\n     * @returns Distance between `this` and `b`\n     */\n    distance(b) {\n        return Vec2.distance(this, b);\n    }\n    /**\n     * Alias for {@link Vec2.distance}\n     */\n    dist(b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between another {@link Vec2} and `this`.\n     * Equivalent to `Vec2.squaredDistance(this, b);`\n     *\n     * @param b The vector to calculate the squared distance to\n     * @returns Squared distance between `this` and `b`\n     */\n    squaredDistance(b) {\n        return Vec2.squaredDistance(this, b);\n    }\n    /**\n     * Alias for {@link Vec2.squaredDistance}\n     */\n    sqrDist(b) { return 0; }\n    /**\n     * Negates the components of `this`.\n     * Equivalent to `Vec2.negate(this, this);`\n     *\n     * @returns `this`\n     */\n    negate() {\n        this[0] *= -1;\n        this[1] *= -1;\n        return this;\n    }\n    /**\n     * Inverts the components of `this`.\n     * Equivalent to `Vec2.inverse(this, this);`\n     *\n     * @returns `this`\n     */\n    invert() {\n        this[0] = 1.0 / this[0];\n        this[1] = 1.0 / this[1];\n        return this;\n    }\n    /**\n     * Calculates the dot product of this and another {@link Vec2}.\n     * Equivalent to `Vec2.dot(this, b);`\n     *\n     * @param b - The second operand\n     * @returns Dot product of `this` and `b`\n     */\n    dot(b) {\n        return this[0] * b[0] + this[1] * b[1];\n    }\n    /**\n     * Normalize `this`.\n     * Equivalent to `Vec2.normalize(this, this);`\n     *\n     * @returns `this`\n     */\n    normalize() {\n        return Vec2.normalize(this, this);\n    }\n    //================\n    // Static methods\n    //================\n    /**\n     * Creates a new, empty {@link Vec2}\n     * @category Static\n     *\n     * @returns A new 2D vector\n     */\n    static create() {\n        return new Vec2();\n    }\n    /**\n     * Creates a new {@link Vec2} initialized with values from an existing vector\n     * @category Static\n     *\n     * @param a - Vector to clone\n     * @returns A new 2D vector\n     */\n    static clone(a) {\n        return new Vec2(a);\n    }\n    /**\n     * Creates a new {@link Vec2} initialized with the given values\n     * @category Static\n     *\n     * @param x - X component\n     * @param y - Y component\n     * @returns A new 2D vector\n     */\n    static fromValues(x, y) {\n        return new Vec2(x, y);\n    }\n    /**\n     * Copy the values from one {@link Vec2} to another\n     * @category Static\n     *\n     * @param out - the receiving vector\n     * @param a - The source vector\n     * @returns `out`\n     */\n    static copy(out, a) {\n        out[0] = a[0];\n        out[1] = a[1];\n        return out;\n    }\n    /**\n     * Set the components of a {@link Vec2} to the given values\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param x - X component\n     * @param y - Y component\n     * @returns `out`\n     */\n    static set(out, x, y) {\n        out[0] = x;\n        out[1] = y;\n        return out;\n    }\n    /**\n     * Adds two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static add(out, a, b) {\n        out[0] = a[0] + b[0];\n        out[1] = a[1] + b[1];\n        return out;\n    }\n    /**\n     * Subtracts vector b from vector a\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static subtract(out, a, b) {\n        out[0] = a[0] - b[0];\n        out[1] = a[1] - b[1];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec2.subtract}\n     * @category Static\n     */\n    static sub(out, a, b) { return [0, 0]; }\n    /**\n     * Multiplies two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static multiply(out, a, b) {\n        out[0] = a[0] * b[0];\n        out[1] = a[1] * b[1];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec2.multiply}\n     * @category Static\n     */\n    static mul(out, a, b) { return [0, 0]; }\n    /**\n     * Divides two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static divide(out, a, b) {\n        out[0] = a[0] / b[0];\n        out[1] = a[1] / b[1];\n        return out;\n    }\n    /**\n     * Alias for {@link Vec2.divide}\n     * @category Static\n     */\n    static div(out, a, b) { return [0, 0]; }\n    /**\n     * Math.ceil the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to ceil\n     * @returns `out`\n     */\n    static ceil(out, a) {\n        out[0] = Math.ceil(a[0]);\n        out[1] = Math.ceil(a[1]);\n        return out;\n    }\n    /**\n     * Math.floor the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to floor\n     * @returns `out`\n     */\n    static floor(out, a) {\n        out[0] = Math.floor(a[0]);\n        out[1] = Math.floor(a[1]);\n        return out;\n    }\n    /**\n     * Returns the minimum of two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static min(out, a, b) {\n        out[0] = Math.min(a[0], b[0]);\n        out[1] = Math.min(a[1], b[1]);\n        return out;\n    }\n    /**\n     * Returns the maximum of two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static max(out, a, b) {\n        out[0] = Math.max(a[0], b[0]);\n        out[1] = Math.max(a[1], b[1]);\n        return out;\n    }\n    /**\n     * Math.round the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to round\n     * @returns `out`\n     */\n    static round(out, a) {\n        out[0] = Math.round(a[0]);\n        out[1] = Math.round(a[1]);\n        return out;\n    }\n    /**\n     * Scales a {@link Vec2} by a scalar number\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to scale\n     * @param b - Amount to scale the vector by\n     * @returns `out`\n     */\n    static scale(out, a, b) {\n        out[0] = a[0] * b;\n        out[1] = a[1] * b;\n        return out;\n    }\n    /**\n     * Adds two Vec2's after scaling the second operand by a scalar value\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @param scale - The amount to scale b by before adding\n     * @returns `out`\n     */\n    static scaleAndAdd(out, a, b, scale) {\n        out[0] = a[0] + b[0] * scale;\n        out[1] = a[1] + b[1] * scale;\n        return out;\n    }\n    /**\n     * Calculates the euclidian distance between two {@link Vec2}s\n     * @category Static\n     *\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns distance between `a` and `b`\n     */\n    static distance(a, b) {\n        return Math.hypot(b[0] - a[0], b[1] - a[1]);\n    }\n    /**\n     * Alias for {@link Vec2.distance}\n     * @category Static\n     */\n    static dist(a, b) { return 0; }\n    /**\n     * Calculates the squared euclidian distance between two {@link Vec2}s\n     * @category Static\n     *\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns Squared distance between `a` and `b`\n     */\n    static squaredDistance(a, b) {\n        const x = b[0] - a[0];\n        const y = b[1] - a[1];\n        return x * x + y * y;\n    }\n    /**\n     * Alias for {@link Vec2.distance}\n     * @category Static\n     */\n    static sqrDist(a, b) { return 0; }\n    /**\n     * Calculates the magnitude (length) of a {@link Vec2}\n     * @category Static\n     *\n     * @param a - Vector to calculate magnitude of\n     * @returns Magnitude of a\n     */\n    static magnitude(a) {\n        let x = a[0];\n        let y = a[1];\n        return Math.sqrt(x * x + y * y);\n    }\n    /**\n     * Alias for {@link Vec2.magnitude}\n     * @category Static\n     */\n    static mag(a) { return 0; }\n    /**\n     * Alias for {@link Vec2.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec2.magnitude} to avoid conflicts with builtin `length` methods/attribs\n     *\n     * @param a - vector to calculate length of\n     * @returns length of a\n     */\n    // @ts-ignore: Length conflicts with Function.length\n    static length(a) { return 0; }\n    /**\n     * Alias for {@link Vec2.magnitude}\n     * @category Static\n     * @deprecated Use {@link Vec2.mag}\n     */\n    static len(a) { return 0; }\n    /**\n     * Calculates the squared length of a {@link Vec2}\n     * @category Static\n     *\n     * @param a - Vector to calculate squared length of\n     * @returns Squared length of a\n     */\n    static squaredLength(a) {\n        const x = a[0];\n        const y = a[1];\n        return x * x + y * y;\n    }\n    /**\n     * Alias for {@link Vec2.squaredLength}\n     */\n    static sqrLen(a, b) { return 0; }\n    /**\n     * Negates the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to negate\n     * @returns `out`\n     */\n    static negate(out, a) {\n        out[0] = -a[0];\n        out[1] = -a[1];\n        return out;\n    }\n    /**\n     * Returns the inverse of the components of a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to invert\n     * @returns `out`\n     */\n    static inverse(out, a) {\n        out[0] = 1.0 / a[0];\n        out[1] = 1.0 / a[1];\n        return out;\n    }\n    /**\n     * Normalize a {@link Vec2}\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - Vector to normalize\n     * @returns `out`\n     */\n    static normalize(out, a) {\n        const x = a[0];\n        const y = a[1];\n        let len = x * x + y * y;\n        if (len > 0) {\n            //TODO: evaluate use of glm_invsqrt here?\n            len = 1 / Math.sqrt(len);\n        }\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        return out;\n    }\n    /**\n     * Calculates the dot product of two {@link Vec2}s\n     * @category Static\n     *\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns Dot product of `a` and `b`\n     */\n    static dot(a, b) {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n    /**\n     * Computes the cross product of two {@link Vec2}s\n     * Note that the cross product must by definition produce a 3D vector.\n     * For this reason there is also not instance equivalent for this function.\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns `out`\n     */\n    static cross(out, a, b) {\n        const z = a[0] * b[1] - a[1] * b[0];\n        out[0] = out[1] = 0;\n        out[2] = z;\n        return out;\n    }\n    /**\n     * Performs a linear interpolation between two {@link Vec2}s\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @param a - The first operand\n     * @param b - The second operand\n     * @param t - Interpolation amount, in the range [0-1], between the two inputs\n     * @returns `out`\n     */\n    static lerp(out, a, b, t) {\n        const ax = a[0];\n        const ay = a[1];\n        out[0] = ax + t * (b[0] - ax);\n        out[1] = ay + t * (b[1] - ay);\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec2} with a {@link Mat2}\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to transform\n     * @param m - Matrix to transform with\n     * @returns `out`\n     */\n    static transformMat2(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        out[0] = m[0] * x + m[2] * y;\n        out[1] = m[1] * x + m[3] * y;\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec2} with a {@link Mat2d}\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to transform\n     * @param m - Matrix to transform with\n     * @returns `out`\n     */\n    static transformMat2d(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        out[0] = m[0] * x + m[2] * y + m[4];\n        out[1] = m[1] * x + m[3] * y + m[5];\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec2} with a {@link Mat3}\n     * 3rd vector component is implicitly '1'\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to transform\n     * @param m - Matrix to transform with\n     * @returns `out`\n     */\n    static transformMat3(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        out[0] = m[0] * x + m[3] * y + m[6];\n        out[1] = m[1] * x + m[4] * y + m[7];\n        return out;\n    }\n    /**\n     * Transforms the {@link Vec2} with a {@link Mat4}\n     * 3rd vector component is implicitly '0'\n     * 4th vector component is implicitly '1'\n     *\n     * @param out - The receiving vector\n     * @param a - The vector to transform\n     * @param m - Matrix to transform with\n     * @returns `out`\n     */\n    static transformMat4(out, a, m) {\n        const x = a[0];\n        const y = a[1];\n        out[0] = m[0] * x + m[4] * y + m[12];\n        out[1] = m[1] * x + m[5] * y + m[13];\n        return out;\n    }\n    /**\n     * Rotate a 2D vector\n     * @category Static\n     *\n     * @param out - The receiving {@link Vec2}\n     * @param a - The {@link Vec2} point to rotate\n     * @param b - The origin of the rotation\n     * @param rad - The angle of rotation in radians\n     * @returns `out`\n     */\n    static rotate(out, a, b, rad) {\n        //Translate point to the origin\n        const p0 = a[0] - b[0];\n        const p1 = a[1] - b[1];\n        const sinC = Math.sin(rad);\n        const cosC = Math.cos(rad);\n        //perform rotation and translate to correct position\n        out[0] = p0 * cosC - p1 * sinC + b[0];\n        out[1] = p0 * sinC + p1 * cosC + b[1];\n        return out;\n    }\n    /**\n     * Get the angle between two 2D vectors\n     * @category Static\n     *\n     * @param a - The first operand\n     * @param b - The second operand\n     * @returns The angle in radians\n     */\n    static angle(a, b) {\n        const x1 = a[0];\n        const y1 = a[1];\n        const x2 = b[0];\n        const y2 = b[1];\n        // mag is the product of the magnitudes of a and b\n        const mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2);\n        // mag &&.. short circuits if mag == 0\n        const cosine = mag && (x1 * x2 + y1 * y2) / mag;\n        // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n        return Math.acos(Math.min(Math.max(cosine, -1), 1));\n    }\n    /**\n     * Set the components of a {@link Vec2} to zero\n     * @category Static\n     *\n     * @param out - The receiving vector\n     * @returns `out`\n     */\n    static zero(out) {\n        out[0] = 0.0;\n        out[1] = 0.0;\n        return out;\n    }\n    /**\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns `true` if the vectors components are ===, `false` otherwise.\n     */\n    static exactEquals(a, b) {\n        return a[0] === b[0] && a[1] === b[1];\n    }\n    /**\n     * Returns whether or not the vectors have approximately the same elements in the same position.\n     * @category Static\n     *\n     * @param a - The first vector.\n     * @param b - The second vector.\n     * @returns `true` if the vectors are approximately equal, `false` otherwise.\n     */\n    static equals(a, b) {\n        const a0 = a[0];\n        const a1 = a[1];\n        const b0 = b[0];\n        const b1 = b[1];\n        return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n    }\n    /**\n     * Returns a string representation of a vector\n     * @category Static\n     *\n     * @param a - Vector to represent as a string\n     * @returns String representation of the vector\n     */\n    static str(a) {\n        return `Vec2(${a.join(', ')})`;\n    }\n}\n// Instance method alias assignments\nVec2.prototype.sub = Vec2.prototype.subtract;\nVec2.prototype.mul = Vec2.prototype.multiply;\nVec2.prototype.div = Vec2.prototype.divide;\nVec2.prototype.dist = Vec2.prototype.distance;\nVec2.prototype.sqrDist = Vec2.prototype.squaredDistance;\n// Static method alias assignments\nVec2.sub = Vec2.subtract;\nVec2.mul = Vec2.multiply;\nVec2.div = Vec2.divide;\nVec2.dist = Vec2.distance;\nVec2.sqrDist = Vec2.squaredDistance;\nVec2.sqrLen = Vec2.squaredLength;\nVec2.mag = Vec2.magnitude;\nVec2.length = Vec2.magnitude;\nVec2.len = Vec2.magnitude;\n\n// The contents of the following section are autogenerated by scripts/gen-swizzle.js and should\n// not be modified by hand.\n// [Swizzle Autogen]\nconst VEC2_SWIZZLES = ['xx', 'xy', 'yx', 'yy', 'xxx', 'xxy', 'xyx', 'xyy', 'yxx', 'yxy', 'yyx', 'yyy', 'xxxx', 'xxxy', 'xxyx', 'xxyy', 'xyxx', 'xyxy', 'xyyx', 'xyyy', 'yxxx', 'yxxy', 'yxyx', 'yxyy', 'yyxx', 'yyxy', 'yyyx', 'yyyy', 'rr', 'rg', 'gr', 'gg', 'rrr', 'rrg', 'rgr', 'rgg', 'grr', 'grg', 'ggr', 'ggg', 'rrrr', 'rrrg', 'rrgr', 'rrgg', 'rgrr', 'rgrg', 'rggr', 'rggg', 'grrr', 'grrg', 'grgr', 'grgg', 'ggrr', 'ggrg', 'gggr', 'gggg'];\nconst VEC3_SWIZZLES = ['xz', 'yz', 'zx', 'zy', 'zz', 'xxz', 'xyz', 'xzx', 'xzy', 'xzz', 'yxz', 'yyz', 'yzx', 'yzy', 'yzz', 'zxx', 'zxy', 'zxz', 'zyx', 'zyy', 'zyz', 'zzx', 'zzy', 'zzz', 'xxxz', 'xxyz', 'xxzx', 'xxzy', 'xxzz', 'xyxz', 'xyyz', 'xyzx', 'xyzy', 'xyzz', 'xzxx', 'xzxy', 'xzxz', 'xzyx', 'xzyy', 'xzyz', 'xzzx', 'xzzy', 'xzzz', 'yxxz', 'yxyz', 'yxzx', 'yxzy', 'yxzz', 'yyxz', 'yyyz', 'yyzx', 'yyzy', 'yyzz', 'yzxx', 'yzxy', 'yzxz', 'yzyx', 'yzyy', 'yzyz', 'yzzx', 'yzzy', 'yzzz', 'zxxx', 'zxxy', 'zxxz', 'zxyx', 'zxyy', 'zxyz', 'zxzx', 'zxzy', 'zxzz', 'zyxx', 'zyxy', 'zyxz', 'zyyx', 'zyyy', 'zyyz', 'zyzx', 'zyzy', 'zyzz', 'zzxx', 'zzxy', 'zzxz', 'zzyx', 'zzyy', 'zzyz', 'zzzx', 'zzzy', 'zzzz', 'rb', 'gb', 'br', 'bg', 'bb', 'rrb', 'rgb', 'rbr', 'rbg', 'rbb', 'grb', 'ggb', 'gbr', 'gbg', 'gbb', 'brr', 'brg', 'brb', 'bgr', 'bgg', 'bgb', 'bbr', 'bbg', 'bbb', 'rrrb', 'rrgb', 'rrbr', 'rrbg', 'rrbb', 'rgrb', 'rggb', 'rgbr', 'rgbg', 'rgbb', 'rbrr', 'rbrg', 'rbrb', 'rbgr', 'rbgg', 'rbgb', 'rbbr', 'rbbg', 'rbbb', 'grrb', 'grgb', 'grbr', 'grbg', 'grbb', 'ggrb', 'gggb', 'ggbr', 'ggbg', 'ggbb', 'gbrr', 'gbrg', 'gbrb', 'gbgr', 'gbgg', 'gbgb', 'gbbr', 'gbbg', 'gbbb', 'brrr', 'brrg', 'brrb', 'brgr', 'brgg', 'brgb', 'brbr', 'brbg', 'brbb', 'bgrr', 'bgrg', 'bgrb', 'bggr', 'bggg', 'bggb', 'bgbr', 'bgbg', 'bgbb', 'bbrr', 'bbrg', 'bbrb', 'bbgr', 'bbgg', 'bbgb', 'bbbr', 'bbbg', 'bbbb'];\nconst VEC4_SWIZZLES = ['xw', 'yw', 'zw', 'wx', 'wy', 'wz', 'ww', 'xxw', 'xyw', 'xzw', 'xwx', 'xwy', 'xwz', 'xww', 'yxw', 'yyw', 'yzw', 'ywx', 'ywy', 'ywz', 'yww', 'zxw', 'zyw', 'zzw', 'zwx', 'zwy', 'zwz', 'zww', 'wxx', 'wxy', 'wxz', 'wxw', 'wyx', 'wyy', 'wyz', 'wyw', 'wzx', 'wzy', 'wzz', 'wzw', 'wwx', 'wwy', 'wwz', 'www', 'xxxw', 'xxyw', 'xxzw', 'xxwx', 'xxwy', 'xxwz', 'xxww', 'xyxw', 'xyyw', 'xyzw', 'xywx', 'xywy', 'xywz', 'xyww', 'xzxw', 'xzyw', 'xzzw', 'xzwx', 'xzwy', 'xzwz', 'xzww', 'xwxx', 'xwxy', 'xwxz', 'xwxw', 'xwyx', 'xwyy', 'xwyz', 'xwyw', 'xwzx', 'xwzy', 'xwzz', 'xwzw', 'xwwx', 'xwwy', 'xwwz', 'xwww', 'yxxw', 'yxyw', 'yxzw', 'yxwx', 'yxwy', 'yxwz', 'yxww', 'yyxw', 'yyyw', 'yyzw', 'yywx', 'yywy', 'yywz', 'yyww', 'yzxw', 'yzyw', 'yzzw', 'yzwx', 'yzwy', 'yzwz', 'yzww', 'ywxx', 'ywxy', 'ywxz', 'ywxw', 'ywyx', 'ywyy', 'ywyz', 'ywyw', 'ywzx', 'ywzy', 'ywzz', 'ywzw', 'ywwx', 'ywwy', 'ywwz', 'ywww', 'zxxw', 'zxyw', 'zxzw', 'zxwx', 'zxwy', 'zxwz', 'zxww', 'zyxw', 'zyyw', 'zyzw', 'zywx', 'zywy', 'zywz', 'zyww', 'zzxw', 'zzyw', 'zzzw', 'zzwx', 'zzwy', 'zzwz', 'zzww', 'zwxx', 'zwxy', 'zwxz', 'zwxw', 'zwyx', 'zwyy', 'zwyz', 'zwyw', 'zwzx', 'zwzy', 'zwzz', 'zwzw', 'zwwx', 'zwwy', 'zwwz', 'zwww', 'wxxx', 'wxxy', 'wxxz', 'wxxw', 'wxyx', 'wxyy', 'wxyz', 'wxyw', 'wxzx', 'wxzy', 'wxzz', 'wxzw', 'wxwx', 'wxwy', 'wxwz', 'wxww', 'wyxx', 'wyxy', 'wyxz', 'wyxw', 'wyyx', 'wyyy', 'wyyz', 'wyyw', 'wyzx', 'wyzy', 'wyzz', 'wyzw', 'wywx', 'wywy', 'wywz', 'wyww', 'wzxx', 'wzxy', 'wzxz', 'wzxw', 'wzyx', 'wzyy', 'wzyz', 'wzyw', 'wzzx', 'wzzy', 'wzzz', 'wzzw', 'wzwx', 'wzwy', 'wzwz', 'wzww', 'wwxx', 'wwxy', 'wwxz', 'wwxw', 'wwyx', 'wwyy', 'wwyz', 'wwyw', 'wwzx', 'wwzy', 'wwzz', 'wwzw', 'wwwx', 'wwwy', 'wwwz', 'wwww', 'ra', 'ga', 'ba', 'ar', 'ag', 'ab', 'aa', 'rra', 'rga', 'rba', 'rar', 'rag', 'rab', 'raa', 'gra', 'gga', 'gba', 'gar', 'gag', 'gab', 'gaa', 'bra', 'bga', 'bba', 'bar', 'bag', 'bab', 'baa', 'arr', 'arg', 'arb', 'ara', 'agr', 'agg', 'agb', 'aga', 'abr', 'abg', 'abb', 'aba', 'aar', 'aag', 'aab', 'aaa', 'rrra', 'rrga', 'rrba', 'rrar', 'rrag', 'rrab', 'rraa', 'rgra', 'rgga', 'rgba', 'rgar', 'rgag', 'rgab', 'rgaa', 'rbra', 'rbga', 'rbba', 'rbar', 'rbag', 'rbab', 'rbaa', 'rarr', 'rarg', 'rarb', 'rara', 'ragr', 'ragg', 'ragb', 'raga', 'rabr', 'rabg', 'rabb', 'raba', 'raar', 'raag', 'raab', 'raaa', 'grra', 'grga', 'grba', 'grar', 'grag', 'grab', 'graa', 'ggra', 'ggga', 'ggba', 'ggar', 'ggag', 'ggab', 'ggaa', 'gbra', 'gbga', 'gbba', 'gbar', 'gbag', 'gbab', 'gbaa', 'garr', 'garg', 'garb', 'gara', 'gagr', 'gagg', 'gagb', 'gaga', 'gabr', 'gabg', 'gabb', 'gaba', 'gaar', 'gaag', 'gaab', 'gaaa', 'brra', 'brga', 'brba', 'brar', 'brag', 'brab', 'braa', 'bgra', 'bgga', 'bgba', 'bgar', 'bgag', 'bgab', 'bgaa', 'bbra', 'bbga', 'bbba', 'bbar', 'bbag', 'bbab', 'bbaa', 'barr', 'barg', 'barb', 'bara', 'bagr', 'bagg', 'bagb', 'baga', 'babr', 'babg', 'babb', 'baba', 'baar', 'baag', 'baab', 'baaa', 'arrr', 'arrg', 'arrb', 'arra', 'argr', 'argg', 'argb', 'arga', 'arbr', 'arbg', 'arbb', 'arba', 'arar', 'arag', 'arab', 'araa', 'agrr', 'agrg', 'agrb', 'agra', 'aggr', 'aggg', 'aggb', 'agga', 'agbr', 'agbg', 'agbb', 'agba', 'agar', 'agag', 'agab', 'agaa', 'abrr', 'abrg', 'abrb', 'abra', 'abgr', 'abgg', 'abgb', 'abga', 'abbr', 'abbg', 'abbb', 'abba', 'abar', 'abag', 'abab', 'abaa', 'aarr', 'aarg', 'aarb', 'aara', 'aagr', 'aagg', 'aagb', 'aaga', 'aabr', 'aabg', 'aabb', 'aaba', 'aaar', 'aaag', 'aaab', 'aaaa'];\n// [/Swizzle Autogen]\nconst SWIZZLE_INDEX = {\n    x: 0, r: 0,\n    y: 1, g: 1,\n    z: 2, b: 2,\n    w: 3, a: 3,\n};\nfunction getSwizzleImpl(swizzle) {\n    switch (swizzle.length) {\n        case 2:\n            return function () { return new Vec2(this[SWIZZLE_INDEX[swizzle[0]]], this[SWIZZLE_INDEX[swizzle[1]]]); };\n        case 3:\n            return function () { return new Vec3(this[SWIZZLE_INDEX[swizzle[0]]], this[SWIZZLE_INDEX[swizzle[1]]], this[SWIZZLE_INDEX[swizzle[2]]]); };\n        case 4:\n            return function () { return new Vec4(this[SWIZZLE_INDEX[swizzle[0]]], this[SWIZZLE_INDEX[swizzle[1]]], this[SWIZZLE_INDEX[swizzle[2]]], this[SWIZZLE_INDEX[swizzle[3]]]); };\n    }\n}\nlet swizzlesEnabled = false;\n/**\n * Enables Swizzle operations on {@link Vec2}, {@link Vec3}, and {@link Vec4} types.\n *\n * Swizzle operations are performed by using the `.` operator in conjunction with any combination\n * of between two to four component names, either from the set `xyzw` or `rgbw` (though not intermixed).\n * They return a new vector with the same number of components as specified in the swizzle attribute.\n *\n * @example\n * ```js\n * import { Vec3, EnableSwizzles } from 'gl-matrix';\n *\n * EnableSwizzles();\n *\n * let v = new Vec3(0, 1, 2);\n *\n * v.yx // returns new Vec2(1, 0);\n * v.xzy // returns new Vec3(0, 2, 1);\n * v.zyxz // returns new Vec4(2, 1, 0, 2);\n *\n * v.rgb // returns new Vec3(0, 1, 2);\n * v.rbg // returns new Vec3(0, 2, 1);\n * v.gg // returns new Vec2(1, 1);\n * ```\n */\nfunction EnableSwizzles() {\n    if (swizzlesEnabled) {\n        return;\n    }\n    for (const swizzle of VEC2_SWIZZLES) {\n        const impl = getSwizzleImpl(swizzle);\n        Object.defineProperty(Vec2.prototype, swizzle, {\n            get: impl\n        });\n        Object.defineProperty(Vec3.prototype, swizzle, {\n            get: impl\n        });\n        Object.defineProperty(Vec4.prototype, swizzle, {\n            get: impl\n        });\n    }\n    for (const swizzle of VEC3_SWIZZLES) {\n        const impl = getSwizzleImpl(swizzle);\n        Object.defineProperty(Vec3.prototype, swizzle, {\n            get: impl\n        });\n        Object.defineProperty(Vec4.prototype, swizzle, {\n            get: impl\n        });\n    }\n    for (const swizzle of VEC4_SWIZZLES) {\n        const impl = getSwizzleImpl(swizzle);\n        Object.defineProperty(Vec4.prototype, swizzle, {\n            get: impl\n        });\n    }\n    swizzlesEnabled = true;\n}\n\nexport { EnableSwizzles, Mat2, Mat2d, Mat3, Mat4, Quat, Quat2, Vec2, Vec3, Vec4 };\n//# sourceMappingURL=index.js.map\n","/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns current time equivalent to `performance.now()`.\n */\nasync function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime = performance.now();\n   for (;--cntr >= 0;)\n   {\n      currentTime = await new Promise((resolve) => requestAnimationFrame(resolve));\n   }\n\n   return currentTime;\n}\n\nexport { nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","/**\n * Clamps a value between min / max values.\n *\n * @param {number}   value - Value to clamp.\n *\n * @param {number}   min - Minimum value.\n *\n * @param {number}   max - Maximum value.\n *\n * @returns {number} Clamped value.\n */\nfunction clamp(value = 0, min = 0, max = 0)\n{\n   return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Converts the given number from degrees to radians.\n *\n * @param {number}   deg - Degree number to convert\n *\n * @returns {number} Degree as radians.\n */\nfunction degToRad(deg)\n{\n   return deg * (Math.PI / 180.0);\n}\n\n/**\n * Converts the given number from radians to degrees.\n *\n * @param {number}   rad - Radian number to convert.\n *\n * @returns {number} Degree as radians.\n */\nfunction radToDeg(rad)\n{\n   return rad * (180.0 / Math.PI);\n}\n\nexport { clamp, degToRad, radToDeg };\n//# sourceMappingURL=index.js.map\n","import { propertyStore } from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\nimport { isObject, isPlainObject, isIterable, hasSetter } from '@typhonjs-fvtt/runtime/util/object';\nimport { subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/util/store';\nimport { cubicOut, linear } from 'svelte/easing';\nimport { lerp } from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { writable } from 'svelte/store';\nimport { StyleParse } from '@typhonjs-fvtt/runtime/util/browser';\nimport { Mat4, Vec3 } from '@typhonjs-fvtt/runtime/math/gl-matrix';\nimport { nextAnimationFrame } from '@typhonjs-fvtt/runtime/util/animate';\nimport { degToRad, clamp } from '@typhonjs-fvtt/runtime/math/util';\n\n/**\n * Provides a TJSBasicAnimation implementation for TJSPosition animation.\n */\nclass AnimationControl\n{\n   /** @type {object} */\n   #animationData;\n\n   /** @type {Promise<void>} */\n   #finishedPromise;\n\n   #willFinish;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationControl}\n    */\n   static #voidControl = new AnimationControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationControl that is automatically resolved.\n    *\n    * @returns {AnimationControl} Void AnimationControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {object|null} [animationData] - Animation data from {@link AnimationAPI}.\n    *\n    * @param {boolean}     [willFinish] - Promise that tracks animation finished state.\n    */\n   constructor(animationData, willFinish = false)\n   {\n      this.#animationData = animationData;\n      this.#willFinish = willFinish;\n\n      // Set this control to animation data.\n      if (isObject(animationData)) { animationData.control = this; }\n   }\n\n   /**\n    * Get a promise that resolves when animation is finished.\n    *\n    * @returns {Promise<void>}\n    */\n   get finished()\n   {\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         this.#finishedPromise = this.#willFinish ? new Promise((resolve) => this.#animationData.resolve = resolve) :\n          Promise.resolve();\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether this animation is currently active / animating.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationControl.isFinished} to determine\n    * if an animation is actually finished.\n    *\n    * @returns {boolean} Animation active state.\n    */\n   get isActive() { return this.#animationData.active; }\n\n   /**\n    * Returns whether this animation is completely finished.\n    *\n    * @returns {boolean} Animation finished state.\n    */\n   get isFinished() { return this.#animationData.finished; }\n\n   /**\n    * Cancels the animation.\n    */\n   cancel()\n   {\n      const animationData = this.#animationData;\n\n      if (animationData === null || animationData === void 0) { return; }\n\n      // Set cancelled state to true and this animation data instance will be removed from AnimationManager on next\n      // update.\n      animationData.cancelled = true;\n   }\n}\n\n/**\n * Provides animation management and scheduling allowing all TJSPosition instances to utilize one micro-task.\n */\nclass AnimationManager\n{\n   /**\n    * @type {object[]}\n    */\n   static activeList = [];\n\n   /**\n    * @type {object[]}\n    */\n   static newList = [];\n\n   /**\n    * @type {number}\n    */\n   static current;\n\n   /**\n    * Add animation data.\n    *\n    * @param {object}   data -\n    */\n   static add(data)\n   {\n      const now = performance.now();\n\n      // Offset start time by delta between last rAF time. This allows continuous tween cycles to appear naturally as\n      // starting from the instant they are added to the AnimationManager. This is what makes `draggable` smooth when\n      // easing is enabled.\n      data.start = now + (AnimationManager.current - now);\n\n      AnimationManager.newList.push(data);\n   }\n\n   /**\n    * Manage all animation\n    */\n   static animate()\n   {\n      const current = AnimationManager.current = performance.now();\n\n      // Early out of the rAF callback when there are no current animations.\n      if (AnimationManager.activeList.length === 0 && AnimationManager.newList.length === 0)\n      {\n         globalThis.requestAnimationFrame(AnimationManager.animate);\n         return;\n      }\n\n      if (AnimationManager.newList.length)\n      {\n         // Process new data\n         for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n         {\n            const data = AnimationManager.newList[cntr];\n\n            // If animation instance has been cancelled before start then remove it from new list and cleanup.\n            if (data.cancelled)\n            {\n               AnimationManager.newList.splice(cntr, 1);\n               data.cleanup(data);\n            }\n\n            // If data is active then process it now. Delayed animations start with `active` false.\n            if (data.active)\n            {\n               // Remove from new list and add to active list.\n               AnimationManager.newList.splice(cntr, 1);\n               AnimationManager.activeList.push(data);\n            }\n         }\n      }\n\n      // Process active animations.\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n\n         // Remove any animations that have been canceled.\n         // Ensure that the element is still connected otherwise remove it from active list and continue.\n         if (data.cancelled || (data.el !== void 0 && !data.el.isConnected))\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n            continue;\n         }\n\n         data.current = current - data.start;\n\n         // Remove this animation instance if current animating time exceeds duration.\n         if (data.current >= data.duration)\n         {\n            // Prepare final update with end position data.\n            for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n            {\n               const key = data.keys[dataCntr];\n               data.newData[key] = data.destination[key];\n            }\n\n            data.position.set(data.newData);\n\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cleanup(data);\n\n            continue;\n         }\n\n         // Apply easing to create an eased time.\n         const easedTime = data.ease(data.current / data.duration);\n\n         for (let dataCntr = data.keys.length; --dataCntr >= 0;)\n         {\n            const key = data.keys[dataCntr];\n            data.newData[key] = data.interpolate(data.initial[key], data.destination[key], easedTime);\n         }\n\n         data.position.set(data.newData);\n      }\n\n      globalThis.requestAnimationFrame(AnimationManager.animate);\n   }\n\n   /**\n    * Cancels all animations for given TJSPosition instance.\n    *\n    * @param {import('../').TJSPosition} position - TJSPosition instance.\n    */\n   static cancel(position)\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.activeList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            AnimationManager.newList.splice(cntr, 1);\n            data.cancelled = true;\n            data.cleanup(data);\n         }\n      }\n   }\n\n   /**\n    * Cancels all active and delayed animations.\n    */\n   static cancelAll()\n   {\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         data.cancelled = true;\n         data.cleanup(data);\n      }\n\n      AnimationManager.activeList.length = 0;\n      AnimationManager.newList.length = 0;\n   }\n\n   /**\n    * Gets all {@link AnimationControl} instances for a given TJSPosition instance.\n    *\n    * @param {import('../index.js').TJSPosition} position - TJSPosition instance.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation[]} All scheduled AnimationControl instances for the\n    *          given TJSPosition instance.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      for (let cntr = AnimationManager.activeList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.activeList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      for (let cntr = AnimationManager.newList.length; --cntr >= 0;)\n      {\n         const data = AnimationManager.newList[cntr];\n         if (data.position === position)\n         {\n            results.push(data.control);\n         }\n      }\n\n      return results;\n   }\n}\n\n// Start animation manager immediately. It constantly is running in background.\nAnimationManager.animate();\n\n/**\n * Stores the TJSPositionData properties that can be animated.\n *\n * @type {Set<string>}\n */\nconst animateKeys = new Set([\n   // Main keys\n   'left', 'top', 'maxWidth', 'maxHeight', 'minWidth', 'minHeight', 'width', 'height',\n   'rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ', 'zIndex',\n\n   // Aliases\n   'rotation'\n]);\n\n/**\n * Defines the keys of TJSPositionData that are transform keys.\n *\n * @type {string[]}\n */\nconst transformKeys = ['rotateX', 'rotateY', 'rotateZ', 'scale', 'translateX', 'translateY', 'translateZ'];\n\nObject.freeze(transformKeys);\n\n/**\n * Parses a relative value string in the form of '+=', '-=', or '*=' and float / numeric value. IE '+=0.2'.\n *\n * @type {RegExp}\n */\nconst relativeRegex = /^([-+*])=(-?[\\d]*\\.?[\\d]+)$/;\n\n/**\n * Provides numeric defaults for all parameters. This is used by {@link TJSPosition.get} to optionally\n * provide numeric defaults.\n *\n * @type {{rotation: number, scale: number, minWidth: null, minHeight: null, translateZ: number, top: number, left: number, maxHeight: null, translateY: number, translateX: number, width: number, transformOrigin: null, rotateX: number, rotateY: number, height: number, maxWidth: null, zIndex: null, rotateZ: number}}\n */\nconst numericDefaults = {\n   // Other keys\n   height: 0,\n   left: 0,\n   maxHeight: null,\n   maxWidth: null,\n   minHeight: null,\n   minWidth: null,\n   top: 0,\n   transformOrigin: null,\n   width: 0,\n   zIndex: null,\n\n   rotateX: 0,\n   rotateY: 0,\n   rotateZ: 0,\n   scale: 1,\n   translateX: 0,\n   translateY: 0,\n   translateZ: 0,\n\n   rotation: 0\n};\n\nObject.freeze(numericDefaults);\n\n/**\n * Sets numeric defaults for a {@link TJSPositionData} like object.\n *\n * @param {object}   data - A TJSPositionData like object.\n */\nfunction setNumericDefaults(data)\n{\n   // Transform keys\n   if (data.rotateX === null) { data.rotateX = 0; }\n   if (data.rotateY === null) { data.rotateY = 0; }\n   if (data.rotateZ === null) { data.rotateZ = 0; }\n   if (data.translateX === null) { data.translateX = 0; }\n   if (data.translateY === null) { data.translateY = 0; }\n   if (data.translateZ === null) { data.translateZ = 0; }\n   if (data.scale === null) { data.scale = 1; }\n\n   // Aliases\n   if (data.rotation === null) { data.rotation = 0; }\n}\n\n/**\n * Defines bitwise keys for transforms used in {@link TJSTransforms.getMat4}.\n *\n * @type {object}\n */\nconst transformKeysBitwise = {\n   rotateX: 1,\n   rotateY: 2,\n   rotateZ: 4,\n   scale: 8,\n   translateX: 16,\n   translateY: 32,\n   translateZ: 64\n};\n\nObject.freeze(transformKeysBitwise);\n\n/**\n * Defines the default transform origin.\n *\n * @type {string}\n */\nconst transformOriginDefault = 'top left';\n\n/**\n * Defines the valid transform origins.\n *\n * @type {string[]}\n */\nconst transformOrigins = ['top left', 'top center', 'top right', 'center left', 'center', 'center right', 'bottom left',\n 'bottom center', 'bottom right'];\n\nObject.freeze(transformOrigins);\n\n/**\n * Converts any relative string values for animatable keys to actual updates performed against current data.\n *\n * @param {import('./').TJSPositionDataExtended}    positionData - position data.\n *\n * @param {import('./').TJSPosition | import('./').TJSPositionData}   position - The source position instance.\n */\nfunction convertRelative(positionData, position)\n{\n   for (const key in positionData)\n   {\n      // Key is animatable / numeric.\n      if (animateKeys.has(key))\n      {\n         const value = positionData[key];\n\n         if (typeof value !== 'string') { continue; }\n\n         // Ignore 'auto' and 'inherit' string values.\n         if (value === 'auto' || value === 'inherit') { continue; }\n\n         const regexResults = relativeRegex.exec(value);\n\n         if (!regexResults)\n         {\n            throw new Error(\n             `convertRelative error: malformed relative key (${key}) with value (${value})`);\n         }\n\n         const current = position[key];\n\n         switch (regexResults[1])\n         {\n            case '-':\n               positionData[key] = current - parseFloat(regexResults[2]);\n               break;\n\n            case '+':\n               positionData[key] = current + parseFloat(regexResults[2]);\n               break;\n\n            case '*':\n               positionData[key] = current * parseFloat(regexResults[2]);\n               break;\n         }\n      }\n   }\n}\n\nclass AnimationAPI\n{\n   /** @type {import('../').TJSPositionData} */\n   #data;\n\n   /** @type {import('../').TJSPosition} */\n   #position;\n\n   /**\n    * Tracks the number of animation control instances that are active.\n    *\n    * @type {number}\n    */\n   #instanceCount = 0;\n\n   /**\n    * Provides a bound function to pass as data to AnimationManager to invoke `AnimationAPI.#cleanupInstance`.\n    *\n    * @type {Function}\n    */\n   #cleanup;\n\n   /**\n    * @param {import('../index.js').TJSPosition}       position -\n    *\n    * @param {import('../index.js').TJSPositionData}   data -\n    */\n   constructor(position, data)\n   {\n      this.#position = position;\n      this.#data = data;\n\n      this.#cleanup = this.#cleanupInstance.bind(this);\n   }\n\n   /**\n    * Returns whether there are scheduled animations whether active or delayed for this TJSPosition.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isScheduled()\n   {\n      return this.#instanceCount > 0;\n   }\n\n   /**\n    * Adds / schedules an animation w/ the AnimationManager. This contains the final steps common to all tweens.\n    *\n    * @param {object}      initial -\n    *\n    * @param {object}      destination -\n    *\n    * @param {number}      duration -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {number}      delay -\n    *\n    * @param {Function}    ease -\n    *\n    * @param {Function}    interpolate -\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation} The associated animation control.\n    */\n   #addAnimation(initial, destination, duration, el, delay, ease, interpolate)\n   {\n      // Set initial data for transform values that are often null by default.\n      setNumericDefaults(initial);\n      setNumericDefaults(destination);\n\n      // Reject all initial data that is not a number.\n      for (const key in initial)\n      {\n         if (!Number.isFinite(initial[key])) { delete initial[key]; }\n      }\n\n      const keys = Object.keys(initial);\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      // Nothing to animate, so return now.\n      if (keys.length === 0) { return AnimationControl.voidControl; }\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el,\n         finished: false,\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      if (delay > 0)\n      {\n         animationData.active = false;\n\n         // Delay w/ setTimeout and schedule w/ AnimationManager if not already canceled\n         setTimeout(() =>\n         {\n            if (!animationData.cancelled)\n            {\n               animationData.active = true;\n\n               const now = performance.now();\n\n               // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n               // precise delayed time.\n               animationData.start = now + (AnimationManager.current - now);\n            }\n         }, delay * 1000);\n      }\n\n      // Schedule immediately w/ AnimationManager\n      this.#instanceCount++;\n      AnimationManager.add(animationData);\n\n      // Create animation control\n      return new AnimationControl(animationData, true);\n   }\n\n   /**\n    * Cancels all animation instances for this TJSPosition instance.\n    */\n   cancel()\n   {\n      AnimationManager.cancel(this.#position);\n   }\n\n   /**\n    * Cleans up an animation instance.\n    *\n    * @param {object}   data - Animation data for an animation instance.\n    */\n   #cleanupInstance(data)\n   {\n      this.#instanceCount--;\n\n      data.active = false;\n      data.finished = true;\n\n      if (typeof data.resolve === 'function') { data.resolve(data.cancelled); }\n   }\n\n   /**\n    * Returns all currently scheduled AnimationControl instances for this TJSPosition instance.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation[]} All currently scheduled animation controls for\n    *          this TJSPosition instance.\n    */\n   getScheduled()\n   {\n      return AnimationManager.getScheduled(this.#position);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {import('../index.js').TJSPositionDataExtended} fromData - The starting position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   from(fromData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.from error: 'fromData' is not an object.`);\n      }\n\n      const position = this.#position;\n      const parent = position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.from error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.from error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (data[key] !== void 0 && fromData[key] !== data[key])\n         {\n            initial[key] = fromData[key];\n            destination[key] = data[key];\n         }\n      }\n\n      convertRelative(initial, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween from given position data to the current position.\n    *\n    * @param {import('../index.js').TJSPositionDataExtended} fromData - The starting position.\n    *\n    * @param {import('../index.js').TJSPositionDataExtended} toData - The ending position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   fromTo(fromData, toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(fromData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'fromData' is not an object.`);\n      }\n\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.fromTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in fromData)\n      {\n         if (toData[key] === void 0)\n         {\n            console.warn(\n             `AnimationAPI.fromTo warning: key ('${key}') from 'fromData' missing in 'toData'; skipping this key.`);\n            continue;\n         }\n\n         if (data[key] !== void 0)\n         {\n            initial[key] = fromData[key];\n            destination[key] = toData[key];\n         }\n      }\n\n      convertRelative(initial, data);\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Provides a tween to given position data from the current position.\n    *\n    * @param {import('../index.js').TJSPositionDataExtended} toData - The destination position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.delay=0] - Delay in seconds before animation starts.\n    *\n    * @param {number}         [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}       [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation}  A control object that can cancel animation and\n    *          provides a `finished` Promise.\n    */\n   to(toData, { delay = 0, duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isObject(toData))\n      {\n         throw new TypeError(`AnimationAPI.to error: 'toData' is not an object.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return AnimationControl.voidControl;\n      }\n\n      // Cache any target element allowing AnimationManager to stop animation if it becomes disconnected from DOM.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      if (!Number.isFinite(delay) || delay < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'delay' is not a positive number.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.to error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.to error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in toData)\n      {\n         if (data[key] !== void 0 && toData[key] !== data[key])\n         {\n            destination[key] = toData[key];\n            initial[key] = data[key];\n         }\n      }\n\n      convertRelative(destination, data);\n\n      return this.#addAnimation(initial, destination, duration, el, delay, ease, interpolate);\n   }\n\n   /**\n    * Returns a function that provides an optimized way to constantly update a to-tween.\n    *\n    * @param {Iterable<string>}  keys - The keys for quickTo.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {number}            [opts.duration=1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=cubicOut] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('../index.js').quickToCallback} quick-to tween function.\n    */\n   quickTo(keys, { duration = 1, ease = cubicOut, interpolate = lerp } = {})\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      const parent = this.#position.parent;\n\n      // Early out if the application is not positionable.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         throw new Error(`AnimationAPI.quickTo error: 'parent' is not positionable.`);\n      }\n\n      if (!Number.isFinite(duration) || duration < 0)\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'duration' is not a positive number.`);\n      }\n\n      if (typeof ease !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'ease' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`AnimationAPI.quickTo error: 'interpolate' is not a function.`);\n      }\n\n      const initial = {};\n      const destination = {};\n\n      const data = this.#data;\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key of keys)\n      {\n         if (typeof key !== 'string')\n         {\n            throw new TypeError(`AnimationAPI.quickTo error: key is not a string.`);\n         }\n\n         if (!animateKeys.has(key))\n         {\n            throw new Error(`AnimationAPI.quickTo error: key ('${key}') is not animatable.`);\n         }\n\n         if (data[key] !== void 0)\n         {\n            destination[key] = data[key];\n            initial[key] = data[key];\n         }\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const newData = Object.assign({ immediateElementUpdate: true }, initial);\n\n      const animationData = {\n         active: true,\n         cleanup: this.#cleanup,\n         cancelled: false,\n         control: void 0,\n         current: 0,\n         destination,\n         duration: duration * 1000, // Internally the AnimationManager works in ms.\n         ease,\n         el: void 0,\n         finished: true, // Note: start in finished state to add to AnimationManager on first callback.\n         initial,\n         interpolate,\n         keys,\n         newData,\n         position: this.#position,\n         resolve: void 0,\n         start: void 0\n      };\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         for (let cntr = keysArray.length; --cntr >= 0;)\n         {\n            const key = keysArray[cntr];\n            if (data[key] !== void 0) { initial[key] = data[key]; }\n         }\n\n         // Handle case where the first arg is an object. Update all quickTo keys from data contained in the object.\n         if (isObject(args[0]))\n         {\n            const objData = args[0];\n\n            for (const key in objData)\n            {\n               if (destination[key] !== void 0) { destination[key] = objData[key]; }\n            }\n         }\n         else // Assign each variable argument to the key specified in the initial `keys` array above.\n         {\n            for (let cntr = 0; cntr < argsLength && cntr < keysArray.length; cntr++)\n            {\n               const key = keysArray[cntr];\n               if (destination[key] !== void 0) { destination[key] = args[cntr]; }\n            }\n         }\n\n         convertRelative(destination, data);\n\n         // Set initial data for transform values that are often null by default.\n         setNumericDefaults(initial);\n         setNumericDefaults(destination);\n\n         // Set target element to animation data to track if it is removed from the DOM hence ending the animation.\n         const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n         animationData.el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n         // Reschedule the quickTo animation with AnimationManager as it is finished.\n         if (animationData.finished)\n         {\n            animationData.finished = false;\n            animationData.active = true;\n            animationData.current = 0;\n\n            this.#instanceCount++;\n            AnimationManager.add(animationData);\n         }\n         else // QuickTo animation is currently scheduled w/ AnimationManager so reset start and current time.\n         {\n            const now = performance.now();\n\n            // Offset start time by delta between last rAF time. This allows a delayed tween to start from the\n            // precise delayed time.\n            animationData.start = now + (AnimationManager.current - now);\n            animationData.current = 0;\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object}            [opts] - Optional parameters.\n       *\n       * @param {number}            [opts.duration] - Duration in seconds.\n       *\n       * @param {Function}          [opts.ease] - Easing function.\n       *\n       * @param {Function}          [opts.interpolate] - Interpolation function.\n       *\n       * @returns {import('../').quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = ({ duration, ease, interpolate } = {}) => // eslint-disable-line no-shadow\n      {\n         if (duration !== void 0 && (!Number.isFinite(duration) || duration < 0))\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'duration' is not a positive number.`);\n         }\n\n         if (ease !== void 0 && typeof ease !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'ease' is not a function.`);\n         }\n\n         if (interpolate !== void 0 && typeof interpolate !== 'function')\n         {\n            throw new TypeError(`AnimationAPI.quickTo.options error: 'interpolate' is not a function.`);\n         }\n\n         if (duration >= 0) { animationData.duration = duration * 1000; }\n         if (ease) { animationData.ease = ease; }\n         if (interpolate) { animationData.interpolate = interpolate; }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\n/**\n * Provides a TJSBasicAnimation implementation for a TJSPosition animation for a group of TJSPosition instances.\n */\nclass AnimationGroupControl\n{\n   /** @type {import('./AnimationControl').AnimationControl[]} */\n   #animationControls;\n\n   /** @type {Promise<Awaited<unknown>[]>} */\n   #finishedPromise;\n\n   /**\n    * Defines a static empty / void animation control.\n    *\n    * @type {AnimationGroupControl}\n    */\n   static #voidControl = new AnimationGroupControl(null);\n\n   /**\n    * Provides a static void / undefined AnimationGroupControl that is automatically resolved.\n    *\n    * @returns {AnimationGroupControl} Void AnimationGroupControl\n    */\n   static get voidControl() { return this.#voidControl; }\n\n   /**\n    * @param {import('./AnimationControl').AnimationControl[]} animationControls - An array of AnimationControl\n    *        instances.\n    */\n   constructor(animationControls)\n   {\n      this.#animationControls = animationControls;\n   }\n\n   /**\n    * Get a promise that resolves when all animations are finished.\n    *\n    * @returns {Promise<Awaited<unknown>[]>|Promise<void>} Finished Promise for all animations.\n    */\n   get finished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return Promise.resolve(); }\n\n      if (!(this.#finishedPromise instanceof Promise))\n      {\n         const promises = [];\n         for (let cntr = animationControls.length; --cntr >= 0;)\n         {\n            promises.push(animationControls[cntr].finished);\n         }\n\n         this.#finishedPromise = Promise.all(promises);\n      }\n\n      return this.#finishedPromise;\n   }\n\n   /**\n    * Returns whether there are active animation instances for this group.\n    *\n    * Note: a delayed animation may not be started / active yet. Use {@link AnimationGroupControl.isFinished} to\n    * determine if all animations in the group are finished.\n    *\n    * @returns {boolean} Are there active animation instances.\n    */\n   get isActive()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return false; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (animationControls[cntr].isActive) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Returns whether all animations in the group are finished.\n    *\n    * @returns {boolean} Are all animation instances finished.\n    */\n   get isFinished()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return true; }\n\n      for (let cntr = animationControls.length; --cntr >= 0;)\n      {\n         if (!animationControls[cntr].isFinished) { return false; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Cancels the all animations.\n    */\n   cancel()\n   {\n      const animationControls = this.#animationControls;\n\n      if (animationControls === null || animationControls === void 0) { return; }\n\n      for (let cntr = this.#animationControls.length; --cntr >= 0;)\n      {\n         this.#animationControls[cntr].cancel();\n      }\n   }\n}\n\n/**\n * Provides a public API for grouping multiple {@link TJSPosition} animations together with the\n * AnimationManager.\n *\n * Note: To remove cyclic dependencies as this class provides the TJSPosition static / group Animation API `instanceof`\n * checks are not done against TJSPosition. Instead, a check for the animate property being an instanceof\n * {@link AnimationAPI} is performed in {@link AnimationGroupAPI.#isPosition}.\n *\n * @see AnimationAPI\n */\nclass AnimationGroupAPI\n{\n   /**\n    * Checks of the given object is a TJSPosition instance by checking for AnimationAPI.\n    *\n    * @param {*}  object - Any data.\n    *\n    * @returns {boolean} Is TJSPosition.\n    */\n   static #isPosition(object)\n   {\n      return isObject(object) && object.animate instanceof AnimationAPI;\n   }\n\n   /**\n    * Cancels any animation for given TJSPosition data.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    */\n   static cancel(position)\n   {\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const actualPosition = this.#isPosition(entry) ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.cancel warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            AnimationManager.cancel(actualPosition);\n         }\n      }\n      else\n      {\n         const actualPosition = this.#isPosition(position) ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.cancel warning: No Position instance found.`);\n            return;\n         }\n\n         AnimationManager.cancel(actualPosition);\n      }\n   }\n\n   /**\n    * Cancels all TJSPosition animation.\n    */\n   static cancelAll() { AnimationManager.cancelAll(); }\n\n   /**\n    * Gets all animation controls for the given position data.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @returns {{ position: import('../').TJSPosition, data: object | void, controls: import('./AnimationControl').AnimationControl[]}[]} Results array.\n    */\n   static getScheduled(position)\n   {\n      const results = [];\n\n      if (isIterable(position))\n      {\n         let index = -1;\n\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            const controls = AnimationManager.getScheduled(actualPosition);\n\n            results.push({ position: actualPosition, data: isPosition ? void 0 : entry, controls });\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.getScheduled warning: No Position instance found.`);\n            return results;\n         }\n\n         const controls = AnimationManager.getScheduled(actualPosition);\n\n         results.push({ position: actualPosition, data: isPosition ? void 0 : position, controls });\n      }\n\n      return results;\n   }\n\n   /**\n    * Provides the `from` animation tween for one or more TJSPosition instances as a group.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation} Basic animation control.\n    */\n   static from(position, fromData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'fromData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.from error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('./AnimationControl').AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof fromData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.from warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (!isObject(actualFromData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.from error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.from warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (!isObject(actualFromData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.from error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.from(actualFromData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `fromTo` animation tween for one or more TJSPosition instances as a group.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @param {object|Function}   fromData -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation} Basic animation control.\n    */\n   static fromTo(position, fromData, toData, options)\n   {\n      if (!isObject(fromData) && typeof fromData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'fromData' is not an object or function.`);\n      }\n\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.fromTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('./AnimationControl').AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasFromCallback = typeof fromData === 'function';\n      const hasToCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasFromCallback || hasToCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualFromData = fromData;\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasFromCallback)\n            {\n               actualFromData = fromData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualFromData === null || actualFromData === void 0) { continue; }\n\n               if (!isObject(actualFromData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: fromData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasToCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (!isObject(actualToData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.fromTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.fromTo warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasFromCallback)\n         {\n            actualFromData = fromData(callbackOptions);\n\n            if (!isObject(actualFromData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: fromData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasToCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (!isObject(actualToData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.fromTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.fromTo(actualFromData, actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more TJSPosition instances as a group.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @param {object|Function}   toData -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {import('#runtime/util/animate').TJSBasicAnimation} Basic animation control.\n    */\n   static to(position, toData, options)\n   {\n      if (!isObject(toData) && typeof toData !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'toData' is not an object or function.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.to error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('./AnimationControl').AnimationControl[]}\n       */\n      const animationControls = [];\n\n      let index = -1;\n      let callbackOptions;\n\n      const hasDataCallback = typeof toData === 'function';\n      const hasOptionCallback = typeof options === 'function';\n      const hasCallback = hasDataCallback || hasOptionCallback;\n\n      if (hasCallback) { callbackOptions = { index, position: void 0, data: void 0 }; }\n\n      let actualToData = toData;\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.to warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            if (hasCallback)\n            {\n               callbackOptions.index = index;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : entry;\n            }\n\n            if (hasDataCallback)\n            {\n               actualToData = toData(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualToData === null || actualToData === void 0) { continue; }\n\n               if (!isObject(actualToData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: toData callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.to error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.to warning: No Position instance found.`);\n            return AnimationGroupControl.voidControl;\n         }\n\n         if (hasCallback)\n         {\n            callbackOptions.index = 0;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : position;\n         }\n\n         if (hasDataCallback)\n         {\n            actualToData = toData(callbackOptions);\n\n            if (!isObject(actualToData))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: toData callback function failed to return an object.`);\n            }\n         }\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.to error: options callback function failed to return an object.`);\n            }\n         }\n\n         animationControls.push(actualPosition.animate.to(actualToData, actualOptions));\n      }\n\n      return new AnimationGroupControl(animationControls);\n   }\n\n   /**\n    * Provides the `to` animation tween for one or more TJSPosition instances as a group.\n    *\n    * @param {import('../').TJSPosition | {position: import('../').TJSPosition} | Iterable<import('../').TJSPosition> | Iterable<{position: import('../').TJSPosition}>} position -\n    *\n    * @param {Iterable<string>}  keys -\n    *\n    * @param {object|Function}   options -\n    *\n    * @returns {import('../').quickToCallback} Basic animation control.\n    */\n   static quickTo(position, keys, options)\n   {\n      if (!isIterable(keys))\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'keys' is not an iterable list.`);\n      }\n\n      if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n      {\n         throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n      }\n\n      /**\n       * @type {import('../').quickToCallback[]}\n       */\n      const quickToCallbacks = [];\n\n      let index = -1;\n\n      const hasOptionCallback = typeof options === 'function';\n\n      const callbackOptions = { index, position: void 0, data: void 0 };\n\n      let actualOptions = options;\n\n      if (isIterable(position))\n      {\n         for (const entry of position)\n         {\n            index++;\n\n            const isPosition = this.#isPosition(entry);\n            const actualPosition = isPosition ? entry : entry.position;\n\n            if (!this.#isPosition(actualPosition))\n            {\n               console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found at index: ${index}.`);\n               continue;\n            }\n\n            callbackOptions.index = index;\n            callbackOptions.position = position;\n            callbackOptions.data = isPosition ? void 0 : entry;\n\n            if (hasOptionCallback)\n            {\n               actualOptions = options(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (actualOptions === null || actualOptions === void 0) { continue; }\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: options callback function iteration(${\n                   index}) failed to return an object.`);\n               }\n            }\n\n            quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n         }\n      }\n      else\n      {\n         const isPosition = this.#isPosition(position);\n         const actualPosition = isPosition ? position : position.position;\n\n         if (!this.#isPosition(actualPosition))\n         {\n            console.warn(`AnimationGroupAPI.quickTo warning: No Position instance found.`);\n            return () => null;\n         }\n\n         callbackOptions.index = 0;\n         callbackOptions.position = position;\n         callbackOptions.data = isPosition ? void 0 : position;\n\n         if (hasOptionCallback)\n         {\n            actualOptions = options(callbackOptions);\n\n            if (!isObject(actualOptions))\n            {\n               throw new TypeError(\n                `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n            }\n         }\n\n         quickToCallbacks.push(actualPosition.animate.quickTo(keys, actualOptions));\n      }\n\n      const keysArray = [...keys];\n\n      Object.freeze(keysArray);\n\n      const quickToCB = (...args) =>\n      {\n         const argsLength = args.length;\n\n         if (argsLength === 0) { return; }\n\n         if (typeof args[0] === 'function')\n         {\n            const dataCallback = args[0];\n\n            index = -1;\n            let cntr = 0;\n\n            if (isIterable(position))\n            {\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition)) { continue; }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  const toData = dataCallback(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (toData === null || toData === void 0) { continue; }\n\n                  /**\n                   * @type {boolean}\n                   */\n                  const toDataIterable = isIterable(toData);\n\n                  if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\n                  {\n                     throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                      index}) failed to return a finite number, iterable list, or object.`);\n                  }\n\n                  if (toDataIterable)\n                  {\n                     quickToCallbacks[cntr++](...toData);\n                  }\n                  else\n                  {\n                     quickToCallbacks[cntr++](toData);\n                  }\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition)) { return; }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               const toData = dataCallback(callbackOptions);\n\n               // Returned data from callback is null / undefined, so skip this position instance.\n               if (toData === null || toData === void 0) { return; }\n\n               const toDataIterable = isIterable(toData);\n\n               if (!Number.isFinite(toData) && !toDataIterable && !isObject(toData))\n               {\n                  throw new TypeError(`AnimationGroupAPI.quickTo error: toData callback function iteration(${\n                   index}) failed to return a finite number, iterable list, or object.`);\n               }\n\n               if (toDataIterable)\n               {\n                  quickToCallbacks[cntr++](...toData);\n               }\n               else\n               {\n                  quickToCallbacks[cntr++](toData);\n               }\n            }\n         }\n         else\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;)\n            {\n               quickToCallbacks[cntr](...args);\n            }\n         }\n      };\n\n      quickToCB.keys = keysArray;\n\n      /**\n       * Sets options of quickTo tween.\n       *\n       * @param {object|Function}   [options] - Optional parameters.\n       *\n       * @param {number}            [options.duration] - Duration in seconds.\n       *\n       * @param {Function}          [options.ease] - Easing function.\n       *\n       * @param {Function}          [options.interpolate] - Interpolation function.\n       *\n       * @returns {import('../').quickToCallback} The quickTo callback.\n       */\n      quickToCB.options = (options) => // eslint-disable-line no-shadow\n      {\n         if (options !== void 0 && !isObject(options) && typeof options !== 'function')\n         {\n            throw new TypeError(`AnimationGroupAPI.quickTo error: 'options' is not an object or function.`);\n         }\n\n         // Set options object for each quickTo callback.\n         if (isObject(options))\n         {\n            for (let cntr = quickToCallbacks.length; --cntr >= 0;) { quickToCallbacks[cntr].options(options); }\n         }\n         else if (typeof options === 'function')\n         {\n            if (isIterable(position))\n            {\n               index = -1;\n               let cntr = 0;\n\n               for (const entry of position)\n               {\n                  index++;\n\n                  const isPosition = this.#isPosition(entry);\n                  const actualPosition = isPosition ? entry : entry.position;\n\n                  if (!this.#isPosition(actualPosition))\n                  {\n                     console.warn(\n                      `AnimationGroupAPI.quickTo.options warning: No Position instance found at index: ${index}.`);\n                     continue;\n                  }\n\n                  callbackOptions.index = index;\n                  callbackOptions.position = position;\n                  callbackOptions.data = isPosition ? void 0 : entry;\n\n                  actualOptions = options(callbackOptions);\n\n                  // Returned data from callback is null / undefined, so skip this position instance.\n                  if (actualOptions === null || actualOptions === void 0) { continue; }\n\n                  if (!isObject(actualOptions))\n                  {\n                     throw new TypeError(\n                      `AnimationGroupAPI.quickTo.options error: options callback function iteration(${\n                       index}) failed to return an object.`);\n                  }\n\n                  quickToCallbacks[cntr++].options(actualOptions);\n               }\n            }\n            else\n            {\n               const isPosition = this.#isPosition(position);\n               const actualPosition = isPosition ? position : position.position;\n\n               if (!this.#isPosition(actualPosition))\n               {\n                  console.warn(`AnimationGroupAPI.quickTo.options warning: No Position instance found.`);\n                  return quickToCB;\n               }\n\n               callbackOptions.index = 0;\n               callbackOptions.position = position;\n               callbackOptions.data = isPosition ? void 0 : position;\n\n               actualOptions = options(callbackOptions);\n\n               if (!isObject(actualOptions))\n               {\n                  throw new TypeError(\n                   `AnimationGroupAPI.quickTo error: options callback function failed to return an object.`);\n               }\n\n               quickToCallbacks[0].options(actualOptions);\n            }\n         }\n\n         return quickToCB;\n      };\n\n      return quickToCB;\n   }\n}\n\n/**\n * Provides a {@link TJSPositionInitialHelper} implementation to center to element being positioned.\n */\nclass Centered\n{\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   /**\n    * @param {object}      [options] - Initial options.\n    *\n    * @param {HTMLElement} [options.element] - Target element.\n    *\n    * @param {boolean}     [options.lock=false] - Lock parameters from being set.\n    *\n    * @param {number}      [options.width] - Manual width.\n    *\n    * @param {number}      [options.height] - Manual height.\n    */\n   constructor({ element, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   /**\n    * @returns {HTMLElement|undefined|null} Target element.\n    */\n   get element() { return this.#element; }\n\n   /**\n    * @returns {number} Get manual height.\n    */\n   get height() { return this.#height; }\n\n   /**\n    * @returns {number} Get manual width.\n    */\n   get width() { return this.#width; }\n\n   /**\n    * @param {HTMLElement|undefined|null} element - Set target element.\n    */\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   /**\n    * @param {number}   height - Set manual height.\n    */\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * @param {number}   width - Set manual width.\n    */\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Set manual width & height.\n    *\n    * @param {number}   width - New manual width.\n    *\n    * @param {number}   height - New manual height.\n    */\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Get the left constraint based on any manual target values or the browser inner width.\n    *\n    * @param {number}   width - Target width.\n    *\n    * @returns {number} Calculated left constraint.\n    */\n   getLeft(width)\n   {\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n\n      return (boundsWidth - width) / 2;\n   }\n\n   /**\n    * Get the top constraint based on any manual target values or the browser inner height.\n    *\n    * @param {number}   height - Target height.\n    *\n    * @returns {number} Calculated top constraint.\n    */\n   getTop(height)\n   {\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      return (boundsHeight - height) / 2;\n   }\n}\n\nclass PositionChangeSet\n{\n   constructor()\n   {\n      this.left = false;\n      this.top = false;\n      this.width = false;\n      this.height = false;\n      this.maxHeight = false;\n      this.maxWidth = false;\n      this.minHeight = false;\n      this.minWidth = false;\n      this.zIndex = false;\n      this.transform = false;\n      this.transformOrigin = false;\n   }\n\n   hasChange()\n   {\n      return this.left || this.top || this.width || this.height || this.maxHeight || this.maxWidth || this.minHeight ||\n       this.minWidth || this.zIndex || this.transform || this.transformOrigin;\n   }\n\n   set(value)\n   {\n      this.left = value;\n      this.top = value;\n      this.width = value;\n      this.height = value;\n      this.maxHeight = value;\n      this.maxWidth = value;\n      this.minHeight = value;\n      this.minWidth = value;\n      this.zIndex = value;\n      this.transform = value;\n      this.transformOrigin = value;\n   }\n}\n\n/**\n * Defines stored positional data.\n */\nclass TJSPositionData\n{\n   constructor({ height = null, left = null, maxHeight = null, maxWidth = null, minHeight = null, minWidth = null,\n    rotateX = null, rotateY = null, rotateZ = null, scale = null, translateX = null, translateY = null,\n     translateZ = null, top = null, transformOrigin = null, width = null, zIndex = null } = {})\n   {\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.height = height;\n\n      /**\n       * @type {number|null}\n       */\n      this.left = left;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxHeight = maxHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.maxWidth = maxWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.minHeight = minHeight;\n\n      /**\n       * @type {number|null}\n       */\n      this.minWidth = minWidth;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateX = rotateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateY = rotateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.rotateZ = rotateZ;\n\n      /**\n       * @type {number|null}\n       */\n      this.scale = scale;\n\n      /**\n       * @type {number|null}\n       */\n      this.top = top;\n\n      /**\n       * @type {string|null}\n       */\n      this.transformOrigin = transformOrigin;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateX = translateX;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateY = translateY;\n\n      /**\n       * @type {number|null}\n       */\n      this.translateZ = translateZ;\n\n      /**\n       * @type {number|'auto'|'inherit'|null}\n       */\n      this.width = width;\n\n      /**\n       * @type {number|null}\n       */\n      this.zIndex = zIndex;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Copies given data to this instance.\n    *\n    * @param {TJSPositionData}   data - Copy from this instance.\n    *\n    * @returns {TJSPositionData} This instance.\n    */\n   copy(data)\n   {\n      this.height = data.height;\n      this.left = data.left;\n      this.maxHeight = data.maxHeight;\n      this.maxWidth = data.maxWidth;\n      this.minHeight = data.minHeight;\n      this.minWidth = data.minWidth;\n      this.rotateX = data.rotateX;\n      this.rotateY = data.rotateY;\n      this.rotateZ = data.rotateZ;\n      this.scale = data.scale;\n      this.top = data.top;\n      this.transformOrigin = data.transformOrigin;\n      this.translateX = data.translateX;\n      this.translateY = data.translateY;\n      this.translateZ = data.translateZ;\n      this.width = data.width;\n      this.zIndex = data.zIndex;\n\n      return this;\n   }\n}\n\nclass PositionStateAPI\n{\n   /** @type {import('./TJSPositionData').TJSPositionData} */\n   #data;\n\n   /**\n    * @type {Map<string, import('./').TJSPositionDataExtended>}\n    */\n   #dataSaved = new Map();\n\n   /** @type {import('./').TJSPosition} */\n   #position;\n\n   /** @type {import('./transform').TJSTransforms} */\n   #transforms;\n\n   constructor(position, data, transforms)\n   {\n      this.#position = position;\n      this.#data = data;\n      this.#transforms = transforms;\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {object}   options - Options\n    *\n    * @param {string}   options.name - Saved data set name.\n    *\n    * @returns {import('./').TJSPositionDataExtended} The saved data set.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - getSave error: 'name' is not a string.`); }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Returns any associated default data.\n    *\n    * @returns {import('./').TJSPositionDataExtended} Associated default data.\n    */\n   getDefault()\n   {\n      return this.#dataSaved.get('#defaultData');\n   }\n\n   /**\n    * Removes and returns any position state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {import('./').TJSPositionDataExtended} Saved position data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Resets data to default values and invokes set.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.keepZIndex=false] - When true keeps current z-index.\n    *\n    * @param {boolean}  [opts.invokeSet=true] - When true invokes set method.\n    *\n    * @returns {boolean} Operation successful.\n    */\n   reset({ keepZIndex = false, invokeSet = true } = {})\n   {\n      const defaultData = this.#dataSaved.get('#defaultData');\n\n      // Quit early if there is no saved default data.\n      if (!isObject(defaultData)) { return false; }\n\n      // Cancel all animations for TJSPosition if there are currently any scheduled.\n      if (this.#position.animate.isScheduled)\n      {\n         this.#position.animate.cancel();\n      }\n\n      const zIndex = this.#position.zIndex;\n\n      const data = Object.assign({}, defaultData);\n\n      if (keepZIndex) { data.zIndex = zIndex; }\n\n      // Reset the transform data.\n      this.#transforms.reset(data);\n\n      // If current minimized invoke `maximize`.\n      if (this.#position.parent?.reactive?.minimized)\n      {\n         this.#position.parent?.maximize?.({ animate: false, duration: 0 });\n      }\n\n      // Note next clock tick scheduling.\n      if (invokeSet) { setTimeout(() => this.#position.set(data), 0); }\n\n      return true;\n   }\n\n   /**\n    * Restores a saved positional state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n-   * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to}\n    * allows specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {Iterable<string>}  [params.properties] - Specific properties to set / animate.\n    *\n    * @param {boolean}           [params.silent] - Set position data directly; no store or style updates.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {import('./').TJSPositionDataExtended | Promise<import('./').TJSPositionDataExtended>} Saved position\n    *          data.\n    */\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 0.1,\n    ease = linear, interpolate = lerp })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - restore error: 'name' is not a string.`); }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         let data = dataSaved;\n\n         if (isIterable(properties))\n         {\n            data = {};\n            for (const property of properties) { data[property] = dataSaved[property]; }\n         }\n\n         // Update data directly with no store or inline style updates.\n         if (silent)\n         {\n            for (const property in data) { this.#data[property] = data[property]; }\n            return dataSaved;\n         }\n         else if (animateTo)  // Animate to saved data.\n         {\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\n            if (data.transformOrigin !== this.#position.transformOrigin)\n            {\n               this.#position.transformOrigin = data.transformOrigin;\n            }\n\n            // Return a Promise with saved data that resolves after animation ends.\n            if (async)\n            {\n               return this.#position.animate.to(data, { duration, ease, interpolate }).finished.then(() => dataSaved);\n            }\n            else  // Animate synchronously.\n            {\n               this.#position.animate.to(data, { duration, ease, interpolate });\n            }\n         }\n         else\n         {\n            // Default options is to set data for an immediate update.\n            this.#position.set(data);\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current position state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.extra] - Extra data to add to saved data.\n    *\n    * @returns {import('./').TJSPositionData} Current position data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - save error: 'name' is not a string.`); }\n\n      const data = this.#position.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Directly sets a position state.\n    *\n    * @param {object}   opts - Options.\n    *\n    * @param {string}   opts.name - name to index this saved data.\n    *\n    * @param {...*}     [opts.data] - TJSPosition data to set.\n    */\n   set({ name, ...data })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - set error: 'name' is not a string.`); }\n\n      this.#dataSaved.set(name, data);\n   }\n}\n\nclass StyleCache\n{\n   constructor()\n   {\n      /** @type {HTMLElement|undefined} */\n      this.el = void 0;\n\n      /** @type {CSSStyleDeclaration} */\n      this.computed = void 0;\n\n      /** @type {number|undefined} */\n      this.marginLeft = void 0;\n\n      /** @type {number|undefined} */\n      this.marginTop = void 0;\n\n      /** @type {number|undefined} */\n      this.maxHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.maxWidth = void 0;\n\n      /** @type {number|undefined} */\n      this.minHeight = void 0;\n\n      /** @type {number|undefined} */\n      this.minWidth = void 0;\n\n      /** @type {boolean} */\n      this.hasWillChange = false;\n\n      /**\n       * @type {import('./').ResizeObserverData}\n       */\n      this.resizeObserved = {\n         contentHeight: void 0,\n         contentWidth: void 0,\n         offsetHeight: void 0,\n         offsetWidth: void 0\n      };\n\n      /**\n       * Provides a writable store to track offset & content width / height from an associated `resizeObserver` action.\n       *\n       * @type {import('svelte/store').Writable<import('./').ResizeObserverData>}\n       */\n      const storeResizeObserved = writable(this.resizeObserved);\n\n      this.stores = {\n         element: writable(this.el),\n         resizeContentHeight: propertyStore(storeResizeObserved, 'contentHeight'),\n         resizeContentWidth: propertyStore(storeResizeObserved, 'contentWidth'),\n         resizeObserved: storeResizeObserved,\n         resizeOffsetHeight: propertyStore(storeResizeObserved, 'offsetHeight'),\n         resizeOffsetWidth: propertyStore(storeResizeObserved, 'offsetWidth')\n      };\n   }\n\n   /**\n    * Returns the cached offsetHeight from any attached `resizeObserver` action otherwise gets the offsetHeight from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetHeight()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetHeight !== void 0 ? this.resizeObserved.offsetHeight : this.el.offsetHeight;\n      }\n\n      throw new Error(`StyleCache - get offsetHeight error: no element assigned.`);\n   }\n\n   /**\n    * Returns the cached offsetWidth from any attached `resizeObserver` action otherwise gets the offsetWidth from\n    * the element directly. The more optimized path is using `resizeObserver` as getting it from the element\n    * directly is more expensive and alters the execution order of an animation frame.\n    *\n    * @returns {number} The element offsetHeight.\n    */\n   get offsetWidth()\n   {\n      if (this.el instanceof HTMLElement)\n      {\n         return this.resizeObserved.offsetWidth !== void 0 ? this.resizeObserved.offsetWidth : this.el.offsetWidth;\n      }\n\n      throw new Error(`StyleCache - get offsetWidth error: no element assigned.`);\n   }\n\n   /**\n    * @param {HTMLElement} el -\n    *\n    * @returns {boolean} Does element match cached element.\n    */\n   hasData(el) { return this.el === el; }\n\n   /**\n    * Resets the style cache.\n    */\n   reset()\n   {\n      // Remove will-change inline style from previous element if it is still connected.\n      if (this.el instanceof HTMLElement && this.el.isConnected && !this.hasWillChange)\n      {\n         this.el.style.willChange = null;\n      }\n\n      this.el = void 0;\n      this.computed = void 0;\n      this.marginLeft = void 0;\n      this.marginTop = void 0;\n      this.maxHeight = void 0;\n      this.maxWidth = void 0;\n      this.minHeight = void 0;\n      this.minWidth = void 0;\n\n      this.hasWillChange = false;\n\n      // Silently reset `resizedObserved`; With proper usage the `resizeObserver` action issues an update on removal.\n      this.resizeObserved.contentHeight = void 0;\n      this.resizeObserved.contentWidth = void 0;\n      this.resizeObserved.offsetHeight = void 0;\n      this.resizeObserved.offsetWidth = void 0;\n\n      // Reset the tracked element this TJSPosition instance is modifying.\n      this.stores.element.set(void 0);\n   }\n\n   /**\n    * Updates the style cache with new data from the given element.\n    *\n    * @param {HTMLElement} el - An HTML element.\n    */\n   update(el)\n   {\n      this.el = el;\n\n      this.computed = globalThis.getComputedStyle(el);\n\n      this.marginLeft = StyleParse.pixels(el.style.marginLeft) ?? StyleParse.pixels(this.computed.marginLeft);\n      this.marginTop = StyleParse.pixels(el.style.marginTop) ?? StyleParse.pixels(this.computed.marginTop);\n      this.maxHeight = StyleParse.pixels(el.style.maxHeight) ?? StyleParse.pixels(this.computed.maxHeight);\n      this.maxWidth = StyleParse.pixels(el.style.maxWidth) ?? StyleParse.pixels(this.computed.maxWidth);\n\n      // Note that the computed styles for below will always be 0px / 0 when no style is active.\n      this.minHeight = StyleParse.pixels(el.style.minHeight) ?? StyleParse.pixels(this.computed.minHeight);\n      this.minWidth = StyleParse.pixels(el.style.minWidth) ?? StyleParse.pixels(this.computed.minWidth);\n\n      // Tracks if there already is a will-change property on the inline or computed styles.\n      const willChange = el.style.willChange !== '' ? el.style.willChange : this.computed.willChange;\n\n      this.hasWillChange = willChange !== '' && willChange !== 'auto';\n\n      // Update the tracked element this TJSPosition instance is modifying.\n      this.stores.element.set(el);\n   }\n}\n\n/**\n * Provides the output data for {@link TJSTransforms.getData}.\n */\nclass TJSTransformData\n{\n   constructor()\n   {\n      Object.seal(this);\n   }\n\n   /**\n    * Stores the calculated bounding rectangle.\n    *\n    * @type {DOMRect}\n    */\n   #boundingRect = new DOMRect();\n\n   /**\n    * Stores the individual transformed corner points of the window in screen space clockwise from:\n    * top left -> top right -> bottom right -> bottom left.\n    *\n    * @type {import('#runtime/math/gl-matrix').Vec3[]}\n    */\n   #corners = [Vec3.create(), Vec3.create(), Vec3.create(), Vec3.create()];\n\n   /**\n    * Stores the current gl-matrix Mat4 data.\n    *\n    * @type {import('#runtime/math/gl-matrix').Mat4}\n    */\n   #mat4 = Mat4.create();\n\n   /**\n    * Stores the pre & post origin translations to apply to matrix transforms.\n    *\n    * @type {import('#runtime/math/gl-matrix').Mat4[]}\n    */\n   #originTranslations = [Mat4.create(), Mat4.create()];\n\n   /**\n    * @returns {DOMRect} The bounding rectangle.\n    */\n   get boundingRect() { return this.#boundingRect; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Vec3[]} The transformed corner points as Vec3 in screen space.\n    */\n   get corners() { return this.#corners; }\n\n   /**\n    * @returns {string} Returns the CSS style string for the transform matrix.\n    */\n   get css() { return `matrix3d(${this.mat4.join(',')})`; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Mat4} The transform matrix.\n    */\n   get mat4() { return this.#mat4; }\n\n   /**\n    * @returns {import('#runtime/math/gl-matrix').Mat4[]} The pre / post translation matrices for origin translation.\n    */\n   get originTranslations() { return this.#originTranslations; }\n}\n\n/** @type {number[]} */\nconst s_SCALE_VECTOR = [1, 1, 1];\n\n/** @type {number[]} */\nconst s_TRANSLATE_VECTOR = [0, 0, 0];\n\n/** @type {import('#runtime/math/gl-matrix').Mat4} */\nconst s_MAT4_RESULT = Mat4.create();\n\n/** @type {import('#runtime/math/gl-matrix').Mat4} */\nconst s_MAT4_TEMP = Mat4.create();\n\n/** @type {import('#runtime/math/gl-matrix').Vec3} */\nconst s_VEC3_TEMP = Vec3.create();\n\nclass TJSTransforms\n{\n   /**\n    * Stores the transform keys in the order added.\n    *\n    * @type {string[]}\n    */\n   #orderList = [];\n\n   constructor()\n   {\n      this._data = {};\n   }\n\n   /**\n    * @returns {boolean} Whether there are active transforms in local data.\n    */\n   get isActive() { return this.#orderList.length > 0; }\n\n   /**\n    * @returns {number|undefined} Any local rotateX data.\n    */\n   get rotateX() { return this._data.rotateX; }\n\n   /**\n    * @returns {number|undefined} Any local rotateY data.\n    */\n   get rotateY() { return this._data.rotateY; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ data.\n    */\n   get rotateZ() { return this._data.rotateZ; }\n\n   /**\n    * @returns {number|undefined} Any local rotateZ scale.\n    */\n   get scale() { return this._data.scale; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateX() { return this._data.translateX; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateY() { return this._data.translateY; }\n\n   /**\n    * @returns {number|undefined} Any local translateZ data.\n    */\n   get translateZ() { return this._data.translateZ; }\n\n   /**\n    * Sets the local rotateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateX === void 0) { this.#orderList.push('rotateX'); }\n\n         this._data.rotateX = value;\n      }\n      else\n      {\n         if (this._data.rotateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateX;\n      }\n   }\n\n   /**\n    * Sets the local rotateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateY === void 0) { this.#orderList.push('rotateY'); }\n\n         this._data.rotateY = value;\n      }\n      else\n      {\n         if (this._data.rotateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateY;\n      }\n   }\n\n   /**\n    * Sets the local rotateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set rotateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.rotateZ === void 0) { this.#orderList.push('rotateZ'); }\n\n         this._data.rotateZ = value;\n      }\n\n      else\n      {\n         if (this._data.rotateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'rotateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.rotateZ;\n      }\n   }\n\n   /**\n    * Sets the local scale data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set scale(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.scale === void 0) { this.#orderList.push('scale'); }\n\n         this._data.scale = value;\n      }\n      else\n      {\n         if (this._data.scale !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'scale');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.scale;\n      }\n   }\n\n   /**\n    * Sets the local translateX data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateX(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateX === void 0) { this.#orderList.push('translateX'); }\n\n         this._data.translateX = value;\n      }\n\n      else\n      {\n         if (this._data.translateX !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateX');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateX;\n      }\n   }\n\n   /**\n    * Sets the local translateY data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateY(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateY === void 0) { this.#orderList.push('translateY'); }\n\n         this._data.translateY = value;\n      }\n\n      else\n      {\n         if (this._data.translateY !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateY');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateY;\n      }\n   }\n\n   /**\n    * Sets the local translateZ data if the value is a finite number otherwise removes the local data.\n    *\n    * @param {number|null|undefined}   value - A value to set.\n    */\n   set translateZ(value)\n   {\n      if (Number.isFinite(value))\n      {\n         if (this._data.translateZ === void 0) { this.#orderList.push('translateZ'); }\n\n         this._data.translateZ = value;\n      }\n\n      else\n      {\n         if (this._data.translateZ !== void 0)\n         {\n            const index = this.#orderList.findIndex((entry) => entry === 'translateZ');\n            if (index >= 0) { this.#orderList.splice(index, 1); }\n         }\n\n         delete this._data.translateZ;\n      }\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSS(data = this._data)\n   {\n      return `matrix3d(${this.getMat4(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Returns the matrix3d CSS transform for the given position / transform data.\n    *\n    * @param {object} [data] - Optional position data otherwise use local stored transform data.\n    *\n    * @returns {string} The CSS matrix3d string.\n    */\n   getCSSOrtho(data = this._data)\n   {\n      return `matrix3d(${this.getMat4Ortho(data, s_MAT4_RESULT).join(',')})`;\n   }\n\n   /**\n    * Collects all data including a bounding rect, transform matrix, and points array of the given\n    * {@link TJSPositionData} instance with the applied local transform data.\n    *\n    * @param {import('../').TJSPositionData} position - The position data to process.\n    *\n    * @param {TJSTransformData} [output] - Optional TJSTransformData output instance.\n    *\n    * @param {object} [validationData] - Optional validation data for adjustment parameters.\n    *\n    * @returns {TJSTransformData} The output TJSTransformData instance.\n    */\n   getData(position, output = new TJSTransformData(), validationData = {})\n   {\n      const valWidth = validationData.width ?? 0;\n      const valHeight = validationData.height ?? 0;\n      const valOffsetTop = validationData.offsetTop ?? validationData.marginTop ?? 0;\n      const valOffsetLeft = validationData.offsetLeft ?? validationData.offsetLeft ?? 0;\n\n      position.top += valOffsetTop;\n      position.left += valOffsetLeft;\n\n      const width = Number.isFinite(position.width) ? position.width : valWidth;\n      const height = Number.isFinite(position.height) ? position.height : valHeight;\n\n      const rect = output.corners;\n\n      if (this.hasTransform(position))\n      {\n         rect[0][0] = rect[0][1] = rect[0][2] = 0;\n         rect[1][0] = width;\n         rect[1][1] = rect[1][2] = 0;\n         rect[2][0] = width;\n         rect[2][1] = height;\n         rect[2][2] = 0;\n         rect[3][0] = 0;\n         rect[3][1] = height;\n         rect[3][2] = 0;\n\n         const matrix = this.getMat4(position, output.mat4);\n\n         const translate = s_GET_ORIGIN_TRANSLATION(position.transformOrigin, width, height, output.originTranslations);\n\n         if (transformOriginDefault === position.transformOrigin)\n         {\n            Vec3.transformMat4(rect[0], rect[0], matrix);\n            Vec3.transformMat4(rect[1], rect[1], matrix);\n            Vec3.transformMat4(rect[2], rect[2], matrix);\n            Vec3.transformMat4(rect[3], rect[3], matrix);\n         }\n         else\n         {\n            Vec3.transformMat4(rect[0], rect[0], translate[0]);\n            Vec3.transformMat4(rect[0], rect[0], matrix);\n            Vec3.transformMat4(rect[0], rect[0], translate[1]);\n\n            Vec3.transformMat4(rect[1], rect[1], translate[0]);\n            Vec3.transformMat4(rect[1], rect[1], matrix);\n            Vec3.transformMat4(rect[1], rect[1], translate[1]);\n\n            Vec3.transformMat4(rect[2], rect[2], translate[0]);\n            Vec3.transformMat4(rect[2], rect[2], matrix);\n            Vec3.transformMat4(rect[2], rect[2], translate[1]);\n\n            Vec3.transformMat4(rect[3], rect[3], translate[0]);\n            Vec3.transformMat4(rect[3], rect[3], matrix);\n            Vec3.transformMat4(rect[3], rect[3], translate[1]);\n         }\n\n         rect[0][0] = position.left + rect[0][0];\n         rect[0][1] = position.top + rect[0][1];\n         rect[1][0] = position.left + rect[1][0];\n         rect[1][1] = position.top + rect[1][1];\n         rect[2][0] = position.left + rect[2][0];\n         rect[2][1] = position.top + rect[2][1];\n         rect[3][0] = position.left + rect[3][0];\n         rect[3][1] = position.top + rect[3][1];\n      }\n      else\n      {\n         rect[0][0] = position.left;\n         rect[0][1] = position.top;\n         rect[1][0] = position.left + width;\n         rect[1][1] = position.top;\n         rect[2][0] = position.left + width;\n         rect[2][1] = position.top + height;\n         rect[3][0] = position.left;\n         rect[3][1] = position.top + height;\n\n         Mat4.identity(output.mat4);\n      }\n\n      let maxX = Number.MIN_SAFE_INTEGER;\n      let maxY = Number.MIN_SAFE_INTEGER;\n      let minX = Number.MAX_SAFE_INTEGER;\n      let minY = Number.MAX_SAFE_INTEGER;\n\n      for (let cntr = 4; --cntr >= 0;)\n      {\n         if (rect[cntr][0] > maxX) { maxX = rect[cntr][0]; }\n         if (rect[cntr][0] < minX) { minX = rect[cntr][0]; }\n         if (rect[cntr][1] > maxY) { maxY = rect[cntr][1]; }\n         if (rect[cntr][1] < minY) { minY = rect[cntr][1]; }\n      }\n\n      const boundingRect = output.boundingRect;\n      boundingRect.x = minX;\n      boundingRect.y = minY;\n      boundingRect.width = maxX - minX;\n      boundingRect.height = maxY - minY;\n\n      position.top -= valOffsetTop;\n      position.left -= valOffsetLeft;\n\n      return output;\n   }\n\n   /**\n    * Creates a transform matrix based on local data applied in order it was added.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - TJSPositionData instance or local transform data.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4}  [output] - The output mat4 instance.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4} Transform matrix.\n    */\n   getMat4(data = this._data, output = Mat4.create())\n   {\n      const matrix = Mat4.identity(output);\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= transformKeysBitwise.rotateX;\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= transformKeysBitwise.rotateY;\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= transformKeysBitwise.rotateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'scale':\n               seenKeys |= transformKeysBitwise.scale;\n               s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n               Mat4.multiply(matrix, matrix, Mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n               break;\n\n            case 'translateX':\n               seenKeys |= transformKeysBitwise.translateX;\n               s_TRANSLATE_VECTOR[0] = data.translateX;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = 0;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateY':\n               seenKeys |= transformKeysBitwise.translateY;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = data.translateY;\n               s_TRANSLATE_VECTOR[2] = 0;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n\n            case 'translateZ':\n               seenKeys |= transformKeysBitwise.translateZ;\n               s_TRANSLATE_VECTOR[0] = 0;\n               s_TRANSLATE_VECTOR[1] = 0;\n               s_TRANSLATE_VECTOR[2] = data.translateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < transformKeys.length; cntr++)\n         {\n            const key = transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'scale':\n                  s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data[key];\n                  Mat4.multiply(matrix, matrix, Mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n                  break;\n\n               case 'translateX':\n                  s_TRANSLATE_VECTOR[0] = data[key];\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateY':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = data[key];\n                  s_TRANSLATE_VECTOR[2] = 0;\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n\n               case 'translateZ':\n                  s_TRANSLATE_VECTOR[0] = 0;\n                  s_TRANSLATE_VECTOR[1] = 0;\n                  s_TRANSLATE_VECTOR[2] = data[key];\n                  Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Provides an orthographic enhancement to convert left / top positional data to a translate operation.\n    *\n    * This transform matrix takes into account that the remaining operations are , but adds any left / top attributes from passed in data to\n    * translate X / Y.\n    *\n    * If no data object is provided then the source is the local transform data. If another data object is supplied\n    * then the stored local transform order is applied then all remaining transform keys are applied. This allows the\n    * construction of a transform matrix in advance of setting local data and is useful in collision detection.\n    *\n    * @param {object}   [data] - TJSPositionData instance or local transform data.\n    *\n    * @param {import('#runtime/math/gl-matrix').Mat4}  [output] - The output mat4 instance.\n    *\n    * @returns {import('#runtime/math/gl-matrix').Mat4} Transform matrix.\n    */\n   getMat4Ortho(data = this._data, output = Mat4.create())\n   {\n      const matrix = Mat4.identity(output);\n\n      // Attempt to retrieve values from passed in data otherwise default to 0.\n      // Always perform the translation last regardless of order added to local transform data.\n      // Add data.left to translateX and data.top to translateY.\n      s_TRANSLATE_VECTOR[0] = (data.left ?? 0) + (data.translateX ?? 0);\n      s_TRANSLATE_VECTOR[1] = (data.top ?? 0) + (data.translateY ?? 0);\n      s_TRANSLATE_VECTOR[2] = data.translateZ ?? 0;\n      Mat4.multiply(matrix, matrix, Mat4.fromTranslation(s_MAT4_TEMP, s_TRANSLATE_VECTOR));\n\n      // Scale can also be applied out of order.\n      if (data.scale !== null)\n      {\n         s_SCALE_VECTOR[0] = s_SCALE_VECTOR[1] = data.scale;\n         Mat4.multiply(matrix, matrix, Mat4.fromScaling(s_MAT4_TEMP, s_SCALE_VECTOR));\n      }\n\n      // Early out if there is not rotation data.\n      if (data.rotateX === null && data.rotateY === null && data.rotateZ === null) { return matrix; }\n\n      // Rotation transforms must be applied in the order they are added.\n\n      // Bitwise tracks applied transform keys from local transform data.\n      let seenKeys = 0;\n\n      const orderList = this.#orderList;\n\n      // First apply ordered transforms from local transform data.\n      for (let cntr = 0; cntr < orderList.length; cntr++)\n      {\n         const key = orderList[cntr];\n\n         switch (key)\n         {\n            case 'rotateX':\n               seenKeys |= transformKeysBitwise.rotateX;\n               Mat4.multiply(matrix, matrix, Mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateY':\n               seenKeys |= transformKeysBitwise.rotateY;\n               Mat4.multiply(matrix, matrix, Mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n\n            case 'rotateZ':\n               seenKeys |= transformKeysBitwise.rotateZ;\n               Mat4.multiply(matrix, matrix, Mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n               break;\n         }\n      }\n\n      // Now apply any new keys not set in local transform data that have not been applied yet.\n      if (data !== this._data)\n      {\n         for (let cntr = 0; cntr < transformKeys.length; cntr++)\n         {\n            const key = transformKeys[cntr];\n\n            // Reject bad / no data or if the key has already been applied.\n            if (data[key] === null || (seenKeys & transformKeysBitwise[key]) > 0) { continue; }\n\n            switch (key)\n            {\n               case 'rotateX':\n                  Mat4.multiply(matrix, matrix, Mat4.fromXRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateY':\n                  Mat4.multiply(matrix, matrix, Mat4.fromYRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n\n               case 'rotateZ':\n                  Mat4.multiply(matrix, matrix, Mat4.fromZRotation(s_MAT4_TEMP, degToRad(data[key])));\n                  break;\n            }\n         }\n      }\n\n      return matrix;\n   }\n\n   /**\n    * Tests an object if it contains transform keys and the values are finite numbers.\n    *\n    * @param {object} data - An object to test for transform data.\n    *\n    * @returns {boolean} Whether the given TJSPositionData has transforms.\n    */\n   hasTransform(data)\n   {\n      for (const key of transformKeys)\n      {\n         if (Number.isFinite(data[key])) { return true; }\n      }\n\n      return false;\n   }\n\n   /**\n    * Resets internal data from the given object containing valid transform keys.\n    *\n    * @param {object}   data - An object with transform data.\n    */\n   reset(data)\n   {\n      for (const key in data)\n      {\n         if (transformKeys.includes(key))\n         {\n            if (Number.isFinite(data[key]))\n            {\n               this._data[key] = data[key];\n            }\n            else\n            {\n               const index = this.#orderList.findIndex((entry) => entry === key);\n               if (index >= 0) { this.#orderList.splice(index, 1); }\n\n               delete this._data[key];\n            }\n         }\n      }\n   }\n}\n\n/**\n * Returns the translations necessary to translate a matrix operation based on the `transformOrigin` parameter of the\n * given position instance. The first entry / index 0 is the pre-translation and last entry / index 1 is the post-\n * translation.\n *\n * This method is used internally, but may be useful if you need the origin translation matrices to transform\n * bespoke points based on any `transformOrigin` set in {@link TJSPositionData}.\n *\n * @param {string}   transformOrigin - The transform origin attribute from TJSPositionData.\n *\n * @param {number}   width - The TJSPositionData width or validation data width when 'auto'.\n *\n * @param {number}   height - The TJSPositionData height or validation data height when 'auto'.\n *\n * @param {import('#runtime/math/gl-matrix').Mat4[]}   output - Output Mat4 array.\n *\n * @returns {import('#runtime/math/gl-matrix').Mat4[]} Output Mat4 array.\n */\nfunction s_GET_ORIGIN_TRANSLATION(transformOrigin, width, height, output)\n{\n   const vector = s_VEC3_TEMP;\n\n   switch (transformOrigin)\n   {\n      case 'top left':\n         vector[0] = vector[1] = 0;\n         Mat4.fromTranslation(output[0], vector);\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top center':\n         vector[0] = -width * 0.5;\n         vector[1] = 0;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'top right':\n         vector[0] = -width;\n         vector[1] = 0;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center left':\n         vector[0] = 0;\n         vector[1] = -height * 0.5;\n         Mat4.fromTranslation(output[0], vector);\n         vector[1] = height * 0.5;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      // By default, null / no transform is 'center'.\n      case null:\n      case 'center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height * 0.5;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height * 0.5;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'center right':\n         vector[0] = -width;\n         vector[1] = -height * 0.5;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height * 0.5;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom left':\n         vector[0] = 0;\n         vector[1] = -height;\n         Mat4.fromTranslation(output[0], vector);\n         vector[1] = height;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom center':\n         vector[0] = -width * 0.5;\n         vector[1] = -height;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width * 0.5;\n         vector[1] = height;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      case 'bottom right':\n         vector[0] = -width;\n         vector[1] = -height;\n         Mat4.fromTranslation(output[0], vector);\n         vector[0] = width;\n         vector[1] = height;\n         Mat4.fromTranslation(output[1], vector);\n         break;\n\n      // No valid transform origin parameter; set identity.\n      default:\n         Mat4.identity(output[0]);\n         Mat4.identity(output[1]);\n         break;\n   }\n\n   return output;\n}\n\n/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is\n * the only required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted validator always\n * runs before a higher weighted validator. If no weight is specified the default of '1' is assigned and it is appended\n * to the end of the validators list.\n *\n * This class forms the public API which is accessible from the `.validators` getter in the main TJSPosition instance.\n * ```\n * const position = new TJSPosition(<TJSPositionData>);\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n */\nclass AdapterValidators\n{\n   /** @type {boolean} */\n   #enabled = true;\n\n   /**\n    * @type {import('../').ValidatorData[]}\n    */\n   #validatorData;\n\n   #mapUnsubscribe = new Map();\n\n   /**\n    * @returns {[AdapterValidators, import('../').ValidatorData[]]} Returns this and internal storage for validator\n    *          adapter.\n    */\n   constructor()\n   {\n      this.#validatorData = [];\n\n      Object.seal(this);\n\n      return [this, this.#validatorData];\n   }\n\n   /**\n    * @returns {boolean} Returns the enabled state.s\n    */\n   get enabled() { return this.#enabled; }\n\n   /**\n    * @returns {number} Returns the length of the validators array.\n    */\n   get length() { return this.#validatorData.length; }\n\n   /**\n    * @param {boolean}  enabled - Sets enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Provides an iterator for validators.\n    *\n    * @yields {import('../').ValidatorData}\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#validatorData.length === 0) { return; }\n\n      for (const entry of this.#validatorData)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * @param {...(import('../').ValidatorFn | import('../').ValidatorData)}   validators -\n    */\n   add(...validators)\n   {\n      /**\n       * Tracks the number of validators added that have subscriber functionality.\n       *\n       * @type {number}\n       */\n      // let subscribeCount = 0;  // TODO: Currently unused\n\n      for (const validator of validators)\n      {\n         const validatorType = typeof validator;\n\n         if ((validatorType !== 'function' && validatorType !== 'object') || validator === null)\n         {\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n         }\n\n         let data = void 0;\n         let subscribeFn = void 0;\n\n         switch (validatorType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  validator,\n                  weight: 1\n               };\n\n               subscribeFn = validator.subscribe;\n               break;\n\n            case 'object':\n               if (typeof validator.validator !== 'function')\n               {\n                  throw new TypeError(`AdapterValidator error: 'validator' attribute is not a function.`);\n               }\n\n               if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                (validator.weight < 0 || validator.weight > 1))\n               {\n                  throw new TypeError(\n                   `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n               }\n\n               data = {\n                  id: validator.id !== void 0 ? validator.id : void 0,\n                  validator: validator.validator.bind(validator),\n                  weight: validator.weight || 1,\n                  instance: validator\n               };\n\n               subscribeFn = validator.validator.subscribe ?? validator.subscribe;\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index = this.#validatorData.findIndex((value) =>\n         {\n            return data.weight < value.weight;\n         });\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#validatorData.splice(index, 0, data);\n         }\n         else // push to end of validators.\n         {\n            this.#validatorData.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            // TODO: consider how to handle validator updates.\n            const unsubscribe = subscribeFn();\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'AdapterValidator error: Filter has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same validator is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.validator))\n            {\n               throw new Error(\n                'AdapterValidator error: Filter added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.validator, unsubscribe);\n            // subscribeCount++;  // TODO: Currently unused\n         }\n      }\n\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of validators added then automatically trigger an index update\n      // manually.\n      // TODO: handle validator updates.\n      // if (subscribeCount < validators.length) { this.#indexUpdate(); }\n   }\n\n   clear()\n   {\n      this.#validatorData.length = 0;\n\n      // Unsubscribe from all validators with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      // TODO: handle validator updates.\n      // this.#indexUpdate();\n   }\n\n   /**\n    * @param {...(import('../').ValidatorFn | import('../').ValidatorData)}   validators -\n    */\n   remove(...validators)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      for (const data of validators)\n      {\n         // Handle the case that the validator may either be a function or a validator entry / object.\n         const actualValidator = typeof data === 'function' ? data : isObject(data) ? data.validator : void 0;\n\n         if (!actualValidator) { continue; }\n\n         for (let cntr = this.#validatorData.length; --cntr >= 0;)\n         {\n            if (this.#validatorData[cntr].validator === actualValidator)\n            {\n               this.#validatorData.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given validator then remove from tracking.\n               let unsubscribe = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualValidator);\n               }\n            }\n         }\n      }\n\n      // Update the index a validator was removed.\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   /**\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n    * Any truthy value returned will remove that validator.\n    *\n    * @param {function(*, import('../').ValidatorFn, number): boolean} callback - Callback function to evaluate each\n    *        validator entry.\n    */\n   removeBy(callback)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n      }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         // Reverse remove boolean to properly validator / remove this validator.\n         return !remove;\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   removeById(...ids)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove |= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array validator method.\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n}\n\nclass BasicBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0  || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {import('../').ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {import('../').TJSPositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = valData.width = clamp(valData.position.width, valData.minWidth, maxW);\n\n         if ((valData.width + valData.position.left + valData.marginLeft) > boundsWidth)\n         {\n            valData.position.left = boundsWidth - valData.width - valData.marginLeft;\n         }\n      }\n\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = valData.height = clamp(valData.position.height, valData.minHeight, maxH);\n\n         if ((valData.height + valData.position.top + valData.marginTop) > boundsHeight)\n         {\n            valData.position.top = boundsHeight - valData.height - valData.marginTop;\n         }\n      }\n\n      const maxL = Math.max(boundsWidth - valData.width - valData.marginLeft, 0);\n      valData.position.left = Math.round(clamp(valData.position.left, 0, maxL));\n\n      const maxT = Math.max(boundsHeight - valData.height - valData.marginTop, 0);\n      valData.position.top = Math.round(clamp(valData.position.top, 0, maxT));\n\n      return valData.position;\n   }\n}\n\nconst s_TRANSFORM_DATA = new TJSTransformData();\n\nclass TransformBounds\n{\n   /**\n    * When true constrains the min / max width or height to element.\n    *\n    * @type {boolean}\n    */\n   #constrain;\n\n   /**\n    * @type {HTMLElement}\n    */\n   #element;\n\n   /**\n    * When true the validator is active.\n    *\n    * @type {boolean}\n    */\n   #enabled;\n\n   /**\n    * Provides a manual setting of the element height. As things go `offsetHeight` causes a browser layout and is not\n    * performance oriented. If manually set this height is used instead of `offsetHeight`.\n    *\n    * @type {number}\n    */\n   #height;\n\n   /**\n    * Set from an optional value in the constructor to lock accessors preventing modification.\n    */\n   #lock;\n\n   /**\n    * Provides a manual setting of the element width. As things go `offsetWidth` causes a browser layout and is not\n    * performance oriented. If manually set this width is used instead of `offsetWidth`.\n    *\n    * @type {number}\n    */\n   #width;\n\n   constructor({ constrain = true, element, enabled = true, lock = false, width, height } = {})\n   {\n      this.element = element;\n      this.constrain = constrain;\n      this.enabled = enabled;\n      this.width = width;\n      this.height = height;\n\n      this.#lock = typeof lock === 'boolean' ? lock : false;\n   }\n\n   get constrain() { return this.#constrain; }\n\n   get element() { return this.#element; }\n\n   get enabled() { return this.#enabled; }\n\n   get height() { return this.#height; }\n\n   get width() { return this.#width; }\n\n   set constrain(constrain)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof constrain !== 'boolean') { throw new TypeError(`'constrain' is not a boolean.`); }\n\n      this.#constrain = constrain;\n   }\n\n   set element(element)\n   {\n      if (this.#lock) { return; }\n\n      if (element === void 0 || element === null || element instanceof HTMLElement)\n      {\n         this.#element = element;\n      }\n      else\n      {\n         throw new TypeError(`'element' is not a HTMLElement, undefined, or null.`);\n      }\n   }\n\n   set enabled(enabled)\n   {\n      if (this.#lock) { return; }\n\n      if (typeof enabled !== 'boolean') { throw new TypeError(`'enabled' is not a boolean.`); }\n\n      this.#enabled = enabled;\n   }\n\n   set height(height)\n   {\n      if (this.#lock) { return; }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   set width(width)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n   }\n\n   setDimension(width, height)\n   {\n      if (this.#lock) { return; }\n\n      if (width === void 0 || Number.isFinite(width))\n      {\n         this.#width = width;\n      }\n      else\n      {\n         throw new TypeError(`'width' is not a finite number or undefined.`);\n      }\n\n      if (height === void 0 || Number.isFinite(height))\n      {\n         this.#height = height;\n      }\n      else\n      {\n         throw new TypeError(`'height' is not a finite number or undefined.`);\n      }\n   }\n\n   /**\n    * Provides a validator that respects transforms in positional data constraining the position to within the target\n    * elements bounds.\n    *\n    * @param {import('../').ValidationData}   valData - The associated validation data for position updates.\n    *\n    * @returns {import('../').TJSPositionData} Potentially adjusted position data.\n    */\n   validator(valData)\n   {\n      // Early out if element is undefined or local enabled state is false.\n      if (!this.#enabled) { return valData.position; }\n\n      // Determine containing bounds from manual values; or any element; lastly the browser width / height.\n      const boundsWidth = this.#width ?? this.#element?.offsetWidth ?? globalThis.innerWidth;\n      const boundsHeight = this.#height ?? this.#element?.offsetHeight ?? globalThis.innerHeight;\n\n      // Ensure min / max width constraints when position width is a number; not 'auto' or 'inherit'. If constrain is\n      // true cap width bounds.\n      if (typeof valData.position.width === 'number')\n      {\n         const maxW = valData.maxWidth ?? (this.#constrain ? boundsWidth : Number.MAX_SAFE_INTEGER);\n         valData.position.width = clamp(valData.width, valData.minWidth, maxW);\n      }\n\n      // Ensure min / max height constraints when position height is a number; not 'auto' or 'inherit'. If constrain\n      // is true cap height bounds.\n      if (typeof valData.position.height === 'number')\n      {\n         const maxH = valData.maxHeight ?? (this.#constrain ? boundsHeight : Number.MAX_SAFE_INTEGER);\n         valData.position.height = clamp(valData.height, valData.minHeight, maxH);\n      }\n\n      // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n      // when position width / height is 'auto'.\n      const data = valData.transforms.getData(valData.position, s_TRANSFORM_DATA, valData);\n\n      // Check the bounding rectangle against browser height / width. Adjust position based on how far the overlap of\n      // the bounding rect is outside the bounds height / width. The order below matters as the constraints are top /\n      // left oriented, so perform those checks last.\n\n      const initialX = data.boundingRect.x;\n      const initialY = data.boundingRect.y;\n\n      if (data.boundingRect.bottom + valData.marginTop > boundsHeight)\n      {\n         data.boundingRect.y += boundsHeight - data.boundingRect.bottom - valData.marginTop;\n      }\n\n      if (data.boundingRect.right + valData.marginLeft > boundsWidth)\n      {\n         data.boundingRect.x += boundsWidth - data.boundingRect.right - valData.marginLeft;\n      }\n\n      if (data.boundingRect.top - valData.marginTop < 0)\n      {\n         data.boundingRect.y += Math.abs(data.boundingRect.top - valData.marginTop);\n      }\n\n      if (data.boundingRect.left - valData.marginLeft < 0)\n      {\n         data.boundingRect.x += Math.abs(data.boundingRect.left - valData.marginLeft);\n      }\n\n      valData.position.left -= initialX - data.boundingRect.x;\n      valData.position.top -= initialY - data.boundingRect.y;\n\n      return valData.position;\n   }\n}\n\nclass UpdateElementData\n{\n   constructor()\n   {\n      /**\n       * Stores the private data from TJSPosition.\n       *\n       * @type {TJSPositionData}\n       */\n      this.data = void 0;\n\n      /**\n       * Provides a copy of local data sent to subscribers.\n       *\n       * @type {TJSPositionData}\n       */\n      this.dataSubscribers = new TJSPositionData();\n\n      /**\n       * Stores the current dimension data used for the readable `dimension` store.\n       *\n       * @type {{width: number | 'auto', height: number | 'auto'}}\n       */\n      this.dimensionData = { width: 0, height: 0 };\n\n      /**\n       * @type {import('../PositionChangeSet').PositionChangeSet}\n       */\n      this.changeSet = void 0;\n\n      /**\n       * @type {import('../').TJSPositionOptions}\n       */\n      this.options = void 0;\n\n      /**\n       * Stores if this TJSPosition / update data is queued for update.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      /**\n       * @type {import('../StyleCache').StyleCache}\n       */\n      this.styleCache = void 0;\n\n      /**\n       * @type {import('../transform').TJSTransforms}\n       */\n      this.transforms = void 0;\n\n      /**\n       * Stores the current transform data used for the readable `transform` store. It is only active when there are\n       * subscribers to the store or calculateTransform options is true.\n       *\n       * @type {TJSTransformData}\n       */\n      this.transformData = new TJSTransformData();\n\n      /**\n       * @type {(function(TJSPositionData): void)[]}\n       */\n      this.subscriptions = void 0;\n\n      /**\n       * @type {import('svelte/store').Writable<{width: (number|\"auto\"), height: (number|\"auto\")}>}\n       */\n      this.storeDimension = writable(this.dimensionData);\n\n      // When there are subscribers set option to calculate transform updates; set to false when no subscribers.\n\n      /**\n       * @type {import('svelte/store').Writable<TJSTransformData>}\n       */\n      this.storeTransform = writable(this.transformData, () =>\n      {\n         this.options.transformSubscribed = true;\n         return () => this.options.transformSubscribed = false;\n      });\n\n      /**\n       * Stores the queued state for update element processing.\n       *\n       * @type {boolean}\n       */\n      this.queued = false;\n\n      // Seal data backing readable stores.\n      Object.seal(this.dimensionData);\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke\n * {@link TJSPosition.elementUpdated} to await on the returned promise that is resolved with the current\n * render time via `nextAnimationFrame` / `requestAnimationFrame`. This allows the underlying data model to be updated\n * immediately while updates to the element are in sync with the browser and potentially in the future be further\n * throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n */\nclass UpdateElementManager\n{\n   static list = [];\n   static listCntr = 0;\n\n   static updatePromise;\n\n   static get promise() { return this.updatePromise; }\n\n   /**\n    * Potentially adds the given element and internal updateData instance to the list.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {import('./UpdateElementData').UpdateElementData} updateData - An UpdateElementData instance.\n    *\n    * @returns {Promise<number>} The unified next frame update promise. Returns `currentTime`.\n    */\n   static add(el, updateData)\n   {\n      if (this.listCntr < this.list.length)\n      {\n         const entry = this.list[this.listCntr];\n         entry[0] = el;\n         entry[1] = updateData;\n      }\n      else\n      {\n         this.list.push([el, updateData]);\n      }\n\n      this.listCntr++;\n      updateData.queued = true;\n\n      if (!this.updatePromise) { this.updatePromise = this.wait(); }\n\n      return this.updatePromise;\n   }\n\n   /**\n    * Await on `nextAnimationFrame` and iterate over list map invoking callback functions.\n    *\n    * @returns {Promise<number>} The next frame Promise / currentTime from nextAnimationFrame.\n    */\n   static async wait()\n   {\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\n      const currentTime = await nextAnimationFrame();\n\n      this.updatePromise = void 0;\n\n      for (let cntr = this.listCntr; --cntr >= 0;)\n      {\n         // Obtain data for entry.\n         const entry = this.list[cntr];\n         const el = entry[0];\n         const updateData = entry[1];\n\n         // Clear entry data.\n         entry[0] = void 0;\n         entry[1] = void 0;\n\n         // Reset queued state.\n         updateData.queued = false;\n\n         // Early out if the element is no longer connected to the DOM / shadow root.\n         // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n         if (!el.isConnected) { continue; }\n\n         if (updateData.options.ortho)\n         {\n            s_UPDATE_ELEMENT_ORTHO(el, updateData);\n         }\n         else\n         {\n            s_UPDATE_ELEMENT(el, updateData);\n         }\n\n         // If calculate transform options is enabled then update the transform data and set the readable store.\n         if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n         {\n            s_UPDATE_TRANSFORM(el, updateData);\n         }\n\n         // Update all subscribers with changed data.\n         this.updateSubscribers(updateData);\n      }\n\n      this.listCntr = 0;\n\n      return currentTime;\n   }\n\n   /**\n    * Potentially immediately updates the given element.\n    *\n    * @param {HTMLElement}       el - An HTMLElement instance.\n    *\n    * @param {import('./UpdateElementData').UpdateElementData} updateData - An UpdateElementData instance.\n    */\n   static immediate(el, updateData)\n   {\n      // Early out if the element is no longer connected to the DOM / shadow root.\n      // if (!el.isConnected || !updateData.changeSet.hasChange()) { continue; }\n      if (!el.isConnected) { return; }\n\n      if (updateData.options.ortho)\n      {\n         s_UPDATE_ELEMENT_ORTHO(el, updateData);\n      }\n      else\n      {\n         s_UPDATE_ELEMENT(el, updateData);\n      }\n\n      // If calculate transform options is enabled then update the transform data and set the readable store.\n      if (updateData.options.calculateTransform || updateData.options.transformSubscribed)\n      {\n         s_UPDATE_TRANSFORM(el, updateData);\n      }\n\n      // Update all subscribers with changed data.\n      this.updateSubscribers(updateData);\n   }\n\n   /**\n    * @param {import('./UpdateElementData').UpdateElementData} updateData - Data change set.\n    */\n   static updateSubscribers(updateData)\n   {\n      const data = updateData.data;\n      const changeSet = updateData.changeSet;\n\n      if (!changeSet.hasChange()) { return; }\n\n      // Make a copy of the data.\n      const output = updateData.dataSubscribers.copy(data);\n\n      const subscriptions = updateData.subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](output); }\n      }\n\n      // Update dimension data if width / height has changed.\n      if (changeSet.width || changeSet.height)\n      {\n         updateData.dimensionData.width = data.width;\n         updateData.dimensionData.height = data.height;\n         updateData.storeDimension.set(updateData.dimensionData);\n      }\n\n      changeSet.set(false);\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke\n * {@link TJSPosition.elementUpdated} to await on the returned promise that is resolved with the current\n * render time via `nextAnimationFrame` / `requestAnimationFrame`. This allows the underlying data model to be updated\n * immediately while updates to the element are in sync with the browser and potentially in the future be further\n * throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {import('./UpdateElementData').UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.left)\n   {\n      el.style.left = `${data.left}px`;\n   }\n\n   if (changeSet.top)\n   {\n      el.style.top = `${data.top}px`;\n   }\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      el.style.transformOrigin = data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.isActive ? updateData.transforms.getCSS() : null;\n   }\n}\n\n/**\n * Decouples updates to any parent target HTMLElement inline styles. Invoke\n * {@link TJSPosition.elementUpdated} to await on the returned promise that is resolved with the current\n * render time via `nextAnimationFrame` / `requestAnimationFrame`. This allows the underlying data model to be updated\n * immediately while updates to the element are in sync with the browser and potentially in the future be further\n * throttled.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {import('./UpdateElementData').UpdateElementData} updateData - Update data.\n */\nfunction s_UPDATE_ELEMENT_ORTHO(el, updateData)\n{\n   const changeSet = updateData.changeSet;\n   const data = updateData.data;\n\n   if (changeSet.zIndex)\n   {\n      el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n   }\n\n   if (changeSet.width)\n   {\n      el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n   }\n\n   if (changeSet.height)\n   {\n      el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n   }\n\n   if (changeSet.transformOrigin)\n   {\n      el.style.transformOrigin = data.transformOrigin;\n   }\n\n   // Update all transforms in order added to transforms object.\n   if (changeSet.left || changeSet.top || changeSet.transform)\n   {\n      el.style.transform = updateData.transforms.getCSSOrtho(data);\n   }\n}\n\n/**\n * Updates the applied transform data and sets the readble `transform` store.\n *\n * @param {HTMLElement} el - The target HTMLElement.\n *\n * @param {import('./UpdateElementData').UpdateElementData} updateData - Update element data.\n */\nfunction s_UPDATE_TRANSFORM(el, updateData)\n{\n   s_VALIDATION_DATA$1.height = updateData.data.height !== 'auto' ? updateData.data.height :\n    updateData.styleCache.offsetHeight;\n\n   s_VALIDATION_DATA$1.width = updateData.data.width !== 'auto' ? updateData.data.width :\n    updateData.styleCache.offsetWidth;\n\n   s_VALIDATION_DATA$1.marginLeft = updateData.styleCache.marginLeft;\n\n   s_VALIDATION_DATA$1.marginTop = updateData.styleCache.marginTop;\n\n   // Get transform data. First set constraints including any margin top / left as offsets and width / height. Used\n   // when position width / height is 'auto'.\n   updateData.transforms.getData(updateData.data, updateData.transformData, s_VALIDATION_DATA$1);\n\n   updateData.storeTransform.set(updateData.transformData);\n}\n\nconst s_VALIDATION_DATA$1 = {\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0\n};\n\n/**\n * Provides a store for position following the subscriber protocol in addition to providing individual writable derived\n * stores for each independent variable.\n */\nclass TJSPosition\n{\n   /**\n    * @type {{browserCentered: Centered, Centered: Centered}}\n    */\n   static #positionInitial = {\n      browserCentered: new Centered({ lock: true }),\n      Centered\n   };\n\n   /**\n    * @type {{TransformBounds: TransformBounds, BasicBounds: BasicBounds, basicWindow: BasicBounds, transformWindow: TransformBounds}}\n    */\n   static #positionValidators = {\n      basicWindow: new BasicBounds({ lock: true }),\n      BasicBounds,\n      transformWindow: new TransformBounds({ lock: true }),\n      TransformBounds\n   };\n\n   /**\n    * @type {TJSPositionData}\n    */\n   #data = new TJSPositionData();\n\n   /**\n    * Provides the animation API.\n    *\n    * @type {AnimationAPI}\n    */\n   #animate = new AnimationAPI(this, this.#data);\n\n   /**\n    * Provides a way to turn on / off the position handling.\n    *\n    * @type {boolean}\n    */\n   #enabled = true;\n\n   /**\n    * Stores ongoing options that are set in the constructor or by transform store subscription.\n    *\n    * @type {import('./').TJSPositionOptions}\n    */\n   #options = {\n      calculateTransform: false,\n      initialHelper: void 0,\n      ortho: true,\n      transformSubscribed: false\n   };\n\n   /**\n    * The associated parent for positional data tracking. Used in validators.\n    *\n    * @type {import('./').TJSPositionParent}\n    */\n   #parent;\n\n   /**\n    * Stores the style attributes that changed on update.\n    *\n    * @type {PositionChangeSet}\n    */\n   #positionChangeSet = new PositionChangeSet();\n\n   /**\n    * @type {import('./').TJSPositionStores}\n    */\n   #stores;\n\n   /**\n    * Stores an instance of the computer styles for the target element.\n    *\n    * @type {StyleCache}\n    */\n   #styleCache;\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<TJSPositionData>[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSTransforms}\n    */\n   #transforms = new TJSTransforms();\n\n   /**\n    * @type {UpdateElementData}\n    */\n   #updateElementData;\n\n   /**\n    * Stores the UpdateElementManager wait promise.\n    *\n    * @type {Promise}\n    */\n   #updateElementPromise;\n\n   /**\n    * @type {AdapterValidators}\n    */\n   #validators;\n\n   /**\n    * @type {import('./').ValidatorData[]}\n    */\n   #validatorData;\n\n   /**\n    * @type {PositionStateAPI}\n    */\n   #state = new PositionStateAPI(this, this.#data, this.#transforms);\n\n   /**\n    * @returns {AnimationGroupAPI} Public Animation API.\n    */\n   static get Animate() { return AnimationGroupAPI; }\n\n   /**\n    * @returns {{browserCentered: Centered, Centered: Centered}} TJSPosition initial API.\n    */\n   static get Initial() { return this.#positionInitial; }\n\n   /**\n    * Returns TJSTransformData class / constructor.\n    *\n    * @returns {TJSTransformData} TJSTransformData class / constructor.\n    */\n   static get TransformData() { return TJSTransformData; }\n\n   /**\n    * Returns default validators.\n    *\n    * Note: `basicWindow` and `BasicBounds` will eventually be removed.\n    *\n    * @returns {{TransformBounds: TransformBounds, BasicBounds: BasicBounds, basicWindow: BasicBounds, transformWindow: TransformBounds}}\n    * Available validators.\n    */\n   static get Validators() { return this.#positionValidators; }\n\n   /**\n    * Returns a duplicate of a given position instance copying any options and validators.\n    *\n    * // TODO: Consider more safety over options processing.\n    *\n    * @param {TJSPosition}          position - A position instance.\n    *\n    * @param {import('./').TJSPositionOptions}   options - TJSPosition options.\n    *\n    * @returns {TJSPosition} A duplicate position instance.\n    */\n   static duplicate(position, options)\n   {\n      if (!(position instanceof TJSPosition)) { throw new TypeError(`'position' is not an instance of Position.`); }\n\n      const newPosition = new TJSPosition(options);\n\n      newPosition.#options = Object.assign({}, position.#options, options);\n      newPosition.#validators.add(...position.#validators);\n\n      newPosition.set(position.#data);\n\n      return newPosition;\n   }\n\n   /**\n    * @param {import('./').TJSPositionParent | import('./').TJSPositionOptionsAll}   [parent] - A\n    *        potential parent element or object w/ `elementTarget` getter. May also be the TJSPositionOptions object\n    *        w/ 1 argument.\n    *\n    * @param {import('./').TJSPositionOptionsAll}   [options] - Default values.\n    */\n   constructor(parent, options)\n   {\n      // Test if `parent` is a plain object; if so treat as options object.\n      if (isPlainObject(parent))\n      {\n         options = parent;\n      }\n      else\n      {\n         this.#parent = parent;\n      }\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      this.#styleCache = new StyleCache();\n\n      const updateData = new UpdateElementData();\n\n      updateData.changeSet = this.#positionChangeSet;\n      updateData.data = this.#data;\n      updateData.options = this.#options;\n      updateData.styleCache = this.#styleCache;\n      updateData.subscriptions = this.#subscriptions;\n      updateData.transforms = this.#transforms;\n\n      this.#updateElementData = updateData;\n\n      if (isObject(options))\n      {\n         // Set TJSPosition options\n         if (typeof options.calculateTransform === 'boolean')\n         {\n            this.#options.calculateTransform = options.calculateTransform;\n         }\n\n         if (typeof options.ortho === 'boolean')\n         {\n            this.#options.ortho = options.ortho;\n         }\n\n         // Set default values from options.\n\n         if (Number.isFinite(options.height) || options.height === 'auto' || options.height === 'inherit' ||\n          options.height === null)\n         {\n            data.height = updateData.dimensionData.height = typeof options.height === 'number' ?\n             Math.round(options.height) : options.height;\n         }\n\n         if (Number.isFinite(options.left) || options.left === null)\n         {\n            data.left = typeof options.left === 'number' ? Math.round(options.left) : options.left;\n         }\n\n         if (Number.isFinite(options.maxHeight) || options.maxHeight === null)\n         {\n            data.maxHeight = typeof options.maxHeight === 'number' ? Math.round(options.maxHeight) : options.maxHeight;\n         }\n\n         if (Number.isFinite(options.maxWidth) || options.maxWidth === null)\n         {\n            data.maxWidth = typeof options.maxWidth === 'number' ? Math.round(options.maxWidth) : options.maxWidth;\n         }\n\n         if (Number.isFinite(options.minHeight) || options.minHeight === null)\n         {\n            data.minHeight = typeof options.minHeight === 'number' ? Math.round(options.minHeight) : options.minHeight;\n         }\n\n         if (Number.isFinite(options.minWidth) || options.minWidth === null)\n         {\n            data.minWidth = typeof options.minWidth === 'number' ? Math.round(options.minWidth) : options.minWidth;\n         }\n\n         if (Number.isFinite(options.rotateX) || options.rotateX === null)\n         {\n            transforms.rotateX = data.rotateX = options.rotateX;\n         }\n\n         if (Number.isFinite(options.rotateY) || options.rotateY === null)\n         {\n            transforms.rotateY = data.rotateY = options.rotateY;\n         }\n\n         if (Number.isFinite(options.rotateZ) || options.rotateZ === null)\n         {\n            transforms.rotateZ = data.rotateZ = options.rotateZ;\n         }\n\n         if (Number.isFinite(options.scale) || options.scale === null)\n         {\n            transforms.scale = data.scale = options.scale;\n         }\n\n         if (Number.isFinite(options.top) || options.top === null)\n         {\n            data.top = typeof options.top === 'number' ? Math.round(options.top) : options.top;\n         }\n\n         if (typeof options.transformOrigin === 'string' || options.transformOrigin === null)\n         {\n            data.transformOrigin = transformOrigins.includes(options.transformOrigin) ?\n             options.transformOrigin : null;\n         }\n\n         if (Number.isFinite(options.translateX) || options.translateX === null)\n         {\n            transforms.translateX = data.translateX = options.translateX;\n         }\n\n         if (Number.isFinite(options.translateY) || options.translateY === null)\n         {\n            transforms.translateY = data.translateY = options.translateY;\n         }\n\n         if (Number.isFinite(options.translateZ) || options.translateZ === null)\n         {\n            transforms.translateZ = data.translateZ = options.translateZ;\n         }\n\n         if (Number.isFinite(options.width) || options.width === 'auto' || options.width === 'inherit' ||\n          options.width === null)\n         {\n            data.width = updateData.dimensionData.width = typeof options.width === 'number' ?\n             Math.round(options.width) : options.width;\n         }\n\n         if (Number.isFinite(options.zIndex) || options.zIndex === null)\n         {\n            data.zIndex = typeof options.zIndex === 'number' ? Math.round(options.zIndex) : options.zIndex;\n         }\n      }\n\n      this.#stores = {\n         // The main properties for manipulating TJSPosition.\n         height: propertyStore(this, 'height'),\n         left: propertyStore(this, 'left'),\n         rotateX: propertyStore(this, 'rotateX'),\n         rotateY: propertyStore(this, 'rotateY'),\n         rotateZ: propertyStore(this, 'rotateZ'),\n         scale: propertyStore(this, 'scale'),\n         top: propertyStore(this, 'top'),\n         transformOrigin: propertyStore(this, 'transformOrigin'),\n         translateX: propertyStore(this, 'translateX'),\n         translateY: propertyStore(this, 'translateY'),\n         translateZ: propertyStore(this, 'translateZ'),\n         width: propertyStore(this, 'width'),\n         zIndex: propertyStore(this, 'zIndex'),\n\n         // Stores that control validation when width / height is not `auto`.\n         maxHeight: propertyStore(this, 'maxHeight'),\n         maxWidth: propertyStore(this, 'maxWidth'),\n         minHeight: propertyStore(this, 'minHeight'),\n         minWidth: propertyStore(this, 'minWidth'),\n\n         // Readable stores based on updates or from resize observer changes.\n         dimension: { subscribe: updateData.storeDimension.subscribe },\n         element: { subscribe: this.#styleCache.stores.element.subscribe },\n         resizeContentHeight: { subscribe: this.#styleCache.stores.resizeContentHeight.subscribe },\n         resizeContentWidth: { subscribe: this.#styleCache.stores.resizeContentWidth.subscribe },\n         resizeOffsetHeight: { subscribe: this.#styleCache.stores.resizeOffsetHeight.subscribe },\n         resizeOffsetWidth: { subscribe: this.#styleCache.stores.resizeOffsetWidth.subscribe },\n         transform: { subscribe: updateData.storeTransform.subscribe },\n\n         // Protected store that should only be set by resizeObserver action.\n         resizeObserved: this.#styleCache.stores.resizeObserved,\n      };\n\n      // When resize change from any applied resizeObserver action automatically set data for new validation run.\n      // A resizeObserver prop should be set to true for ApplicationShell components or usage of resizeObserver action\n      // to monitor for changes. This should only be used on elements that have 'auto' for width or height.\n      subscribeIgnoreFirst(this.#stores.resizeObserved, (resizeData) =>\n      {\n         const parent = this.#parent;\n         const el = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n\n         // Only invoke set if there is a target element and the resize data has a valid offset width & height.\n         if (el instanceof HTMLElement && Number.isFinite(resizeData?.offsetWidth) &&\n          Number.isFinite(resizeData?.offsetHeight))\n         {\n            this.set(data);\n         }\n      });\n\n      this.#stores.transformOrigin.values = transformOrigins;\n\n      [this.#validators, this.#validatorData] = new AdapterValidators();\n\n      if (options?.initial || options?.positionInitial)\n      {\n         const initialHelper = options.initial ?? options.positionInitial;\n\n         if (typeof initialHelper?.getLeft !== 'function' || typeof initialHelper?.getTop !== 'function')\n         {\n            throw new Error(\n             `'options.initial' position helper does not contain 'getLeft' and / or 'getTop' functions.`);\n         }\n\n         this.#options.initialHelper = options.initial;\n      }\n\n      if (options?.validator)\n      {\n         if (isIterable(options?.validator)) { this.validators.add(...options.validator); }\n         else { this.validators.add(options.validator); }\n      }\n   }\n\n   /**\n    * Returns the animation API.\n    *\n    * @returns {AnimationAPI} Animation API.\n    */\n   get animate()\n   {\n      return this.#animate;\n   }\n\n   /**\n    * Returns the dimension data for the readable store.\n    *\n    * @returns {{width: number | 'auto', height: number | 'auto'}} Dimension data.\n    */\n   get dimension()\n   {\n      return this.#updateElementData.dimensionData;\n   }\n\n   /**\n    * Returns the enabled state.\n    *\n    * @returns {boolean} Enabled state.\n    */\n   get enabled()\n   {\n      return this.#enabled;\n   }\n\n   /**\n    * Returns the current HTMLElement being positioned.\n    *\n    * @returns {HTMLElement|undefined} Current HTMLElement being positioned.\n    */\n   get element()\n   {\n      return this.#styleCache.el;\n   }\n\n   /**\n    * Returns a promise that is resolved on the next element update with the time of the update.\n    *\n    * @returns {Promise<number>} Promise resolved on element update.\n    */\n   get elementUpdated()\n   {\n      return this.#updateElementPromise;\n   }\n\n   /**\n    * Returns the associated {@link TJSPositionParent} instance.\n    *\n    * @returns {import('./').TJSPositionParent} The TJSPositionParent instance.\n    */\n   get parent() { return this.#parent; }\n\n   /**\n    * Returns the state API.\n    *\n    * @returns {import('./PositionStateAPI').PositionStateAPI} TJSPosition state API.\n    */\n   get state() { return this.#state; }\n\n   /**\n    * Returns the derived writable stores for individual data variables.\n    *\n    * @returns {import('./').TJSPositionStores} Derived / writable stores.\n    */\n   get stores() { return this.#stores; }\n\n   /**\n    * Returns the transform data for the readable store.\n    *\n    * @returns {TJSTransformData} Transform Data.\n    */\n   get transform()\n   {\n      return this.#updateElementData.transformData;\n   }\n\n   /**\n    * Returns the validators.\n    *\n    * @returns {AdapterValidators} validators.\n    */\n   get validators() { return this.#validators; }\n\n   /**\n    * Sets the enabled state.\n    *\n    * @param {boolean}  enabled - New enabled state.\n    */\n   set enabled(enabled)\n   {\n      if (typeof enabled !== 'boolean')\n      {\n         throw new TypeError(`'enabled' is not a boolean.`);\n      }\n\n      this.#enabled = enabled;\n   }\n\n   /**\n    * Sets the associated {@link TJSPositionParent} instance. Resets the style cache and default data.\n    *\n    * @param {import('./').TJSPositionParent} parent - A TJSPositionParent instance.\n    */\n   set parent(parent)\n   {\n      if (parent !== void 0 && !(parent instanceof HTMLElement) && !isObject(parent))\n      {\n         throw new TypeError(`'parent' is not an HTMLElement, object, or undefined.`);\n      }\n\n      this.#parent = parent;\n\n      // Reset any stored default data & the style cache.\n      this.#state.remove({ name: '#defaultData' });\n      this.#styleCache.reset();\n\n      // If a parent is defined then invoke set to update any parent element.\n      if (parent) { this.set(this.#data); }\n   }\n\n// Data accessors ----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} height\n    */\n   get height() { return this.#data.height; }\n\n   /**\n    * @returns {number|null} left\n    */\n   get left() { return this.#data.left; }\n\n   /**\n    * @returns {number|null} maxHeight\n    */\n   get maxHeight() { return this.#data.maxHeight; }\n\n   /**\n    * @returns {number|null} maxWidth\n    */\n   get maxWidth() { return this.#data.maxWidth; }\n\n   /**\n    * @returns {number|null} minHeight\n    */\n   get minHeight() { return this.#data.minHeight; }\n\n   /**\n    * @returns {number|null} minWidth\n    */\n   get minWidth() { return this.#data.minWidth; }\n\n   /**\n    * @returns {number|null} rotateX\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number|null} rotateY\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number|null} rotateZ\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} alias for rotateZ\n    */\n   get rotation() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} scale\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number|null} top\n    */\n   get top() { return this.#data.top; }\n\n   /**\n    * @returns {import('./').TJSTransformOrigin} transformOrigin\n    */\n   get transformOrigin() { return this.#data.transformOrigin; }\n\n   /**\n    * @returns {number|null} translateX\n    */\n   get translateX() { return this.#data.translateX; }\n\n   /**\n    * @returns {number|null} translateY\n    */\n   get translateY() { return this.#data.translateY; }\n\n   /**\n    * @returns {number|null} translateZ\n    */\n   get translateZ() { return this.#data.translateZ; }\n\n   /**\n    * @returns {number|'auto'|'inherit'|null} width\n    */\n   get width() { return this.#data.width; }\n\n   /**\n    * @returns {number|null} z-index\n    */\n   get zIndex() { return this.#data.zIndex; }\n\n   /**\n    * @param {number|string|null} height -\n    */\n   set height(height)\n   {\n      this.#stores.height.set(height);\n   }\n\n   /**\n    * @param {number|string|null} left -\n    */\n   set left(left)\n   {\n      this.#stores.left.set(left);\n   }\n\n   /**\n    * @param {number|string|null} maxHeight -\n    */\n   set maxHeight(maxHeight)\n   {\n      this.#stores.maxHeight.set(maxHeight);\n   }\n\n   /**\n    * @param {number|string|null} maxWidth -\n    */\n   set maxWidth(maxWidth)\n   {\n      this.#stores.maxWidth.set(maxWidth);\n   }\n\n   /**\n    * @param {number|string|null} minHeight -\n    */\n   set minHeight(minHeight)\n   {\n      this.#stores.minHeight.set(minHeight);\n   }\n\n   /**\n    * @param {number|string|null} minWidth -\n    */\n   set minWidth(minWidth)\n   {\n      this.#stores.minWidth.set(minWidth);\n   }\n\n   /**\n    * @param {number|string|null} rotateX -\n    */\n   set rotateX(rotateX)\n   {\n      this.#stores.rotateX.set(rotateX);\n   }\n\n   /**\n    * @param {number|string|null} rotateY -\n    */\n   set rotateY(rotateY)\n   {\n      this.#stores.rotateY.set(rotateY);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ -\n    */\n   set rotateZ(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} rotateZ - alias for rotateZ\n    */\n   set rotation(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|string|null} scale -\n    */\n   set scale(scale)\n   {\n      this.#stores.scale.set(scale);\n   }\n\n   /**\n    * @param {number|string|null} top -\n    */\n   set top(top)\n   {\n      this.#stores.top.set(top);\n   }\n\n   /**\n    * @param {import('./').TJSTransformOrigin} transformOrigin -\n    */\n   set transformOrigin(transformOrigin)\n   {\n      if (transformOrigins.includes(transformOrigin)) { this.#stores.transformOrigin.set(transformOrigin); }\n   }\n\n   /**\n    * @param {number|string|null} translateX -\n    */\n   set translateX(translateX)\n   {\n      this.#stores.translateX.set(translateX);\n   }\n\n   /**\n    * @param {number|string|null} translateY -\n    */\n   set translateY(translateY)\n   {\n      this.#stores.translateY.set(translateY);\n   }\n\n   /**\n    * @param {number|string|null} translateZ -\n    */\n   set translateZ(translateZ)\n   {\n      this.#stores.translateZ.set(translateZ);\n   }\n\n   /**\n    * @param {number|string|null} width -\n    */\n   set width(width)\n   {\n      this.#stores.width.set(width);\n   }\n\n   /**\n    * @param {number|string|null} zIndex -\n    */\n   set zIndex(zIndex)\n   {\n      this.#stores.zIndex.set(zIndex);\n   }\n\n   /**\n    * Assigns current position to object passed into method.\n    *\n    * @param {object|TJSPositionData}  [position] - Target to assign current position data.\n    *\n    * @param {import('./').TJSPositionGetOptions}   [options] - Defines options for specific keys and substituting null\n    *        for numeric default values.\n    *\n    * @returns {TJSPositionData} Passed in object with current position data.\n    */\n   get(position = {}, options)\n   {\n      const keys = options?.keys;\n      const excludeKeys = options?.exclude;\n      const numeric = options?.numeric ?? false;\n\n      if (isIterable(keys))\n      {\n         // Replace any null values potentially with numeric default values.\n         if (numeric)\n         {\n            for (const key of keys) { position[key] = this[key] ?? numericDefaults[key]; }\n         }\n         else // Accept current values.\n         {\n            for (const key of keys) { position[key] = this[key]; }\n         }\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete position[key]; }\n         }\n\n         return position;\n      }\n      else\n      {\n         const data = Object.assign(position, this.#data);\n\n         // Remove any excluded keys.\n         if (isIterable(excludeKeys))\n         {\n            for (const key of excludeKeys) { delete data[key]; }\n         }\n\n         // Potentially set numeric defaults.\n         if (numeric) { setNumericDefaults(data); }\n\n         return data;\n      }\n   }\n\n   /**\n    * @returns {TJSPositionData} Current position data.\n    */\n   toJSON()\n   {\n      return Object.assign({}, this.#data);\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * Note: the logic for updating position is improved and changes a few aspects from the default\n    * {@link globalThis.Application.setPosition}. The gate on `popOut` is removed, so to ensure no positional\n    * application occurs popOut applications can set `this.options.positionable` to false ensuring no positional inline\n    * styles are applied.\n    *\n    * The initial set call on an application with a target element will always set width / height as this is\n    * necessary for correct calculations.\n    *\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\n    * implement one or more validator functions and add them from the application via\n    * `this.position.validators.add(<Function>)`.\n    *\n    * Updates to any target element are decoupled from the underlying TJSPosition data. This method returns this instance\n    * that you can then await on the target element inline style update by using {@link TJSPosition.elementUpdated}.\n    *\n    * @param {import('./').TJSPositionDataExtended} [position] - TJSPosition data to set.\n    *\n    * @returns {TJSPosition} This TJSPosition instance.\n    */\n   set(position = {})\n   {\n      if (!isObject(position)) { throw new TypeError(`Position - set error: 'position' is not an object.`); }\n\n      const parent = this.#parent;\n\n      // An early out to prevent `set` from taking effect if not enabled.\n      if (!this.#enabled)\n      {\n         return this;\n      }\n\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return this;\n      }\n\n      // Callers can specify to immediately update an associated element. This is useful if set is called from\n      // requestAnimationFrame / rAF. Library integrations like GSAP invoke set from rAF.\n      const immediateElementUpdate = position.immediateElementUpdate === true;\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n\n      // Find the target HTML element and verify that it is connected storing it in `el`.\n      const targetEl = parent instanceof HTMLElement ? parent : parent?.elementTarget;\n      const el = targetEl instanceof HTMLElement && targetEl.isConnected ? targetEl : void 0;\n\n      const changeSet = this.#positionChangeSet;\n      const styleCache = this.#styleCache;\n\n      if (el)\n      {\n         // Cache the computed styles of the element.\n         if (!styleCache.hasData(el))\n         {\n            styleCache.update(el);\n\n            // Add will-change property if not already set in inline or computed styles.\n            if (!styleCache.hasWillChange)\n            ;\n\n            // Update all properties / clear queued state.\n            changeSet.set(true);\n            this.#updateElementData.queued = false;\n         }\n\n         // Converts any relative string position data to numeric inputs.\n         convertRelative(position, this);\n\n         position = this.#updatePosition(position, parent, el, styleCache);\n\n         // Check if a validator cancelled the update.\n         if (position === null) { return this; }\n      }\n\n      if (Number.isFinite(position.left))\n      {\n         position.left = Math.round(position.left);\n\n         if (data.left !== position.left) { data.left = position.left; changeSet.left = true; }\n      }\n\n      if (Number.isFinite(position.top))\n      {\n         position.top = Math.round(position.top);\n\n         if (data.top !== position.top) { data.top = position.top; changeSet.top = true; }\n      }\n\n      if (Number.isFinite(position.maxHeight) || position.maxHeight === null)\n      {\n         position.maxHeight = typeof position.maxHeight === 'number' ? Math.round(position.maxHeight) : null;\n\n         if (data.maxHeight !== position.maxHeight) { data.maxHeight = position.maxHeight; changeSet.maxHeight = true; }\n      }\n\n      if (Number.isFinite(position.maxWidth) || position.maxWidth === null)\n      {\n         position.maxWidth = typeof position.maxWidth === 'number' ? Math.round(position.maxWidth) : null;\n\n         if (data.maxWidth !== position.maxWidth) { data.maxWidth = position.maxWidth; changeSet.maxWidth = true; }\n      }\n\n      if (Number.isFinite(position.minHeight) || position.minHeight === null)\n      {\n         position.minHeight = typeof position.minHeight === 'number' ? Math.round(position.minHeight) : null;\n\n         if (data.minHeight !== position.minHeight) { data.minHeight = position.minHeight; changeSet.minHeight = true; }\n      }\n\n      if (Number.isFinite(position.minWidth) || position.minWidth === null)\n      {\n         position.minWidth = typeof position.minWidth === 'number' ? Math.round(position.minWidth) : null;\n\n         if (data.minWidth !== position.minWidth) { data.minWidth = position.minWidth; changeSet.minWidth = true; }\n      }\n\n      if (Number.isFinite(position.rotateX) || position.rotateX === null)\n      {\n         if (data.rotateX !== position.rotateX)\n         {\n            data.rotateX = transforms.rotateX = position.rotateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateY) || position.rotateY === null)\n      {\n         if (data.rotateY !== position.rotateY)\n         {\n            data.rotateY = transforms.rotateY = position.rotateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.rotateZ) || position.rotateZ === null)\n      {\n         if (data.rotateZ !== position.rotateZ)\n         {\n            data.rotateZ = transforms.rotateZ = position.rotateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.scale) || position.scale === null)\n      {\n         position.scale = typeof position.scale === 'number' ? Math.max(0, Math.min(position.scale, 1000)) : null;\n\n         if (data.scale !== position.scale)\n         {\n            data.scale = transforms.scale = position.scale;\n            changeSet.transform = true;\n         }\n      }\n\n      if ((typeof position.transformOrigin === 'string' && transformOrigins.includes(\n       position.transformOrigin)) || position.transformOrigin === null)\n      {\n         if (data.transformOrigin !== position.transformOrigin)\n         {\n            data.transformOrigin = position.transformOrigin;\n            changeSet.transformOrigin = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateX) || position.translateX === null)\n      {\n         if (data.translateX !== position.translateX)\n         {\n            data.translateX = transforms.translateX = position.translateX;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateY) || position.translateY === null)\n      {\n         if (data.translateY !== position.translateY)\n         {\n            data.translateY = transforms.translateY = position.translateY;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.translateZ) || position.translateZ === null)\n      {\n         if (data.translateZ !== position.translateZ)\n         {\n            data.translateZ = transforms.translateZ = position.translateZ;\n            changeSet.transform = true;\n         }\n      }\n\n      if (Number.isFinite(position.zIndex))\n      {\n         position.zIndex = Math.round(position.zIndex);\n\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; changeSet.zIndex = true; }\n      }\n\n      if (Number.isFinite(position.width) || position.width === 'auto' || position.width === 'inherit' ||\n       position.width === null)\n      {\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n\n         if (data.width !== position.width) { data.width = position.width; changeSet.width = true; }\n      }\n\n      if (Number.isFinite(position.height) || position.height === 'auto' || position.height === 'inherit' ||\n       position.height === null)\n      {\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n\n         if (data.height !== position.height) { data.height = position.height; changeSet.height = true; }\n      }\n\n      if (el)\n      {\n         const defaultData = this.#state.getDefault();\n\n         // Set default data after first set operation that has a target element.\n         if (!isObject(defaultData)) { this.#state.save({ name: '#defaultData', ...Object.assign({}, data) }); }\n\n         // If `immediateElementUpdate` is true in position data passed to `set` then update the element immediately.\n         // This is for rAF based library integrations like GSAP.\n         if (immediateElementUpdate)\n         {\n            UpdateElementManager.immediate(el, this.#updateElementData);\n            this.#updateElementPromise = Promise.resolve(performance.now());\n         }\n         // Else if not queued then queue an update for the next rAF callback.\n         else if (!this.#updateElementData.queued)\n         {\n            this.#updateElementPromise = UpdateElementManager.add(el, this.#updateElementData);\n         }\n      }\n      else\n      {\n         // Notify main store subscribers.\n         UpdateElementManager.updateSubscribers(this.#updateElementData);\n      }\n\n      return this;\n   }\n\n   /**\n    * @param {import('svelte/store').Subscriber<TJSPositionData>} handler - Callback function that is invoked on\n    *        update / changes. Receives a copy of the TJSPositionData.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(Object.assign({}, this.#data));                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * @param {import('./').TJSPositionDataExtended} opts -\n    *\n    * @param {number|null} opts.left -\n    *\n    * @param {number|null} opts.top -\n    *\n    * @param {number|null} opts.maxHeight -\n    *\n    * @param {number|null} opts.maxWidth -\n    *\n    * @param {number|null} opts.minHeight -\n    *\n    * @param {number|null} opts.minWidth -\n    *\n    * @param {number|'auto'|null} opts.width -\n    *\n    * @param {number|'auto'|null} opts.height -\n    *\n    * @param {number|null} opts.rotateX -\n    *\n    * @param {number|null} opts.rotateY -\n    *\n    * @param {number|null} opts.rotateZ -\n    *\n    * @param {number|null} opts.scale -\n    *\n    * @param {string} opts.transformOrigin -\n    *\n    * @param {number|null} opts.translateX -\n    *\n    * @param {number|null} opts.translateY -\n    *\n    * @param {number|null} opts.translateZ -\n    *\n    * @param {number|null} opts.zIndex -\n    *\n    * @param {number|null} opts.rotation - alias for rotateZ\n    *\n    * @param {*} opts.rest -\n    *\n    * @param {object} parent -\n    *\n    * @param {HTMLElement} el -\n    *\n    * @param {StyleCache} styleCache -\n    *\n    * @returns {null|TJSPositionData} Updated position data or null if validation fails.\n    */\n   #updatePosition({\n      // Directly supported parameters\n      left, top, maxWidth, maxHeight, minWidth, minHeight, width, height, rotateX, rotateY, rotateZ, scale,\n       transformOrigin, translateX, translateY, translateZ, zIndex,\n\n      // Aliased parameters\n      rotation,\n\n      ...rest\n   } = {}, parent, el, styleCache)\n   {\n      let currentPosition = s_DATA_UPDATE.copy(this.#data);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element.\n      if (el.style.width === '' || width !== void 0)\n      {\n         if (width === 'auto' || (currentPosition.width === 'auto' && width !== null))\n         {\n            currentPosition.width = 'auto';\n            width = styleCache.offsetWidth;\n         }\n         else if (width === 'inherit' || (currentPosition.width === 'inherit' && width !== null))\n         {\n            currentPosition.width = 'inherit';\n            width = styleCache.offsetWidth;\n         }\n         else\n         {\n            const newWidth = Number.isFinite(width) ? width : currentPosition.width;\n            currentPosition.width = width = Number.isFinite(newWidth) ? Math.round(newWidth) : styleCache.offsetWidth;\n         }\n      }\n      else\n      {\n         width = Number.isFinite(currentPosition.width) ? currentPosition.width : styleCache.offsetWidth;\n      }\n\n      // Update height if an explicit value is passed, or if no height value is set on the element.\n      if (el.style.height === '' || height !== void 0)\n      {\n         if (height === 'auto' || (currentPosition.height === 'auto' && height !== null))\n         {\n            currentPosition.height = 'auto';\n            height = styleCache.offsetHeight;\n         }\n         else if (height === 'inherit' || (currentPosition.height === 'inherit' && height !== null))\n         {\n            currentPosition.height = 'inherit';\n            height = styleCache.offsetHeight;\n         }\n         else\n         {\n            const newHeight = Number.isFinite(height) ? height : currentPosition.height;\n            currentPosition.height = height = Number.isFinite(newHeight) ? Math.round(newHeight) :\n             styleCache.offsetHeight;\n         }\n      }\n      else\n      {\n         height = Number.isFinite(currentPosition.height) ? currentPosition.height : styleCache.offsetHeight;\n      }\n\n      // Update left\n      if (Number.isFinite(left))\n      {\n         currentPosition.left = left;\n      }\n      else if (!Number.isFinite(currentPosition.left))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.left = typeof this.#options.initialHelper?.getLeft === 'function' ?\n          this.#options.initialHelper.getLeft(width) : 0;\n      }\n\n      // Update top\n      if (Number.isFinite(top))\n      {\n         currentPosition.top = top;\n      }\n      else if (!Number.isFinite(currentPosition.top))\n      {\n         // Potentially use any initial position helper if available or set to 0.\n         currentPosition.top = typeof this.#options.initialHelper?.getTop === 'function' ?\n          this.#options.initialHelper.getTop(height) : 0;\n      }\n\n      if (Number.isFinite(maxHeight) || maxHeight === null)\n      {\n         currentPosition.maxHeight = Number.isFinite(maxHeight) ? Math.round(maxHeight) : null;\n      }\n\n      if (Number.isFinite(maxWidth) || maxWidth === null)\n      {\n         currentPosition.maxWidth = Number.isFinite(maxWidth) ? Math.round(maxWidth) : null;\n      }\n\n      if (Number.isFinite(minHeight) || minHeight === null)\n      {\n         currentPosition.minHeight = Number.isFinite(minHeight) ? Math.round(minHeight) : null;\n      }\n\n      if (Number.isFinite(minWidth) || minWidth === null)\n      {\n         currentPosition.minWidth = Number.isFinite(minWidth) ? Math.round(minWidth) : null;\n      }\n\n      // Update rotate X/Y/Z, scale, z-index\n      if (Number.isFinite(rotateX) || rotateX === null) { currentPosition.rotateX = rotateX; }\n      if (Number.isFinite(rotateY) || rotateY === null) { currentPosition.rotateY = rotateY; }\n\n      // Handle alias for rotateZ. First check if `rotateZ` is valid and different from the current value. Next check if\n      // `rotation` is valid and use it for `rotateZ`.\n      if (rotateZ !== currentPosition.rotateZ && (Number.isFinite(rotateZ) || rotateZ === null))\n      {\n         currentPosition.rotateZ = rotateZ;\n      }\n      else if (rotation !== currentPosition.rotateZ && (Number.isFinite(rotation) || rotation === null))\n      {\n         currentPosition.rotateZ = rotation;\n      }\n\n      if (Number.isFinite(translateX) || translateX === null) { currentPosition.translateX = translateX; }\n      if (Number.isFinite(translateY) || translateY === null) { currentPosition.translateY = translateY; }\n      if (Number.isFinite(translateZ) || translateZ === null) { currentPosition.translateZ = translateZ; }\n\n      if (Number.isFinite(scale) || scale === null)\n      {\n         currentPosition.scale = typeof scale === 'number' ? Math.max(0, Math.min(scale, 1000)) : null;\n      }\n\n      if (typeof transformOrigin === 'string' || transformOrigin === null)\n      {\n         currentPosition.transformOrigin = transformOrigins.includes(transformOrigin) ? transformOrigin :\n          null;\n      }\n\n      if (Number.isFinite(zIndex) || zIndex === null)\n      {\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n      }\n\n      const validatorData = this.#validatorData;\n\n      // If there are any validators allow them to potentially modify position data or reject the update.\n      if (this.#validators.enabled && validatorData.length)\n      {\n         s_VALIDATION_DATA.parent = parent;\n\n         s_VALIDATION_DATA.el = el;\n\n         s_VALIDATION_DATA.computed = styleCache.computed;\n\n         s_VALIDATION_DATA.transforms = this.#transforms;\n\n         s_VALIDATION_DATA.height = height;\n\n         s_VALIDATION_DATA.width = width;\n\n         s_VALIDATION_DATA.marginLeft = styleCache.marginLeft;\n\n         s_VALIDATION_DATA.marginTop = styleCache.marginTop;\n\n         s_VALIDATION_DATA.maxHeight = styleCache.maxHeight ?? currentPosition.maxHeight;\n\n         s_VALIDATION_DATA.maxWidth = styleCache.maxWidth ?? currentPosition.maxWidth;\n\n         // Given a parent w/ reactive state and is minimized ignore styleCache min-width/height.\n         const isMinimized = parent?.reactive?.minimized ?? false;\n\n         // Note the use of || for accessing the style cache as the left hand is ignored w/ falsy values such as '0'.\n         s_VALIDATION_DATA.minHeight = isMinimized ? currentPosition.minHeight ?? 0 :\n          styleCache.minHeight || (currentPosition.minHeight ?? 0);\n\n         s_VALIDATION_DATA.minWidth = isMinimized ? currentPosition.minWidth ?? 0 :\n          styleCache.minWidth || (currentPosition.minWidth ?? 0);\n\n         for (let cntr = 0; cntr < validatorData.length; cntr++)\n         {\n            s_VALIDATION_DATA.position = currentPosition;\n            s_VALIDATION_DATA.rest = rest;\n            currentPosition = validatorData[cntr].validator(s_VALIDATION_DATA);\n\n            if (currentPosition === null) { return null; }\n         }\n      }\n\n      // Return the updated position object.\n      return currentPosition;\n   }\n}\n\nconst s_DATA_UPDATE = new TJSPositionData();\n\n/**\n * @type {import('./').ValidationData}\n */\nconst s_VALIDATION_DATA = {\n   position: void 0,\n   parent: void 0,\n   el: void 0,\n   computed: void 0,\n   transforms: void 0,\n   height: void 0,\n   width: void 0,\n   marginLeft: void 0,\n   marginTop: void 0,\n   maxHeight: void 0,\n   maxWidth: void 0,\n   minHeight: void 0,\n   minWidth: void 0,\n   rest: void 0\n};\n\nObject.seal(s_VALIDATION_DATA);\n\n/**\n * Provides an action to apply a TJSPosition instance to a HTMLElement and invoke `position.parent`\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {import('..').TJSPosition}   position - A position instance.\n *\n * @returns {import('svelte/action').ActionReturn<import('..').TJSPosition>} The action lifecycle methods.\n */\nfunction applyPosition(node, position)\n{\n   if (hasSetter(position, 'parent')) { position.parent = node; }\n\n   return {\n      update: (newPosition) =>\n      {\n         // Sanity case to short circuit update if positions are the same instance.\n         if (newPosition === position && newPosition.parent === position.parent) { return; }\n\n         if (hasSetter(position, 'parent')) { position.parent = void 0; }\n\n         position = newPosition;\n\n         if (hasSetter(position, 'parent')) { position.parent = node; }\n      },\n\n      destroy: () => { if (hasSetter(position, 'parent')) { position.parent = void 0; } }\n   };\n}\n\n/**\n * Provides an action to enable pointer dragging of an HTMLElement and invoke `position.set` on a given\n * {@link TJSPosition} instance provided. When the attached boolean store state changes the draggable\n * action is enabled or disabled.\n *\n * @param {HTMLElement}       node - The node associated with the action.\n *\n * @param {object}            params - Required parameters.\n *\n * @param {import('..').TJSPosition}   params.position - A position instance.\n *\n * @param {boolean}           [params.active=true] - A boolean value; attached to a readable store.\n *\n * @param {number}            [params.button=0] - MouseEvent button; {@link https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button}.\n *\n * @param {import('svelte/store').Writable<boolean>} [params.storeDragging] - A writable store that tracks \"dragging\"\n *        state.\n *\n * @param {boolean}           [params.ease=true] - When true easing is enabled.\n *\n * @param {object}            [params.easeOptions] - Gsap `to / `quickTo` vars object.\n *\n * @param {Iterable<string>}  [params.hasTargetClassList] - When defined any event targets that have a class in this\n *        list are allowed.\n *\n * @param {Iterable<string>}  [params.ignoreTargetClassList] - When defined any event targets that have a class in this\n *        list are ignored.\n *\n * @returns {import('svelte/action').ActionReturn<Record<string, any>>} Lifecycle functions.\n */\nfunction draggable(node, { position, active = true, button = 0, storeDragging = void 0, ease = false,\n easeOptions = { duration: 0.1, ease: cubicOut }, hasTargetClassList, ignoreTargetClassList })\n{\n   if (hasTargetClassList !== void 0 && !isIterable(hasTargetClassList))\n   {\n      throw new TypeError(`'hasTargetClassList' is not iterable.`);\n   }\n\n   if (ignoreTargetClassList !== void 0 && !isIterable(ignoreTargetClassList))\n   {\n      throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n   }\n\n   /**\n    * Used for direct call to `position.set`.\n    *\n    * @type {{top: number, left: number}}\n    */\n   const positionData = { left: 0, top: 0 };\n\n   /**\n    * Duplicate the app / Positionable starting position to track differences.\n    *\n    * @type {object}\n    */\n   let initialPosition = null;\n\n   /**\n    * Stores the initial X / Y on drag down.\n    *\n    * @type {object}\n    */\n   let initialDragPoint = {};\n\n   /**\n    * Stores the current dragging state and gates the move pointer as the dragging store is not\n    * set until the first pointer move.\n    *\n    * @type {boolean}\n    */\n   let dragging = false;\n\n   /**\n    * Stores the quickTo callback to use for optimized tweening when easing is enabled.\n    *\n    * @type {import('#runtime/svelte/store/position').quickToCallback}\n    */\n   let quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n\n   /**\n    * Remember event handlers associated with this action, so they may be later unregistered.\n    *\n    *  @type {{ [key: string]: [string, Function, boolean] }}\n    */\n   const handlers = {\n      dragDown: ['pointerdown', onDragPointerDown, false],\n      dragMove: ['pointermove', onDragPointerChange, false],\n      dragUp: ['pointerup', onDragPointerUp, false]\n   };\n\n   /**\n    * Activates listeners.\n    */\n   function activateListeners()\n   {\n      // Drag handlers\n      node.addEventListener(...handlers.dragDown);\n      node.classList.add('draggable');\n   }\n\n   /**\n    * Removes listeners.\n    */\n   function removeListeners()\n   {\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      // Drag handlers\n      node.removeEventListener(...handlers.dragDown);\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n      node.classList.remove('draggable');\n   }\n\n   if (active)\n   {\n      activateListeners();\n   }\n\n   /**\n    * Handle the initial pointer down that activates dragging behavior for the positionable.\n    *\n    * @param {PointerEvent} event - The pointer down event.\n    */\n   function onDragPointerDown(event)\n   {\n      if (event.button !== button || !event.isPrimary) { return; }\n\n      // Do not process if the position system is not enabled.\n      if (!position.enabled) { return; }\n\n      // Potentially ignore this event if `ignoreTargetClassList` is defined and the `event.target` has a matching\n      // class.\n      if (ignoreTargetClassList !== void 0 && event.target instanceof HTMLElement)\n      {\n         for (const targetClass of ignoreTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass)) { return; }\n         }\n      }\n\n      // Potentially ignore this event if `hasTargetClassList` is defined and the `event.target` does not have any\n      // matching class from the list.\n      if (hasTargetClassList !== void 0 && event.target instanceof HTMLElement)\n      {\n         let foundTarget = false;\n\n         for (const targetClass of hasTargetClassList)\n         {\n            if (event.target.classList.contains(targetClass))\n            {\n               foundTarget = true;\n               break;\n            }\n         }\n\n         if (!foundTarget) { return; }\n      }\n\n      event.preventDefault();\n\n      dragging = false;\n\n      // Record initial position.\n      initialPosition = position.get();\n      initialDragPoint = { x: event.clientX, y: event.clientY };\n\n      // Add move and pointer up handlers.\n      node.addEventListener(...handlers.dragMove);\n      node.addEventListener(...handlers.dragUp);\n\n      node.setPointerCapture(event.pointerId);\n   }\n\n   /**\n    * Move the positionable.\n    *\n    * @param {PointerEvent} event - The pointer move event.\n    */\n   function onDragPointerChange(event)\n   {\n      // See chorded button presses for pointer events:\n      // https://www.w3.org/TR/pointerevents3/#chorded-button-interactions\n      // TODO: Support different button configurations for PointerEvents.\n      if ((event.buttons & 1) === 0)\n      {\n         onDragPointerUp(event);\n         return;\n      }\n\n      if (event.button !== -1 || !event.isPrimary) { return; }\n\n      event.preventDefault();\n\n      // Only set store dragging on first move event.\n      if (!dragging && typeof storeDragging?.set === 'function')\n      {\n         dragging = true;\n         storeDragging.set(true);\n      }\n\n      /** @type {number} */\n      const newLeft = initialPosition.left + (event.clientX - initialDragPoint.x);\n      /** @type {number} */\n      const newTop = initialPosition.top + (event.clientY - initialDragPoint.y);\n\n      if (ease)\n      {\n         quickTo(newTop, newLeft);\n      }\n      else\n      {\n         positionData.left = newLeft;\n         positionData.top = newTop;\n\n         position.set(positionData);\n      }\n   }\n\n   /**\n    * Finish dragging and set the final position and removing listeners.\n    *\n    * @param {PointerEvent} event - The pointer up event.\n    */\n   function onDragPointerUp(event)\n   {\n      event.preventDefault();\n\n      dragging = false;\n      if (typeof storeDragging?.set === 'function') { storeDragging.set(false); }\n\n      node.removeEventListener(...handlers.dragMove);\n      node.removeEventListener(...handlers.dragUp);\n   }\n\n   return {\n      // The default of active being true won't automatically add listeners twice.\n      update: (options) =>\n      {\n         if (typeof options.active === 'boolean')\n         {\n            active = options.active;\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         }\n\n         if (typeof options.button === 'number')\n         {\n            button = options.button;\n         }\n\n         if (options.position !== void 0 && options.position !== position)\n         {\n            position = options.position;\n            quickTo = position.animate.quickTo(['top', 'left'], easeOptions);\n         }\n\n         if (typeof options.ease === 'boolean') { ease = options.ease; }\n\n         if (isObject(options.easeOptions))\n         {\n            easeOptions = options.easeOptions;\n            quickTo.options(easeOptions);\n         }\n\n         if (options.hasTargetClassList !== void 0)\n         {\n            if (!isIterable(options.hasTargetClassList))\n            {\n               throw new TypeError(`'hasTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               hasTargetClassList = options.hasTargetClassList;\n            }\n         }\n\n         if (options.ignoreTargetClassList !== void 0)\n         {\n            if (!isIterable(options.ignoreTargetClassList))\n            {\n               throw new TypeError(`'ignoreTargetClassList' is not iterable.`);\n            }\n            else\n            {\n               ignoreTargetClassList = options.ignoreTargetClassList;\n            }\n         }\n      },\n\n      destroy: () => removeListeners()\n   };\n}\n\nclass DraggableOptions\n{\n   #ease = false;\n\n   /**\n    * @type {{ duration: number, ease: (t: number) => number | string }}\n    */\n   #easeOptions = { duration: 0.1, ease: cubicOut };\n\n   /**\n    * Stores the subscribers.\n    *\n    * @type {import('svelte/store').Subscriber<DraggableOptions>[]}\n    */\n   #subscriptions = [];\n\n   /**\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.ease] -\n    *\n    * @param {object}   [opts.easeOptions] -\n    */\n   constructor({ ease, easeOptions } = {})\n   {\n      // Define the following getters directly on this instance and make them enumerable. This allows them to be\n      // picked up w/ `Object.assign`.\n      Object.defineProperty(this, 'ease', {\n         get: () => { return this.#ease; },\n         set: (newEase) =>\n         {\n            if (typeof newEase !== 'boolean') { throw new TypeError(`'ease' is not a boolean.`); }\n\n            this.#ease = newEase;\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      Object.defineProperty(this, 'easeOptions', {\n         get: () => { return this.#easeOptions; },\n         set: (newEaseOptions) =>\n         {\n            if (!isObject(newEaseOptions))\n            {\n               throw new TypeError(`'easeOptions' is not an object.`);\n            }\n\n            if (newEaseOptions.duration !== void 0)\n            {\n               if (!Number.isFinite(newEaseOptions.duration))\n               {\n                  throw new TypeError(`'easeOptions.duration' is not a finite number.`);\n               }\n\n               if (newEaseOptions.duration < 0) { throw new Error(`'easeOptions.duration' is less than 0.`); }\n\n               this.#easeOptions.duration = newEaseOptions.duration;\n            }\n\n            if (newEaseOptions.ease !== void 0)\n            {\n               if (typeof newEaseOptions.ease !== 'function' && typeof newEaseOptions.ease !== 'string')\n               {\n                  throw new TypeError(`'easeOptions.ease' is not a function or string.`);\n               }\n\n               this.#easeOptions.ease = newEaseOptions.ease;\n            }\n\n            this.#updateSubscribers();\n         },\n         enumerable: true\n      });\n\n      // Set default options.\n      if (ease !== void 0) { this.ease = ease; }\n      if (easeOptions !== void 0) { this.easeOptions = easeOptions; }\n   }\n\n\n   /**\n    * @returns {number} Get ease duration\n    */\n   get easeDuration() { return this.#easeOptions.duration; }\n\n   /**\n    * @returns {string|Function} Get easing function value.\n    */\n   get easeValue() { return this.#easeOptions.ease; }\n\n\n   /**\n    * @param {number}   duration - Set ease duration.\n    */\n   set easeDuration(duration)\n   {\n      if (!Number.isFinite(duration))\n      {\n         throw new TypeError(`'duration' is not a finite number.`);\n      }\n\n      if (duration < 0) { throw new Error(`'duration' is less than 0.`); }\n\n      this.#easeOptions.duration = duration;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * @param {string|Function} value - Get easing function value.\n    */\n   set easeValue(value)\n   {\n      if (typeof value !== 'function' && typeof value !== 'string')\n      {\n         throw new TypeError(`'value' is not a function or string.`);\n      }\n\n      this.#easeOptions.ease = value;\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets all options data to default values.\n    */\n   reset()\n   {\n      this.#ease = false;\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    * Resets easing options to default values.\n    */\n   resetEase()\n   {\n      this.#easeOptions = { duration: 0.1, ease: cubicOut };\n      this.#updateSubscribers();\n   }\n\n   /**\n    *\n    * @param {import('svelte/store').Subscriber<DraggableOptions>} handler - Callback function that is invoked on\n    *        update / changes. Receives the DraggableOptions object / instance.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this);                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   #updateSubscribers()\n   {\n      const subscriptions = this.#subscriptions;\n\n      // Early out if there are no subscribers.\n      if (subscriptions.length > 0)\n      {\n         for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this); }\n      }\n   }\n}\n\n/**\n * Define a function to get a DraggableOptions instance.\n *\n * @param {{ ease?: boolean, easeOptions?: object }} options - Draggable options.\n *\n * @returns {DraggableOptions} A new options instance.\n */\ndraggable.options = (options) => new DraggableOptions(options);\n\nexport { TJSPosition, TJSPositionData, applyPosition, draggable };\n//# sourceMappingURL=index.js.map\n","<script>\n   /**\n    * Provides an app header button conforming to the Foundry {@link ApplicationHeaderButton} type. Additionally, a\n    * `title` field is supported to give a tool tip for the button. For backward compatibility `onclick` is supported,\n    * but for uniformity across TRL defining an `onPress` function is recommended. If defined it is invoked when\n    * the button is clicked or `Enter` key pressed and state is updated accordingly.\n    *\n    * TRL also supports the following extra button data:\n    * - {keyCode='Enter'}           keyCode: A string conforming to `KeyboardEvent.code` to activate `onPress` callback.\n    * - {keepMinimized=false}       keepMinimized: When true the button is not removed when app minimized.\n    * - {Function}                  onContextMenu: Invoked when right mouse button or contextmenu key is pressed.\n    * - {Function}                  onPress: Invoked when left mouse button or `keyCode` key is pressed.\n    * - {Record<string, string>}    styles: Additional inline styles to apply to button.\n    * - {string}                    title: Tooltip title.\n    */\n   import { applyStyles }   from '@typhonjs-fvtt/runtime/svelte/action/dom';\n   import { isObject }      from '@typhonjs-fvtt/runtime/util/object';\n\n   import { localize }      from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   export let button = void 0;\n\n   const s_REGEX_HTML = /^\\s*<.*>$/;\n\n   $: title = isObject(button) && typeof button.title === 'string' ? localize(button.title) : '';\n\n   // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n   $: icon = isObject(button) && typeof button.icon !== 'string' ? void 0 : s_REGEX_HTML.test(button.icon) ?\n    button.icon : `<i class=\"${button.icon}\" title=\"${title}\"></i>`;\n\n   $: label = isObject(button) && typeof button.label === 'string' ? localize(button.label) : void 0;\n\n   $: keepMinimized = isObject(button) && typeof button.keepMinimized === 'boolean' ? button.keepMinimized : false;\n\n   $: keyCode = isObject(button) && typeof button.keyCode === 'string' ? button.keyCode : 'Enter';\n\n   $: styles = isObject(button) && isObject(button.styles) ? button.styles : void 0;\n\n   function onClick(event)\n   {\n      // Accept `onPress or `onclick` as the function / data to invoke.\n      const invoke = button?.onPress ?? button?.onclick;\n\n      if (typeof invoke === 'function')\n      {\n         invoke.call(button, event);\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   function onContextMenu(event)\n   {\n      // Accept `onContextMenu` as the function / data to invoke.\n      const invoke = button?.onContextMenu;\n\n      if (typeof invoke === 'function')\n      {\n         invoke.call(button, event);\n         button = button; // This provides a reactive update if button data changes.\n      }\n   }\n\n   /**\n    * Consume / stop propagation of key down when key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeydown(event)\n   {\n      if (event.code === keyCode)\n      {\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n\n   /**\n    * Handle press event if key codes match.\n    *\n    * @param {KeyboardEvent}    event -\n    */\n   function onKeyup(event)\n   {\n      if (event.code === keyCode)\n      {\n         const invoke = button.onPress ?? button.onclick;\n\n         if (typeof invoke === 'function')\n         {\n            invoke.call(button, event);\n            button = button; // This provides a reactive update if button data changes.\n         }\n\n         event.preventDefault();\n         event.stopPropagation();\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n<!-- svelte-ignore a11y-missing-attribute -->\n<a on:click|preventDefault|stopPropagation={onClick}\n   on:contextmenu|preventDefault|stopPropagation={onContextMenu}\n   on:keydown={onKeydown}\n   on:keyup={onKeyup}\n   use:applyStyles={styles}\n   class=\"header-button {button.class}\"\n   class:keep-minimized={keepMinimized}\n   aria-label={label}\n   tabindex=0\n   role=button>\n    {@html icon}{#if label}<span class:has-icon={icon !== void 0}>{label}</span>{/if}\n</a>\n\n<style>\n   a {\n      padding: var(--tjs-app-header-button-padding, 0 3px);\n   }\n\n   a :global(i) {\n      padding: var(--tjs-app-header-button-icon-padding, 0);\n   }\n\n   a:hover {\n      text-shadow: var(--tjs-app-header-button-text-shadow-hover, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   a:focus-visible {\n      box-shadow: var(--tjs-app-header-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\n      outline: var(--tjs-app-header-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\n      transition: var(--tjs-app-header-button-transition-focus-visible, var(--tjs-default-transition-focus-visible));\n      text-shadow: var(--tjs-app-header-button-text-shadow-focus-visible, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   span {\n      padding: var(--tjs-app-header-button-label-padding, 0);\n   }\n\n   span.has-icon {\n      padding: var(--tjs-app-header-button-label-padding, 0 0 0 3px);\n   }\n</style>\n","<script>\n   import { getContext }            from 'svelte';\n   import { cubicOut }              from 'svelte/easing';\n\n   import { isSvelteComponent }     from '@typhonjs-fvtt/runtime/svelte/util';\n   import { isObject }              from '@typhonjs-fvtt/runtime/util/object';\n\n   import { localize }              from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   import {\n      draggable as dragDefault }    from '@typhonjs-fvtt/runtime/svelte/store/position';\n\n   import TJSHeaderButton           from './TJSHeaderButton.svelte';\n\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   const { application } = getContext('#external');\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep } = application.reactive.storeAppOptions;\n\n   const { elementRoot } = getContext('#internal').stores;\n\n   const storeTitle = application.reactive.storeAppOptions.title;\n   const storeDraggable = application.reactive.storeAppOptions.draggable;\n   const storeDragging = application.reactive.storeUIState.dragging;\n   const storeHeaderButtons = application.reactive.storeUIState.headerButtons;\n   const storeHeaderIcon = application.reactive.storeAppOptions.headerIcon;\n   const storeHeaderNoTitleMinimized = application.reactive.storeAppOptions.headerNoTitleMinimized;\n   const storeMinimizable = application.reactive.storeAppOptions.minimizable;\n   const storeMinimized = application.reactive.storeUIState.minimized;\n\n   // These classes in the window header allow dragging.\n   const s_DRAG_TARGET_CLASSLIST = Object.freeze(['tjs-app-icon', 'tjs-window-header-spacer',\n    'window-header', 'window-title']);\n\n   let dragOptions;\n\n   $: draggable = typeof draggable === 'function' ? draggable : dragDefault;\n\n   // Combines external options with defaults for TJSApplicationHeader. By default, easing is turned on w/ duration of\n   // 0.08 seconds and cubicOut, but can be overridden by any provided `draggableOptions`. `position`, `active`, and\n   // `storeDragging` are always overridden by application position / stores.\n   $: dragOptions = Object.assign({}, { ease: true, easeOptions: { duration: 0.06, ease: cubicOut } },\n    isObject(draggableOptions) ? draggableOptions : {}, { position: application.position, active:\n     $storeDraggable, storeDragging, hasTargetClassList: s_DRAG_TARGET_CLASSLIST });\n\n   let displayHeaderTitle;\n\n   $: displayHeaderTitle = $storeHeaderNoTitleMinimized && $storeMinimized ? 'none' : null;\n\n   let buttonsLeft;\n   let buttonsRight;\n\n   $:\n   {\n      buttonsLeft = [];\n      buttonsRight = [];\n\n      for (const button of $storeHeaderButtons)\n      {\n         const buttonsList = typeof button?.alignLeft === 'boolean' && button?.alignLeft ? buttonsLeft : buttonsRight;\n\n         // If the button is a Svelte component set it as the class otherwise use `TJSHeaderButton` w/ button as props.\n         buttonsList.push(isSvelteComponent(button) ? { class: button, props: {} } :\n          { class: TJSHeaderButton, props: { button } });\n      }\n   }\n\n   function minimizable(node, booleanStore)\n   {\n      const callback = (event) =>\n      {\n         // Only toggle minimize state if window title or header is the event target. Also allow toggle state if the\n         // event target has 'keep-minimized' class.\n         if (event.target.classList.contains('window-title') || event.target.classList.contains('window-header') ||\n           event.target.classList.contains('keep-minimized'))\n         {\n            application._onToggleMinimize(event);\n         }\n      }\n\n      function activateListeners() { node.addEventListener('dblclick', callback); }\n      function removeListeners() { node.removeEventListener('dblclick', callback); }\n\n      if (booleanStore) { activateListeners(); }\n\n      return {\n         update: (booleanStore) =>  // eslint-disable-line no-shadow\n         {\n            if (booleanStore) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n   /**\n    * Explicitly focus `elementRoot` if pointer event is not consumed by header buttons / components. This allows\n    * keyboard tab navigation to select header buttons.\n    *\n    * Note: if `focusKeep` app option store is set to true `elementRoot` is only focused if the current browser wide\n    * active element is not contained inside the app element.\n    */\n   function onPointerdown(event)\n   {\n      const rootEl = $elementRoot;\n\n      if ($focusAuto && rootEl instanceof HTMLElement && rootEl?.isConnected)\n      {\n         if ($focusKeep)\n         {\n            const focusOutside = document.activeElement instanceof HTMLElement &&\n             !rootEl.contains(document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               rootEl.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            rootEl.focus();\n         }\n      }\n   }\n</script>\n\n{#key draggable}\n   <header class=\"window-header flexrow\"\n           use:draggable={dragOptions}\n           use:minimizable={$storeMinimizable}\n           on:pointerdown={onPointerdown}>\n      {#if typeof $storeHeaderIcon === 'string'}\n         <img class=\"tjs-app-icon keep-minimized\" src={$storeHeaderIcon} alt=icon>\n      {/if}\n      <h4 class=window-title style:display={displayHeaderTitle}>\n         {localize($storeTitle)}\n      </h4>\n      {#each buttonsLeft as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n      <span class=\"tjs-window-header-spacer keep-minimized\" />\n      {#each buttonsRight as button}\n         <svelte:component this={button.class} {...button.props} />\n      {/each}\n   </header>\n{/key}\n\n<style>\n   /**\n    * Provides a zero space element that expands to the right creating the gap between window title and left aligned\n    * buttons and right aligned buttons. Note the use of a negative left margin to remove the gap between elements.\n    */\n   .tjs-window-header-spacer {\n      flex: 0;\n      margin-left: calc(-1 * var(--tjs-app-header-gap, 5px));\n      margin-right: auto;\n   }\n\n   .window-header {\n      flex: var(--tjs-app-header-flex, 0 0 30px);\n      gap: var(--tjs-app-header-gap, 5px);\n      padding: var(--tjs-app-header-padding, 0 4px);\n   }\n\n   .window-header .tjs-app-icon {\n      align-self: center;\n      border-radius: var(--tjs-app-header-icon-border-radius, 4px);\n      flex: 0 0 var(--tjs-app-header-icon-width, 24px);\n      height: var(--tjs-app-header-icon-height, 24px);\n   }\n\n   .window-title {\n      gap: var(--tjs-app-header-gap, 5px);\n      max-width: fit-content;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n   }\n</style>\n","<script>\n   import { A11yHelper }    from '@typhonjs-fvtt/runtime/util/browser';\n\n   /** @type {HTMLElement} */\n   export let elementRoot = void 0;\n\n   /** @type {boolean} */\n   export let enabled = true;\n\n   let ignoreElements, wrapEl;\n\n   $: if (wrapEl) { ignoreElements = new Set([wrapEl]); }\n\n   function onFocus()\n   {\n      // Early out if not enabled.\n      if (!enabled) { return; }\n\n      if (elementRoot instanceof HTMLElement)\n      {\n         const firstFocusEl = A11yHelper.getFirstFocusableElement(elementRoot, ignoreElements);\n\n         if (firstFocusEl instanceof HTMLElement && firstFocusEl !== wrapEl)\n         {\n            firstFocusEl.focus();\n         }\n         else\n         {\n            // No focus target found, so focus elementRoot.\n            elementRoot.focus();\n         }\n      }\n   }\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<div bind:this={wrapEl} class=tjs-focus-wrap tabindex=0 on:focus={onFocus} />\n\n<style>\n    div {\n        width: 0;\n        height: 0;\n        flex: 0;\n    }\n\n    div:focus {\n        outline: none;\n    }\n</style>\n","<script>\n   import { getContext }         from 'svelte';\n\n   export let isResizable = false;\n\n   const application = getContext('#external').application;\n\n   // Allows retrieval of the element root at runtime.\n   const storeElementRoot = getContext('#internal').stores.elementRoot;\n\n   const storeResizable = application.reactive.storeAppOptions.resizable;\n\n   const storeMinimized = application.reactive.storeUIState.minimized;\n   const storeResizing = application.reactive.storeUIState.resizing;\n\n   let elementResize;\n\n   $: if (elementResize)\n   {\n      // Instead of creating a derived store it is easier to use isResizable and the minimized store below.\n      elementResize.style.display = isResizable && !$storeMinimized ? 'block' : 'none';\n\n      // Add / remove `resizable` class from element root.\n      const elementRoot = $storeElementRoot;\n      if (elementRoot) { elementRoot.classList[isResizable ? 'add' : 'remove']('resizable'); }\n   }\n\n   /**\n    * Provides an action to handle resizing the application shell based on the resizable app option.\n    *\n    * @param {HTMLElement}       node - The node associated with the action.\n    *\n    * @param {object}            [opts] - Optional parameters.\n    *\n    * @param {boolean}           [opts.active=true] - A boolean value; attached to a readable store.\n    *\n    * @param {Writable<boolean>} [opts.storeResizing] - A writable store that tracks \"resizing\" state.\n    *\n    * @returns {{update: Function, destroy: Function}} The action lifecycle methods.\n    */\n   function resizable(node, { active = true, storeResizing = void 0 } = {})\n   {\n      /**\n       * Duplicate the app / Positionable starting position to track differences.\n       *\n       * @type {object}\n       */\n      let position = null;\n\n      /**\n       * Stores the initial X / Y on drag down.\n       *\n       * @type {object}\n       */\n      let initialPosition = {};\n\n      /**\n       * Stores the current resizing state and gates the move pointer as the resizing store is not\n       * set until the first pointer move.\n       *\n       * @type {boolean}\n       */\n      let resizing = false;\n\n      /**\n       * Remember event handlers associated with this action so they may be later unregistered.\n       *\n       * @type {Object}\n       */\n      const handlers = {\n         resizeDown: ['pointerdown', (e) => onResizePointerDown(e), false],\n         resizeMove: ['pointermove', (e) => onResizePointerMove(e), false],\n         resizeUp: ['pointerup', (e) => onResizePointerUp(e), false]\n      };\n\n      /**\n       * Activates listeners.\n       */\n      function activateListeners()\n      {\n         // Resize handlers\n         node.addEventListener(...handlers.resizeDown);\n\n         isResizable = true;\n\n         node.style.display = 'block';\n      }\n\n      /**\n       * Removes listeners.\n       */\n      function removeListeners()\n      {\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         // Resize handlers\n         node.removeEventListener(...handlers.resizeDown);\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         node.style.display = 'none';\n\n         isResizable = false;\n      }\n\n      // On mount if resizable is true then activate listeners otherwise set element display to `none`.\n      if (active)\n      {\n         activateListeners();\n      }\n      else\n      {\n         node.style.display = 'none';\n      }\n\n      /**\n       * Handle the initial pointer down that activates resizing capture.\n       */\n      function onResizePointerDown(event)\n      {\n         event.preventDefault();\n\n         resizing = false;\n\n         // Record initial position\n         position = application.position.get();\n\n         if (position.height === 'auto') { position.height = $storeElementRoot.clientHeight; }\n         if (position.width === 'auto') { position.width = $storeElementRoot.clientWidth; }\n\n         initialPosition = { x: event.clientX, y: event.clientY };\n\n         // Add temporary handlers\n         node.addEventListener(...handlers.resizeMove);\n         node.addEventListener(...handlers.resizeUp);\n\n         node.setPointerCapture(event.pointerId);\n      }\n\n      /**\n       * Sets the width / height of the positionable application.\n       */\n      function onResizePointerMove(event)\n      {\n         event.preventDefault();\n\n         if (!resizing && typeof storeResizing?.set === 'function')\n         {\n            resizing = true;\n            storeResizing.set(true);\n         }\n\n         application.position.set({\n            width: position.width + (event.clientX - initialPosition.x),\n            height: position.height + (event.clientY - initialPosition.y)\n         });\n      }\n\n      /**\n       * Conclude the dragging behavior when the pointer is released setting the final position and\n       * removing listeners.\n       */\n      function onResizePointerUp(event)\n      {\n         resizing = false;\n         if (typeof storeResizing?.set === 'function') { storeResizing.set(false); }\n\n         event.preventDefault();\n         node.removeEventListener(...handlers.resizeMove);\n         node.removeEventListener(...handlers.resizeUp);\n\n         // TODO: Direct Foundry API access.\n         application?._onResize?.(event);\n      }\n\n      return {\n         update: ({ active }) =>  // eslint-disable-line no-shadow\n         {\n            if (active) { activateListeners(); }\n            else { removeListeners(); }\n         },\n\n         destroy: () => removeListeners()\n      };\n   }\n\n</script>\n\n<div class=\"window-resizable-handle\"\n     use:resizable={{active: $storeResizable, storeResizing}}\n     bind:this={elementResize}>\n   <i class=\"fas fa-arrows-alt-h\"></i>\n</div>\n\n<style>\n   .window-resizable-handle {\n      display: block;\n      position: absolute;\n      width: var(--tjs-app-resizable-handle-width, 20px);\n      height: var(--tjs-app-resizable-handle-height, 20px);\n      top: var(--tjs-app-resizable-handle-top, unset);\n      bottom: var(--tjs-app-resizable-handle-bottom, -1px);\n      right: var(--tjs-app-resizable-handle-right, 0);\n      left: var(--tjs-app-resizable-handle-left, unset);\n      background: var(--tjs-app-resizable-handle-background, #444);\n      border: var(--tjs-app-resizable-handle-border, 1px solid #111);\n      border-radius: var(--tjs-app-resizable-handle-border-radius, 4px 0 0 0);\n      padding: var(--tjs-app-resizable-handle-padding, 2px);\n   }\n\n   .fa-arrows-alt-h {\n      color: var(--tjs-app-resizable-handle-icon-color, #f0f0e0);\n      transform: var(--tjs-app-resizable-handle-icon-transform, rotate(45deg));\n   }\n</style>\n","<script>\n   /**\n    * Provides an application shell is a main top level slotted component that provides a reactive\n    * outer wrapper and header bar for the main content component.\n    */\n\n   import {\n      getContext,\n      onMount,\n      setContext }                     from 'svelte';\n\n   import {\n      applyStyles,\n      resizeObserver }                 from '@typhonjs-fvtt/runtime/svelte/action/dom';\n\n   import { TJSDefaultTransition }     from '@typhonjs-fvtt/runtime/svelte/transition';\n   import { A11yHelper }               from '@typhonjs-fvtt/runtime/util/browser';\n   import { isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\n   import { AppShellContextInternal }  from './AppShellContextInternal.js';\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import TJSFocusWrap                 from './TJSFocusWrap.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   // The children array can be specified by a parent via prop or is read below from the external context.\n   // export let children = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n   export let stylesContent = void 0;\n\n   // If a parent component binds and sets `appOffsetHeight` to true then a resizeObserver action is enabled on the\n   // outer application `div`. Additionally, the SvelteApplication position resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const appResizeObserver = !!appOffsetHeight || !!appOffsetWidth ? resizeObserver : () => null;\n\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\n   // resizeObserver action is enabled on the content `section`.\n   export let contentOffsetHeight = false;\n   export let contentOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\n\n   // Provides the internal context for data / stores of the application shell.\n   const internal = new AppShellContextInternal();\n\n   // Provides options to `A11yHelper.getFocusableElements` to ignore TJSFocusWrap by CSS class.\n   const s_IGNORE_CLASSES = { ignoreClasses: ['tjs-focus-wrap'] };\n\n   // Internal context for `elementContent` / `elementRoot` stores.\n   setContext('#internal', internal);\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('#internal').stores.elementContent.set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('#internal').stores.elementRoot.set(elementRoot);\n   }\n\n   // Store application reference.\n   const { application } = getContext('#external');\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep, focusTrap } = application.reactive.storeAppOptions;\n\n   const { minimized } = application.reactive.storeUIState;\n\n   let focusWrapEnabled;\n\n   // Enable TJSFocusWrap component when focus trapping app option is true and app is not minimized.\n   $: focusWrapEnabled = $focusAuto && $focusTrap && !$minimized;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = TJSDefaultTransition.default;\n   export let inTransition = TJSDefaultTransition.default;\n   export let outTransition = TJSDefaultTransition.default;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = TJSDefaultTransition.options;\n   export let outTransitionOptions = TJSDefaultTransition.options;\n\n   // Tracks last transition state.\n   let oldTransition = TJSDefaultTransition.default;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : TJSDefaultTransition.default;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== TJSDefaultTransition.options && isObject(transitionOptions) ?\n       transitionOptions : TJSDefaultTransition.options;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = TJSDefaultTransition.default; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = TJSDefaultTransition.default; }\n\n      // Set close animation to `false` / not run when an out transition is defined.\n      const defaultCloseAnimation = application?.options?.defaultCloseAnimation;\n      if (typeof defaultCloseAnimation === 'boolean' && defaultCloseAnimation &&\n       outTransition !== TJSDefaultTransition.default)\n      {\n         application.options.defaultCloseAnimation = false;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(inTransitionOptions)) { inTransitionOptions = TJSDefaultTransition.options; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(outTransitionOptions)) { outTransitionOptions = TJSDefaultTransition.options; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // Focus `elementRoot` on mount to allow keyboard tab navigation of header buttons.\n   onMount(() => elementRoot.focus());\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a handler for the custom `close:popup` event fired by `svelte-standard` components like TJSMenu. The\n    * intention is to handle focus management of a component that is no longer connected in the DOM. If a target element\n    * that is the source of the close event is attached attempt to resolve internal focus to the application.\n    *\n    * @param {CustomEvent}  event - A custom event for `close:popup`.\n    */\n   function onClosePopup(event)\n   {\n      // Early out as automatic focus management is not enabled.\n      if (!$focusAuto) { return; }\n\n      const targetEl = event?.detail?.target;\n\n      // Early out if there is no target element.\n      if (!(targetEl instanceof HTMLElement)) { return; }\n\n      // Early out if the target element is focusable as it will gain focus naturally.\n      if (A11yHelper.isFocusable(targetEl)) { return; }\n\n      const elementRootContains = elementRoot.contains(targetEl);\n\n      // First check for if the target is elementRoot or elementContent then fallback to contains checks.\n      if (targetEl === elementRoot)\n      {\n         elementRoot.focus();\n      }\n      else if (targetEl === elementContent)\n      {\n         elementContent.focus();\n      }\n      else if (elementRootContains)\n      {\n         if (elementContent.contains(targetEl))\n         {\n            elementContent.focus();\n         }\n         else\n         {\n            elementRoot.focus();\n         }\n      }\n   }\n\n   /**\n    * Provides focus cycling inside the application capturing `<Shift-Tab>` and if `elementRoot` or `firstFocusEl` is\n    * the actively focused element then last focusable element is focused skipping `TJSFocusWrap`.\n    *\n    * Also, if a popout app all key down events will bring this application to the top such that when focus is trapped\n    * the app is top most.\n    *\n    * @param {KeyboardEvent} event - Keyboard Event.\n    */\n   function onKeydown(event)\n   {\n      // TODO: Note this handling is specifically for Foundry v11+ as the platform KeyboardManager uses\n      // `document.querySelector(':focus')` to short circuit keyboard handling internally to KeyboardManager.\n      // ApplicationShell manages containing focus programmatically and this prevents the Foundry KeyboardManager from\n      // activating. We need to check if this key event target is currently the `elementRoot` or `elementContent` and\n      // the event matches any KeyboardManager actions and if so blur current focus.\n      if ((event.target === elementRoot || event.target === elementContent) &&\n       KeyboardManager && KeyboardManager?._getMatchingActions?.(\n        KeyboardManager?.getKeyboardEventContext?.(event))?.length)\n      {\n         event.target?.blur();\n         return;\n      }\n\n      if (focusWrapEnabled && event.shiftKey && event.code === 'Tab')\n      {\n         // Collect all focusable elements from `elementRoot` and ignore TJSFocusWrap.\n         const allFocusable = A11yHelper.getFocusableElements(elementRoot, s_IGNORE_CLASSES);\n\n         // Find first and last focusable elements.\n         const firstFocusEl = allFocusable.length > 0 ? allFocusable[0] : void 0;\n         const lastFocusEl = allFocusable.length > 0 ? allFocusable[allFocusable.length - 1] : void 0;\n\n         // Only cycle focus to the last keyboard focusable app element if `elementRoot` or first focusable element\n         // is the active element.\n         if (elementRoot === document.activeElement || firstFocusEl === document.activeElement)\n         {\n            if (lastFocusEl instanceof HTMLElement && firstFocusEl !== lastFocusEl) { lastFocusEl.focus(); }\n\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n\n      // Make sure this application is top most when it receives keyboard events.\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * If the application is a popOut application then when clicked bring to top if not already the Foundry\n    * `activeWindow`.\n    */\n   function onPointerdownApp()\n   {\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * Focus `elementContent` if the event target is not focusable and `focusAuto` is enabled.\n    *\n    * Note: `focusAuto` is an app option store. This check is a bit tricky as `section.window-content` has a tabindex\n    * of '-1', so it is focusable manually.\n    */\n   function onPointerdownContent(event)\n   {\n      const focusable = A11yHelper.isFocusable(event.target);\n\n      if (!focusable && $focusAuto)\n      {\n         if ($focusKeep)\n         {\n            const focusOutside = document.activeElement instanceof HTMLElement &&\n             !elementRoot.contains(document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               elementContent.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            elementContent.focus();\n         }\n      }\n   }\n\n   /**\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\n    * bound.\n    *\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    *\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedContent(offsetWidth, offsetHeight)\n   {\n      contentOffsetWidth = offsetWidth;\n      contentOffsetHeight = offsetHeight;\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n\n   /**\n    * Transitions can cause side effects. Work around this issue by using an if conditional.\n    * Due to timing issues and the onDestroy / outro transitions can cause elementRoot / elementContent to be set to\n    * null when swapped dynamically. There is a feature request to allow transition functions to be undefined:\n    *\n    * @see: https://github.com/sveltejs/svelte/issues/6942\n    */\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if inTransition !== TJSDefaultTransition.default || outTransition !== TJSDefaultTransition.default}\n   <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        in:inTransition|global={inTransitionOptions}\n        out:outTransition|global={outTransitionOptions}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown|capture={onKeydown}\n        on:pointerdown={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:appResizeObserver={resizeObservedApp}\n        role=application\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} />\n   </div>\n{:else}\n   <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n   <div id={application.id}\n        class=\"app window-app {application.options.classes.join(' ')}\"\n        data-appid={application.appId}\n        bind:this={elementRoot}\n        on:close:popup|preventDefault|stopPropagation={onClosePopup}\n        on:keydown|capture={onKeydown}\n        on:pointerdown={onPointerdownApp}\n        use:applyStyles={stylesApp}\n        use:appResizeObserver={resizeObservedApp}\n        role=application\n        tabindex=-1>\n      <TJSApplicationHeader {draggable} {draggableOptions} />\n      <section class=window-content\n               bind:this={elementContent}\n               on:pointerdown={onPointerdownContent}\n               use:applyStyles={stylesContent}\n               use:contentResizeObserver={resizeObservedContent}\n               tabindex=-1>\n         <slot />\n      </section>\n      <ResizableHandle />\n      <TJSFocusWrap {elementRoot} enabled={focusWrapEnabled} />\n   </div>\n{/if}\n\n<style>\n   /* Note: this is different than stock Foundry and allows rounded corners from .app core styles */\n   .window-app {\n      overflow: var(--tjs-app-overflow, hidden);\n   }\n\n   .window-app:focus-visible {\n      outline: var(--tjs-app-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   .window-content:focus-visible {\n      outline: var(--tjs-app-content-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n   }\n\n   /* Override Foundry default; adjust --tjs-app-header-gap to change gap size */\n   .window-app :global(.window-header a) {\n      flex: none;\n      margin: 0;\n   }\n\n   /* Override Foundry default; See TJSHeaderButton for CSS variables */\n   .window-app :global(.window-header i[class^=fa]) {\n      margin: 0\n   }\n</style>\n","<script>\n   /**\n    * Provides an alternate application shell that is scoped by slightly different CSS classes than\n    * {@link ApplicationShell}. An application shell is a main top level slotted component that provides a reactive\n    * outer wrapper and header bar for the main content component.\n    *\n    * CSS variables:\n    * '--tjs-app-background': Controls the app background image; set in main `index.js`.\n    */\n\n   import {\n      getContext,\n      onMount,\n      setContext }                     from 'svelte';\n\n   import {\n      applyStyles,\n      resizeObserver }                 from '@typhonjs-fvtt/runtime/svelte/action/dom';\n\n   import { TJSDefaultTransition }     from '@typhonjs-fvtt/runtime/svelte/transition';\n   import { A11yHelper }               from '@typhonjs-fvtt/runtime/util/browser';\n   import { isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\n   import { AppShellContextInternal }  from './AppShellContextInternal.js';\n   import TJSApplicationHeader         from './TJSApplicationHeader.svelte';\n   import TJSFocusWrap                 from './TJSFocusWrap.svelte';\n   import ResizableHandle              from './ResizableHandle.svelte';\n\n   // Bound to the content and root elements. Can be used by parent components. SvelteApplication will also\n   // use 'elementRoot' to set the element of the Application. You can also provide `elementContent` and\n   // `elementTarget`. Please see SvelteApplication lifecycle documentation.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // Allows custom draggable implementations to be forwarded to TJSApplicationHeader.\n   export let draggable = void 0;\n   export let draggableOptions = void 0;\n\n   // Explicit style overrides for the main app and content elements. Uses action `applyStyles`.\n   export let stylesApp = void 0;\n   export let stylesContent = void 0;\n\n   // If a parent component binds and sets `appOffsetHeight` to true then a resizeObserver action is enabled on the\n   // outer application `div`. Additionally, the SvelteApplication position resizeObserved store is updated.\n   export let appOffsetHeight = false;\n   export let appOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const appResizeObserver = !!appOffsetHeight || !!appOffsetWidth ? resizeObserver : () => null;\n\n   // If a parent component binds and sets `contentOffsetHeight` or `contentOffsetWidth` to true then a\n   // resizeObserver action is enabled on the content `section`.\n   export let contentOffsetHeight = false;\n   export let contentOffsetWidth = false;\n\n   // Set to `resizeObserver` if either of the above props are truthy otherwise a null operation.\n   const contentResizeObserver = !!contentOffsetHeight || !!contentOffsetWidth ? resizeObserver : () => null;\n\n   // Provides the internal context for data / stores of the application shell.\n   const internal = new AppShellContextInternal();\n\n   // Provides options to `A11yHelper.getFocusableElements` to ignore TJSFocusWrap by CSS class.\n   const s_IGNORE_CLASSES = { ignoreClasses: ['tjs-focus-wrap'] };\n\n   // Internal context for `elementContent` / `elementRoot` stores.\n   setContext('#internal', internal);\n\n   // Only update the `elementContent` store if the new `elementContent` is not null or undefined.\n   $: if (elementContent !== void 0 && elementContent !== null)\n   {\n      getContext('#internal').stores.elementContent.set(elementContent);\n   }\n\n   // Only update the `elementRoot` store if the new `elementRoot` is not null or undefined.\n   $: if (elementRoot !== void 0 && elementRoot !== null)\n   {\n      getContext('#internal').stores.elementRoot.set(elementRoot);\n   }\n\n   // Store application reference.\n   const { application } = getContext('#external');\n\n   // Focus related app options stores.\n   const { focusAuto, focusKeep, focusTrap } = application.reactive.storeAppOptions;\n\n   const { minimized } = application.reactive.storeUIState;\n\n   let focusWrapEnabled;\n\n   // Enable TJSFocusWrap component when focus trapping app option is true and app is not minimized.\n   $: focusWrapEnabled = $focusAuto && $focusTrap && !$minimized;\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // The following block is somewhat complex, but allows transition options to be updated reactively during\n   // runtime execution.\n\n   // Exports properties to set a transition w/ in / out options.\n   export let transition = TJSDefaultTransition.default;\n   export let inTransition = TJSDefaultTransition.default;\n   export let outTransition = TJSDefaultTransition.default;\n\n   // Exports properties to set options for any transitions.\n   export let transitionOptions = void 0;\n   export let inTransitionOptions = TJSDefaultTransition.options;\n   export let outTransitionOptions = TJSDefaultTransition.options;\n\n   // Tracks last transition state.\n   let oldTransition = TJSDefaultTransition.default;\n   let oldTransitionOptions = void 0\n\n   // Run this reactive block when the last transition state is not equal to the current state.\n   $: if (oldTransition !== transition)\n   {\n      // If transition is defined and not the default transition then set it to both in and out transition otherwise\n      // set the default transition to both in & out transitions.\n      const newTransition = typeof transition === 'function' ? transition : TJSDefaultTransition.default;\n\n      inTransition = newTransition;\n      outTransition = newTransition;\n\n      oldTransition = newTransition;\n   }\n\n   // Run this reactive block when the last transition options state is not equal to the current options state.\n   $: if (oldTransitionOptions !== transitionOptions)\n   {\n      const newOptions = transitionOptions !== TJSDefaultTransition.options && isObject(transitionOptions) ?\n       transitionOptions : TJSDefaultTransition.options;\n\n      inTransitionOptions = newOptions;\n      outTransitionOptions = newOptions;\n\n      oldTransitionOptions = newOptions;\n   }\n\n   // Handle cases if inTransition is unset; assign noop default transition function.\n   $: if (typeof inTransition !== 'function') { inTransition = TJSDefaultTransition.default; }\n\n   $:\n   {\n      // Handle cases if outTransition is unset; assign noop default transition function.\n      if (typeof outTransition !== 'function') { outTransition = TJSDefaultTransition.default; }\n\n      // Set close animation to `false` / not run when an out transition is defined.\n      const defaultCloseAnimation = application?.options?.defaultCloseAnimation;\n      if (typeof defaultCloseAnimation === 'boolean' && defaultCloseAnimation &&\n       outTransition !== TJSDefaultTransition.default)\n      {\n         application.options.defaultCloseAnimation = false;\n      }\n   }\n\n   // Handle cases if inTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(inTransitionOptions)) { inTransitionOptions = TJSDefaultTransition.options; }\n\n   // Handle cases if outTransitionOptions is unset; assign empty default transition options.\n   $: if (!isObject(outTransitionOptions)) { outTransitionOptions = TJSDefaultTransition.options; }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   // Focus `elementRoot` on mount to allow keyboard tab navigation of header buttons.\n   onMount(() =>\n   {\n      if ($focusAuto) { elementRoot.focus(); }\n   });\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a handler for the custom `close:popup` event fired by `svelte-standard` components like TJSMenu. The\n    * intention is to handle focus management of a component that is no longer connected in the DOM. If a target element\n    * that is the source of the close event is attached attempt to resolve internal focus to the application.\n    *\n    * @param {CustomEvent}  event - A custom event for `close:popup`.\n    */\n   function onClosePopup(event)\n   {\n      // Early out as automatic focus management is not enabled.\n      if (!$focusAuto) { return; }\n\n      const targetEl = event?.detail?.target;\n\n      // Early out if there is no target element.\n      if (!(targetEl instanceof HTMLElement)) { return; }\n\n      // Early out if the target element is focusable as it will gain focus naturally.\n      if (A11yHelper.isFocusable(targetEl)) { return; }\n\n      const elementRootContains = elementRoot.contains(targetEl);\n\n      // First check for if the target is elementRoot or elementContent then fallback to contains checks.\n      if (targetEl === elementRoot)\n      {\n         elementRoot.focus();\n      }\n      else if (targetEl === elementContent)\n      {\n         elementContent.focus();\n      }\n      else if (elementRootContains)\n      {\n         if (elementContent.contains(targetEl))\n         {\n            elementContent.focus();\n         }\n         else\n         {\n            elementRoot.focus();\n         }\n      }\n   }\n\n   /**\n    * Provides focus cycling inside the application capturing `<Shift-Tab>` and if `elementRoot` or `firstFocusEl` is\n    * the actively focused element then the second to last focusable element if applicable is focused.\n    *\n    * Also, if a popout app all key down events will bring this application to the top such that when focus is trapped\n    * the app is top most.\n    *\n    * @param {KeyboardEvent} event - Keyboard Event.\n    */\n   function onKeydown(event)\n   {\n      // TODO: Note this handling is specifically for Foundry v11+ as the platform KeyboardManager uses\n      // `document.querySelector(':focus')` to short circuit keyboard handling internally to KeyboardManager.\n      // ApplicationShell manages containing focus programmatically and this prevents the Foundry KeyboardManager from\n      // activating. We need to check if this key event target is currently the `elementRoot` or `elementContent` and\n      // the event matches any KeyboardManager actions and if so blur current focus.\n      if ((event.target === elementRoot || event.target === elementContent) &&\n       KeyboardManager && KeyboardManager?._getMatchingActions?.(\n        KeyboardManager?.getKeyboardEventContext?.(event))?.length)\n      {\n         event.target?.blur();\n         return;\n      }\n\n      if (focusWrapEnabled && event.shiftKey && event.code === 'Tab')\n      {\n         // Collect all focusable elements from `elementRoot` and ignore TJSFocusWrap.\n         const allFocusable = A11yHelper.getFocusableElements(elementRoot, s_IGNORE_CLASSES);\n\n         // Find first and last focusable elements.\n         const firstFocusEl = allFocusable.length > 0 ? allFocusable[0] : void 0;\n         const lastFocusEl = allFocusable.length > 0 ? allFocusable[allFocusable.length - 1] : void 0;\n\n         // Only cycle focus to the last keyboard focusable app element if `elementRoot` or first focusable element\n         // is the active element.\n         if (elementRoot === document.activeElement || firstFocusEl === document.activeElement)\n         {\n            if (lastFocusEl instanceof HTMLElement && firstFocusEl !== lastFocusEl) { lastFocusEl.focus(); }\n\n            event.preventDefault();\n            event.stopPropagation();\n         }\n      }\n\n      // Make sure this application is top most when it receives keyboard events.\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * If the application is a popOut application then when clicked bring to top if not already the Foundry\n    * `activeWindow`.\n    */\n   function onPointerdownApp()\n   {\n      if (typeof application?.options?.popOut === 'boolean' && application.options.popOut &&\n       application !== globalThis.ui?.activeWindow)\n      {\n         application.bringToTop.call(application);\n      }\n   }\n\n   /**\n    * Focus `elementContent` if the event target is not focusable and `focusAuto` is enabled.\n    *\n    * Note: `focusAuto` is an app option store. This check is a bit tricky as `section.window-content` has a tabindex\n    * of '-1', so it is focusable manually.\n    */\n   function onPointerdownContent(event)\n   {\n      const focusable = A11yHelper.isFocusable(event.target);\n\n      if (!focusable && $focusAuto)\n      {\n         if ($focusKeep)\n         {\n            const focusOutside = document.activeElement instanceof HTMLElement &&\n             !elementRoot.contains(document.activeElement);\n\n            // Only focus the content element if the active element is outside the app; maintaining internal focused\n            // element.\n            if (focusOutside)\n            {\n               elementContent.focus();\n            }\n            else\n            {\n               event.preventDefault();\n            }\n         }\n         else\n         {\n            elementContent.focus();\n         }\n      }\n   }\n\n   /**\n    * Callback for content resizeObserver action. This is enabled when contentOffsetHeight or contentOffsetWidth is\n    * bound.\n    *\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    *\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedContent(offsetWidth, offsetHeight)\n   {\n      contentOffsetWidth = offsetWidth;\n      contentOffsetHeight = offsetHeight;\n   }\n\n   /**\n    * Callback for app resizeObserver action. This is enabled when appOffsetHeight or appOffsetWidth is\n    * bound. Additionally, the Application position resizeObserved store is updated.\n    *\n    * @param {number}   contentWidth - Observed contentWidth.\n    * @param {number}   contentHeight - Observed contentHeight\n    * @param {number}   offsetWidth - Observed offsetWidth.\n    * @param {number}   offsetHeight - Observed offsetHeight\n    */\n   function resizeObservedApp(offsetWidth, offsetHeight, contentWidth, contentHeight)\n   {\n      application.position.stores.resizeObserved.update((object) =>\n      {\n         object.contentWidth = contentWidth;\n         object.contentHeight = contentHeight;\n         object.offsetWidth = offsetWidth;\n         object.offsetHeight = offsetHeight;\n\n         return object;\n      });\n\n      appOffsetHeight = offsetHeight;\n      appOffsetWidth = offsetWidth;\n   }\n\n   /**\n    * Transitions can cause side effects. Work around this issue by using an if conditional.\n    * Due to timing issues and the onDestroy / outro transitions can cause elementRoot / elementContent to be set to\n    * null when swapped dynamically. There is a feature request to allow transition functions to be undefined:\n    *\n    * @see: https://github.com/sveltejs/svelte/issues/6942\n    */\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if inTransition !== TJSDefaultTransition.default || outTransition !== TJSDefaultTransition.default}\n    <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n    <div id={application.id}\n         class=\"tjs-app tjs-window-app {application.options.classes.join(' ')}\"\n         data-appid={application.appId}\n         bind:this={elementRoot}\n         in:inTransition|global={inTransitionOptions}\n         out:outTransition|global={outTransitionOptions}\n         on:close:popup|preventDefault|stopPropagation={onClosePopup}\n         on:keydown|capture={onKeydown}\n         on:pointerdown={onPointerdownApp}\n         use:applyStyles={stylesApp}\n         use:appResizeObserver={resizeObservedApp}\n         role=application\n         tabindex=-1>\n        <TJSApplicationHeader {draggable} {draggableOptions} />\n        <section class=window-content\n                 bind:this={elementContent}\n                 on:pointerdown={onPointerdownContent}\n                 use:applyStyles={stylesContent}\n                 use:contentResizeObserver={resizeObservedContent}\n                 tabindex=-1>\n            <slot />\n        </section>\n        <ResizableHandle />\n        <TJSFocusWrap {elementRoot} />\n    </div>\n{:else}\n    <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n    <div id={application.id}\n         class=\"tjs-app tjs-window-app {application.options.classes.join(' ')}\"\n         data-appid={application.appId}\n         bind:this={elementRoot}\n         on:close:popup|preventDefault|stopPropagation={onClosePopup}\n         on:keydown|capture={onKeydown}\n         on:pointerdown={onPointerdownApp}\n         use:applyStyles={stylesApp}\n         use:appResizeObserver={resizeObservedApp}\n         role=application\n         tabindex=-1>\n        <TJSApplicationHeader {draggable} {draggableOptions} />\n        <section class=window-content\n                 bind:this={elementContent}\n                 on:pointerdown={onPointerdownContent}\n                 use:applyStyles={stylesContent}\n                 use:contentResizeObserver={resizeObservedContent}\n                 tabindex=-1>\n            <slot />\n        </section>\n        <ResizableHandle />\n        <TJSFocusWrap {elementRoot} enabled={focusWrapEnabled} />\n    </div>\n{/if}\n\n<style>\n    /**\n     * Defines styles that mimic a Foundry popout Application. `:global` is used to preserve the unused CSS in the\n     * template above. A primary benefit of a separate application shell implementation is that the styles are not\n     * overridden by any given game system / modules that might alter the standard Foundry Application CSS. This allows\n     * separate and unique styles to be given to this application regardless of game system / module modifications.\n     */\n\n    .tjs-app {\n        max-height: var(--tjs-app-max-height, 100%);\n        background: var(--tjs-app-background);\n        border-radius: var(--tjs-app-border-radius, 5px);\n        box-shadow: var(--tjs-app-box-shadow, 0 0 20px #000);\n        margin: var(--tjs-app-margin, 3px 0);\n        padding: var(--tjs-app-padding, 0.5em);\n        color: var(--tjs-app-color, #f0f0e0);\n    }\n\n    .tjs-window-app:focus-visible {\n        outline: var(--tjs-app-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n    }\n\n    .tjs-window-app .window-content:focus-visible {\n        outline: var(--tjs-app-content-outline-focus-visible, var(--tjs-default-a11y-outline-focus-visible, 2px solid transparent));\n    }\n\n    .tjs-window-app {\n        /* Note: this is different than stock Foundry and allows rounded corners from .app core styles */\n        overflow: var(--tjs-app-overflow, hidden);\n\n        display: var(--tjs-app-display, flex);\n        flex-direction: var(--tjs-app-flex-direction, column);\n        flex-wrap: var(--tjs-app-flex-wrap, nowrap);\n        justify-content: var(--tjs-app-justify-content, flex-start);\n        position: var(--tjs-app-position, absolute);\n        box-shadow: var(--tjs-app-box-shadow, 0 0 20px #000);\n        padding: var(--tjs-app-padding, 0);\n    }\n\n    .tjs-window-app :global(> .flex0) {\n        display: block;\n        flex: 0;\n    }\n\n    .tjs-window-app :global(> .flex1) {\n        flex: 1;\n    }\n\n    .tjs-window-app :global(> .flex2) {\n        flex: 2;\n    }\n\n    .tjs-window-app :global(> .flex3) {\n        flex: 3;\n    }\n\n    .tjs-window-app :global(.window-header) {\n        overflow: var(--tjs-app-header-overflow, hidden);\n        line-height: var(--tjs-app-header-line-height, 30px);\n        border-bottom: var(--tjs-app-header-border-bottom, 1px solid #000);\n    }\n\n    .tjs-window-app :global(.window-header .window-title) {\n        margin: var(--tjs-app-header-title-margin, 0);\n        word-break: var(--tjs-app-header-title-word-break, break-all);\n    }\n\n    .tjs-window-app :global(.window-header a) {\n        flex: none;\n    }\n\n    .tjs-window-app.minimized :global(.window-header) {\n        border: var(--tjs-app-header-margin-minimized, none);\n    }\n\n    .tjs-window-app .window-content {\n        display: var(--tjs-app-content-display, flex);\n        flex-direction: var(--tjs-app-content-flex-direction, column);\n        flex-wrap: var(--tjs-app-content-flex-wrap, nowrap);\n        flex: var(--tjs-app-content-flex, 1);\n        justify-content: var(--tjs-app-content-justify-content, flex-start);\n        background: var(--tjs-app-content-background, none);\n        padding: var(--tjs-app-content-padding, 8px);\n        color: var(--tjs-app-content-color, #191813);\n        overflow: var(--tjs-app-content-overflow, hidden auto);\n    }\n\n    .tjs-window-app :global(.window-resizable-handle) {\n        width: 20px;\n        height: 20px;\n        position: absolute;\n        bottom: -1px;\n        right: 0;\n        background: #444;\n        padding: 2px;\n        border: 1px solid #111;\n        border-radius: 4px 0 0 0;\n    }\n\n    .tjs-window-app :global(.window-resizable-handle i.fas) {\n        transform: rotate(45deg);\n    }\n</style>\n","<script>\n   /**\n    * TODO: Documentation!\n    */\n   import {\n      getContext,\n      onDestroy,\n      onMount }               from 'svelte';\n\n   import { applyStyles }     from '@typhonjs-fvtt/runtime/svelte/action/dom';\n\n   import {\n      isSvelteComponent,\n      parseTJSSvelteConfig }  from '@typhonjs-fvtt/runtime/svelte/util';\n\n   import { A11yHelper }      from '@typhonjs-fvtt/runtime/util/browser';\n   import { isObject }        from '@typhonjs-fvtt/runtime/util/object';\n\n   import { localize }        from '@typhonjs-fvtt/runtime/svelte/helper';\n\n   export let data = void 0;\n   export let preventDefault = false;\n   export let stopPropagation = false;\n\n   export let dialogComponent = void 0;\n\n   const s_REGEX_HTML = /^\\s*<.*>$/;\n\n   let buttons;\n\n   /** @type {HTMLDivElement} */\n   let contentEl;\n\n   /** @type {HTMLDivElement} */\n   let buttonsEl;\n\n   let content = void 0;\n   let dialogClass;\n   let dialogProps = {};\n\n   let { elementRoot } = getContext('#internal').stores;\n\n   let { application } = getContext('#external');\n\n   let managedPromise = getContext('#managedPromise');\n\n   let currentButtonId = data.default;\n\n   // Remove key listeners from elementRoot.\n   onDestroy(() =>\n   {\n      const rootEl = $elementRoot;\n      if (rootEl instanceof HTMLElement)\n      {\n         rootEl.removeEventListener('keydown', onKeydown)\n         rootEl.removeEventListener('keyup', onKeyup)\n      }\n   })\n\n   // If `focusFirst` is true then focus first focusable element iin dialog content.\n   onMount(() =>\n   {\n      if (focusFirst)\n      {\n         const focusEl = A11yHelper.getFirstFocusableElement(contentEl);\n\n         if (focusEl instanceof HTMLElement)\n         {\n            // Focus on next tick to allow application / dialog to mount to bypass ApplicationShell onMount focus\n            // handling.\n            setTimeout(() => focusEl.focus(), 0);\n         }\n      }\n   });\n\n   // Add key listeners to elementRoot when it is bound.\n   $: if ($elementRoot)\n   {\n      const rootEl = $elementRoot;\n      if (rootEl instanceof HTMLElement)\n      {\n         rootEl.addEventListener('keydown', onKeydown)\n         rootEl.addEventListener('keyup', onKeyup)\n      }\n   }\n\n   // Automatically close the dialog on button click handler completion.\n   $: autoClose = typeof data.autoClose === 'boolean' ? data.autoClose : true;\n\n   // When true the first focusable element that isn't a button is focused.\n   $: focusFirst = typeof data.focusFirst === 'boolean' ? data.focusFirst : false;\n\n   // Focus current button when `buttonsEl` is bound.\n   $: if (!focusFirst && buttonsEl instanceof HTMLElement)\n   {\n      const buttonEl = buttonsEl.querySelector(`.${currentButtonId}`);\n      if (buttonEl instanceof HTMLElement) { buttonEl.focus(); }\n   }\n\n   // When false the dialog does not automatically close when button selected.\n   $: resolveId = typeof data.resolveId === 'boolean' ? data.resolveId : false;\n\n   // If `data.buttons` is not an object then set an empty array otherwise reduce the button data.\n   $:\n   {\n      buttons = !isObject(data.buttons) ? [] : Object.keys(data.buttons).reduce((array, key) =>\n      {\n         const b = data.buttons[key];\n\n         // Handle icon and treat bare strings as the icon class; otherwise assume the icon is fully formed HTML.\n         const icon = typeof b.icon !== 'string' ? void 0 : s_REGEX_HTML.test(b.icon) ? b.icon :\n          `<i class=\"${b.icon}\"></i>`;\n\n         const autoClose = typeof b.autoClose === 'boolean' ? b.autoClose : true;\n\n         const disabled = typeof b.disabled === 'boolean' ? b.disabled : false;\n\n         const label = typeof b.label === 'string' ? `${icon !== void 0 ? ' ' : ''}${localize(b.label)}` : '';\n\n         const title = typeof b.title === 'string' ? localize(b.title) : void 0;\n\n         // Test any condition supplied otherwise default to true.\n         const condition = typeof b.condition === 'function' ? b.condition.call(b) : b.condition ?? true;\n\n         if (condition) { array.push({ ...b, id: key, autoClose, icon, label, title, disabled }); }\n\n         return array;\n      }, []);\n   }\n\n   /**\n    * This reactivity block will trigger on arrow left / right key presses _and_ when buttons change. It is OK for it to\n    * trigger on both.\n    */\n   $: if (!buttons.find((button) => button.id === currentButtonId)) { currentButtonId = void 0; }\n\n   $: if (content !== data.content) // Only update the content if it has changed.\n   {\n      content = data.content;\n\n      try\n      {\n         if (isSvelteComponent(content))\n         {\n            dialogClass = content;\n            dialogProps = {};\n         }\n         else if (isObject(content))\n         {\n            const svelteConfig = parseTJSSvelteConfig(content, application);\n            dialogClass = svelteConfig.class;\n            dialogProps = svelteConfig.props ?? {};\n\n            // Check for any children parsed and added to the external context.\n            const children = svelteConfig?.context?.get('external')?.children;\n\n            // If so add to dialogProps.\n            if (Array.isArray(children)) { dialogProps.children = children; }\n         }\n         else\n         {\n            dialogClass = void 0;\n            dialogProps = {};\n         }\n      }\n      catch (err)\n      {\n         dialogClass = void 0;\n         dialogProps = {};\n\n         content = err.message;\n         console.error(err);\n      }\n   }\n\n   /**\n    * Handle button click.\n    *\n    * @param {object}   button - button data.\n    *\n    * TODO: When app eventbus is available send event for UI notification instead of Foundry API usage.\n    *\n    * @returns {*}\n    */\n   function onClick(button)\n   {\n      try\n      {\n         let result = void 0;\n\n         const callback = button?.onPress;\n\n         switch (typeof callback)\n         {\n            case 'function':\n               // Pass back the TJSDialog instance.\n               result = callback(application);\n               break;\n\n            case 'string':\n               // Attempt lookup by function name in dialog instance component.\n               if (dialogComponent !== void 0 && typeof dialogComponent[callback] === 'function')\n               {\n                  result = dialogComponent[callback](application);\n               }\n               else\n               {\n                  if (dialogComponent === void 0)\n                  {\n                     console.warn(`[TRL] TJSDialog warning: 'onPress' defined as a string with no associated ` +\n                      `content Svelte component.`);\n                  }\n                  else if (typeof dialogComponent?.[callback] !== 'function')\n                  {\n                     console.warn(`[TRL] TJSDialog warning: The content Svelte component does not contain an ` +\n                      `associated function '${callback}'. Did you remember to add ` +\n                       `'<svelte:options accessors={true} />' and export the function?`);\n                  }\n               }\n               break;\n         }\n\n         // By default, both 'button.autoClose' & autoClose are true, so skip auto-closing when either is false.\n         if (button.autoClose && autoClose)\n         {\n            // If `resolveId` dialog option is true and current result is undefined then set result to the button ID.\n            if (resolveId && result === void 0) { result = button.id; }\n\n            managedPromise.resolve(result);\n         }\n      }\n      catch(err)\n      {\n         const notifyError = typeof data.notifyError === 'boolean' ? data.notifyError : true;\n         if (notifyError)\n         {\n            // TODO: When app eventbus is available send event for UI notification instead of Foundry API usage.\n            globalThis.ui.notifications.error(err, { console: false });\n         }\n\n         // Attempt to first reject the error with any current managed Promise otherwise rethrow error.\n         if (!managedPromise.reject(err)) { throw err; }\n      }\n      finally\n      {\n         // By default, both 'button.autoClose' & autoClose are true, so skip auto-closing when either is false.\n         if (button.autoClose && autoClose) { application.close(); }\n      }\n   }\n\n   /**\n    * Handles key down events for stopping propagation for arrow keys. Also handles tab / focus traversal with a timeout\n    * to update `currentButtonId` on the next clock tick comparing against `document.activeElement`.\n    *\n    * @param {KeyboardEvent}  event - A KeyboardEvent.\n    */\n   function onKeydown(event)\n   {\n      switch (event.code)\n      {\n         case 'ArrowLeft':\n         case 'ArrowRight':\n         case 'Enter':\n            event.stopPropagation();\n            break;\n\n         case 'Tab':\n            event.stopPropagation();\n\n            // Check `activeElement` on next tick to potentially update `currentButtonId` from tab / keyboard\n            // navigation.\n            setTimeout(() =>\n            {\n               const activeElement = document.activeElement;\n               if (activeElement instanceof HTMLElement && buttonsEl instanceof HTMLElement &&\n                buttonsEl.contains(activeElement))\n               {\n                  // Find class that isn't `dialog-button` or `default` and is a key in `data.buttons`.\n                  for (let cntr = 0; cntr < activeElement.classList.length; cntr++)\n                  {\n                     const item = activeElement.classList.item(cntr);\n                     if (item !== 'dialog-button' && item !== 'default' && typeof data.buttons[item] !== void 0)\n                     {\n                        currentButtonId = item;\n                        break;\n                     }\n                  }\n               }\n            }, 0);\n            break;\n\n         default:\n            if (preventDefault) { event.preventDefault(); }\n            if (stopPropagation) { event.stopPropagation(); }\n            break;\n      }\n   }\n\n   /**\n    * Handles key up events for arrow key button navigation.\n    *\n    * @param {KeyboardEvent}  event - A KeyboardEvent.\n    */\n   function onKeyup(event)\n   {\n      switch (event.code)\n      {\n         case 'ArrowLeft':\n         {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const activeEl = document.activeElement;\n\n            if (buttonsEl instanceof HTMLElement)\n            {\n               // Only advance button via arrow key if a button is already focused.\n               if (activeEl instanceof HTMLElement && buttonsEl.contains(activeEl))\n               {\n                  const currentIndex = buttons.findIndex((button) => button.id === currentButtonId);\n                  if (buttons.length && currentIndex > 0) { currentButtonId = buttons[currentIndex - 1].id; }\n               }\n\n               const buttonEl = buttonsEl.querySelector(`.${currentButtonId}`);\n               if (buttonEl instanceof HTMLElement) { buttonEl.focus(); }\n            }\n            break;\n         }\n\n         case 'ArrowRight':\n         {\n            event.preventDefault();\n            event.stopPropagation();\n\n            const activeEl = document.activeElement;\n\n            if (buttonsEl instanceof HTMLElement)\n            {\n               // Only advance button via arrow key if a button is already focused  or there is no current button ID\n               if (activeEl instanceof HTMLElement && (buttonsEl.contains(activeEl) || currentButtonId === void 0))\n               {\n                  const currentIndex = buttons.findIndex((button) => button.id === currentButtonId);\n                  if (buttons.length && currentIndex < buttons.length - 1) { currentButtonId = buttons[currentIndex + 1].id; }\n               }\n\n               const buttonEl = buttonsEl.querySelector(`.${currentButtonId}`);\n               if (buttonEl instanceof HTMLElement) { buttonEl.focus(); }\n            }\n            break;\n         }\n\n         case 'Enter':\n            event.preventDefault();\n            event.stopPropagation();\n            break;\n\n         default:\n            if (preventDefault) { event.preventDefault(); }\n            if (stopPropagation) { event.stopPropagation(); }\n            break;\n      }\n   }\n</script>\n\n<main>\n   <div bind:this={contentEl} class=dialog-content>\n      {#if typeof content === 'string'}\n         {@html content}\n      {:else if dialogClass}\n         <svelte:component bind:this={dialogComponent} this={dialogClass} {...dialogProps} />\n      {/if}\n   </div>\n\n   {#if buttons.length}\n   <div bind:this={buttonsEl} class=\"dialog-buttons tjs-dialog-buttons\">\n      {#each buttons as button (button.id)}\n      <button class=\"dialog-button tjs-dialog-button {button.id}\"\n              on:click|preventDefault|stopPropagation={() => onClick(button)}\n              on:focus={() => currentButtonId = button.id}\n              disabled={button.disabled}\n              use:applyStyles={button.styles}>\n         <span title={button.title}>{#if button.icon}{@html button.icon}{/if}{button.label}</span>\n      </button>\n      {/each}\n   </div>\n   {/if}\n</main>\n\n<style>\n   .dialog-buttons {\n      padding-top: 8px;\n   }\n\n   .tjs-dialog-button:hover {\n      box-shadow: var(--tjs-dialog-button-box-shadow-focus-hover, var(--tjs-default-box-shadow-focus-hover));\n      outline: var(--tjs-dialog-button-outline-focus-hover, var(--tjs-default-outline-focus-hover, revert));\n      transition: var(--tjs-dialog-button-transition-focus-hover, var(--tjs-default-transition-focus-hover));\n      text-shadow: var(--tjs-dialog-button-text-shadow-focus-hover, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n\n   .tjs-dialog-button:focus-visible {\n      box-shadow: var(--tjs-dialog-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\n      outline: var(--tjs-dialog-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\n      transition: var(--tjs-dialog-button-transition-focus-visible, var(--tjs-default-transition-focus-visible));\n      text-shadow: var(--tjs-dialog-button-text-shadow-focus-visible, var(--tjs-default-text-shadow-focus-hover, inherit));\n   }\n</style>\n","<script>\n   import {\n      getContext,\n      onDestroy,\n      onMount,\n      setContext }         from 'svelte';\n\n   import { writable }     from 'svelte/store';\n\n   import { fade }         from 'svelte/transition';\n\n   import {\n      isObject,\n      klona }              from '@typhonjs-fvtt/runtime/util/object';\n\n   import ApplicationShell from '../application/ApplicationShell.svelte';\n   import DialogContent    from './DialogContent.svelte';\n   import TJSGlassPane     from '../TJSGlassPane.svelte';\n\n   // ApplicationShell contract.\n   export let elementContent = void 0;\n   export let elementRoot = void 0;\n\n   // The dialog data.\n   export let data = {};\n\n   export let dialogComponent = void 0;\n\n   export let managedPromise = void 0;\n\n   const application = getContext('#external').application;\n\n   const dialogOptions = writable({});\n\n   setContext('#managedPromise', managedPromise);\n   setContext('#dialogOptions', dialogOptions);\n\n   const s_MODAL_TRANSITION = fade;\n   const s_MODAL_TRANSITION_OPTIONS = { duration: 200 };\n   const s_MODAL_BACKGROUND = '#50505080'\n\n   let modal = void 0;\n\n   // Stores props for the ApplicationShell.\n   const appProps = {\n      // Stores any transition functions.\n      transition: void 0,\n      inTransition: void 0,\n      outTransition: void 0,\n\n      // Stores properties to set for options for any transitions.\n      transitionOptions: void 0,\n      inTransitionOptions: void 0,\n      outTransitionOptions: void 0,\n\n      // Stores any style overrides for application shell.\n      stylesApp: void 0,\n      stylesContent: void 0\n   }\n\n   const modalProps = {\n      // Background CSS style string.\n      background: void 0,\n      slotSeparate: void 0,\n      styles: void 0,\n\n      // Close modal on glasspane input.\n      closeOnInput: void 0,\n\n      // Stores any transition functions.\n      transition: void 0,\n      inTransition: void 0,\n      outTransition: void 0,\n\n      // Stores properties to set for options for any transitions.\n      transitionOptions: void 0,\n      inTransitionOptions: void 0,\n      outTransitionOptions: void 0,\n   }\n\n   let zIndex = void 0;\n\n   // Only set modal once on mount. You can't change between a modal an non-modal dialog during runtime.\n   if (modal === void 0) { modal = typeof data?.modal === 'boolean' ? data.modal : false; }\n\n   // Special modal handling -----------------------------------------------------------------------------------------\n\n   if (modal)\n   {\n      // Add a capture listener on window keydown to act before any other event listener.\n      onDestroy(() => window.removeEventListener('keydown', onKeydownModal, { capture: true }));\n      onMount(() => window.addEventListener('keydown', onKeydownModal, { capture: true }));\n   }\n   else\n   {\n      // Add a listener on document keydown to act before or equal with other event listeners.\n      onDestroy(() => document.removeEventListener('keydown', onKeydown));\n      onMount(() => document.addEventListener('keydown', onKeydown));\n   }\n\n   // Aria Attributes ------------------------------------------------------------------------------------------------\n\n   $: if (elementRoot instanceof HTMLElement)\n   {\n      elementRoot.setAttribute('role', 'dialog');\n\n      if (modal) { elementRoot.setAttribute('aria-modal', 'true'); }\n   }\n\n   // SvelteApplication options --------------------------------------------------------------------------------------\n\n   // Retrieve values from the DialogData object and also potentially set any SvelteApplication accessors.\n   // Explicit checks are performed against existing local variables as the only externally reactive variable is `data`.\n   // All of the checks below trigger when there are any external changes to the `data` prop.\n   // Prevent any unnecessary changing of local & `application` variables unless actual changes occur.\n\n   $: if (isObject(data))\n   {\n      // Update internal dialog options store / context with a clone of`data`.\n      dialogOptions.set(klona(data));\n\n      const newZIndex = Number.isInteger(data.zIndex) || data.zIndex === null ? data.zIndex :\n       modal ? Number.MAX_SAFE_INTEGER : Number.MAX_SAFE_INTEGER - 1\n      if (zIndex !== newZIndex) { zIndex = newZIndex; }\n\n      // Update the main foundry options when data changes. Perform explicit checks against existing data in `application`.\n      const newDraggable = typeof data.draggable === 'boolean' ? data.draggable : void 0;\n      if (newDraggable !== void 0 && application.reactive.draggable !== newDraggable)\n      {\n         application.reactive.draggable = newDraggable;\n      }\n\n      const newFocusAuto = typeof data.focusAuto === 'boolean' ? data.focusAuto : void 0;\n      if (newFocusAuto !== void 0 && application.reactive.focusAuto !== newFocusAuto)\n      {\n         application.reactive.focusAuto = newFocusAuto;\n      }\n\n      const newFocusKeep = typeof data.focusKeep === 'boolean' ? data.focusKeep : void 0;\n      if (newFocusKeep !== void 0 && application.reactive.focusKeep !== newFocusKeep)\n      {\n         application.reactive.focusKeep = newFocusKeep;\n      }\n\n      const newFocusTrap = typeof data.focusTrap === 'boolean' ? data.focusTrap : void 0;\n      if (newFocusTrap !== void 0 && application.reactive.focusTrap !== newFocusTrap)\n      {\n         application.reactive.focusTrap = newFocusTrap;\n      }\n\n      const newMinimizable = typeof data.minimizable === 'boolean' ? data.minimizable : void 0;\n      if (newMinimizable !== void 0 && application.reactive.minimizable !== newMinimizable)\n      {\n         application.reactive.minimizable = newMinimizable;\n      }\n\n      const newResizable = typeof data.resizable === 'boolean' ? data.resizable : void 0;\n      if (newResizable !== void 0 && application.reactive.resizable !== newResizable)\n      {\n         application.reactive.resizable = newResizable;\n      }\n\n      // Note application.title from Application localizes `options.title`, so compare with `application.options.title`.\n      const newTitle = data.title ?? 'Dialog';\n      if (newTitle !== application?.options?.title) { application.reactive.title = newTitle; }\n\n      if (application.position.zIndex !== zIndex) { application.position.zIndex = zIndex; }\n   }\n\n   // ApplicationShell transition options ----------------------------------------------------------------------------\n\n   $: if (isObject(data?.transition))\n   {\n      // Store data.transitions to shorten statements below.\n      const d = data.transition;\n\n      if (d?.transition !== appProps.transition) { appProps.transition = d.transition; }\n      if (d?.inTransition !== appProps.inTransition) { appProps.inTransition = d.inTransition; }\n      if (d?.outTransition !== appProps.outTransition) { appProps.outTransition = d.outTransition; }\n      if (d?.transitionOptions !== appProps.transitionOptions) { appProps.transitionOptions = d.transitionOptions; }\n\n      if (d?.inTransitionOptions !== appProps.inTransitionOptions)\n      {\n         appProps.inTransitionOptions = d.inTransitionOptions;\n      }\n\n      if (d?.outTransitionOptions !== appProps.outTransitionOptions)\n      {\n         appProps.outTransitionOptions = d.outTransitionOptions;\n      }\n   }\n\n   // Modal options --------------------------------------------------------------------------------------------------\n\n   $:\n   {\n      const newModalBackground = typeof data?.modalOptions?.background === 'string' ? data.modalOptions.background :\n       s_MODAL_BACKGROUND;\n\n      if (newModalBackground !== modalProps.background) { modalProps.background = newModalBackground; }\n   }\n\n   $:\n   {\n      const newModalSlotSeparate = typeof data?.modalOptions?.slotSeparate === 'boolean' ?\n       data.modalOptions.slotSeparate : void 0;\n\n      if (newModalSlotSeparate !== modalProps.slotSeparate) { modalProps.slotSeparate = newModalSlotSeparate; }\n   }\n\n   $:\n   {\n      const newModalStyles = isObject(data?.modalOptions?.styles) ? data.modalOptions.styles : void 0;\n\n      if (newModalStyles !== modalProps.styles) { modalProps.styles = newModalStyles; }\n   }\n\n   $:\n   {\n      const newModalCloseOnInput = typeof data?.modalOptions?.closeOnInput === 'boolean' ?\n       data.modalOptions.closeOnInput : void 0;\n\n      if (newModalCloseOnInput !== modalProps.closeOnInput) { modalProps.closeOnInput = newModalCloseOnInput; }\n   }\n\n   $: if (isObject(data?.modalOptions?.transition))\n   {\n      // Store data.transitions to shorten statements below.\n      const d = data.modalOptions.transition;\n\n      if (d?.transition !== modalProps.transition)\n      {\n         modalProps.transition = typeof d?.transition === 'function' ? d.transition : s_MODAL_TRANSITION;\n      }\n\n      if (d?.inTransition !== modalProps.inTransition) { modalProps.inTransition = d.inTransition; }\n      if (d?.outTransition !== modalProps.outTransition) { modalProps.outTransition = d.outTransition; }\n\n      // Provide default transition options if not defined.\n      if (d?.transitionOptions !== modalProps.transitionOptions)\n      {\n         modalProps.transitionOptions = isObject(d?.transitionOptions) ? d.transitionOptions :\n          s_MODAL_TRANSITION_OPTIONS;\n      }\n\n      if (d?.inTransitionOptions !== modalProps.inTransitionOptions)\n      {\n         modalProps.inTransitionOptions = d.inTransitionOptions;\n      }\n\n      if (d?.outTransitionOptions !== modalProps.outTransitionOptions)\n      {\n         modalProps.outTransitionOptions = d.outTransitionOptions;\n      }\n   }\n   else  // Provide a fallback / default glass pane transition when `data.modalOptions.transition` is not defined.\n   {\n      const newModalTransition = typeof data?.modalOptions?.transition?.transition === 'function' ?\n       data.modalOptions.transition.transition : s_MODAL_TRANSITION;\n\n      if (newModalTransition !== modalProps.transition) { modalProps.transition = newModalTransition; }\n\n      const newModalTransitionOptions = isObject(data?.modalOptions?.transitionOptions) ?\n       data.modalOptions.transitionOptions : s_MODAL_TRANSITION_OPTIONS;\n\n      if (newModalTransitionOptions !== modalProps.transitionOptions)\n      {\n         modalProps.transitionOptions = newModalTransitionOptions;\n      }\n   }\n\n   /**\n    * Handles closing all open TJSDialog instances when <Esc> key is pressed.\n    *\n    * @param {KeyboardEvent}  event - A KeyboardEvent.\n    */\n   function onKeydown(event)\n   {\n      if (event.code === 'Escape')\n      {\n         event.preventDefault();\n         event.stopPropagation();\n         application.close();\n      }\n   }\n\n   /**\n    * Handles closing any modal window and is assigned to `window` with capture acting before any other browser wide\n    * event listeners stopping immediate propagation.\n    *\n    * @param {KeyboardEvent}  event - A KeyboardEvent.\n    */\n   function onKeydownModal(event)\n   {\n      if (event.code === 'Escape')\n      {\n         event.preventDefault();\n         event.stopImmediatePropagation();\n         application.close();\n      }\n   }\n</script>\n\n<svelte:options accessors={true}/>\n\n{#if modal}\n   <TJSGlassPane id={`${application.id}-glasspane`} {...modalProps} {zIndex} on:close:glasspane={() => application.close()}>\n      <ApplicationShell bind:elementRoot bind:elementContent {...appProps} appOffsetHeight={true}>\n         <DialogContent bind:dialogComponent {data} stopPropagation={true} />\n      </ApplicationShell>\n   </TJSGlassPane>\n{:else}\n   <ApplicationShell bind:elementRoot bind:elementContent {...appProps} appOffsetHeight={true}>\n      <DialogContent bind:dialogComponent {data} />\n   </ApplicationShell>\n{/if}\n","import { cssVariables } from './cssVariables.js';\n\nexport { default as TJSComponentShell }   from './TJSComponentShell.svelte';\nexport { default as TJSContainer }        from './TJSContainer.svelte';\nexport { default as TJSGlassPane }        from './TJSGlassPane.svelte';\nexport *                                  from './application/index.js';\nexport *                                  from './dialog/index.js';\n\n/**\n * Provides default CSS variables for core components.\n */\ncssVariables.setProperties({\n   // Anchor text shadow / header buttons\n   '--tjs-default-text-shadow-focus-hover': '0 0 8px var(--color-shadow-primary)',\n\n   // TJSApplicationShell app background.\n   '--tjs-app-background': `url(\"${globalThis.foundry.utils.getRoute('/ui/denim075.png')}\")`,\n}, false);\n","// Class for general global variables.\n\nexport const MODULE_ID = 'foundryvtt-actor-studio';\nexport const MODULE_CODE = 'GAS';\nexport const MODULE_TITLE = 'Actor Studio';\nexport const LOG_PREFIX = 'ACTOR STUDIO |';\nexport const MYSTERY_MAN = 'icons/svg/mystery-man.svg';\nexport const NONE_ICON = 'icons/svg/cancel.svg';\n\nexport const enum DEFAULT_PACKS {\n  RACES = 'dnd5e.races',\n  RACE_FEATURES = 'dnd5e.races',\n  CLASSES = 'dnd5e.classes',\n  CLASS_FEATURES = 'dnd5e.classfeatures',\n  SUBCLASSES = 'dnd5e.subclasses',\n  ITEMS = 'dnd5e.items',\n  SPELLS = 'dnd5e.spells',\n  RULES = 'dnd5e.rules',\n  BACKGROUNDS = 'dnd5e.backgrounds',\n}\n\nexport const sessionConstants = {\n  appState: `${MODULE_ID}.settings.appState`\n};\n\nexport const DEFAULT_SOURCES = {\n  races: [DEFAULT_PACKS.RACES],\n  racialFeatures: [DEFAULT_PACKS.RACE_FEATURES],\n  classes: [DEFAULT_PACKS.CLASSES],\n  subclasses: [DEFAULT_PACKS.SUBCLASSES],\n  backgrounds: [DEFAULT_PACKS.BACKGROUNDS],\n  spells: [DEFAULT_PACKS.SPELLS],\n  feats: [],\n  items: [DEFAULT_PACKS.ITEMS],\n};\n\nexport const INTEGRATION = {\n  TOKENIZER: {\n    VERSION: '3.3.0',\n  },\n};\n\nexport const MERGE_OPTIONS = {\n  insertKeys: true,\n  insertValues: true,\n  overwrite: true,\n  recursive: true,\n  inplace: false,\n};\n\nexport const POINT_BUY_COSTS = {\n  8: 0,\n  9: 1,\n  10: 2,\n  11: 3,\n  12: 4,\n  13: 5,\n  14: 7,\n  15: 9\n}\n\nexport const STANDARD_ARRAY = {\n  str: 15, \n  dex: 14, \n  con: 13, \n  int: 12, \n  wis: 10, \n  cha: 8\n};\n\nexport type CLASS_LEVEL = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20;\n\n","import { MODULE_ID } from '~/src/helpers/constants';\n\nclass plugin {\n\n  enabled\n  constructor() {\n    this.enabled = false\n  }\n\n  /**\n   * Initializes the plugin by checking if Donation Tracker is enabled in settings.\n   * Sets up a hook to notify when the GAS Plugin is loaded.\n   */\n  init() {\n    this.enabled = game.settings.get(MODULE_ID, 'enable-donation-tracker')\n    // @todo: https://github.com/geoidesic/foundryvtt-actor-studio/issues/32#issuecomment-2166888022\n    Hooks.on('gas-plugin', () => {\n      alert('GAS Plugin Loaded')\n    })\n  }\n\n\n  /**\n   * Retrieves the settings for each donation tracker rank, including the folder name and permission.\n   * \n   * @returns {Array<Object>} - An array of objects containing permission, rank, and folderName.\n   */\n  getDTSettings() {\n    const membershipRanks = game.membership.RANKS\n    const membershipFolderArray = Object.entries(membershipRanks).filter(([_, value]) => value !== -1);\n    const settings = membershipFolderArray\n      .map(([key, rank]) => { return { permission: key, rank, folderName: game.settings.get(MODULE_ID, `donation-tracker-rank-${key}`) } })\n    return settings\n  }\n\n  /**\n   * Checks if the current pack has DT folders or not.\n   * Ignored rank access permissions.\n   * @param {object} pack \n   * @returns boolean\n   */\n  packHasDTFolders(pack) {\n    const membershipRanks = game.membership.RANKS\n    const membershipFolderArray = Object.entries(membershipRanks).filter(([_, value]) => value !== -1);\n\n    const DTfolders = membershipFolderArray\n      .map(([key, _]) => game.settings.get(MODULE_ID, `donation-tracker-rank-${key}`))\n    // window.GAS.log.d('DTfolders', DTfolders)\n    return DTfolders.length > 0\n  }\n\n  /**\n   * Retrieves all folder names associated with donation tracker ranks.\n   * @returns {Array<string>} - An array of folder names tied to donation tracker ranks.\n   */\n  getAllowedDTFolderNames() {\n    const membershipRanks = game.membership.RANKS\n    // window.GAS.log.d('membershipRanks', membershipRanks)\n    const membershipFolderArray = Object.entries(membershipRanks).filter(([_, value]) => value !== -1);\n    // window.GAS.log.d('membershipFolderArray', membershipFolderArray)\n    const allowedMembershipFolderNames = membershipFolderArray.filter(([key, _]) =>\n      {\n        // window.GAS.log.d('key', key);\n        return game.membership.hasPermission(key)\n        //-@why: #102, unregistered = \"member\"\n        || (\n          game.membership.membershipLevel == -1\n          && key == 'member'\n        )\n      }\n    )\n      .map(([key, _]) => game.settings.get(MODULE_ID, `donation-tracker-rank-${key}`))\n    // window.GAS.log.d('allowedMembershipFolderNames', allowedMembershipFolderNames)\n    return allowedMembershipFolderNames\n  }\n\n\n  /**\n   * Retrieves the root-level and subfolder DT folder IDs from a compendium pack that are allowed for the current user.\n   * \n   * @param {Object} pack - The compendium pack to search.\n   * @returns {Array<string>} - An array of allowed folder IDs including subfolders.\n   */\n  getDTFolderIdsFromPack(pack, filterByPermissions = true) {\n    let allowedFolderIds = [];\n    /**\n     * Recursively retrieves folder IDs including subfolders.\n     * \n     * @param {Array<Object>} folders - An array of folder objects to search.\n     * @returns {Array<string>} - An array of allowed folder IDs.\n    */\n    const getFolderAndSubfolderIds = (folders) => {\n      // window.GAS.log.d('folders', folders)\n      for (let i = 0; i < folders.length; i++) {\n        const folder = folders[i];\n        //  window.GAS.log.d('folder.id', folder.id)\n\n        allowedFolderIds.push(folder.id);\n\n        // If the folder has subfolders, recursively add their IDs\n        //  window.GAS.log.d(folder.id+'_folder.folders', folder.children)\n        if (folder.children && folder.children.length > 0) {\n          getFolderAndSubfolderIds(folder.children.map(f => f.folder));\n        }\n\n        // window.GAS.log.d('allowedFolderIds', allowedFolderIds)\n      }\n    };\n\n\n    // window.GAS.log.d('>>>>>>>>>>>>> pack.name', pack.metadata.name)\n\n    // window.GAS.log.d('filterByPermissions', filterByPermissions)\n    //- Filter pack root folders based on the user's membership rank and get their IDs and subfolder IDs     \n    const validRootFolderNames = this.getAllowedDTFolderNames();\n    // window.GAS.log.d('id', pack.metadata.id);\n    // window.GAS.log.d('this.getDTFolderNames()', this.getAllowedDTFolderNames());\n    // window.GAS.log.d('validRootFolderNames', validRootFolderNames)\n    // window.GAS.log.d('pack.folders', pack.folders)\n    // window.GAS.log.d('pack.folders.filtered', pack.folders.filter(f => validRootFolderNames.includes(f.name)))\n\n    if (filterByPermissions) {\n      getFolderAndSubfolderIds(pack.folders.filter(f => validRootFolderNames.includes(f.name)));\n    } else {\n      getFolderAndSubfolderIds(Array.from(pack.folders));\n    }\n    // window.GAS.log.d('allowedFolderIds', allowedFolderIds)\n    return allowedFolderIds;\n  }\n}\n\nexport default new plugin();","import { writable } from 'svelte/store';\n\n// Basic store definitions without dependencies\nexport const race = writable(false); //- tracks race selection\nexport const subRace = writable(false); //- tracks subrace selection\nexport const background = writable(false); //- tracks background selection\nexport const characterClass = writable(false); //- tracks class selection for Character level 1\nexport const characterSubClass = writable(false); //- tracks subclass selection for Character level 1\nexport const abilities = writable(false); //- tracks abilities selection\nexport const spells = writable(false); //- tracks spells selection\nexport const pointBuyScoreTotal = writable(12); //- tracks the total point buy score\nexport const pointBuyLimit = writable(27); //- tracks the point buy limit\nexport const abilityRolls = writable(false); //- tracks ability rolls\nexport const isStandardArrayValues = writable(false); //- tracks if the character is using standard array values\nexport const level = writable(1); //- tracks the current level of the character\nexport const activeTab = writable(''); //- tracks the active tab\nexport const isActorCreated = writable(false); //- tracks if the actor has been created\nexport const tabs = writable([]); //- tracks the tabs\nexport const levelUpTabs = writable([]); //- tracks the level up tabs\nexport const actorInGame = writable(null); //- tracks the actor in game\nexport const abilityGenerationMethod = writable(null); //- tracks the ability generation method\nexport const subClassesForClass = writable([]); //- tracks the subclasses for the class\nexport const goldRoll = writable(0); //- tracks the gold roll\nexport const readOnlyTabs = writable([]); //- tracks the read only tabs\n//- level-up store definitions\nexport const isLevelUp = writable(false); //- tracks if the character is in level up mode\nexport const classUuidForLevelUp = writable(null); //- tracks the class uuid for level up\nexport const subClassUuidForLevelUp = writable(null); //- tracks the subclass uuid for level up\nexport const newLevelValueForExistingClass = writable(false); //- tracks new level value for existing class\nexport const selectedMultiClassUUID = writable(false); //- tracks the selected multi class\nexport const levelUpClassObject = writable(null); //- tracks the new multi class object\nexport const levelUpSubClassObject = writable(null); //- tracks the new multi class object\nexport const activeRowClassKey = writable(null); //- tracks the active row class key\nexport const levelUpCombinedHtml = writable(''); //- tracks the level up combined html\nexport const levelUpRichHTML = writable(''); //- tracks the level up rich html\nexport const levelUpRichSubClassHTML = writable(''); //- tracks the level up rich subclass html\n","import { derived, writable } from 'svelte/store';\nimport { goldRoll } from './storeDefinitions';\n\n// Base store for gold choices\nconst goldChoices = writable({\n  fromClass: {\n    choice: null, // 'equipment' or 'gold'\n    goldValue: 0\n  },\n  fromBackground: {\n    choice: null, // 'equipment' or 'gold'\n    goldValue: 0\n  }\n});\n\n// Derived store for total gold from choices\nconst totalGoldFromChoices = derived(goldChoices, ($goldChoices) => {\n  return $goldChoices.fromClass.goldValue + $goldChoices.fromBackground.goldValue;\n});\n\n// Derived store that updates goldRoll for backwards compatibility\nconst goldChoicesCompat = derived(totalGoldFromChoices, ($totalGoldFromChoices) => {\n  goldRoll.set($totalGoldFromChoices);\n  return $totalGoldFromChoices;\n});\n\n// Derived store to check if choices are complete\nconst areGoldChoicesComplete = derived([goldChoices, goldRoll], ([$goldChoices, $goldRoll]) => {\n  const isDnd2014 = window.GAS.dnd5eVersion < 4 || window.GAS.dnd5eRules === '2014';\n  let complete = false;\n  if (isDnd2014) {\n    complete = $goldRoll > 0;\n  } else {\n    complete = $goldChoices.fromClass.choice !== null && \n           $goldChoices.fromBackground.choice !== null;\n  }\n  return complete;\n  \n});\n\n// Helper functions\nconst setClassGoldChoice = (choice, value) => {\n  goldChoices.update(current => ({\n    ...current,\n    fromClass: {\n      choice,\n      goldValue: value\n    }\n  }));\n};\n\nconst setBackgroundGoldChoice = (choice, value) => {\n  goldChoices.update(current => ({\n    ...current,\n    fromBackground: {\n      choice,\n      goldValue: value\n    }\n  }));\n};\n\nconst clearGoldChoices = () => {\n  goldChoices.set({\n    fromClass: {\n      choice: null,\n      goldValue: 0\n    },\n    fromBackground: {\n      choice: null,\n      goldValue: 0\n    }\n  });\n};\n\nexport {\n  goldChoices,\n  totalGoldFromChoices,\n  areGoldChoicesComplete,\n  setClassGoldChoice,\n  setBackgroundGoldChoice,\n  clearGoldChoices\n}; ","import { derived, get, writable } from 'svelte/store';\n// Import directly from storeDefinitions instead of index\nimport { characterClass, background } from './storeDefinitions';\nimport { goldChoices } from './goldChoices';\n// Base store for starting equipment\n\n// Derived store that automatically updates when class/background change\nconst startingEquipment = derived(\n  [characterClass, background],\n  ([$characterClass, $background]) => {\n      return {\n        fromClass: $characterClass?.system?.startingEquipment || [],\n        fromBackground: $background?.system?.startingEquipment || []\n      }\n  }\n);\n\n// Derived stores for specific sources\nconst classStartingEquipment = derived(startingEquipment, ($startingEquipment) => {\n  window.GAS.log.d('[StartingEquipment] startingEquipment', $startingEquipment);\n  return $startingEquipment.fromClass;\n});\n\nconst backgroundStartingEquipment = derived(startingEquipment, ($startingEquipment) => {\n  return $startingEquipment.fromBackground;\n});\n\n// Combined flattened equipment for components that don't need source separation\nconst flattenedStartingEquipment = derived(startingEquipment, ($startingEquipment) => {\n  return [...$startingEquipment.fromClass, ...$startingEquipment.fromBackground];\n});\n\nconst compatibleStartingEquipment = derived([classStartingEquipment, backgroundStartingEquipment, goldChoices], ([$classStartingEquipment, $backgroundStartingEquipment, $goldChoices]) => {\n  window.GAS.log.d('[StartingEquipment] classStartingEquipment', $classStartingEquipment);\n  if (window.GAS.dnd5eVersion < 4 || window.GAS.dnd5eRules === \"2014\") {\n    return $classStartingEquipment;\n  } \n  if ($goldChoices.fromClass.choice !== 'gold' && $goldChoices.fromBackground.choice !== 'gold') {\n    return [...$classStartingEquipment, ...$backgroundStartingEquipment];\n  } \n  if ($goldChoices.fromClass.choice !== 'gold') {\n    return $classStartingEquipment;\n  } \n  if ($goldChoices.fromBackground.choice !== 'gold') {\n    return $backgroundStartingEquipment;\n  }   \n  return [];\n});\n\n// Reset function\nconst clearStartingEquipment = () => {\n  startingEquipment.set({\n    fromClass: [],\n    fromBackground: []\n  });\n};\n\nexport {\n  startingEquipment,\n  classStartingEquipment,\n  backgroundStartingEquipment,\n  flattenedStartingEquipment,\n  compatibleStartingEquipment,\n  clearStartingEquipment\n};\n","import { get } from 'svelte/store';\nimport { activeTab } from '~/src/stores/index';\nimport { MODULE_ID } from '~/src/helpers/constants';\nimport { delay, prepareItemForDrop, dropItemOnCharacter } from '~/src/helpers/Utility';\nimport { compatibleStartingEquipment } from '~/src/stores/startingEquipment';\nimport { goldRoll } from '~/src/stores/storeDefinitions';\nimport { preAdvancementSelections } from '~/src/stores/index';\n\n/**\n * Class responsible for monitoring and managing the advancement process\n */\nexport class AdvancementManager {\n  constructor(store, inProcessStore) {\n    this.store = store;\n    this.inProcessStore = inProcessStore;\n    this.monitoringPromise = null;\n  }\n\n  /**\n   * Checks if the advancement (or other tab) content is currently empty\n   * @returns {boolean} Whether the content is empty\n   */\n  isTabContentEmpty(tabName = 'advancements') {\n    if (get(activeTab) !== tabName) {\n      return false;\n    }\n    const panel = $('#foundryvtt-actor-studio-pc-sheet .window-content main section.a .tab-content .container .content');\n    if (!panel) {\n      return false;\n    }\n    return !Boolean(panel.html()?.trim());\n  }\n\n  checkTabContent(resolve, tabName = 'advancements', timeout = 600) {\n    if (this.isTabContentEmpty(tabName)) {\n      resolve();\n    } else {\n      setTimeout(() => this.checkTabContent(resolve, tabName, timeout), timeout);\n    }\n  };\n\n  /**\n   * Waits for the advancement panel to become empty\n   * @returns {Promise} A promise that resolves when the panel is empty\n   */\n  async waitForEmptyTab(tabName = 'advancements') {\n    if (this.monitoringPromise) return this.monitoringPromise;\n\n    this.monitoringPromise = new Promise(resolve => {\n      this.checkTabContent(resolve, tabName);\n    });\n\n    return this.monitoringPromise;\n  }\n\n  /**\n   * Monitors the queue for advancements and closes the advancement manager when the queue is empty\n   * Also starts the equipment selection process when the queue is empty if that's enabled, passing \n   * off the close responsibility to the equipment selection process\n   * @returns {Promise<boolean>}\n   */\n  async watchAdvancementManager() {\n    await delay(200); //- delay to allow for the items to be dropped\n\n    //- if advancements are enabled handle advancement capture\n    if (!game.settings.get(MODULE_ID, 'disableAdvancementCapture')) {\n      window.GAS.log.d('[ADVANCEMENT MANAGER] waiting for advancements tab to be empty');\n      await this.waitForEmptyTab('advancements');\n      window.GAS.log.d('[ADVANCEMENT MANAGER] advancements tab is empty');\n      this.monitoringPromise = null;\n    }\n\n    //- advance the queue\n    const queue = await this.advanceQueue();\n    return queue;\n  }\n\n  isEquipmentSelectionViable() {\n    let viable = true;\n    //- check for gold differently based on rules version\n    // if (window.GAS.dnd5eVersion === 4 || window.GAS.dnd5eRules === '2014') {}\n\n    const preSelections = get(preAdvancementSelections);\n    window.GAS.log.d('[ADVANCEMENT MANAGER] preSelections', preSelections);\n    if (Object.keys(preSelections).length === 0) {\n      return false;\n    }\n    if (preSelections.class.system.startingEquipment.length === 0) {\n      return false;\n    }\n    if (preSelections.class.system.wealth === undefined) {\n      return false;\n    }\n    if (get(compatibleStartingEquipment).length === 0) {\n      viable = false;\n    }\n    window.GAS.log.d('[ADVANCEMENT MANAGER] isEquipmentSelectionViable', viable);\n    return viable;\n  }\n\n  /**\n   * Opens equipment tab if enabled, otherwise closes the advancement manager\n   * @param {Actor} currentActor - The current actor being processed\n   */\n  closeOrEquip(currentActor) {\n    const enableEquipmentSelection = game.settings.get(MODULE_ID, 'enableEquipmentSelection');\n    window.GAS.log.d('[ADVANCEMENT MANAGER] enableEquipmentSelection', enableEquipmentSelection);\n    if (enableEquipmentSelection) {\n      window.GAS.log.d('[ADVANCEMENT MANAGER] opening equipment tab for ', currentActor);\n      if (this.isEquipmentSelectionViable()) {\n        Hooks.call(\"gas.equipmentSelection\", currentActor);\n        return;\n      }\n    }\n    Hooks.call(\"gas.close\");\n  }\n\n  /**\n   * Handles the case when the queue is empty\n   */\n  handleEmptyQueue() {\n    const currentActor = get(this.inProcessStore)?.actor;\n    this.inProcessStore.set(false);\n    this.closeOrEquip(currentActor);\n  }\n\n  /**\n   * Handles processing the next item in the queue\n   * @param {Object} next - The next item to process\n   * @returns {Promise<Object>} The result of processing the item\n   */\n  async handleNextItem(next) {\n    this.inProcessStore.set(next);\n    this.store.remove(next.id);\n    const item = await prepareItemForDrop(next);\n    const currentActor = get(this.inProcessStore)?.actor;\n    // window.GAS.log.d('[ADVANCEMENT MANAGER] handling next item', next);\n    // window.GAS.log.d('[ADVANCEMENT MANAGER] currentActor', currentActor);\n    const result = await dropItemOnCharacter(currentActor, item);\n    return result;\n  }\n\n  /**\n   * Advances the queue to the next item\n   * Will open the Advancements tab if it's required and not already open\n   * @returns {Promise<boolean>}\n   */\n  async advanceQueue() {\n    window.GAS.log.d('[ADVANCEMENT MANAGER] advancing queue of length', get(this.store).length);\n    //- get current state\n    const currentStore = get(this.store);\n    const next = currentStore[0] || false;\n\n    //- handle empty queue\n    if (!next) {\n      window.GAS.log.d('[ADVANCEMENT MANAGER] queue is empty, handling empty queue');\n      this.handleEmptyQueue();\n      return false;\n    }\n\n    //- handle next item\n    window.GAS.log.d('[ADVANCEMENT MANAGER] handling next item', next);\n    const result = await this.handleNextItem(next);\n\n    //- set the advancement manager watcher\n    window.GAS.log.d('[ADVANCEMENT MANAGER] setting advancement manager watcher');\n    return await this.watchAdvancementManager();\n  }\n} ","import { writable, get, derived } from 'svelte/store';\nimport { AdvancementManager } from '~/src/helpers/AdvancementManager';\n\nexport const advancementQueueStore = () => {\n  const store = writable([]);\n  const inProcess = writable(false);\n  const { subscribe, set, update } = store;\n\n  const remove = (id) => update(apps => apps.filter(app => app.id !== id));\n  const expectedOrder = ['race', 'background', 'characterClass', 'characterSubClass'];\n\n  // Create the store object first\n  const storeObj = {\n    subscribe,\n    add: (app) => {\n      update(apps => {\n        const filteredApps = apps.filter(existingApp => existingApp.id !== app.id);\n        const newApps = [...filteredApps, app];\n        return newApps;\n      });\n    },\n    splice: (app) => {\n      update(apps => {\n        // Remove any existing instance of this item\n        const filteredApps = apps.filter(existingApp => existingApp.id !== app.id);\n\n        // Find the correct position based on expectedOrder\n        const appIndex = expectedOrder.indexOf(app.id);\n        if (appIndex === -1) {\n          // If not in expected order, just append\n          return [...filteredApps, app];\n        }\n\n        // Find the insertion point by looking at the next expected item\n        let insertIndex = filteredApps.length;\n        for (let i = appIndex + 1; i < expectedOrder.length; i++) {\n          const nextExpectedId = expectedOrder[i];\n          const nextItemIndex = filteredApps.findIndex(item => item.id === nextExpectedId);\n          if (nextItemIndex !== -1) {\n            insertIndex = nextItemIndex;\n            break;\n          }\n        }\n\n        // Insert the item at the correct position\n        return [\n          ...filteredApps.slice(0, insertIndex),\n          app,\n          ...filteredApps.slice(insertIndex)\n        ];\n      });\n    },\n    remove,\n    removeAll: () => set([]),\n    currentProcess: derived(inProcess, $inProcess => $inProcess),\n    updateCurrentProcess: (obj) => inProcess.update(p => ({ ...p, ...obj })),\n  };\n\n  // Create the advancement manager after storeObj is defined\n  const advancementManager = new AdvancementManager(storeObj, inProcess);\n\n  /**\n   * Advances the queue to the next item\n   * Will open the Advancements tab if it's required and not already open\n   * @param {boolean} initial - Whether this is the initial call to the queue\n   * @returns {Promise<boolean>}\n   */\n  storeObj.advanceQueue = async function (initial) {\n    return await advancementManager.advanceQueue();\n  };\n\n  return storeObj;\n};\n\n// Create the store instance\nexport const dropItemRegistry = advancementQueueStore();","import { writable, get, derived } from 'svelte/store';\n// Import all store definitions\nimport * as storeDefinitions from './storeDefinitions';\n// Re-export all store definitions\nexport * from './storeDefinitions';\n\nimport { advancementQueueStore } from \"~/src/stores/advancements\";\nimport { clearGoldChoices } from \"~/src/stores/goldChoices\";\nimport { MODULE_ID } from \"~/src/helpers/constants\";\nimport { getSubclassLevel } from '~/src/helpers/Utility';\n\nconst initialTabs = [\n  { label: \"Abilities\", id: \"abilities\", component: \"Abilities\" },\n  { label: \"Race\", id: \"race\", component: \"Race\" },\n  { label: \"Background\", id: \"background\", component: \"Background\" },\n  { label: \"Class\", id: \"class\", component: \"Class\" },\n]\n\n// Tabs for level up\nconst upTabs = [\n  { label: \"Level Up\", id: \"level-up\", component: \"LevelUp\" }\n]\n\n// Set initial values for tabs\nstoreDefinitions.tabs.set(initialTabs);\nstoreDefinitions.levelUpTabs.set(upTabs);\nstoreDefinitions.pointBuyLimit.set(27);\n\n// Set names for debugging\nstoreDefinitions.race.name = \"race\";\nstoreDefinitions.subRace.name = \"subRace\";\nstoreDefinitions.characterClass.name = \"characterClass\";\nstoreDefinitions.characterSubClass.name = \"characterSubClass\";\nstoreDefinitions.background.name = \"background\";\nstoreDefinitions.abilities.name = \"abilities\";\nstoreDefinitions.spells.name = \"spells\";\nstoreDefinitions.isLevelUp.name = \"isLevelUp\";\nstoreDefinitions.pointBuyScoreTotal.name = \"pointBuyScoreTotal\";\nstoreDefinitions.pointBuyLimit.name = \"pointBuyLimit\";\nstoreDefinitions.abilityRolls.name = \"abilityRolls\";\nstoreDefinitions.isStandardArrayValues.name = \"isStandardArrayValues\";\nstoreDefinitions.newLevelValueForExistingClass.name = \"newLevelValueForExistingClass\";\nstoreDefinitions.classUuidForLevelUp.name = \"classUuidForLevelUp\";\nstoreDefinitions.level.name = \"level\";\nstoreDefinitions.activeTab.name = \"activeTab\";\nstoreDefinitions.selectedMultiClassUUID.name = \"selectedMultiClassUUID\";\nstoreDefinitions.isActorCreated.name = \"isActorCreated\";\nstoreDefinitions.tabs.name = \"tabs\";\nstoreDefinitions.levelUpTabs.name = \"levelUpTabs\";\nstoreDefinitions.actorInGame.name = \"actorInGame\";\nstoreDefinitions.abilityGenerationMethod.name = \"abilityGenerationMethod\";\nstoreDefinitions.subClassesForClass.name = \"subClassesForClass\";\nstoreDefinitions.levelUpClassObject.name = \"levelUpClassObject\";\nstoreDefinitions.activeRowClassKey.name = \"activeRowClassKey\";\nstoreDefinitions.levelUpSubClassObject.name = \"levelUpSubClassObject\";\nstoreDefinitions.levelUpCombinedHtml.name = \"levelUpCombinedHtml\";\n// Export the advancement queue store\nexport const dropItemRegistry = advancementQueueStore(); \ndropItemRegistry.name = \"dropItemRegistry\";\n\nexport const isNewMultiClass = derived(\n  [storeDefinitions.characterClass,  storeDefinitions.newLevelValueForExistingClass], \n  ([$characterClass, $newLevelValueForExistingClass]) => {\n    if ($newLevelValueForExistingClass) return false;\n    if ($characterClass && !$newLevelValueForExistingClass) return true;\n  }\n);\n\nexport const subclassLevelForLevelUp = derived([storeDefinitions.classUuidForLevelUp, storeDefinitions.levelUpClassObject], ([$classUuidForLevelUp, $levelUpClassObject]) => {\n  if (!$classUuidForLevelUp || !$levelUpClassObject) return false;\n  const result = $classUuidForLevelUp ? getSubclassLevel($levelUpClassObject, MODULE_ID) : false;\n  window.GAS.log.d('[subclassLevel] classUuidForLevelUp', $classUuidForLevelUp)\n  window.GAS.log.d('[subclassLevel] levelUpClassObject', $levelUpClassObject)\n  window.GAS.log.d('[subclassLevel] getSubclassLevel($levelUpClassObject, MODULE_ID)', getSubclassLevel($levelUpClassObject, MODULE_ID))\n  window.GAS.log.d('[subclassLevel] result', result)\n  return result;\n});\n\n// Derived store to check if the class gets a subclass at the current level up level\nexport const levelUpClassGetsSubclassThisLevel = derived(\n  [storeDefinitions.classUuidForLevelUp, subclassLevelForLevelUp, storeDefinitions.newLevelValueForExistingClass, storeDefinitions.levelUpClassObject], \n  ([$classUuidForLevelUp, $subclassLevelForLevelUp, $newLevelValueForExistingClass, $levelUpClassObject]) => {\n    window.GAS.log.d('[classGetsSubclassThisLevel] classUuidForLevelUp', $classUuidForLevelUp)\n    window.GAS.log.d('[classGetsSubclassThisLevel] newLevelValueForExistingClass', $newLevelValueForExistingClass)\n    window.GAS.log.d('[classGetsSubclassThisLevel] levelUpClassObject', $levelUpClassObject)\n    if (!$classUuidForLevelUp || !$levelUpClassObject) return false;\n    \n    window.GAS.log.d('[classGetsSubclassThisLevel] subclassLevelForLevelUp', $subclassLevelForLevelUp)\n    window.GAS.log.d('[classGetsSubclassThisLevel] newLevelValueForExistingClass', $newLevelValueForExistingClass)\n    const result = $subclassLevelForLevelUp && $subclassLevelForLevelUp === $newLevelValueForExistingClass;\n    window.GAS.log.d('[classGetsSubclassThisLevel] result', result)\n    return result;\n  }\n);\n\n// Derived store to determine if a new multiclass is selected\nexport const isNewMultiClassSelected = derived(\n  [storeDefinitions.classUuidForLevelUp, storeDefinitions.newLevelValueForExistingClass, storeDefinitions.selectedMultiClassUUID], \n  ([$classUuidForLevelUp, $newLevelValueForExistingClass, $selectedMultiClassUUID]) => {\n    return $classUuidForLevelUp && !$newLevelValueForExistingClass && $selectedMultiClassUUID;\n  }\n);\n\n// Cache store for initial character selection state\nexport const preAdvancementSelections = writable({});\npreAdvancementSelections.name = \"preAdvancementSelections\";\n\n// Cache store for initial character selection state\nexport const levelUpPreAdvancementSelections = writable({});\nlevelUpPreAdvancementSelections.name = \"levelUpPreAdvancementSelections\";\n\n// Derived store to track changes from initial state\nexport const hasCharacterCreationChanges = derived(\n  [storeDefinitions.race, storeDefinitions.background, storeDefinitions.characterClass, storeDefinitions.characterSubClass, preAdvancementSelections],\n  ([$race, $background, $characterClass, $characterSubClass, $preAdvancementSelections]) => {\n    // window.GAS.log.d(\"hasCharacterCreationChanges preAdvancementSelections\", $preAdvancementSelections);\n    if (Object.keys($preAdvancementSelections).length === 0) return false;\n    \n    return (\n      $race?.id !== $preAdvancementSelections.race?.id ||\n      $background?.id !== $preAdvancementSelections.background?.id ||\n      $characterClass?.id !== $preAdvancementSelections.class?.id ||\n      $characterSubClass?.id !== $preAdvancementSelections.subclass?.id\n    );\n  }\n);\n\n// Derived store to check if advancements are in progress\nexport const isAdvancementInProgress = derived(\n  [storeDefinitions.tabs],\n  ([$tabs]) => {\n    window.GAS.log.d('[isAdvancementInProgress] tabs', $tabs)\n    return $tabs.find(tab => tab.id === 'advancements') ? true : false;\n  }\n);\nexport const isLevelUpAdvancementInProgress = derived(\n  [storeDefinitions.levelUpTabs],\n  ([$levelUpTabs]) => {\n    window.GAS.log.d('[isLevelUpAdvancementInProgress] tabs', $levelUpTabs)\n    return $levelUpTabs.find(tab => tab.id === 'advancements') ? true : false;\n  }\n);\n\n//- Derived store to get the changed items\nexport const changedCharacterCreationItems = derived(\n  [storeDefinitions.race, storeDefinitions.background, storeDefinitions.characterClass, storeDefinitions.characterSubClass, preAdvancementSelections], \n  ([$race, $background, $characterClass, $characterSubClass, $preAdvancementSelections]) => {\n    if (Object.keys($preAdvancementSelections).length === 0) return [];\n    \n    const changes = [];\n    if ($race?.id !== $preAdvancementSelections.race?.id) {\n      changes.push({ type: 'race', item: $preAdvancementSelections.race });\n    }\n    if ($background?.id !== $preAdvancementSelections.background?.id) {\n      changes.push({ type: 'background', item: $preAdvancementSelections.background });\n    }\n    if ($characterClass?.id !== $preAdvancementSelections.class?.id) {\n      changes.push({ type: 'class', item: $preAdvancementSelections.class });\n    }\n    if ($characterSubClass?.id !== $preAdvancementSelections.subclass?.id) {\n      changes.push({ type: 'subclass', item: $preAdvancementSelections.subclass });\n    }\n    return changes;\n  }\n);\n\nexport const resetLevelUpStores = () => {\n  storeDefinitions.classUuidForLevelUp.set(null); //- tracks the class uuid for level up\n  storeDefinitions.newLevelValueForExistingClass.set(false); //- tracks new level value for existing class\n  storeDefinitions.selectedMultiClassUUID.set(false); //- tracks the selected multi class\n  storeDefinitions.levelUpClassObject.set(null); //- tracks the new multi class object\n  storeDefinitions.levelUpSubClassObject.set(null); //- tracks the new multi class object\n}\n\n// Function to reset all stores\nexport function resetStores() {\n  window.GAS.log.d('[resetStores]')\n  storeDefinitions.race.set(null); //- null | object\n  storeDefinitions.background.set(null); //- null | object\n  storeDefinitions.characterClass.set(null); //- null | object\n  storeDefinitions.characterSubClass.set(null); //- null | object\n  storeDefinitions.abilityRolls.set(false); //- boolean\n  storeDefinitions.level.set(1); //- number\n  storeDefinitions.tabs.set(initialTabs); //- array\n  storeDefinitions.pointBuyScoreTotal.set(12); //- number\n  storeDefinitions.pointBuyLimit.set(game.settings.get(MODULE_ID, \"pointBuyLimit\")); //- number\n  storeDefinitions.activeTab.set(initialTabs[0].id); //- string\n  storeDefinitions.isActorCreated.set(false); //- boolean\n  storeDefinitions.actorInGame.set(null); //- null | object\n  storeDefinitions.abilityGenerationMethod.set(null); //- null | string\n  storeDefinitions.subClassesForClass.set([]); //- array\n  storeDefinitions.goldRoll.set(0); //- number\n  storeDefinitions.readOnlyTabs.set([]); //- array\n  storeDefinitions.levelUpTabs.set(upTabs); //- array\n  storeDefinitions.levelUpClassObject.set(null); //- null | object\n  storeDefinitions.newLevelValueForExistingClass.set(false); //- boolean\n  storeDefinitions.selectedMultiClassUUID.set(null); //- null | uuid string\n  storeDefinitions.activeRowClassKey.set(null); //- null | string\n  storeDefinitions.classUuidForLevelUp.set(null); //- null | uuid string\n  storeDefinitions.levelUpSubClassObject.set(null); //- null | object\n  storeDefinitions.levelUpCombinedHtml.set(''); //- string\n  storeDefinitions.levelUpRichHTML.set(''); //- string\n  storeDefinitions.levelUpRichSubClassHTML.set(''); //- string\n  preAdvancementSelections.set({}); //- void\n  levelUpPreAdvancementSelections.set({}); //- void\n  dropItemRegistry.removeAll(); //- void\n  clearGoldChoices(); //- void\n}","import { LOG_PREFIX, MODULE_ID, MODULE_CODE } from \"~/src/helpers/constants\"\nimport DTPlugin from \"~/src/plugins/donation-tracker\";\nimport { dropItemRegistry } from \"~/src/stores/index\";\nimport { get } from \"svelte/store\";\n\n\nexport async function illuminatedDescription(html, store) {\n  const enriched = await TextEditor.enrichHTML(html);\n  if(!game.settings.get(MODULE_ID, 'illuminatedDescription')) {\n    return enriched;\n  }\n  const jEnriched = jQuery(enriched);\n  let content = enriched;\n  \n  // Check if the content is wrapped in a div\n  if (jEnriched.length === 1 && jEnriched[0].nodeName === 'DIV') {\n    content = jEnriched.html();\n  }\n\n  if (!content) return null;\n  \n  const richHTML = `\n    <div class=\"illuminated-description\">\n      <div class=\"illuminated-initial\" style=\"background-image: url('${store.img}')\"></div>\n      ${content}\n    </div>\n  `;\n  return richHTML;\n}\n\nexport const log = {\n  ASSERT: 1, ERROR: 2, WARN: 3, INFO: 4, DEBUG: 5, VERBOSE: 6,\n  set level(level) {\n    this.a = (level >= this.ASSERT) ? console.assert.bind(window.console, LOG_PREFIX) : () => { };\n    this.e = (level >= this.ERROR) ? console.error.bind(window.console, LOG_PREFIX) : () => { };\n    this.w = (level >= this.WARN) ? console.warn.bind(window.console, LOG_PREFIX) : () => { };\n    this.i = (level >= this.INFO) ? console.info.bind(window.console, LOG_PREFIX) : () => { };\n    this.d = (level >= this.DEBUG) ? console.debug.bind(window.console, LOG_PREFIX) : () => { };\n    this.v = (level >= this.VERBOSE) ? console.log.bind(window.console, LOG_PREFIX) : () => { };\n    this.loggingLevel = level;\n  },\n  get level() { return this.loggingLevel; }\n};\n\nexport const getDnd5eVersion = () => {\n  const system = game.system;\n  console.trace()\n  log.level = log.DEBUG;\n  log.d('game', game);\n  log.d('system', system);\n  if (system.id !== 'dnd5e') return null;\n  return Number(system.version.split('.')[0]); // Returns 3 or 4\n};\n\nexport const getDndRulesVersion = () => {\n  if (getDnd5eVersion() === 3) {\n    return \"2014\";\n  } \n  return game.settings.get(\"dnd5e\", \"rulesVersion\") === \"modern\" ? \"2024\" : \"2014\";\n};\n\nexport function getLevelByDropType(actor, droppedItem) {\n  // window.GAS.log.d('getLevelByDropType', droppedItem);\n  // window.GAS.log.d('actor', actor);\n  const currentDropItemRegistry = get(dropItemRegistry);\n  // window.GAS.log.d('currentDropItemRegistry', currentDropItemRegistry);\n  switch (droppedItem.type) {\n    case 'class':\n      return actor.classes[droppedItem.system.identifier].system.levels\n    case 'subclass':\n      return actor.classes[droppedItem.system.classIdentifier].system.levels\n    case 'race':\n    case 'background':\n    default:\n      return parseInt(actor.system.details.level) + 1\n  }\n}\n\n/**\n * Gets a rules from a journal by ID and Page\n *\n * @export\n * @async\n * @param {object} rule\n * @param {string} rule.journalId\n * @param {string} rule.pageId\n * @returns {string}\n */\nexport async function getRules(rule) {\n  const { journalId, pageId } = rule;\n  const rules = await game.packs.get('dnd5e.rules');\n  const journal = await rules?.getDocument(journalId);\n  const text = (journal)?.pages?.get(pageId).text;\n  if (!text) {\n    console.error(`Unable to find rule journal on compendium ${DEFAULT_PACKS.RULES}`);\n  }\n  return text;\n}\n\nexport function filterPackForDTPackItems(pack, entries) {\n  // window.GAS.log.d('filterPackForDTPackItems', pack, entries);\n  // window.GAS.log.d('filterPackForDTPackItems filter', entries.filter);\n  if (game.modules.get('donation-tracker')?.active && game.settings.get(MODULE_ID, 'enable-donation-tracker')) {\n\n\n    //- if the pack has no DT folders, include everything, @why: as this compendium is not managed by DT\n    if (!DTPlugin.packHasDTFolders(pack)) {\n      // window.GAS.log.d('packHasDTFolders false');\n      return true;\n    }\n    // get dt folder id's from this pack\n    const allowedDTFolderIds = DTPlugin.getDTFolderIdsFromPack(pack)\n    // window.GAS.log.d('allowedDTFolderIds', allowedDTFolderIds);\n    const allDTFolderIds = DTPlugin.getDTFolderIdsFromPack(pack, false)\n    // window.GAS.log.d('allDTFolderIds', allDTFolderIds);\n\n    const unregisteredAccess = game.settings.get(MODULE_ID, 'enable-donation-tracker-unregistered-access');\n\n    if (game.user.isGM && game.membership.DEVELOPER_IS_ADMIN) return entries;\n    // filter the index.entries accordingly\n    entries = entries.filter(([key, value]) => {\n\n      // window.GAS.log.d('key', key, value)\n      //- if item is not in a folder\n      // window.GAS.log.d(1)\n      if (!value.folder) {\n        return unregisteredAccess;\n      }\n\n      //- if the item is in a folder that is not a real folder (e.g. deleted folder)\n      // window.GAS.log.d(2)\n      if (!pack.folders.get(value.folder)) return false;\n\n      //- if the item is in a DT folder tree, include it\n      // window.GAS.log.d(4)\n      if (allowedDTFolderIds.includes(value.folder)) return true;\n      // window.GAS.log.d(5)\n\n      //- if item is in a folder that is not a DT folder\n      if (!allDTFolderIds.includes(value.folder)) {\n        // window.GAS.log.d(6)\n        return unregisteredAccess;\n      }\n\n      // window.GAS.log.d(7)\n\n      return false;\n    });\n  }\n  return entries;\n}\n\nexport const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\n\n/**\n * Extracts items from all compendium packs including subfolders.\n * Use this if you're happy with the default pack index.\n * @param {Array} packs compendium packs\n * @param {Array} keys pack data to extract\n * @returns {Array} extracted items\n */\nexport function extractItemsFromPacksSync(packs, keys) {\n  const items = [];\n\n  for (const pack of packs) {\n    // window.GAS.log.d('extractItemsFromPacks pack.metadata', pack.metadata);\n\n    // window.GAS.log.d('pack.metadata.name', pack.metadata.name);\n    if (!pack.index) {\n      ui.notifications.error(game.i18n.localize('GAS.Error.PackIndexNotFound'));\n    }\n    let entries = pack.index.entries()\n    // window.GAS.log.d('entries', entries);\n    // @todo if DonationTracker enabled then https://github.com/geoidesic/foundryvtt-actor-studio/issues/32#issuecomment-2166888022\n    entries = filterPackForDTPackItems(pack, entries);\n    // window.GAS.log.d('entries post', entries);\n    let packItems = extractMapIteratorObjectProperties(entries, keys);\n    packItems = packItems.map(item => ({\n      ...item,\n      label: item.label,\n      compoundLabel: `[${pack.metadata.label}] ${item.label}`,\n      packName: pack.metadata.name,\n      packId: pack.metadata.id,\n      packLabel: pack.metadata.label,\n      packType: pack.metadata.type,\n      packPath: pack.metadata.path,\n      packSystem: pack.metadata.system,\n    }));\n    // window.GAS.log.d('packItems', packItems);\n    items.push(...packItems);\n  }\n  return items;\n}\n\n/**\n * Gets a localized string\n * @param {string} string - The string to localize\n * @return {string} The localized string\n */\nexport function localize(string) {\n  if (typeof game === 'undefined') return string; //- avoid lint error\n  return game.i18n.localize(`${MODULE_CODE}.${string}`);\n}\n\n\n/**\n * Extracts items from all compendium packs including subfolders.\n * Use this if you need extra index info (via async)\n * @param {Array} packs compendium packs\n * @param {Array} keys pack data to extract\n * @param {boolean|Array} nonIndexKeys pack data to extract that doesn't exist in the index, thus we need to generate a new index, which is an async process\n * @returns {Array} extracted items\n */\nexport async function extractItemsFromPacksAsync(packs, keys, nonIndexKeys = false) {\n  const items = [];\n  // window.GAS.log.d('extractItemsFromPacks packs', packs);\n  // window.GAS.log.d('nonIndexKeys', nonIndexKeys);\n  for (const pack of packs) {\n\n    let index = await pack.getIndex({\n      fields: nonIndexKeys,\n    });\n\n    if (!pack) continue;\n    if (!index) {\n      ui.notifications.error(game.i18n.localize('GAS.Error.PackIndexNotFound'));\n    }\n\n    // window.GAS.log.d('extractItemsFromPacks pack.metadata', pack.metadata);\n    // window.GAS.log.d('extractItemsFromPacks pack.name', pack.metadata.name);\n    // window.GAS.log.d('extractItemsFromPacks pack', pack);\n    // window.GAS.log.d('extractItemsFromPacks packindex', index);\n    let entries = index.entries()\n    // window.GAS.log.d('extractItemsFromPacks entries', entries);\n    entries = filterPackForDTPackItems(pack, entries);\n    // window.GAS.log.d('extractItemsFromPacks entries post', entries);\n\n    let packItems = extractMapIteratorObjectProperties(entries, [...keys, ...nonIndexKeys]);\n    packItems = packItems.map(item => ({\n      ...item,\n      packName: pack.metadata.name,\n      packId: pack.metadata.id,\n      packLabel: pack.metadata.label,\n      packType: pack.metadata.type,\n      packPath: pack.metadata.path,\n      packSystem: pack.metadata.system,\n    }));\n    // window.GAS.log.d('packItems', packItems)\n    items.push(...packItems);\n  }\n  // window.GAS.log.d('items', items)\n  return items;\n}\n\n/**\n * Extracts properties from a map iterator object\n * @param {MapIterator} mapIterator - The map iterator object\n * @param {Array} keys - The keys to extract\n * @returns {Array} The extracted properties\n */\nexport function extractMapIteratorObjectProperties(mapIterator, keys) {\n  const newArray = [];\n  for (const [key, data] of mapIterator) {\n    const newObj = {};\n    keys.forEach((k) => {\n      if (k.includes('->')) {\n        const split = k.split('->');\n        newObj[split[1]] = data[split[0]];\n      } else if (k.includes('.')) {\n        setNestedProperty(newObj, k, getNestedProperty(data, k))\n      } else {\n        newObj[k] = data[k];\n      }\n    });\n    newObj.key = key;\n    newArray.push(newObj);\n  }\n  return newArray;\n}\n\nexport function getNestedProperty(obj, path) {\n  return path.split('.').reduce((acc, key) => acc && acc[key], obj);\n}\n\nexport function setNestedProperty(obj, path, value) {\n  const keys = path.split('.');\n  const lastKey = keys.pop();\n  const lastObj = keys.reduce((acc, key) => acc[key] = acc[key] || {}, obj);\n  lastObj[lastKey] = value;\n}\n\nexport function getFoldersFromMultiplePacks(packs, depth = 1) {\n  const folders = [];\n  for (const pack of packs) {\n    const packFolders = getPackFolders(pack, depth);\n    folders.push(...packFolders);\n  }\n  return folders;\n}\n\nexport function getPackFolders(pack, depth = 1) {\n  const allRootFolders = extractMapIteratorObjectProperties(pack.folders.entries(), ['depth', 'name', '_id']);\n  const foldersAtDepth = allRootFolders.filter(x => x.depth === depth);\n  return foldersAtDepth\n}\n\nexport const getPacksFromSettings = (type) => {\n  const settings = game.settings.get(MODULE_ID, 'compendiumSources');\n  // Return empty array if settings or type doesn't exist\n  if (!settings || !settings[type]) {\n    return [];\n  }\n\n  let filteredPackNames = settings[type];\n  const packs = [];\n\n  filteredPackNames = filteredPackNames.filter(packName => {\n    const pack = game.packs.get(packName);\n    if (pack) {\n      packs.push(pack);\n      return true;\n    }\n    return false;\n  });\n\n  // Update settings if any packs were removed\n  if (filteredPackNames.length !== settings[type].length) {\n    settings[type] = filteredPackNames;\n    game.settings.set(MODULE_ID, 'compendiumSources', settings);\n  }\n\n  return packs;\n}\n\nexport const getAllPacksFromAllSettings = () => {\n  const settings = game.settings.get(MODULE_ID, 'compendiumSources');\n  const types = Object.keys(settings);\n  const packs = [];\n  for (const type of types) {\n    const filteredPackNames = settings[type];\n    for (const packName of filteredPackNames) {\n      packs.push(game.packs.get(packName));\n    }\n  }\n  return packs;\n}\n\nexport const getAllPackIdsFromAllSettings = () => {\n  const packs = getAllPacksFromAllSettings();\n  // window.GAS.log.d('getAllPackIdsFromAllSettings', packs);\n  return packs.map(p => {\n    return p.collection\n  });\n}\n\nexport function getAdvancementValue(advancement, key) {\n  if (game.version > 12) {\n    return advancement[key] || null;\n  } else {\n    return advancement.configuration?.[key] || null\n  }\n}\n\nexport function ucfirst(str) {\n  if (!str) return str;\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n\nexport function camelCaseToTitleCase(camelCaseStr) {\n  // Split the string at each uppercase letter\n  const words = camelCaseStr.replace(/([A-Z])/g, ' $1').trim();\n\n  // Capitalize the first letter of each word and join them with spaces\n  const titleCaseStr = words.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n\n  return titleCaseStr;\n}\n\nexport const getCompendiumSource = (item) => {\n  // window.GAS.log.d('getCompendiumSource', item);\n  let sourceId;\n  if (game.version < 12) {\n    sourceId = item.flags.core.sourceId;\n  } else {\n    sourceId = item._stats.compendiumSource;\n  }\n  // window.GAS.log.d('sourceId', sourceId);\n  return sourceId;\n}\n\n/**\n * Prepares an item for dropping onto an actor by creating a new Item instance from the provided data.\n * Handles both level-up and initial character creation scenarios differently:\n * - For level-up with multi-class: Uses the direct UUID of the item\n * - For regular level-up: Uses the compendium source of the item\n * - For initial character creation: Creates from the direct UUID\n * \n * @param {Object} options\n * @param {Object} options.itemData - The source item data containing UUID and compendium information\n * @param {boolean} options.isLevelUp - Whether this is being called during level-up\n * @param {boolean} options.isNewMultiClass - Whether this is a multi-class level-up\n * @returns {Promise<Item|undefined>} The prepared Item instance, or undefined if item creation fails\n */\nexport const prepareItemForDrop = async ({ itemData, isLevelUp, isNewMultiClass }) => {\n  // window.GAS.log.d('prepareItemForDrop');\n  // window.GAS.log.d('isLevelUp? ', isLevelUp);\n  // window.GAS.log.d('isNewMultiClass? ', isNewMultiClass);\n  // window.GAS.log.d('itemData', itemData);\n\n  let item\n  if (isLevelUp && itemData.type === 'class') {\n    if (isNewMultiClass) {\n      item = await Item.implementation.fromDropData({ type: 'Item', uuid: itemData.uuid });\n    } else {\n      item = await Item.implementation.fromDropData({ type: 'Item', uuid: getCompendiumSource(itemData) });\n    }\n\n    if (!item) {\n      log.e('Item not found in compendium', itemData._stats.compendiumSource);\n      ui.notifications.error(game.i18n.localize('GAS.Error.ItemNotFoundInCompendium'));\n      return\n    }\n  } else {\n    const dropData = {\n      type: 'Item',\n      uuid: itemData.uuid,\n    }\n    // window.GAS.log.d('dropData', dropData);\n    item = await Item.implementation.fromDropData(dropData);\n    // window.GAS.log.d('item', item);\n  }\n  return item;\n}\n\n//- used by dropItemRegistry\nexport const dropItemOnCharacter = async (actor, item) => {\n  // window.GAS.log.d('dropItemOnCharacter');\n  // window.GAS.log.d('dropItemOnCharacter item', item);\n  // window.GAS.log.d('actor.sheet._onDropItemCreate fn', actor.sheet._onDropItemCreate);\n  \n  // Track the item being dropped by adding it to the actor's flags\n  try {\n    // Create a simplified record of the item with just name and uuid\n    const itemRecord = {\n      name: item.name,\n      uuid: item.uuid\n    };\n    \n    // window.GAS.log.d('[UTILITY] itemRecord', itemRecord);\n    // window.GAS.log.d('[UTILITY] actor', actor);\n    // Get existing items of this type from flags, or initialize empty array\n    const existingItems = actor.getFlag(MODULE_ID, `droppedItems.${item.type}`) || [];\n    \n    // Add the new item to the array\n    const updatedItems = [...existingItems, itemRecord];\n    \n    // Update the flag with the new array\n    await actor.setFlag(MODULE_ID, `droppedItems.${item.type}`, updatedItems);\n    \n    // window.GAS.log.d(`Added ${item.name} to actor's ${item.type} tracking flags`);\n  } catch (error) {\n    window.GAS.log.e('Error updating actor flags for dropped item:', error);\n  }\n  \n  // Proceed with the original drop functionality\n  return await actor.sheet._onDropItemCreate(item);\n}\n\nexport function itemHasAdvancementChoices(item) {\n  // window.GAS.log.d('Advancement check:', {\n  //   itemName: item.name,\n  //   itemType: item.type,\n  //   hasSystemAdvancement: !!item.system?.advancement,\n  //   hasDirectAdvancement: !!item.advancement,\n  //   systemAdvLength: item.system?.advancement?.length,\n  //   directAdvLength: Array.isArray(item.advancement) ? item.advancement.length : 0\n  // });\n\n  let hasAdvancementChoices = false;\n  const advancements = [];\n\n  // Collect advancements from both possible locations\n  if (Array.isArray(item.advancement)) {\n    advancements.push(...item.advancement);\n  }\n  if (Array.isArray(item.system?.advancement)) {\n    advancements.push(...item.system.advancement);\n  }\n\n  if (!advancements.length) {\n    window.GAS.log.i('No advancements found');\n    return false;\n  }\n\n  // Check each advancement for choices\n  for (const adv of advancements) {\n    // window.GAS.log.d('Checking advancement:', {\n    //   type: adv.type,\n    //   hasChoices: !!(adv.choices || adv.configuration?.choices),\n    //   choicesLocation: adv.choices ? 'direct' : adv.configuration?.choices ? 'configuration' : 'none'\n    // });\n\n    if (adv.choices || adv.configuration?.choices) {\n      hasAdvancementChoices = true;\n      break;\n    }\n  }\n\n  return hasAdvancementChoices;\n}\n\nexport const isAdvancementsForLevelInItem = (level, item) => {\n  // where structure is like system.advancement = [{level: 1, ...}]\n  const adv = item?.system?.advancement.find(adv => adv.level === level)\n  if (adv) return true;\n  return false\n}\n\n// truncate string\nexport function truncate(str, n) {\n  return str.length > n ? str.substr(0, n - 1) + \"...\" : str;\n}\n\n/** @todo: these were from HCT. None of these apply to the current version of Actor Studio */\nexport function userHasRightPermissions() {\n  const userRole = game.user.role;\n\n  // create actor (REQUIRED)\n  if (!((game).permissions.ACTOR_CREATE).includes(userRole)) {\n    ui.notifications?.error(game.i18n.localize('GAS.Permissions.NeedCreateActorError'));\n    return false;\n  }\n\n  // create item (optional)\n  // if (!((game).permissions.ITEM_CREATE).includes(userRole)) {\n  //   ui.notifications?.warn(game.i18n.localize('GAS.Permissions.NeedCreateItemWarn'));\n  // }\n\n  // upload files (optional)\n  // if (!((game).permissions.FILES_UPLOAD).includes(userRole)) {\n  //   ui.notifications?.warn(game.i18n.localize('GAS.Permissions.NeedFileUploadWarn'));\n  // }\n\n  // browse files (optional)\n  // if (!((game).permissions.FILES_BROWSE).includes(userRole)) {\n  //   ui.notifications?.warn(game.i18n.localize('GAS.Permissions.NeedFileBrowseWarn'));\n  // }\n  return true;\n}\n\n/**\n * Determines the level at which a class gains its subclass\n * @param {Object} characterClass - The character class object\n * @param {string} MODULE_ID - The module ID constant\n * @returns {number|boolean} The level at which subclass is gained, or false if not found\n */\nexport function getSubclassLevel(characterClass, MODULE_ID) {\n  console.trace();\n  window.GAS.log.d('[getSubclassLevel] characterClass', characterClass)\n  if (!characterClass) {\n    window.GAS.log.d('[getSubclassLevel] characterClass is false')\n    return false;\n  }\n\n  // Check for dnd5e system 3.x flag\n  const subclassFlag = characterClass.getFlag?.(MODULE_ID, \"subclassLevel\");\n  if (subclassFlag) {\n    window.GAS.log.d('[getSubclassLevel] from subclassFlag', subclassFlag)\n    return characterClass.getFlag(MODULE_ID, \"subclassLevel\");\n  }\n\n  // Check for dnd5e system 4.x advancement array\n  window.GAS.log.d('[getSubclassLevel] characterClass.system', characterClass.system.advancement)\n  const subclassLevel = characterClass.system?.advancement\n    ?.find(advancement => advancement.type === \"Subclass\")?.level;\n\n  window.GAS.log.d('[getSubclassLevel] subclassLevel from advancement', subclassLevel)\n  return subclassLevel || false;\n}","<script>\n  import { onMount, getContext } from \"svelte\";\n  import { fade, scale }        from 'svelte/transition';\n  import { ApplicationShell }   from '#runtime/svelte/component/core';\n  import { localize } from \"~/src/helpers/Utility\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n\n  export let elementRoot = void 0;\n  export let version = void 0;\n\n  const application = getContext('#external').application;\n\n  const handleChange = (event) => {\n    game.settings.set(MODULE_ID, 'dontShowWelcome', event.target.checked);\n  }\n\n\n  let draggable = application.reactive.draggable;\n  draggable = true\n\n  $: application.reactive.draggable = draggable;\n  $: dontShowWelcome = game.settings.get(MODULE_ID, 'dontShowWelcome');\n\n  onMount(async () => {\n  });\n  \n</script>\n\n<svelte:options accessors={true}/>\n\n<template lang=\"pug\">\n  ApplicationShell(bind:elementRoot)\n    main\n      .inset\n        .flexrow.justify-flexrow-vertical\n          .flex2\n            img(src=\"modules/foundryvtt-actor-studio/assets/actor-studio-blue.svg\" alt=\"Actor Studio\" style=\"height: 100%; max-height: 50px; border: none; width: auto;\")\n          .flex3\n            p.thanks Thank you for using Actor Studio!\n        h1 {localize(\"Welcome.IntroductionTitle\")}\n        p {localize(\"Welcome.Introduction\")}\n        a(href=\"https://github.com/geoidesic/foundryvtt-actor-studio?tab=readme-ov-file#usage-instructions\") {localize(\"Welcome.UsageTitle\")}\n        p.lighter\n          i.fa-solid.fa-bug.mr-sm\n          | {localize('Welcome.Issues')} <a href=\"https://github.com/geoidesic/foundryvtt-actor-studio/issues\"> {localize('Welcome.IssuesLinkText')} </a>\n        p \n          i.fa-solid.fa-heart.mr-sm(style=\"color: #660000;\")\n          | {localize('Welcome.Support')} <a href='https://github.com/sponsors/geoidesic'> {localize('Welcome.SponsorLinkText')} </a> or <a href='https://https://paypal.me/geoidesic'>PayPal</a>\n        \n        p \n          i.fa-solid.fa-star.mr-sm(style=\"color: #996600;\")\n          | {localize('Welcome.JoinDiscord')} <a href='https://discord.gg/sQgVnSGRUj'> {localize('Welcome.DiscordLinkText')} </a>\n      .flexrow.justify-flexrow-vertical(data-tooltip=\"{localize('Setting.DontShowWelcome.Hint')}\")\n        .flex0\n          input(type=\"checkbox\" on:change=\"{handleChange}\" label=\"{localize('Setting.DontShowWelcome.Name')}\" bind:checked=\"{dontShowWelcome}\") \n        .flex.dont-show\n          span {localize('Setting.DontShowWelcome.Name') }\n    footer\n      div.right.bg-green\n        a(href=\"https://www.aardvark.games\")\n          img.white(src=\"/systems/foundryvtt-final-fantasy/assets/aardvark-logo.webp\" alt=\"Aardvark Game Studios Logo\" height=\"50\" width=\"50\" style=\"fill: white; border: none; width: auto;\")\n      div.left\n        div {localize(\"Title\")} {localize(\"Welcome.CreatedBy\")} \n        //- a(href=\"https://www.round-table.games\") Round Table Games\n        a(href=\"https://www.aardvark.games\") Aardvark Game Studios\n    \n\n</template>\n\n<style lang=\"sass\">\n  @import \"../styles/Mixins.scss\"\n\n  main\n    overflow-y: auto\n    i\n      margin-right: 0.5em\n    .inset\n      @include inset\n  .dont-show\n    font-size: smaller\n\n  p.thanks\n    font-size: 1.2em\n    font-weight: bold\n\n  footer\n    border-top: 8px ridge var(--border-shadow)\n    display: grid\n    grid-template-columns: 2fr 4fr\n    position: fixed\n    bottom: 0\n    align-items: center\n    gap: 1em\n    line-height: 2em\n    left: 0\n    right: 0\n    background-color: #333\n    color: white\n    padding: 1em\n    font-size: 0.8em\n    z-index: 3\n    img\n    a\n      color: white\n      text-decoration: underline\n      &:hover\n        color: #ccc\n\n  \n</style>\n","import { linear }             from 'svelte/easing';\n\nimport { lerp }               from '@typhonjs-fvtt/runtime/math/interpolate';\nimport { isObject }           from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * @template T\n *\n * Provides the ability the save / restore application state for positional and UI state such as minimized status.\n *\n * You can restore a saved state with animation; please see the options of {@link ApplicationState.restore}.\n */\nexport class ApplicationState\n{\n   /** @type {T} */\n   #application;\n\n   /** @type {Map<string, ApplicationStateData>} */\n   #dataSaved = new Map();\n\n   /**\n    * @param {T}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {ApplicationStateData} Passed in object with current application state.\n    */\n   get(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\n         options: Object.assign({}, this.#application?.options),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Saved data set name.\n    *\n    * @returns {ApplicationStateData} The saved data set.\n    */\n   getSave({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - getSave error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Removes and returns any application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {ApplicationStateData} Saved application data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [params.ease=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {ApplicationStateData|Promise<ApplicationStateData>} Saved application data.\n    */\n   restore({ name, remove = false, async = false, animateTo = false, duration = 0.1, ease = linear,\n    interpolate = lerp })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - restore error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         if (async)\n         {\n            return this.set(dataSaved, { async, animateTo, duration, ease, interpolate }).then(() => dataSaved);\n         }\n         else\n         {\n            this.set(dataSaved, { async, animateTo, duration, ease, interpolate });\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - name to index this saved data.\n    *\n    * @param {...*}     [options.extra] - Extra data to add to saved data.\n    *\n    * @returns {ApplicationStateData} Current application data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - save error: 'name' is not a string.`); }\n\n      const data = this.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link AnimationAPI.to} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\n    *\n    * @param {ApplicationStateData}   data - Saved data set name.\n    *\n    * @param {object}            [opts] - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\n    *\n    * @param {Function}          [opts.ease=linear] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {T | Promise<T>} When synchronous the application or Promise when animating resolving with application.\n    */\n   set(data, { async = false, animateTo = false, duration = 0.1, ease = linear, interpolate = lerp } = {})\n   {\n      if (!isObject(data))\n      {\n         throw new TypeError(`ApplicationState - restore error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (!isObject(data?.position))\n      {\n         console.warn(`ApplicationState.set warning: 'data.position' is not an object.`);\n         return application;\n      }\n\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\n      const rendered = application.rendered;\n\n      if (animateTo && !rendered)\n      {\n         console.warn(`ApplicationState.set warning: Application is not rendered and 'animateTo' is true.`);\n         return application;\n      }\n\n      // Update data directly with no store or inline style updates.\n      if (animateTo)  // Animate to saved data.\n      {\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\n         if (data.position.transformOrigin !== application.position.transformOrigin)\n         {\n            application.position.transformOrigin = data.position.transformOrigin;\n         }\n\n         if (isObject(data?.ui))\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n         }\n\n         const promise = application.position.animate.to(data.position,\n          { duration, ease, interpolate }).finished.then((cancelled) =>\n         {\n            if (cancelled) { return application; }\n\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration: 0 });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            return application;\n         });\n\n         // Return a Promise with the application that resolves after animation ends.\n         if (async) { return promise; }\n      }\n      else\n      {\n         if (rendered)\n         {\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (application?.reactive?.minimized && !minimized)\n               {\n                  application.maximize({ animate: false, duration: 0 });\n               }\n               else if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            // Default options is to set data for an immediate update.\n            application.position.set(data.position);\n         }\n         else\n         {\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\n            // Currently, w/ Foundry core Application API it is impossible to initially render an app in the minimized\n            // state.\n\n            let positionData = data.position;\n\n            if (isObject(data.beforeMinimized))\n            {\n               // Take before minimized data.\n               positionData = data.beforeMinimized;\n\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\n               // location.\n               positionData.left = data.position.left;\n               positionData.top = data.position.top;\n            }\n\n            application.position.set(positionData);\n         }\n      }\n\n      return application;\n   }\n}\n\n/**\n * @typedef {object} ApplicationStateData\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/position').TJSPositionDataExtended}   position Application position.\n *\n * @property {object}         beforeMinimized Any application saved position state for #beforeMinimized\n *\n * @property {object}         options Application options.\n *\n * @property {object}         ui Application UI state.\n */\n","/**\n * Provides a mechanism to retrieve and query all mounted Svelte components including the main application shell.\n */\nexport class GetSvelteData\n{\n   /** @type {import('./types').MountedAppShell[] | null[]} */\n   #applicationShellHolder;\n\n   /** @type {import('./types').SvelteData[]} */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\n    *\n    * @param {import('./types').MountedAppShell[] | null[]}  applicationShellHolder - A reference to the\n    *        MountedAppShell array.\n    *\n    * @param {import('./types').SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted {@link MountedAppShell}.\n    *\n    * @returns {import('./types').MountedAppShell | null} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns the indexed Svelte component.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte component.\n    */\n   component(index)\n   {\n      const data = this.#svelteData[index];\n      return data?.component ?? void 0;\n   }\n\n   /**\n    * Returns the Svelte component entries iterator.\n    *\n    * @returns {IterableIterator<[number, import('svelte').SvelteComponent]>} Svelte component entries iterator.\n    * @yields\n    */\n   *componentEntries()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield [cntr, this.#svelteData[cntr].component];\n      }\n   }\n\n   /**\n    * Returns the Svelte component values iterator.\n    *\n    * @returns {IterableIterator<import('svelte').SvelteComponent>} Svelte component values iterator.\n    * @yields\n    */\n   *componentValues()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield this.#svelteData[cntr].component;\n      }\n   }\n\n   /**\n    * Returns the indexed SvelteData entry.\n    *\n    * @param {number}   index - The index of SvelteData instance to retrieve.\n    *\n    * @returns {import('./types').SvelteData} The loaded Svelte config + component.\n    */\n   data(index)\n   {\n      return this.#svelteData[index];\n   }\n\n   /**\n    * Returns the {@link SvelteData} instance for a given component.\n    *\n    * @param {import('svelte').SvelteComponent} component - Svelte component.\n    *\n    * @returns {import('./types').SvelteData} -  The loaded Svelte config + component.\n    */\n   dataByComponent(component)\n   {\n      for (const data of this.#svelteData)\n      {\n         if (data.component === component) { return data; }\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Returns the SvelteData entries iterator.\n    *\n    * @returns {IterableIterator<[number, import('./types').SvelteData]>} SvelteData entries iterator.\n    */\n   dataEntries()\n   {\n      return this.#svelteData.entries();\n   }\n\n   /**\n    * Returns the SvelteData values iterator.\n    *\n    * @returns {IterableIterator<import('./types').SvelteData>} SvelteData values iterator.\n    */\n   dataValues()\n   {\n      return this.#svelteData.values();\n   }\n\n   /**\n    * Returns the length of the mounted Svelte component list.\n    *\n    * @returns {number} Length of mounted Svelte component list.\n    */\n   get length()\n   {\n      return this.#svelteData.length;\n   }\n}\n","import { writable, get } from 'svelte/store';\n\n/**\n * Generates derived, readable, writable helper functions wrapping the given Storage API provided with any additional\n * customization for data serialization. By default, JSON serialization is used.\n *\n * @param {object}   opts - Generator options.\n *\n * @param {Storage}  storage - The web storage source.\n *\n * @param {(value: any, ...rest: any[]) => string}  [opts.serialize] - Replace with custom serialization;\n *        default: `JSON.stringify`.\n *\n * @param {(value: string, ...rest: any[]) => any}  [opts.deserialize] - Replace with custom deserialization;\n *        default: `JSON.parse`.\n *\n * @returns {StorageStores} A complete set of store helper functions and associated storage API instance and\n *          serialization strategy.\n */\nfunction storeGenerator({ storage, serialize = JSON.stringify, deserialize = JSON.parse }) {\n    function isSimpleDeriver(deriver) {\n        return deriver.length < 2;\n    }\n    function storageReadable(key, value, start) {\n        return {\n            subscribe: storageWritable(key, value, start).subscribe\n        };\n    }\n    function storageWritable(key, value, start) {\n        function wrap_start(ogSet) {\n            return start(function wrap_set(new_value) {\n                if (storage) {\n                    storage.setItem(key, serialize(new_value));\n                }\n                return ogSet(new_value);\n            }, function wrap_update(fn) {\n                set(fn(get(ogStore)));\n            });\n        }\n        if (storage) {\n            const storageValue = storage.getItem(key);\n            try {\n                if (storageValue) {\n                    value = deserialize(storageValue);\n                }\n            }\n            catch (err) { /**/ }\n            storage.setItem(key, serialize(value));\n        }\n        const ogStore = writable(value, start ? wrap_start : void 0);\n        function set(new_value) {\n            if (storage) {\n                storage.setItem(key, serialize(new_value));\n            }\n            ogStore.set(new_value);\n        }\n        function update(fn) {\n            set(fn(get(ogStore)));\n        }\n        function subscribe(run, invalidate) {\n            return ogStore.subscribe(run, invalidate);\n        }\n        return { set, update, subscribe };\n    }\n    function storageDerived(key, stores, fn, initial_value) {\n        const single = !Array.isArray(stores);\n        const stores_array = single ? [stores] : stores;\n        if (storage && storage.getItem(key)) {\n            try {\n                initial_value = deserialize(storage.getItem(key));\n            }\n            catch (err) { /**/ }\n        }\n        return storageReadable(key, initial_value, (set, update) => {\n            let inited = false;\n            const values = [];\n            let pending = 0;\n            let cleanup;\n            const sync = () => {\n                if (pending) {\n                    return;\n                }\n                cleanup?.();\n                const input = single ? values[0] : values;\n                if (isSimpleDeriver(fn)) {\n                    set(fn(input));\n                }\n                else {\n                    const result = fn(input, set, update);\n                    if (typeof result === 'function') {\n                        cleanup = result;\n                    }\n                }\n            };\n            const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n                values[i] = value;\n                pending &= ~(1 << i);\n                if (inited) {\n                    sync();\n                }\n            }, () => { pending |= (1 << i); }));\n            inited = true;\n            sync();\n            return function stop() {\n                // Equivalent to run_all from Svelte internals.\n                unsubscribers.forEach((unsubscriber) => unsubscriber());\n                cleanup?.();\n            };\n        });\n    }\n    return {\n        readable: storageReadable,\n        writable: storageWritable,\n        derived: storageDerived,\n        storage,\n        serialize,\n        deserialize\n    };\n}\n\n/**\n * Provides all Storage API enabled `localStorage` store helper functions. Data is serialized as JSON.\n */\nconst localStores = storeGenerator({ storage: globalThis?.localStorage });\n/**\n * Provides the Storage API enabled derived `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.derived;\n/**\n * Provides the Storage API enabled readable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.readable;\n/**\n * Provides the Storage API enabled writable `localStorage` store helper function. Data is serialized as JSON.\n */\nlocalStores.writable;\n\n/**\n * Provides all Storage API enabled `sessionStorage` store helper functions. Data is serialized as JSON.\n */\nconst sessionStores = storeGenerator({ storage: globalThis?.sessionStorage });\n/**\n * Provides the Storage API enabled derived `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.derived;\n/**\n * Provides the Storage API enabled readable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.readable;\n/**\n * Provides the Storage API enabled writable `sessionStorage` store helper function. Data is serialized as JSON.\n */\nsessionStores.writable;\n\n/**\n * Provides the base Storage API store manager. It is recommended to use {@link TJSLocalStorage} &\n * {@link TJSSessionStorage} for standard browser local and session storage use cases. TJSWebStorage exists\n * to provide additional customization options for custom Storage API compatible storage instances and custom\n * serialization configuration.\n */\nclass TJSWebStorage\n{\n   /** @type {import('./').StorageStores} */\n   #storageStores;\n\n   /**\n    * @type {(Map<string, {\n    *    store: import('svelte/store').Writable,\n    *    deserialize?: (value: string, ...rest: any[]) => any,\n    *    serialize?: (value: any, ...rest: any[]) => string\n    * }>)}\n    */\n   #stores = new Map();\n\n   /**\n    * @param {import('./').StorageStores} storageStores - Provides a complete set of\n    *        storage API store helper functions and the associated storage API instance and serializations strategy.\n    */\n   constructor(storageStores)\n   {\n      this.#storageStores = storageStores;\n   }\n\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: string, ...rest: any[]) => any} Deserialize function.\n    */\n   #getDeserialize(key)\n   {\n      return this.#stores.get(key)?.deserialize ?? this.#storageStores.deserialize;\n   }\n\n\n   /**\n    * @param {string}   key - Storage key.\n    *\n    * @returns {(value: any, ...rest: any[]) => string} Serialize function.\n    */\n   #getSerialize(key)\n   {\n      return this.#stores.get(key)?.serialize ?? this.#storageStores.serialize;\n   }\n\n   /**\n    * Creates a new store for the given key.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The new store.\n    */\n   #createStore(key, defaultValue = void 0, storageStores)\n   {\n      try\n      {\n         const value = this.#storageStores.storage.getItem(key);\n         if (value !== null)\n         {\n            const deserialize = storageStores?.deserialize ?? this.#storageStores.deserialize;\n            defaultValue = deserialize(value);\n         }\n      }\n      catch (err) { /**/ }\n\n      const writable = storageStores?.writable ?? this.#storageStores.writable;\n\n      return writable(key, defaultValue);\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key and a given default value.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {T}        [defaultValue] - A default value to set for the store.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The store for the given key.\n    */\n   #getStore(key, defaultValue = void 0, storageStores)\n   {\n      const storeEntry = this.#stores.get(key);\n      if (storeEntry) { return storeEntry.store; }\n\n      const store = this.#createStore(key, defaultValue, storageStores);\n\n      // Set any key specific storage helper details.\n      this.#stores.set(key, {\n         store,\n         deserialize: storageStores?.deserialize,\n         serialize: storageStores?.serialize\n      });\n\n      return store;\n   }\n\n   /**\n    * Get value from the storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {*} Value from session storage or if not defined any default value provided.\n    */\n   getItem(key, defaultValue)\n   {\n      let value = defaultValue;\n\n      const storageValue = this.#storageStores.storage.getItem(key);\n\n      if (storageValue !== null)\n      {\n         try\n         {\n            value = this.#getDeserialize(key)(storageValue);\n         }\n         catch (err)\n         {\n            value = defaultValue;\n         }\n      }\n      else if (defaultValue !== void 0)\n      {\n         try\n         {\n            const newValue = this.#getSerialize(key)(defaultValue);\n\n            // If there is no existing storage value and defaultValue is defined the storage value needs to be set.\n            this.#storageStores.storage.setItem(key, newValue);\n         }\n         catch (err) { /* */ }\n      }\n\n      return value;\n   }\n\n   /**\n    * Returns the backing Svelte store for the given key; potentially sets a default value if the key\n    * is not already set.\n    *\n    * @template T\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {T}        [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @param {import('./').StorageStores} [storageStores] - Additional store creation options.\n    *\n    * @returns {import('svelte/store').Writable<T>} The Svelte store for this key.\n    */\n   getStore(key, defaultValue, storageStores)\n   {\n      return this.#getStore(key, defaultValue, storageStores);\n   }\n\n   /**\n    * Sets the value for the given key in storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {*}        value - A value to set for this key.\n    */\n   setItem(key, value)\n   {\n      const store = this.#getStore(key);\n      store.set(value);\n   }\n\n   /**\n    * Convenience method to swap a boolean value stored in storage API.\n    *\n    * @param {string}   key - Key to lookup in storage API.\n    *\n    * @param {boolean}  [defaultValue] - A default value to return if key not present in session storage.\n    *\n    * @returns {boolean} The boolean swap for the given key.\n    */\n   swapItemBoolean(key, defaultValue)\n   {\n      const store = this.#getStore(key, defaultValue);\n\n      let currentValue = false;\n\n      try\n      {\n         currentValue = !!this.#getDeserialize(key)(this.#storageStores.storage.getItem(key));\n      }\n      catch (err) { /**/ }\n\n      const newValue = typeof currentValue === 'boolean' ? !currentValue : false;\n\n      store.set(newValue);\n      return newValue;\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser local storage use cases.\n */\nclass TJSLocalStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(localStores);\n   }\n}\n\n/**\n * Provides a {@link TJSWebStorage} instance for standard browser session storage use cases.\n */\nclass TJSSessionStorage extends TJSWebStorage\n{\n   constructor()\n   {\n      super(sessionStores);\n   }\n}\n\nexport { TJSLocalStorage, TJSSessionStorage, TJSWebStorage, localStores, sessionStores, storeGenerator };\n//# sourceMappingURL=index.js.map\n","import { derived, writable }     from 'svelte/store';\n\nimport {\n   TJSSessionStorage,\n   TJSWebStorage }               from '@typhonjs-fvtt/runtime/svelte/store/web-storage';\n\nimport { propertyStore }         from '@typhonjs-fvtt/runtime/svelte/store/writable-derived';\n\nimport {\n   deepMerge,\n   safeAccess,\n   safeSet }                     from '@typhonjs-fvtt/runtime/util/object';\n\nimport { subscribeIgnoreFirst }  from '@typhonjs-fvtt/runtime/util/store';\n\n/**\n * Contains the reactive functionality / Svelte stores associated with SvelteApplication and retrievable by\n * {@link SvelteApplication.reactive}.\n *\n * There are several reactive getters for UI state such and for two-way bindings / stores see\n * {@link SvelteReactive.storeUIState}:\n * - {@link SvelteReactive.dragging}\n * - {@link SvelteReactive.minimized}\n * - {@link SvelteReactive.resizing}\n *\n * There are also reactive getters / setters for {@link SvelteApplicationOptions} and Foundry\n * {@link ApplicationOptions}. You can use the following as one way bindings and update the associated stores. For\n * two-way bindings / stores see {@link SvelteReactive.storeAppOptions}.\n *\n * - {@link SvelteReactive.draggable}\n * - {@link SvelteReactive.focusAuto}\n * - {@link SvelteReactive.focusKeep}\n * - {@link SvelteReactive.focusTrap}\n * - {@link SvelteReactive.headerButtonNoClose}\n * - {@link SvelteReactive.headerButtonNoLabel}\n * - {@link SvelteReactive.headerIcon}\n * - {@link SvelteReactive.headerNoTitleMinimized}\n * - {@link SvelteReactive.minimizable}\n * - {@link SvelteReactive.popOut}\n * - {@link SvelteReactive.positionable}\n * - {@link SvelteReactive.resizable}\n * - {@link SvelteReactive.title}\n *\n * An instance of TJSWebStorage (session) / TJSSessionStorage is accessible via {@link SvelteReactive.sessionStorage}.\n * Optionally you can pass in an existing TJSWebStorage instance that can be shared across multiple SvelteApplications\n * by setting {@link SvelteApplicationOptions.sessionStorage}.\n *\n * -------------------------------------------------------------------------------------------------------------------\n *\n * This API is not sealed, and it is recommended that you extend it with accessors to get / set data that is reactive\n * in your application. An example of setting an exported prop `document` from the main mounted application shell.\n *\n * @example\n * import { hasSetter } from '@typhonjs-fvtt/runtime/svelte/util';\n *\n * // Note: make a normal comment.\n * //  * @member {object} document - Adds accessors to SvelteReactive to get / set the document associated with\n * //  *                             Document with the mounted application shell Svelte component.\n * //  *\n * //  * @memberof SvelteReactive#\n * //  *\n * Object.defineProperty(this.reactive, 'document', {\n *    get: () => this.svelte?.applicationShell?.document,\n *    set: (document) =>\n *    {\n *       const component = this.svelte?.applicationShell;\n *       if (hasSetter(component, 'document')) { component.document = document; }\n *    }\n * });\n */\nexport class SvelteReactive\n{\n   /**\n    * @type {import('../SvelteApplication').SvelteApplication}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /** @type {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').TJSWebStorage} */\n   #sessionStorage;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {import('../SvelteApplication').SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n      const optionsSessionStorage = application?.options?.sessionStorage;\n\n      if (optionsSessionStorage !== void 0 && !(optionsSessionStorage instanceof TJSWebStorage))\n      {\n         throw new TypeError(`'options.sessionStorage' is not an instance of TJSWebStorage.`);\n      }\n\n      // If no external web storage API instance is available then create a TJSSessionStorage instance.\n      this.#sessionStorage = optionsSessionStorage !== void 0 ? optionsSessionStorage : new TJSSessionStorage();\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {SvelteReactiveStores | undefined} Internal methods to interact with Svelte stores.\n    * @package\n    * @internal\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiStateUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Store getters -----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').TJSWebStorage} Returns TJSWebStorage (session) instance.\n    */\n   get sessionStorage()\n   {\n      return this.#sessionStorage;\n   }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {import('./types').StoreAppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {import('./types').StoreUIOptions} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the focusAuto app option.\n    *\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto() { return this.#application?.options?.focusAuto; }\n\n   /**\n    * Returns the focusKeep app option.\n    *\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep() { return this.#application?.options?.focusKeep; }\n\n   /**\n    * Returns the focusTrap app option.\n    *\n    * @returns {boolean} When true focus trapping / wrapping is enabled keeping focus inside app.\n    */\n   get focusTrap() { return this.#application?.options?.focusTrap; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the headerIcon app option.\n    *\n    * @returns {string|void} URL for header app icon.\n    */\n   get headerIcon() { return this.#application?.options?.headerIcon; }\n\n   /**\n    * Returns the headerNoTitleMinimized app option.\n    *\n    * @returns {boolean} When true removes the header title when minimized.\n    */\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * Returns the Foundry popOut state; {@link Application.popOut}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the positionable app option; {@link SvelteApplicationOptions.positionable}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get positionable() { return this.#application?.options?.positionable; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the title accessor from the parent Application class; {@link Application.title}\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.focusAuto` which is reactive for application shells.\n    *\n    * @param {boolean}  focusAuto - Sets the focusAuto option.\n    */\n   set focusAuto(focusAuto)\n   {\n      if (typeof focusAuto === 'boolean') { this.setOptions('focusAuto', focusAuto); }\n   }\n\n   /**\n    * Sets `this.options.focusKeep` which is reactive for application shells.\n    *\n    * @param {boolean}  focusKeep - Sets the focusKeep option.\n    */\n   set focusKeep(focusKeep)\n   {\n      if (typeof focusKeep === 'boolean') { this.setOptions('focusKeep', focusKeep); }\n   }\n\n   /**\n    * Sets `this.options.focusTrap` which is reactive for application shells.\n    *\n    * @param {boolean}  focusTrap - Sets the focusTrap option.\n    */\n   set focusTrap(focusTrap)\n   {\n      if (typeof focusTrap === 'boolean') { this.setOptions('focusTrap', focusTrap); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.headerIcon` which is reactive for application shells.\n    *\n    * @param {string | undefined}  headerIcon - Sets the headerButtonNoLabel option.\n    */\n   set headerIcon(headerIcon)\n   {\n      if (headerIcon === void 0 || typeof headerIcon === 'string') { this.setOptions('headerIcon', headerIcon); }\n   }\n\n   /**\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\n    *\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\n    */\n   set headerNoTitleMinimized(headerNoTitleMinimized)\n   {\n      if (typeof headerNoTitleMinimized === 'boolean')\n      {\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\n      }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.positionable` enabling / disabling {@link SvelteApplication.position}.\n    *\n    * @param {boolean}  positionable - Sets the positionable option.\n    */\n   set positionable(positionable)\n   {\n      if (typeof positionable === 'boolean') { this.setOptions('positionable', positionable); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * Note: Will set empty string if title is undefined or null.\n    *\n    * @param {string | undefined | null}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string')\n      {\n         this.setOptions('title', title);\n      }\n      else if (title === void 0 || title === null)\n      {\n         this.setOptions('title', '');\n      }\n   }\n\n   // Reactive Options API -------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * `storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {import('./types').StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         focusAuto: propertyStore(writableAppOptions, 'focusAuto'),\n         focusKeep: propertyStore(writableAppOptions, 'focusKeep'),\n         focusTrap: propertyStore(writableAppOptions, 'focusTrap'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         headerIcon: propertyStore(writableAppOptions, 'headerIcon'),\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         positionable: propertyStore(writableAppOptions, 'positionable'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {import('./types').StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    *\n    * @see SvelteApplication._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // Handles updating header buttons to add / remove button labels.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\n      }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            globalThis.ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete globalThis.ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApplication.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the SvelteApplication app options {@link SvelteApplicationOptions.headerButtonNoClose}\n    * to remove the close button and {@link SvelteApplicationOptions.headerButtonNoLabel} to true and labels will be\n    * removed from the header buttons.\n    *\n    * @param {object} [opts] - Optional parameters (for internal use)\n    *\n    * @param {boolean} [opts.headerButtonNoClose] - The value for `headerButtonNoClose`.\n    *\n    * @param {boolean} [opts.headerButtonNoLabel] - The value for `headerButtonNoLabel`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n}\n\n/**\n * @typedef {object} SvelteReactiveStores\n *\n * @property {(this: void, updater: import('svelte/store').Updater<object>) => void} appOptionsUpdate Update function\n * for app options store.\n *\n * @property {Function} subscribe Subscribes to local stores.\n *\n * @property {(this: void, updater: import('svelte/store').Updater<object>) => void} uiStateUpdate Update function\n * for UI state stores.\n *\n * @property {Function} unsubscribe Unsubscribes from local stores.\n */\n","/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\nexport { applicationShellContract };\n","import { applicationShellContract } from './applicationShellContract.js';\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nexport function isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n","import { parseTJSSvelteConfig }  from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { isApplicationShell }    from './isApplicationShell.js';\n\nimport { isObject }              from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {object}            [opts] - Optional parameters.\n *\n * @param {object}            [opts.app] - The target application\n *\n * @param {HTMLElement}       [opts.template] - Any HTML template.\n *\n * @param {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig}  [opts.config] - Svelte component options\n *\n * @param {Function}          [opts.elementRootUpdate] - A callback to assign to the external context.\n *\n * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteData} The config + instantiated Svelte component.\n */\nexport function loadSvelteConfig({ app, template, config, elementRootUpdate } = {})\n{\n   const svelteOptions = isObject(config.options) ? config.options : {};\n\n   let target;\n\n   // A specific HTMLElement to append Svelte component.\n   if (config.target instanceof HTMLElement)\n   {\n      target = config.target;\n   }\n   // A string target defines a selector to find in existing HTML.\n   else if (template instanceof HTMLElement && typeof config.target === 'string')\n   {\n      target = template.querySelector(config.target);\n   }\n   else                                            // No target defined, create a document fragment.\n   {\n      target = document.createDocumentFragment();\n   }\n\n   if (target === void 0)\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - could not find target selector, '${config.target}', for config:\\n`,\n       'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = parseTJSSvelteConfig({ ...config, target }, app);\n\n   const externalContext = svelteConfig.context.get('#external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n   externalContext.sessionStorage = app.reactive.sessionStorage;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (isObject(app._eventbus) && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Seal external context so that it can't be extended.\n   Object.seal(externalContext);\n\n   // TODO: Remove deprecation warning in the future -----------------------------------------------------------------\n\n   svelteConfig.context.set('external', new Proxy({}, {\n      get(targetUnused, prop)\n      {\n         console.warn(`[TRL] Deprecation warning: Please change getContext('external') to getContext('#external').`);\n         return externalContext[prop];\n      }\n   }));\n\n   // TODO: Remove deprecation warning in the future -----------------------------------------------------------------\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   // Detect if target is a synthesized DocumentFragment with a child element. Child elements will be present\n   // if the Svelte component mounts and renders initial content into the document fragment.\n   if (target instanceof DocumentFragment && target.firstElementChild)\n   {\n      if (element === void 0) { element = target.firstElementChild; }\n      template.append(target);\n   }\n   else if (config.target instanceof HTMLElement && element === void 0)\n   {\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with no 'selectorElement' defined.\\n` +\n          `\\nNote: If configuring an application shell and directly targeting a HTMLElement did you bind an` +\n          `'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\n          `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\n      element = target.querySelector(svelteOptions.selectorElement);\n\n      if (element === null || element === void 0)\n      {\n         console.log(\n          `%c[TRL] loadSvelteConfig error - HTMLElement target with 'selectorElement', '${\n           svelteOptions.selectorElement}', not found for config:\\n`,\n          'background: rgb(57,34,34)', config);\n\n         throw new Error();\n      }\n   }\n\n   // If the configuration / original target is an HTML element then do not inject HTML.\n   const injectHTML = !(config.target instanceof HTMLElement);\n\n   return { config: svelteConfig, component, element, injectHTML };\n}\n","/**\n * Provides an index of all visible rendered {@link SvelteApplication} instances in a given Svelte runtime. This allows\n * bulk operations to be performed across all apps.\n */\nexport class TJSAppIndex\n{\n   /**\n    * Stores all visible / rendered apps.\n    *\n    * @type {Map<string, import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication>}\n    */\n   static #visibleApps = new Map();\n\n   /**\n    * Adds a SvelteApplication to all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} app - A SvelteApplication\n    *\n    * @package\n    */\n   static add(app)\n   {\n      this.#visibleApps.set(app.id, app);\n   }\n\n   /**\n    * Removes a SvelteApplication from all visible apps tracked.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} app - A SvelteApplication\n    *\n    * @package\n    */\n   static delete(app)\n   {\n      this.#visibleApps.delete(app.id);\n   }\n\n   /**\n    * Gets a particular app by ID.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication} Associated app.\n    */\n   static get(key)\n   {\n      return this.#visibleApps.get(key);\n   }\n\n   /**\n    * Returns whether an associated app by ID is being tracked.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {boolean} The given App ID is visible.\n    */\n   static has(key)\n   {\n      return this.#visibleApps.has(key);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} All visible app IDs.\n    */\n   static keys()\n   {\n      return this.#visibleApps.keys();\n   }\n\n   /**\n    * @returns {IterableIterator<import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplication>} All visible apps.\n    */\n   static values()\n   {\n      return this.#visibleApps.values();\n   }\n}\n","import { TJSPosition }  from '@typhonjs-fvtt/runtime/svelte/store/position';\n\nimport {\n   isHMRProxy,\n   outroAndDestroy }    from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { A11yHelper }   from '@typhonjs-fvtt/runtime/util/browser';\n\nimport {\n   deepMerge,\n   hasGetter,\n   isIterable,\n   isObject }           from '@typhonjs-fvtt/runtime/util/object';\n\nimport {\n   ApplicationState,\n   GetSvelteData,\n   loadSvelteConfig,\n   isApplicationShell,\n   SvelteReactive,\n   TJSAppIndex }        from './internal/index.js';\n\n/**\n * Provides a Svelte aware extension to the Foundry {@link Application} class to manage the app lifecycle\n * appropriately. You can declaratively load one or more components from `defaultOptions` using a\n * {@link TJSSvelteConfig} object in the SvelteApplicationOptions `options` {@link SvelteApplicationOptions.svelte}\n * property.\n */\nexport class SvelteApplication extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {import('./internal/state-svelte/types').MountedAppShell[]|null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {ApplicationState<SvelteApplication>}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {TJSPosition}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {import('./internal/state-svelte/types').SvelteData[]}\n    */\n   #svelteData = [];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * #svelteData.\n    *\n    * @type {GetSvelteData}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {import('./internal/state-reactive/SvelteReactive').SvelteReactiveStores}\n    */\n   #stores;\n\n   /**\n    * @param {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplicationOptions} options - The options for the application.\n    *\n    * @inheritDoc\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      /** @type {ApplicationState<SvelteApplication>} */\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize TJSPosition with the position object set by Application.\n      this.#position = new TJSPosition(this, {\n         ...this.position,\n         ...this.options,\n         initial: this.options.positionInitial,\n         ortho: this.options.positionOrtho,\n         validator: this.options.positionValidator\n      });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve TJSPosition by `this.position`.\n       *\n       * @member {TJSPosition} position - Adds accessors to SvelteApplication to get / set the position data.\n       *\n       * @memberof SvelteApplication#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (isObject(position)) { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApplication supports.\n    *\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/application').SvelteApplicationOptions} options - Application options.\n    * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n    *\n    * @internal\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\n         draggable: true,                 // If true then application shells are draggable.\n         focusAuto: true,                 // When true auto-management of app focus is enabled.\n         focusKeep: false,                // When `focusAuto` and `focusKeep` is true; keeps internal focus.\n         focusSource: void 0,             // Stores any A11yFocusSource data that is applied when app is closed.\n         focusTrap: true,                 // When true focus trapping / wrapping is enabled keeping focus inside app.\n         headerButtonNoClose: false,      // If true then the close header button is removed.\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\n         headerIcon: void 0,              // Sets a header icon given an image URL.\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\n         minHeight: MIN_WINDOW_HEIGHT,    // Assigned to position. Number specifying minimum window height.\n         minWidth: MIN_WINDOW_WIDTH,      // Assigned to position. Number specifying minimum window width.\n         positionable: true,              // If false then `position.set` does not take effect.\n         positionInitial: TJSPosition.Initial.browserCentered,      // A helper for initial position placement.\n         positionOrtho: true,             // When true TJSPosition is optimized for orthographic use.\n         positionValidator: TJSPosition.Validators.transformWindow, // A function providing the default validator.\n         sessionStorage: void 0,          // An instance of TJSWebStorage (session) to share across SvelteApplications.\n         svelte: void 0,                  // A Svelte configuration object.\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApplication.\n    *\n    * @returns {import('./internal/state-reactive/types').SvelteReactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {import('./internal/state-app/types').ApplicationState<SvelteApplication>} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\n    *\n    * @returns {import('./internal/state-svelte/types').GetSvelteData} GetSvelteData\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html :\n       [this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core. This is important / used for instance in dialog key handling for left / right button selection.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\n    *\n    * @ignore\n    * @internal\n    */\n   bringToTop({ force = false } = {})\n   {\n      if (force || this.popOut) { super.bringToTop(); }\n\n      // If the activeElement is not `document.body` and not contained in this app via elementTarget then blur the\n      // current active element and make `document.body`focused. This allows <esc> key to close all open apps / windows.\n      if (document.activeElement !== document.body && !this.elementTarget.contains(document.activeElement))\n      {\n         // Blur current active element.\n         if (document.activeElement instanceof HTMLElement) { document.activeElement.blur(); }\n\n         // Make document body focused.\n         document.body.focus();\n      }\n\n      globalThis.ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    *\n    * @ignore\n    * @internal\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSING;\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el) { return this._state = states.CLOSED; }\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * Note: JQuery wrapping as Foundry event arguments uses JQuery.\n          */\n         Hooks.call(`close${cls.name}`, this, $(el));\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (isObject(eventbus) && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.all(svelteDestroyPromises);\n\n      // Remove from all visible apps tracked.\n      TJSAppIndex.delete(this);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData.length = 0;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.state.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n\n      delete globalThis.ui.windows[this.appId];\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._minimized = false;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._scrollPositions = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store state.\n      this.#stores.uiStateUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n\n      // Apply any stored focus options and then remove them from options.\n      A11yHelper.applyFocusSource(this.options.focusSource);\n\n      delete this.options.focusSource;\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _injectHTML(html)\n   {\n      if (this.popOut && html.length === 0 && isIterable(this.options.svelte))\n      {\n         throw new Error(\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\n      }\n\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only trigged on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      if (isIterable(this.options.svelte))\n      {\n         for (const svelteConfig of this.options.svelte)\n         {\n            const svelteData = loadSvelteConfig({\n               app: this,\n               template: html[0],\n               config: svelteConfig,\n               elementRootUpdate\n            });\n\n            if (isApplicationShell(svelteData.component))\n            {\n               if (this.svelte.applicationShell !== null)\n               {\n                  throw new Error(\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                    ${JSON.stringify(svelteConfig)}`);\n               }\n\n               this.#applicationShellHolder[0] = svelteData.component;\n\n               // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n               // refreshes. Update the element root accordingly and force an update to TJSPosition.\n               // See this issue for info about `on_hmr`:\n               // https://github.com/sveltejs/svelte-hmr/issues/57\n               if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n               {\n                  svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n               }\n            }\n\n            this.#svelteData.push(svelteData);\n         }\n      }\n      else if (isObject(this.options.svelte))\n      {\n         const svelteData = loadSvelteConfig({\n            app: this,\n            template: html[0],\n            config: this.options.svelte,\n            elementRootUpdate\n         });\n\n         if (isApplicationShell(svelteData.component))\n         {\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\n            if (this.svelte.applicationShell !== null)\n            {\n               throw new Error(\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                 ${JSON.stringify(this.options.svelte)}`);\n            }\n\n            this.#applicationShellHolder[0] = svelteData.component;\n\n            // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n            // refreshes. Update the element root accordingly and force an update to TJSPosition.\n            // See this issue for info about `on_hmr`:\n            // https://github.com/sveltejs/svelte-hmr/issues/57\n            if (isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n            {\n               svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n            }\n         }\n\n         this.#svelteData.push(svelteData);\n      }\n\n      // Detect if this is a synthesized DocumentFragment.\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\n\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\n      let injectHTML = true;\n      for (const svelteData of this.#svelteData)\n      {\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\n      }\n      if (injectHTML) { super._injectHTML(html); }\n\n      if (this.svelte.applicationShell !== null)\n      {\n         this._element = $(this.svelte.applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(this.svelte.applicationShell, 'elementContent') ?\n          this.svelte.applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(this.svelte.applicationShell, 'elementTarget') ?\n          this.svelte.applicationShell.elementTarget : null;\n      }\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\n      {\n         for (const svelteData of this.#svelteData)\n         {\n            if (svelteData.element instanceof HTMLElement)\n            {\n               this._element = $(svelteData.element);\n               break;\n            }\n         }\n      }\n\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\n      // main element.\n      if (this.#elementTarget === null)\n      {\n         this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n          this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n      }\n\n      if (this.#elementTarget === null || this.#elementTarget === void 0)\n      {\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\n      }\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async maximize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.state.restore({\n            name: '#beforeMinimized',\n            async: true,\n            animateTo: true,\n            properties: ['width'],\n            duration: 0.1\n         });\n      }\n\n      element.classList.remove('minimized');\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.state.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\n\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\n      this.position.set({\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\n      });\n\n      // Remove inline styles that override any styles assigned to the app.\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      this._minimized = false;\n\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() =>\n      {\n         content.style.overflow = null;\n\n         // Reset all children of content removing overflow hidden.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = null;\n         }\n      }, 50);\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: false }));\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async minimize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Save current max / min height & width.\n      const beforeMinWidth = this.position.minWidth;\n      const beforeMinHeight = this.position.minHeight;\n\n      // Set minimized min width & height for header bar.\n      this.position.set({ minWidth: 100, minHeight: 30 });\n\n      // Also set inline styles to override any styles scoped to the app.\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', durationMS);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\n\n      // Set the initial before min width & height.\n      saved.minWidth = beforeMinWidth;\n      saved.minHeight = beforeMinHeight;\n\n      const headerOffsetHeight = header.offsetHeight;\n\n      // minHeight needs to be adjusted to header height.\n      this.position.minHeight = headerOffsetHeight;\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n\n         if (className.includes('window-title') || className.includes('close')) { continue; }\n\n         // v10+ of Foundry core styles automatically hides anything besides the window title and close button, so\n         // explicitly set display to block.\n         if (className.includes('keep-minimized'))\n         {\n            header.children[cntr].style.display = 'block';\n            continue;\n         }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    *\n    * @param {import('./internal/state-svelte/types').MountedAppShell} [mountedAppShell] - The mounted app shell\n    *        elements.\n    */\n   onSvelteMount(mountedAppShell) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\n    * context.\n    *\n    * @param {import('./internal/state-svelte/types').MountedAppShell} [mountedAppShell] - The mounted app shell\n    *        elements.\n    */\n   onSvelteRemount(mountedAppShell) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApplication has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link TJSPosition.set}.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _render(force = false, options = {})\n   {\n      // Store any focusSource instance.\n      if (isObject(options?.focusSource)) { this.options.focusSource = options.focusSource; }\n\n      if (this._state === Application.RENDER_STATES.NONE &&\n       document.querySelector(`#${this.id}`) instanceof HTMLElement)\n      {\n         console.warn(`SvelteApplication - _render: A DOM element already exists for CSS ID '${this.id\n         }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      await super._render(force, options);\n\n      // Handle the same render exclusion tests that reject a render in Application.\n\n      // Do not render under certain conditions.\n      if ([Application.RENDER_STATES.CLOSING, Application.RENDER_STATES.RENDERING].includes(this._state)) { return; }\n\n      // Applications which are not currently rendered must be forced.\n      if (!force && (this._state <= Application.RENDER_STATES.NONE)) { return; }\n\n      // It is necessary to directly invoke `position.set` as TJSPosition uses accessors and is not a bare object, so\n      // the merging that occurs is `Application._render` does not take effect.\n      if (!this._minimized) { this.#position.set(options); }\n\n      if (!this.#onMount)\n      {\n         // Add to visible apps tracked.\n         TJSAppIndex.add(this);\n\n         this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\n    * JQuery element per the core Foundry API.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderInner(data)\n   {\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\n       document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition.set}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link TJSPosition.validators} functionality.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/store/position').TJSPositionDataExtended}   [position] - TJSPosition data.\n    *\n    * @returns {TJSPosition} The updated position object for the application containing the new values.\n    * @ignore\n    */\n   setPosition(position)\n   {\n      return this.position.set(position);\n   }\n\n   /**\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApplication.\n    *\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.applicationShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n             this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n\n         this.onSvelteRemount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n      }\n   }\n}\n","/**\n * Provides management of a single Promise that can be shared and accessed across JS & Svelte components. This allows a\n * Promise to be created and managed as part of the TRL application lifecycle and accessed safely in various control\n * flow scenarios. When resolution of the current managed Promise starts further interaction is prevented.\n *\n * Note: to enable debugging / log statements set the static `logging` variable to true.\n */\nclass ManagedPromise\n{\n   /** @type {boolean} */\n   static #logging = false;\n\n   /** @type {{ isProcessing?: boolean, promise?: Promise, reject: Function, resolve: Function }} */\n   #current;\n\n   /**\n    * @returns {boolean} Whether global logging is enabled.\n    */\n   static get logging()\n   {\n      return this.#logging;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise.\n    */\n   get isActive()\n   {\n      return this.#current !== void 0;\n   }\n\n   /**\n    * @returns {boolean} Whether there is an active managed Promise and resolution is currently being processed.\n    */\n   get isProcessing()\n   {\n      return this.#current !== void 0 ? this.#current.isProcessing : false;\n   }\n\n   /**\n    * Sets global logging enabled state.\n    *\n    * @param {boolean}  logging - New logging enabled state.\n    */\n   static set logging(logging)\n   {\n      if (typeof logging !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.logging error: 'logging' is not a boolean.`);\n      }\n\n      this.#logging = logging;\n   }\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Resolves any current Promise with undefined and creates a new current Promise.\n    *\n    * @template T\n    *\n    * @param {object} opts - Options.\n    *\n    * @param {boolean}  [opts.reuse=false] - When true if there is an existing live Promise it is returned immediately.\n    *\n    * @returns {Promise<T>} The new current managed Promise.\n    */\n   create({ reuse = false } = {})\n   {\n      if (typeof reuse !== 'boolean')\n      {\n         throw new TypeError(`[TRL] ManagedPromise.create error: 'reuse' is not a boolean.`);\n      }\n\n      if (reuse && this.#current !== void 0 && this.#current.promise instanceof Promise)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.create info: Reusing / returning existing managed Promise.`);\n         }\n\n         return this.#current.promise;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(\n             `[TRL] ManagedPromise.create info: Creating a new Promise and resolving existing immediately.`);\n         }\n\n         this.#current.resolve(void 0);\n         this.#current = void 0;\n      }\n\n      const promise = new Promise((resolve, reject) =>\n      {\n         this.#current = {\n            isProcessing: false,\n            reject,\n            resolve\n         };\n      });\n\n      this.#current.promise = promise;\n\n      return promise;\n   }\n\n   /**\n    * Gets the current Promise if any.\n    *\n    * @returns {Promise<any>} Current Promise.\n    */\n   get()\n   {\n      return this.#current ? this.#current.promise : void 0;\n   }\n\n   /**\n    * Rejects the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to reject.\n    *\n    * @returns {boolean} Was the promise rejected.\n    */\n   reject(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         this.#current.isProcessing = true;\n\n         if (result instanceof Promise)\n         {\n            result.then((value) =>\n            {\n               this.#current.reject(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.reject(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.reject warning: No current managed Promise to reject.`);\n         }\n\n         return false;\n      }\n   }\n\n   /**\n    * Resolves the current Promise if applicable.\n    *\n    * @param {*}  [result] - Result to resolve.\n    *\n    * @returns {boolean} Was the promise resolved.\n    */\n   resolve(result = void 0)\n   {\n      // Early out as Promise resolution is currently processing.\n      if (this.#current !== void 0 && this.#current.isProcessing)\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve info: Currently processing promise.`);\n         }\n\n         return true;\n      }\n\n      if (this.#current !== void 0)\n      {\n         if (result instanceof Promise)\n         {\n            this.#current.isProcessing = true;\n\n            result.then((value) =>\n            {\n               this.#current.resolve(value);\n               this.#current = void 0;\n            }).catch((err) =>\n            {\n               this.#current.reject(err);\n               this.#current = void 0;\n            });\n         }\n         else\n         {\n            this.#current.resolve(result);\n            this.#current = void 0;\n         }\n\n         return true;\n      }\n      else\n      {\n         if (ManagedPromise.#logging)\n         {\n            console.warn(`[TRL] ManagedPromise.resolve warning: No current managed Promise to resolve.`);\n         }\n\n         return false;\n      }\n   }\n}\n\nexport { ManagedPromise };\n//# sourceMappingURL=index.js.map\n","import {\n   deepMerge,\n   isObject,\n   safeAccess,\n   safeSet }   from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Provides storage for all dialog options through individual accessors and `get`, `merge`, `replace` and `set` methods\n * that safely access and update data changed to the mounted DialogShell component reactively.\n */\nexport class TJSDialogData\n{\n   /**\n    * @type {import('../../index.js').SvelteApplication}\n    */\n   #application;\n\n   /**\n    * Stores the dialog options data.\n    *\n    * @type {import('./types').TJSDialogOptions}\n    */\n   #internal = {};\n\n   /**\n    * @param {import('../../index.js').SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n   }\n\n   /**\n    * @returns {Record<string, import('./types').TJSDialogButtonData>} The dialog button configuration.\n    */\n   get buttons()\n   {\n      return this.#internal.buttons;\n   }\n\n   /**\n    * Set the dialog button configuration.\n    *\n    * @param {string} buttons - New dialog button configuration.\n    */\n   set buttons(buttons)\n   {\n      this.#internal.buttons = buttons;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig | string} The Svelte configuration object or HTML string\n    *          content.\n    */\n   get content()\n   {\n      return this.#internal.content;\n   }\n\n   /**\n    * Set the Svelte configuration object or HTML string content.\n    *\n    * @param {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig | string} content - New Svelte configuration object or\n    *        HTML string content.\n    */\n   set content(content)\n   {\n      this.#internal.content = content;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string} The default button ID to focus initially.\n    */\n   get default()\n   {\n      return this.#internal.default;\n   }\n\n   /**\n    * Set the default button ID to focus initially.\n    *\n    * @param {string} newDefault - New default button ID to focus initially.\n    */\n   set default(newDefault)\n   {\n      this.#internal.default = newDefault;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} The dialog draggable state; draggable when true.\n    */\n   get draggable()\n   {\n      return this.#internal.draggable;\n   }\n\n   /**\n    * Set the dialog state; draggable when true.\n    *\n    * @param {boolean} draggable - New dialog draggable state; draggable when true.\n    */\n   set draggable(draggable)\n   {\n      this.#internal.draggable = draggable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto()\n   {\n      return this.#internal.focusAuto;\n   }\n\n   /**\n    * Set the dialog auto-management of app focus.\n    *\n    * @param {boolean} focusAuto - New dialog auto-management of app focus.\n    */\n   set focusAuto(focusAuto)\n   {\n      this.#internal.focusAuto = focusAuto;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the first focusable element that isn't a button is focused.\n    */\n   get focusFirst()\n   {\n      return this.#internal.focusFirst;\n   }\n\n   /**\n    * Set the dialog first focusable element state.\n    *\n    * @param {boolean} focusFirst - New dialog first focusable element state.\n    */\n   set focusFirst(focusFirst)\n   {\n      this.#internal.focusFirst = focusFirst;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep()\n   {\n      return this.#internal.focusKeep;\n   }\n\n   /**\n    * Set the dialog `focusKeep` state. When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    *\n    * @param {boolean} focusKeep - New dialog `focusKeep` state.\n    */\n   set focusKeep(focusKeep)\n   {\n      this.#internal.focusKeep = focusKeep;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the dialog is minimizable.\n    */\n   get minimizable()\n   {\n      return this.#internal.minimizable;\n   }\n\n   /**\n    * Set the dialog `minimizable` state. When true the dialog is minimizable.\n    *\n    * @param {boolean} minimizable - New dialog `minimizable` state.\n    */\n   set minimizable(minimizable)\n   {\n      this.#internal.minimizable = minimizable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true a modal dialog is displayed.\n    */\n   get modal()\n   {\n      return this.#internal.modal;\n   }\n\n   /**\n    * Set the dialog `modal` state. When true a modal dialog is displayed.\n    *\n    * @param {boolean} modal - New dialog `modal` state.\n    */\n   set modal(modal)\n   {\n      this.#internal.modal = modal;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('./types').TJSDialogModalOptions} Additional options for modal dialog display.\n    */\n   get modalOptions()\n   {\n      return this.#internal.modalOptions;\n   }\n\n   /**\n    * Set additional options for modal dialog display.\n    *\n    * @param {import('./types').TJSDialogModalOptions} modalOptions - New additional options for modal dialog display.\n    */\n   set modalOptions(modalOptions)\n   {\n      this.#internal.modalOptions = modalOptions;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true and an error is raised in dialog callback functions post a UI error notification.\n    */\n   get notifyError()\n   {\n      return this.#internal.notifyError;\n   }\n\n   /**\n    * Set the dialog `notifyError` state. When true and an error is raised in dialog callback functions post a UI error\n    * notification.\n    *\n    * @param {boolean} notifyError - New dialog `notifyError` state.\n    */\n   set notifyError(notifyError)\n   {\n      this.#internal.notifyError = notifyError;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string | ((application: import('../../index.js').TJSDialog) => any)} Callback invoked when dialog is\n    *          closed; no button option selected. When defined as a string any matching function by name exported from\n    *          content Svelte component is invoked.\n    */\n   get onClose()\n   {\n      return this.#internal.onClose;\n   }\n\n   /**\n    * Set callback invoked when dialog is closed; no button option selected. When defined as a string any matching\n    * function by name exported from content Svelte component is invoked..\n    *\n    * @param {string | ((application: import('../../index.js').TJSDialog) => any)} onClose - New dialog `onClose` state.\n    */\n   set onClose(onClose)\n   {\n      this.#internal.onClose = onClose;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} Dialog `rejectClose` state. When true and a Promise has been created by {@link TJSDialog.wait}\n    *          and the Promise is not in the process of being resolved or rejected on close of the dialog any `onClose`\n    *          function is invoked and any result that is undefined will cause the Promise to then be rejected..\n    */\n   get rejectClose()\n   {\n      return this.#internal.rejectClose;\n   }\n\n   /**\n    * Set the dialog `rejectClose` state.\n    *\n    * @param {boolean} rejectClose - New dialog `rejectClose` state.\n    */\n   set rejectClose(rejectClose)\n   {\n      this.#internal.rejectClose = rejectClose;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the dialog is resizable.\n    */\n   get resizable()\n   {\n      return this.#internal.resizable;\n   }\n\n   /**\n    * Set the dialog `resizable` state. When true the dialog is resizable.\n    *\n    * @param {boolean} resizable - New dialog `resizable` state.\n    */\n   set resizable(resizable)\n   {\n      this.#internal.resizable = resizable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true and resolving any Promises and there are undefined results from any button callbacks\n    *          the button ID is resolved.\n    */\n   get resolveId()\n   {\n      return this.#internal.resolveId;\n   }\n\n   /**\n    * Set the dialog `resolveId` state. When true and resolving any Promises and there are undefined results from any\n    * button callbacks the button ID is resolved.\n    *\n    * @param {boolean} resolveId - New dialog `resolveId` state.\n    */\n   set resolveId(resolveId)\n   {\n      this.#internal.resolveId = resolveId;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string} The dialog window title.\n    */\n   get title()\n   {\n      return this.#internal.title;\n   }\n\n   /**\n    * Set the dialog window title.\n    *\n    * @param {string} title - New dialog window title.\n    */\n   set title(title)\n   {\n      this.#internal.title = title;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('./types').TJSDialogTransitionOptions} Transition options for the dialog.\n    */\n   get transition()\n   {\n      return this.#internal.transition;\n   }\n\n   /**\n    * Set transition options for the dialog.\n    *\n    * @param {import('./types').TJSDialogTransitionOptions} transition - New transition options for the dialog.\n    */\n   set transition(transition)\n   {\n      this.#internal.transition = transition;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {number | null} A specific z-index for the dialog. Pass null for the dialog to act like other\n    *          applications in regard bringing to top when activated.\n    */\n   get zIndex()\n   {\n      return this.#internal.zIndex;\n   }\n\n   /**\n    * Set specific z-index for the dialog.\n    *\n    * @param {number | null} zIndex - New z-index for the dialog.\n    */\n   set zIndex(zIndex)\n   {\n      this.#internal.zIndex = zIndex;\n      this.#updateComponent();\n   }\n\n   /**\n    * Provides a way to safely get this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {any} Value at the accessor.\n    */\n   get(accessor, defaultValue)\n   {\n      return safeAccess(this.#internal, accessor, defaultValue);\n   }\n\n   /**\n    * @param {import('./types').TJSDialogOptions} data - Merge provided data object into Dialog data.\n    */\n   merge(data)\n   {\n      deepMerge(this.#internal, data);\n      this.#updateComponent();\n   }\n\n   /**\n    * Sets the dialog data; this is reactive.\n    *\n    * @param {import('./types').TJSDialogOptions}   data - Dialog data.\n    */\n   replace(data)\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialogData replace error: 'data' is not an object'.`); }\n\n      this.#internal = {};\n\n      // Merge new data and perform a reactive update.\n      this.merge(data);\n   }\n\n   /**\n    * Provides a way to safely set this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Automatically the dialog data will be updated in the associated DialogShell Svelte component.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    *\n    * @returns {boolean} True if successful.\n    */\n   set(accessor, value)\n   {\n      const success = safeSet(this.#internal, accessor, value);\n\n      // If `this.#internal` modified then update the app options store.\n      if (success) { this.#updateComponent(); }\n\n      return success;\n   }\n\n   /**\n    * Updates the data in the Svelte dialog component.\n    */\n   #updateComponent()\n   {\n      const component = this.#application.svelte.component(0);\n      if (component?.data) { component.data = this.#internal; }\n   }\n}\n","import { DialogShell }        from '@typhonjs-fvtt/runtime/svelte/component/core';\n\nimport { ManagedPromise }     from '@typhonjs-fvtt/runtime/util/async';\n\nimport {\n   deepMerge,\n   isObject }                 from '@typhonjs-fvtt/runtime/util/object';\n\nimport { TJSDialogData }      from './internal/state-dialog/index.js';\nimport { SvelteApplication }  from './SvelteApplication.js';\n\n/**\n * Provides a reactive dialog implementation configured from a unique dialog options object. The dialog features a\n * bottom button bar for user selection.\n *\n * A glasspane / modal option with various styling and transition capabilities is available when setting `modal: true`.\n *\n * Most importantly the `content` attribute of dialog data can be a Svelte component configuration object to render\n * your custom component as the dialog content. When using a Svelte component as the content you can assign a string\n * to the various `on<XXX>` dialog callbacks and an exported function from your component will be invoked to handle the\n * button callback. All dialog button callbacks and `onClose` callback receive a single argument which is the dialog /\n * application instance.\n *\n * When making a form with form validation or other dialog that you don't want to close immediately on button press you\n * can set `autoClose: false`, however you are 100% in control of resolving any Promise callbacks from button presses\n * and also closing the application. Each button can also be configured with `autoClose: false` in the button data.\n *\n * There is a handy Promise management capability to track a single Promise for the lifetime of a dialog available\n * at {@link TJSDialog.managedPromise}. By default when the user closes the dialog / application any managed Promise is\n * resolved with `null`. The managed Promise is available in any Svelte content component by using\n * `const managedPromise = getContext('#managedPromise')`. When handling any custom resolution particularly when\n * setting `autoClose: false` for a given button you are 100% in control of resolving or rejecting asynchronous data to\n * return from the dialog.\n *\n * To create and wait upon a managed promise for asynchronous return results use the static or member variation of\n * {@link TJSDialog.wait}.\n *\n * Please refer to {@link TJSDialogOptions} for the various options used to construct the dialog.\n *\n * There are a couple of static helper methods to quickly create standard dialogs such as a 'yes' / 'no' confirmation\n * dialog with {@link TJSDialog.confirm} and an 'ok' single button dialog with {@link TJSDialog.prompt}.\n *\n * TODO: document all extended dialog data parameters such as transition options / modal transitions.\n */\nexport class TJSDialog extends SvelteApplication\n{\n   /** @type {TJSDialogData} */\n   #data;\n\n   /** @type {ManagedPromise} */\n   #managedPromise;\n\n   /**\n    * @param {import('./internal/state-dialog/types').TJSDialogOptions}           data - Dialog options.\n    *\n    * @param {import('./').SvelteApplicationOptions}   [options] - SvelteApplication options.\n    */\n   constructor(data, options = {})\n   {\n      super(options);\n\n      this.#managedPromise = new ManagedPromise();\n\n      this.#data = new TJSDialogData(this);\n      this.#data.replace(data);\n\n      /**\n       * @member {object} dialogComponent - A getter to SvelteData to retrieve any mounted Svelte component as the\n       *                                    dialog content.\n       *\n       * @memberof GetSvelteData#\n       * @readonly\n       */\n      Object.defineProperty(this.svelte, 'dialogComponent', {\n         get: () => this.svelte?.applicationShell?.dialogComponent,\n      });\n   }\n\n   /**\n    * Default options for TJSDialog. Provides a default width and setting `height` to `auto` to always display dialog\n    * content even if it changes. The default `DialogShell` / `svelte` options should not be changed and instead mount\n    * the dialog content component by supplying a Svelte configuration object to dialog data `content` field.\n    *\n    * @returns {import('./').SvelteApplicationOptions} Default options\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         classes: ['dialog', 'tjs-dialog'],\n         width: 400,\n         height: 'auto',\n         svelte: {\n            class: DialogShell,\n            intro: true,\n            target: document.body,\n            props: function() // `this` is the TJSDialog instance when invoked.\n            {\n               return {\n                  data: this.#data,\n                  managedPromise: this.#managedPromise\n               };\n            }\n         }\n      });\n   }\n\n   /**\n    * Returns the dialog data.\n    *\n    * @returns {import('./internal/state-dialog/types').TJSDialogData} Dialog data.\n    */\n   get data() { return this.#data; }\n\n   /**\n    * @returns {import('@typhonjs-fvtt/runtime/util/async').ManagedPromise} Returns the managed promise.\n    */\n   get managedPromise() { return this.#managedPromise; }\n\n   /**\n    * Close the dialog and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>} A Promise which resolves once the application is closed with the callback value or\n    *                          `true`.\n    */\n   async close(options)\n   {\n      try\n      {\n         // Note: When handling a managed promise if a button selection has already been made the managed promise is\n         // already processing and the resolution below is skipped.\n         if (this.#managedPromise.isActive && !this.#managedPromise.isProcessing)\n         {\n            const result = TJSDialog.#invokeFn(this.#data.onClose, this, null);\n            const rejectClose = typeof this.#data.rejectClose === 'boolean' ? this.#data.rejectClose : false;\n\n            if (rejectClose && result === null)\n            {\n               this.#managedPromise.reject(new Error('TJSDialog was closed without a choice being made.'));\n            }\n            else\n            {\n               this.#managedPromise.resolve(result);\n            }\n         }\n      }\n      catch (err)\n      {\n         const notifyError = typeof this.#data.notifyError === 'boolean' ? this.#data.notifyError : true;\n         if (notifyError)\n         {\n            // TODO: When app eventbus is available send event for UI notification instead of Foundry API usage.\n            globalThis.ui.notifications.error(err, { console: false });\n         }\n\n         // If there is a managed Promise reject it or re-throw error.\n         if (!this.#managedPromise.reject(err)) { throw err; }\n      }\n      finally\n      {\n         await super.close(options);\n      }\n   }\n\n   /**\n    * Brings to top or renders this dialog returning a Promise that is resolved any button pressed or when the dialog\n    * is closed.\n    *\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {object}   [options] - Options.\n    *\n    * @param {boolean}  [options.reuse=false] - When true if there is an existing managed Promise this allows multiple\n    *        sources to await on the same result.\n    *\n    * @returns {Promise<T>} A promise for dialog resolution.\n    */\n   async wait(options)\n   {\n      // TODO: Direct usage of Foundry core Application API.\n      if (this.rendered)\n      {\n         this.bringToTop();\n      }\n      else\n      {\n         this.render(true, { focus: true });\n      }\n\n      // Return a managed Promise which is automatically resolved on button press via `DialogContent` component or when\n      // the dialog is closed.\n      return this.#managedPromise.create(options);\n   }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * A helper factory method to create simple confirmation dialog windows which consist of simple yes / no prompts.\n    * If you require more flexibility, a custom TJSDialog instance is preferred. The default focused button is 'yes'.\n    * You can change the default focused button by setting `default` to `yes` or `no`.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialogOptions & {\n    *    onYes?: string|((application: TJSDialog) => any),\n    *    onNo?: string|((application: TJSDialog) => any)\n    * }} [data] - Confirm dialog options.\n    *\n    * @param {string|((application: TJSDialog) => any)} [data.onYes] - Callback function upon `yes`; may be an async\n    *        function. When defined as a string any matching function by name exported from content Svelte component is\n    *        invoked.\n    *\n    * @param {string|((application: TJSDialog) => any)} [data.onNo] - Callback function upon `no`; may be an async\n    *        function. When defined as a string any matching function by name exported from content Svelte component is\n    *        invoked.\n    *\n    * @param {import('./').SvelteApplicationOptions}  [options]  SvelteApplication options passed to the TJSDialog\n    *        constructor.\n    *\n    * @returns {Promise<T>} A promise which resolves with result of yes / no callbacks or true / false.\n    *\n    * @example\n    * const result = await TJSDialog.confirm({\n    *  title: 'A Yes or No Question',\n    *  content: '<p>Choose wisely.</p>',\n    *  onYes: () => 'YES Result'\n    *  onNo: () => 'NO Result'\n    * });\n    *\n    * // Logs 'YES result', 'NO Result', or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async confirm({ onYes, onNo, ...data } = {}, options = {})\n   {\n      // Allow overwriting of default icon and labels.\n      const mergedButtons = deepMerge({\n         yes: {\n            icon: 'fas fa-check',\n            label: 'Yes'\n         },\n         no: {\n            icon: 'fas fa-times',\n            label: 'No',\n         }\n      }, data.buttons ?? {});\n\n      return this.wait({\n         ...data,\n         buttons: deepMerge(mergedButtons, {\n            yes: {\n               onPress: (application) => this.#invokeFn(onYes, application, true)\n            },\n            no: {\n               onPress: (application) => this.#invokeFn(onNo, application, false)\n            }\n         }),\n         default: data.default ?? 'yes'\n      }, options);\n   }\n\n   /**\n    * A helper method to invoke a callback function directly or lookup an exported function with the same name from any\n    * content Svelte component to invoke. This is used internally to apply default values for `confirm` and `prompt`.\n    *\n    * @param {string|((application: TJSDialog) => any)} callback - Callback function to invoke; may be an async\n    *        function. When defined as a string any matching function by name exported from content Svelte component is\n    *        invoked.\n    *\n    * @param {TJSDialog} application - TJSDialog instance passed to callback.\n    *\n    * @param {*} [defaultResult] - An optional default result to return; undefined if not specified.\n    *\n    * @returns {*} Result.\n    *\n    * @internal\n    */\n   static #invokeFn(callback, application, defaultResult = void 0)\n   {\n      let result = defaultResult;\n\n      switch (typeof callback)\n      {\n         case 'function':\n            // Pass the dialog instance to the callback.\n            result = callback(application);\n            break;\n\n         case 'string':\n         {\n            const dialogComponent = application?.svelte?.dialogComponent;\n\n            // Attempt lookup by function name in dialog instance component.\n            if (dialogComponent !== void 0 && typeof dialogComponent?.[callback] === 'function')\n            {\n               result = dialogComponent?.[callback](application);\n            }\n            else\n            {\n               if (dialogComponent === void 0)\n               {\n                  console.warn(`[TRL] TJSDialog warning: 'onPress' defined as a string with no ` +\n                   `associated content Svelte component.`);\n               }\n               else if (typeof dialogComponent?.[callback] !== 'function')\n               {\n                  console.warn(`[TRL] TJSDialog warning: The content Svelte component does not contain ` +\n                   `an associated function '${callback}'. Did you remember to add ` +\n                   `'<svelte:options accessors={true} />' and export the function?`);\n               }\n            }\n            break;\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * A helper factory method to display a basic \"prompt\" style TJSDialog with a single button.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialogOptions & {\n    *    onOk?: string|((application: TJSDialog) => any),\n    *    label?: string,\n    *    icon?: string\n    * }} [data] - Prompt dialog options that includes any TJSDialog options along with the following optional fields:\n    *\n    * @param {string|((application: TJSDialog) => any)} [data.onOk] - Callback function upon `ok`; may be an async\n    *        function. When defined as a string any matching function by name exported from content Svelte component is\n    *        invoked.\n    *\n    * @param {string}   [data.label] - The OK prompt button text.\n    *\n    * @param {string}   [data.icon=\"fas fa-check\"] - Set another icon besides `fas fa-check` for button.\n    *\n    * @param {import('./').SvelteApplicationOptions}  [options]  SvelteApplication options passed to the TJSDialog\n    *        constructor.\n    *\n    * @returns {Promise<T>} The returned value from the provided callback function or `true` if the button\n    *          is pressed.\n    *\n    * @example\n    * const result = await TJSDialog.prompt({\n    *  title: 'Are you OK?',\n    *  content: '<p>Are you OK?.</p>',\n    *  label: 'Feeling Fine!'\n    *  onOk: () => 'OK'\n    * });\n    *\n    * // Logs 'OK' or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async prompt({ onOk, label, icon = 'fas fa-check', ...data } = {}, options = {})\n   {\n      return this.wait({\n         ...data,\n         buttons: {\n            ok: {\n               icon,\n               label,\n               onPress: (application) => this.#invokeFn(onOk, application, true)\n            }\n         },\n         default: 'ok'\n      }, options);\n   }\n\n   /**\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: By default `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialogOptions}  data - Dialog data passed to the TJSDialog constructor.\n    *\n    * @param {import('./').SvelteApplicationOptions}  [options]  SvelteApplication options passed to the TJSDialog\n    *        constructor.\n    *\n    * @returns {Promise<T>} A Promise that resolves to the chosen result.\n    */\n   static async wait(data, options = {})\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialog.wait error: 'data' is not an object'.`); }\n\n      // Instantiate and render the dialog.\n      return new this({ ...data }, options).wait();\n   }\n}\n","import { SvelteApplication } from './SvelteApplication.js';\nimport { TJSAppIndex }       from './internal/index.js';\n\nexport * from './SvelteApplication.js';\nexport * from './TJSDialog.js';\n\n// Handle `hotReload` Foundry hook when running the Vite dev server. -------------------------------------------------\n\nif (import.meta.hot)\n{\n   Hooks.on('hotReload', (data) =>\n   {\n      // Only handle JSON hot reload presumably specified in package manifest for language translation files.\n      if (data?.extension === 'json')\n      {\n         // Postpone until next clock tick to allow Foundry to update localization first.\n         setTimeout(() =>\n         {\n            for (const app of TJSAppIndex.values())\n            {\n               const appShell = app.svelte.applicationShell;\n\n               // Retrieve the original `svelte-hmr` instrumented HMR component / not the proxy.\n               const hmrComponent = appShell?.$$?.hmr_cmp;\n\n               if (appShell && typeof hmrComponent?.$replace === 'function')\n               {\n                  const svelteData = app.svelte.dataByComponent(appShell);\n                  if (svelteData)\n                  {\n                     try\n                     {\n                        // Replace with self; this will invoke `on_hmr` callback in associated SvelteApplication.\n                        hmrComponent.$replace(hmrComponent.constructor, {\n                           target: svelteData.config.target,\n                           anchor: svelteData.config.anchor,\n                           preserveLocalState: true,\n                           conservative: true\n                        });\n                     }\n                     catch (error)\n                     {\n                        const name = hmrComponent?.constructor?.name ?? 'Unknown';\n                        console.error(`TyphonJS Runtime Library error; Could not hot reload component: '${name}'`);\n                        console.error(error);\n                     }\n                  }\n               }\n            }\n         }, 0);\n      }\n\n      return true;\n   });\n}\n\n// Handle `PopOut!` module hooks to allow applications to popout to their own browser window -------------------------\n\nHooks.on('PopOut:loading', (app) =>\n{\n   if (app instanceof SvelteApplication) { app.position.enabled = false; }\n});\n\nHooks.on('PopOut:popin', (app) =>\n{\n   if (app instanceof SvelteApplication) { app.position.enabled = true; }\n});\n\nHooks.on('PopOut:close', (app) =>\n{\n   if (app instanceof SvelteApplication) { app.position.enabled = true; }\n});\n\n// From: SvelteApplication.js ----------------------------------------------------------------------------------------\n\n/**\n * @typedef {object} SvelteApplicationOptions Options for SvelteApplication. Note: that this extends the Foundry\n * {@link ApplicationOptions}.\n *\n * @property {boolean}  [defaultCloseAnimation=true] If false the default slide close animation is not run.\n *\n * @property {boolean}  [draggable=true] If true then application shells are draggable.\n *\n * @property {boolean}  [focusAuto=true] When true auto-management of app focus is enabled.\n *\n * @property {boolean}  [focusKeep=false] When `focusAuto` and `focusKeep` is true; keeps internal focus.\n *\n * @property {import('@typhonjs-fvtt/runtime/util/browser').A11yFocusSource}   [focusSource] - Defines A11yHelper focus source to\n *           apply when application closes.\n *\n * @property {boolean}  [focusTrap=true] When true focus trapping / wrapping is enabled keeping focus inside app.\n *\n * @property {boolean}  [headerButtonNoClose=false] If true then the close header button is removed.\n *\n * @property {boolean}  [headerButtonNoLabel=false] If true then header button labels are removed.\n *\n * @property {string}   [headerIcon] Sets a header icon given an image URL.\n *\n * @property {boolean}  [headerNoTitleMinimized=false] If true then header title is hidden when minimized.\n *\n * @property {number}   [minHeight=MIN_WINDOW_HEIGHT] Assigned to position. Number specifying minimum\n *           window height.\n *\n * @property {number}   [minWidth=MIN_WINDOW_WIDTH] Assigned to position. Number specifying minimum\n *           window width.\n *\n * @property {boolean}  [positionable=true] If false then `position.set` does not take effect.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/position').TJSPositionInitialHelper}   [positionInitial] A helper for\n *           initial position placement.\n *\n * @property {boolean}  [positionOrtho=true] When true TJSPosition is optimized for orthographic use.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/position').TJSPositionValidatorOptions}   [positionValidator] A validator\n *           function or data or list of validators.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/web-storage').TJSWebStorage}   [sessionStorage] An instance of\n *           TJSWebStorage (session) to share across SvelteApplications.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/util').TJSSvelteConfig}   [svelte] A Svelte configuration object defining\n *           the main component.\n *\n * @property {import('@typhonjs-fvtt/runtime/svelte/store/position').TJSTransformOrigin}   [transformOrigin='top left'] By default,\n *           'top / left' respects rotation when minimizing.\n */\n","import { writable, get } from 'svelte/store';\nimport { Strings } from '@typhonjs-fvtt/runtime/util';\nimport { isIterable, safeAccess } from '@typhonjs-fvtt/runtime/util/object';\nimport { isWritableStore } from '@typhonjs-fvtt/runtime/util/store';\n\nclass DynReducerUtils {\n    /**\n     * Checks for array equality between two arrays of numbers.\n     *\n     * @param a - Array A\n     *\n     * @param b - Array B\n     *\n     * @returns Arrays are equal.\n     */\n    static arrayEquals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (a === null || b === null) {\n            return false;\n        }\n        /* c8 ignore next */\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let cntr = a.length; --cntr >= 0;) {\n            /* c8 ignore next */\n            if (a[cntr] !== b[cntr]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Provides a solid string hashing algorithm.\n     *\n     * Sourced from: https://stackoverflow.com/a/52171480\n     *\n     * @param str - String to hash.\n     *\n     * @param seed - A seed value altering the hash.\n     *\n     * @returns Hash code.\n     */\n    static hashString(str, seed = 0) {\n        let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n        for (let ch, i = 0; i < str.length; i++) {\n            ch = str.charCodeAt(i);\n            h1 = Math.imul(h1 ^ ch, 2654435761);\n            h2 = Math.imul(h2 ^ ch, 1597334677);\n        }\n        h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n        h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n        return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n    }\n    /**\n     * Converts an unknown value for hashing purposes in {@link AdapterIndexer.calcHashUpdate}.\n     *\n     * Currently objects / Map w/ object keys is not supported. Potentially can include `object-hash` to handle this\n     * case, but it is not common to use objects as keys in Maps.\n     *\n     * @param value - An unknown value to convert to a number.\n     */\n    static hashUnknown(value) {\n        if (value === null || value === void 0) {\n            return 0;\n        }\n        let result = 0;\n        switch (typeof value) {\n            case 'boolean':\n                result = value ? 1 : 0;\n                break;\n            case 'bigint':\n                result = Number(BigInt.asIntN(64, value));\n                break;\n            case 'function':\n                result = this.hashString(value.name);\n                break;\n            case 'number':\n                result = Number.isFinite(value) ? value : 0;\n                break;\n            case 'object':\n                // TODO: consider hashing an object IE `object-hash` and convert to number.\n                break;\n            case 'string':\n                result = this.hashString(value);\n                break;\n            case 'symbol':\n                result = this.hashString(Symbol.keyFor(value));\n                break;\n        }\n        return result;\n    }\n    /**\n     * @param target -\n     *\n     * @param Prototype -\n     *\n     * @returns target constructor function has Prototype.\n     */\n    static hasPrototype(target, Prototype) {\n        /* c8 ignore next */\n        if (typeof target !== 'function') {\n            return false;\n        }\n        if (target === Prototype) {\n            return true;\n        }\n        // Walk parent prototype chain. Check for descriptor at each prototype level.\n        for (let proto = Object.getPrototypeOf(target); proto; proto = Object.getPrototypeOf(proto)) {\n            if (proto === Prototype) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Provides a utility method to determine if the given data is iterable / implements iterator protocol.\n     *\n     * @param data - Data to verify as iterable.\n     *\n     * @returns Is data iterable.\n     */\n    static isIterable(data) {\n        return data !== null && data !== void 0 && typeof data === 'object' &&\n            typeof data[Symbol.iterator] === 'function';\n    }\n}\n\n/**\n * Provides the `derived` API for all dynamic reducers.\n */\nclass AdapterDerived {\n    #hostData;\n    #DerivedReducerCtor;\n    #parentIndex;\n    #derived = new Map();\n    #destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param parentIndex - Any associated parent index API.\n     *\n     * @param DerivedReducerCtor - The default derived reducer constructor function.\n     */\n    constructor(hostData, parentIndex, DerivedReducerCtor) {\n        this.#hostData = hostData;\n        this.#parentIndex = parentIndex;\n        this.#DerivedReducerCtor = DerivedReducerCtor;\n        Object.freeze(this);\n    }\n    /**\n     * Creates a new derived reducer.\n     *\n     * @param options - Options defining the new derived reducer.\n     *\n     * @returns Newly created derived reducer.\n     */\n    create(options) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.create error: this instance has been destroyed.`);\n        }\n        let name;\n        let rest = {};\n        let ctor;\n        const DerivedReducerCtor = this.#DerivedReducerCtor;\n        if (typeof options === 'string') {\n            name = options;\n            ctor = DerivedReducerCtor;\n        }\n        else if (typeof options === 'function' && DynReducerUtils.hasPrototype(options, DerivedReducerCtor)) {\n            ctor = options;\n        }\n        else if (typeof options === 'object' && options !== null) {\n            ({ name, ctor = DerivedReducerCtor, ...rest } = options);\n        }\n        else {\n            throw new TypeError(`AdapterDerived.create error: 'options' does not conform to allowed parameters.`);\n        }\n        if (!DynReducerUtils.hasPrototype(ctor, DerivedReducerCtor)) {\n            throw new TypeError(`AdapterDerived.create error: 'ctor' is not a '${DerivedReducerCtor?.name}'.`);\n        }\n        name = name ?? ctor?.name;\n        if (typeof name !== 'string') {\n            throw new TypeError(`AdapterDerived.create error: 'name' is not a string.`);\n        }\n        const derivedReducer = new ctor(this.#hostData, this.#parentIndex, rest);\n        this.#derived.set(name, derivedReducer);\n        return derivedReducer;\n    }\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear() {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.destroy();\n        }\n        this.#derived.clear();\n    }\n    /**\n     * Deletes and destroys a derived reducer by name.\n     *\n     * @param name - Name of the derived reducer.\n     */\n    delete(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.delete error: this instance has been destroyed.`);\n        }\n        const reducer = this.#derived.get(name);\n        if (reducer) {\n            reducer.destroy();\n        }\n        return this.#derived.delete(name);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.clear();\n        this.#hostData = [null];\n        this.#parentIndex = null;\n        this.#destroyed = true;\n    }\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param name - Name of derived reducer.\n     */\n    get(name) {\n        if (this.#destroyed) {\n            throw Error(`AdapterDerived.get error: this instance has been destroyed.`);\n        }\n        return this.#derived.get(name);\n    }\n    /**\n     * Updates all managed derived reducer indexes.\n     *\n     * @param [force] - Force an update to subscribers.\n     */\n    update(force = false) {\n        if (this.#destroyed) {\n            return;\n        }\n        for (const reducer of this.#derived.values()) {\n            reducer.index.update(force);\n        }\n    }\n}\n\n/**\n * Provides the storage and sequencing of managed filters. Each filter added may be a bespoke function or a\n * {@link DynDataFilter} object containing an `id`, `filter`, and `weight` attributes; `filter` is the only required\n * attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the filter; recommended strings or numbers. This\n * allows filters to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows filters to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted filter always runs\n * before a higher weighted filter. For speed and efficiency always set the heavier / more inclusive filter with a\n * lower weight; an example of this is a keyword / name that will filter out many entries making any further filtering\n * faster. If no weight is specified the default of '1' is assigned and it is appended to the end of the filters list.\n *\n * This class forms the public API which is accessible from the `.filters` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.filters.add(...);\n * dynArray.filters.clear();\n * dynArray.filters.length;\n * dynArray.filters.remove(...);\n * dynArray.filters.removeBy(...);\n * dynArray.filters.removeById(...);\n * ```\n */\nclass AdapterFilters {\n    #filtersData;\n    #indexUpdate;\n    #mapUnsubscribe = new Map();\n    /**\n     * @param indexUpdate - update function for the indexer.\n     *\n     * @param filtersAdapter - Stores the filter function data.\n     */\n    constructor(indexUpdate, filtersAdapter) {\n        this.#indexUpdate = indexUpdate;\n        this.#filtersData = filtersAdapter;\n        Object.freeze(this);\n    }\n    /**\n     * @returns Returns the length of the filter data.\n     */\n    get length() { return this.#filtersData.filters.length; }\n    /**\n     * Provides an iterator for filters.\n     *\n     * @yields {DataFilter<T>}\n     */\n    *[Symbol.iterator]() {\n        if (this.#filtersData.filters.length === 0) {\n            return;\n        }\n        for (const entry of this.#filtersData.filters) {\n            yield { ...entry };\n        }\n    }\n    /**\n     * @param filters -\n     */\n    add(...filters) {\n        /**\n         * Tracks the number of filters added that have subscriber functionality.\n         */\n        let subscribeCount = 0;\n        for (const filter of filters) {\n            const filterType = typeof filter;\n            if (filterType !== 'function' && (filterType !== 'object' || filter === null)) {\n                throw new TypeError(`AdapterFilters error: 'filter' is not a function or object.`);\n            }\n            let data = void 0;\n            let subscribeFn = void 0;\n            if (filterType === 'function') {\n                data = {\n                    id: void 0,\n                    filter,\n                    weight: 1\n                };\n                subscribeFn = filter.subscribe;\n            }\n            else if (filterType === 'object') {\n                if ('filter' in filter) {\n                    if (typeof filter.filter !== 'function') {\n                        throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                    }\n                    if (filter.weight !== void 0 && typeof filter.weight !== 'number' ||\n                        (filter.weight < 0 || filter.weight > 1)) {\n                        throw new TypeError(`AdapterFilters error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n                    }\n                    data = {\n                        id: filter.id !== void 0 ? filter.id : void 0,\n                        filter: filter.filter,\n                        weight: filter.weight || 1\n                    };\n                    subscribeFn = filter.filter.subscribe ?? filter.subscribe;\n                }\n                else {\n                    throw new TypeError(`AdapterFilters error: 'filter' attribute is not a function.`);\n                }\n            }\n            // Find the index to insert where data.weight is less than existing values weight.\n            const index = this.#filtersData.filters.findIndex((value) => {\n                return data.weight < value.weight;\n            });\n            // If an index was found insert at that location.\n            if (index >= 0) {\n                this.#filtersData.filters.splice(index, 0, data);\n            }\n            else // push to end of filters.\n             {\n                this.#filtersData.filters.push(data);\n            }\n            if (typeof subscribeFn === 'function') {\n                const unsubscribe = subscribeFn(this.#indexUpdate);\n                // Ensure that unsubscribe is a function.\n                if (typeof unsubscribe !== 'function') {\n                    throw new TypeError('AdapterFilters error: Filter has subscribe function, but no unsubscribe function is returned.');\n                }\n                // Ensure that the same filter is not subscribed to multiple times.\n                if (this.#mapUnsubscribe.has(data.filter)) {\n                    throw new Error('AdapterFilters error: Filter added already has an unsubscribe function registered.');\n                }\n                this.#mapUnsubscribe.set(data.filter, unsubscribe);\n                subscribeCount++;\n            }\n        }\n        // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n        // subscriber count is less than the amount of filters added then automatically trigger an index update manually.\n        if (subscribeCount < filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * Clears and removes all filters.\n     */\n    clear() {\n        this.#filtersData.filters.length = 0;\n        // Unsubscribe from all filters with subscription support.\n        for (const unsubscribe of this.#mapUnsubscribe.values()) {\n            unsubscribe();\n        }\n        this.#mapUnsubscribe.clear();\n        this.#indexUpdate();\n    }\n    /**\n     * @param filters -\n     */\n    remove(...filters) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        for (const data of filters) {\n            // Handle the case that the filter may either be a function or a filter entry / object.\n            const actualFilter = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n                data.filter : void 0;\n            if (!actualFilter) {\n                continue;\n            }\n            for (let cntr = this.#filtersData.filters.length; --cntr >= 0;) {\n                if (this.#filtersData.filters[cntr].filter === actualFilter) {\n                    this.#filtersData.filters.splice(cntr, 1);\n                    // Invoke any unsubscribe function for given filter then remove from tracking.\n                    let unsubscribe = void 0;\n                    if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualFilter)) === 'function') {\n                        unsubscribe();\n                        this.#mapUnsubscribe.delete(actualFilter);\n                    }\n                }\n            }\n        }\n        // Update the index a filter was removed.\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * Remove filters by the provided callback. The callback takes 3 parameters: `id`, `filter`, and `weight`.\n     * Any truthy value returned will remove that filter.\n     *\n     * @param callback - Callback function to evaluate each filter entry.\n     */\n    removeBy(callback) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(`AdapterFilters error: 'callback' is not a function.`);\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            const remove = callback.call(callback, { ...data });\n            if (remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            // Reverse remove boolean to properly filter / remove this filter.\n            return !remove;\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * @param ids - Removes filters by ID.\n     */\n    removeById(...ids) {\n        const length = this.#filtersData.filters.length;\n        if (length === 0) {\n            return;\n        }\n        this.#filtersData.filters = this.#filtersData.filters.filter((data) => {\n            let remove = 0;\n            for (const id of ids) {\n                remove |= (data.id === id ? 1 : 0);\n            }\n            // If not keeping invoke any unsubscribe function for given filter then remove from tracking.\n            if (!!remove) {\n                let unsubscribe;\n                if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.filter)) === 'function') {\n                    unsubscribe();\n                    this.#mapUnsubscribe.delete(data.filter);\n                }\n            }\n            return !remove; // Swap here to actually remove the item via array filter method.\n        });\n        if (length !== this.#filtersData.filters.length) {\n            this.#indexUpdate();\n        }\n    }\n}\n\n/**\n * Provides construction and management of indexed data when there are parent indexes or filter / sort functions\n * applied.\n */\nclass AdapterIndexer {\n    derivedAdapter;\n    filtersData;\n    hostData;\n    hostUpdate;\n    indexData;\n    sortData;\n    sortFn;\n    destroyed = false;\n    /**\n     * @param hostData - Hosted data structure.\n     *\n     * @param hostUpdate - Host update function invoked on index updates.\n     *\n     * @param [parentIndexer] - Any associated parent index API.\n     *\n     * @returns Indexer adapter instance.\n     */\n    constructor(hostData, hostUpdate, parentIndexer) {\n        this.hostData = hostData;\n        this.hostUpdate = hostUpdate;\n        this.indexData = { index: null, hash: null, reversed: false, parent: parentIndexer };\n    }\n    /**\n     * @returns Returns whether the index is active.\n     */\n    get active() {\n        return this.filtersData.filters.length > 0 || this.sortData.compareFn !== null ||\n            this.indexData.parent?.active === true;\n    }\n    /**\n     * @returns Returns length of reduced index.\n     */\n    get length() {\n        return this.indexData.index ? this.indexData.index.length : 0;\n    }\n    /* c8 ignore start */\n    /**\n     * @returns Returns reversed state.\n     */\n    get reversed() { return this.indexData.reversed; }\n    /* c8 ignore end */\n    /**\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) { this.indexData.reversed = reversed; }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Calculates a new hash value for the new index array if any. If the new index array is null then the hash value\n     * is set to null. Set calculated new hash value to the index adapter hash value.\n     *\n     * After hash generation compare old and new hash values and perform an update if they are different. If they are\n     * equal check for array equality between the old and new index array and perform an update if they are not equal.\n     *\n     * @param oldIndex - Old index array.\n     *\n     * @param oldHash - Old index hash value.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    calcHashUpdate(oldIndex, oldHash, force = false) {\n        // Use force if a boolean otherwise default to false.\n        const actualForce = typeof force === 'boolean' ? force : /* c8 ignore next */ false;\n        let newHash = null;\n        const newIndex = this.indexData.index;\n        if (newIndex) {\n            for (let cntr = newIndex.length; --cntr >= 0;) {\n                newHash ^= DynReducerUtils.hashUnknown(newIndex[cntr]) + 0x9e3779b9 + (newHash << 6) + (newHash >> 2);\n            }\n        }\n        this.indexData.hash = newHash;\n        if (actualForce || (oldHash === newHash ? !DynReducerUtils.arrayEquals(oldIndex, newIndex) : true)) {\n            this.hostUpdate();\n        }\n    }\n    /**\n     * Destroys all resources.\n     */\n    destroy() {\n        if (this.destroyed) {\n            return;\n        }\n        this.indexData.index = null;\n        this.indexData.hash = null;\n        this.indexData.reversed = null;\n        this.indexData.parent = null;\n        this.destroyed = true;\n    }\n    /**\n     * Store associated filter and sort data that are constructed after the indexer.\n     *\n     * @param filtersData - Associated AdapterFilters instance.\n     *\n     * @param sortData - Associated AdapterSort instance.\n     *\n     * @param derivedAdapter - Associated AdapterDerived instance.\n     */\n    initAdapters(filtersData, sortData, derivedAdapter) {\n        this.filtersData = filtersData;\n        this.sortData = sortData;\n        this.derivedAdapter = derivedAdapter;\n        this.sortFn = this.createSortFn();\n    }\n}\n\n/**\n * Provides the storage and sequencing of a managed sort function. The sort function set may be a bespoke function or a\n * {@link DynDataSort} object containing an `compare`, and `subscribe` attributes; `compare` is the only required\n * attribute.\n *\n * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\n * If a subscribe function is provided the sort function can notify any updates that may change sort order and this\n * triggers an index update.\n *\n * This class forms the public API which is accessible from the `.sort` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.sort.clear();\n * dynArray.sort.set(...);\n * ```\n */\nclass AdapterSort {\n    #sortData;\n    #indexUpdate;\n    #unsubscribe;\n    /**\n     * @param indexUpdate - Function to update indexer.\n     *\n     * @param sortData - Storage for compare function.\n     */\n    constructor(indexUpdate, sortData) {\n        this.#indexUpdate = indexUpdate;\n        this.#sortData = sortData;\n        Object.freeze(this);\n    }\n    /**\n     * Clears & removes any assigned sort function and triggers an index update.\n     */\n    clear() {\n        const oldCompareFn = this.#sortData.compareFn;\n        this.#sortData.compareFn = null;\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        // Only update index if an old compare function is set.\n        if (typeof oldCompareFn === 'function') {\n            this.#indexUpdate();\n        }\n    }\n    /**\n     * @param data - A callback function that compares two values. Return > 0 to sort b before a;\n     * < 0 to sort a before b; or 0 to keep original order of a & b.\n     *\n     * Note: You can set a compare function that also has a subscribe function attached as the `subscribe` attribute.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#parameters\n     */\n    set(data) {\n        if (typeof this.#unsubscribe === 'function') {\n            this.#unsubscribe();\n            this.#unsubscribe = void 0;\n        }\n        let compareFn = void 0;\n        let subscribeFn = void 0;\n        switch (typeof data) {\n            case 'function':\n                compareFn = data;\n                subscribeFn = data.subscribe;\n                break;\n            case 'object':\n                // Early out if data is null / noop.\n                if (data === null) {\n                    break;\n                }\n                if (typeof data.compare !== 'function') {\n                    throw new TypeError(`AdapterSort error: 'compare' attribute is not a function.`);\n                }\n                compareFn = data.compare;\n                subscribeFn = data.compare.subscribe ?? data.subscribe;\n                break;\n        }\n        if (typeof compareFn === 'function') {\n            this.#sortData.compareFn = compareFn;\n        }\n        else {\n            const oldCompareFn = this.#sortData.compareFn;\n            this.#sortData.compareFn = null;\n            // Update index if the old compare function exists.\n            if (typeof oldCompareFn === 'function') {\n                this.#indexUpdate();\n            }\n            return;\n        }\n        if (typeof subscribeFn === 'function') {\n            this.#unsubscribe = subscribeFn(this.#indexUpdate);\n            // Ensure that unsubscribe is a function.\n            if (typeof this.#unsubscribe !== 'function') {\n                throw new Error(`AdapterSort error: sort has 'subscribe' function, but no 'unsubscribe' function is returned.`);\n            }\n        }\n        else {\n            // A sort function with subscriber functionality are assumed to immediately invoke the `subscribe` callback.\n            // Only manually update the index if there is no subscriber functionality.\n            this.#indexUpdate();\n        }\n    }\n}\n\n/**\n * Provides the public API for accessing the index API.\n *\n * This class forms the public API which is accessible from the `.index` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.index.active;\n * dynArray.index.hash;\n * dynArray.index.length;\n * dynArray.index.update(...);\n * ```\n */\nclass IndexerAPI {\n    #indexData;\n    /**\n     * Provides a getter to determine if the index is active.\n     */\n    active;\n    /**\n     * Provides length of reduced / indexed elements.\n     */\n    length;\n    /**\n     * Manually invoke an update of the index.\n     *\n     * @param force - Force update to any subscribers.\n     */\n    update;\n    constructor(adapterIndexer) {\n        this.#indexData = adapterIndexer.indexData;\n        this.update = adapterIndexer.update.bind(adapterIndexer);\n        // Defines getters on the public API to get the index hash, active state, and index length.\n        Object.defineProperties(this, {\n            active: { get: () => adapterIndexer.active },\n            length: { get: () => adapterIndexer.length }\n        });\n        Object.freeze(this);\n    }\n    /**\n     * - Current hash value of the index.\n     */\n    get hash() {\n        return this.#indexData.hash;\n    }\n    /**\n     * Provides an iterator over the index array.\n     *\n     * @yields {K}\n     */\n    *[Symbol.iterator]() {\n        const indexData = this.#indexData;\n        if (!indexData.index) {\n            return;\n        }\n        const reversed = indexData.reversed;\n        const length = indexData.index.length;\n        if (reversed) {\n            for (let cntr = length; --cntr >= 0;) {\n                yield indexData.index[cntr];\n            }\n        }\n        else {\n            for (let cntr = 0; cntr < length; cntr++) {\n                yield indexData.index[cntr];\n            }\n        }\n    }\n}\n\n/**\n * Provides the public API for derived reducers. There are several ways to create a derived reducer from utilizing the\n * default implementation or passing in a constructor function / class for a custom derived reducer.\n *\n * This class forms the public API which is accessible from the `.derived` getter in the main reducer implementation.\n * ```\n * const dynArray = new DynArrayReducer([...]);\n * dynArray.derived.clear();\n * dynArray.derived.create(...);\n * dynArray.derived.delete(...);\n * dynArray.derived.destroy();\n * dynArray.derived.get(...);\n * ```\n */\nclass DerivedAPI {\n    /**\n     * Removes all derived reducers and associated subscriptions.\n     */\n    clear;\n    /**\n     * @param options - Options for creating a reducer.\n     *\n     * @returns Newly created derived reducer.\n     */\n    create;\n    /**\n     * Deletes and destroys a derived reducer.\n     *\n     * @param name - Name of the derived reducer\n     */\n    delete;\n    /**\n     * Removes all derived reducers, associated subscriptions, and cleans up all resources.\n     */\n    destroy;\n    /**\n     * Returns an existing derived reducer.\n     *\n     * @param name - Name of derived reducer.\n     */\n    get;\n    constructor(adapterDerived) {\n        this.clear = adapterDerived.clear.bind(adapterDerived);\n        this.create = adapterDerived.create.bind(adapterDerived);\n        this.delete = adapterDerived.delete.bind(adapterDerived);\n        this.destroy = adapterDerived.destroy.bind(adapterDerived);\n        this.get = adapterDerived.get.bind(adapterDerived);\n        Object.freeze(this);\n    }\n}\n\n/**\n */\nlet Indexer$1 = class Indexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0][a], this.hostData[0][b]);\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const array = this.hostData[0];\n        if (!array) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const adjustedIndex of parentIndex) {\n                const value = array[adjustedIndex];\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(adjustedIndex);\n                }\n            }\n        }\n        else {\n            for (let cntr = 0, length = array.length; cntr < length; cntr++) {\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(array[cntr])) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(cntr);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const array = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && array?.length !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && Array.isArray(array)) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = [...Array(array.length).keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n};\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n */\nclass DynArrayReducerDerived {\n    #array;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param array - Data host array.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     */\n    constructor(array, parentIndex, options) {\n        this.#array = array;\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DynArrayReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        let filters = void 0;\n        let sort = void 0;\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\n            if (options.filters !== void 0) {\n                if (DynReducerUtils.isIterable(options.filters)) {\n                    filters = options.filters;\n                }\n                else {\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (options.sort !== void 0) {\n                if (typeof options.sort === 'function') {\n                    sort = options.sort;\n                }\n                else if (typeof options.sort === 'object' && options.sort !== null) {\n                    sort = options.sort;\n                }\n                else {\n                    throw new TypeError(`DerivedArrayReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and\n     * notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.index.length :\n            array ? array.length : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#array = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Provides an iterator for data stored in DerivedArrayReducer.\n     *\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedArrayReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed array with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n */\nclass DynArrayReducer {\n    #array = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynArrayReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataIterable = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer error: 'data' is not iterable.`);\n        }\n        if (data !== void 0 && Symbol.iterator in data) {\n            dataIterable = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !DynReducerUtils.isIterable(data.data)) {\n                throw new TypeError(`DynArrayReducer error (DataDynArray): 'data' attribute is not iterable.`);\n            }\n            dataIterable = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynArrayReducer error (DataDynArray): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataIterable) {\n            this.#array[0] = Array.isArray(dataIterable) ? dataIterable : [...dataIterable];\n        }\n        this.#index = new Indexer$1(this.#array, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#array, this.#indexPublicAPI, DynArrayReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: if an array is set as initial data then that array is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\n     * index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#array[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const array = this.#array[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            array ? array.length : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#array = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param replace=false - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !DynReducerUtils.isIterable(data)) {\n            throw new TypeError(`DynArrayReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynArrayReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const array = this.#array[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!Array.isArray(array) || replace) {\n            if (data) {\n                this.#array[0] = Array.isArray(data) ? data : [...data];\n            }\n        }\n        else {\n            if (data) {\n                // Remove all entries in internal data. This will not replace any initially set array.\n                array.length = 0;\n                // Add all new data.\n                array.push(...data);\n            }\n            else {\n                this.#array[0] = null;\n            }\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynArrayReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynArrayReducer.\n     *\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const array = this.#array[0];\n        if (this.#destroyed || array === null || array?.length === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const entry of this.index) {\n                yield array[entry];\n            }\n        }\n        else {\n            if (this.reversed) {\n                for (let cntr = array.length; --cntr >= 0;) {\n                    yield array[cntr];\n                }\n            }\n            else {\n                for (let cntr = 0; cntr < array.length; cntr++) {\n                    yield array[cntr];\n                }\n            }\n        }\n    }\n}\n\n/**\n */\nclass Indexer extends AdapterIndexer {\n    /**\n     * @inheritDoc\n     */\n    createSortFn() {\n        return (a, b) => this.sortData.compareFn(this.hostData[0].get(a), this.hostData[0].get(b));\n    }\n    /**\n     * Provides the custom filter / reduce step that is ~25-40% faster than implementing with `Array.reduce`.\n     *\n     * Note: Other loop unrolling techniques like Duff's Device gave a slight faster lower bound on large data sets,\n     * but the maintenance factor is not worth the extra complication.\n     *\n     * @returns New filtered index array.\n     */\n    reduceImpl() {\n        const data = [];\n        const map = this.hostData[0];\n        if (!map) {\n            return data;\n        }\n        const filters = this.filtersData.filters;\n        let include = true;\n        const parentIndex = this.indexData.parent;\n        // Source index data is coming from an active parent index.\n        if (DynReducerUtils.isIterable(parentIndex) && parentIndex.active) {\n            for (const key of parentIndex) {\n                const value = map.get(key);\n                include = true;\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        else {\n            for (const key of map.keys()) {\n                include = true;\n                const value = map.get(key);\n                for (let filCntr = 0, filLength = filters.length; filCntr < filLength; filCntr++) {\n                    if (!filters[filCntr].filter(value)) {\n                        include = false;\n                        break;\n                    }\n                }\n                if (include) {\n                    data.push(key);\n                }\n            }\n        }\n        return data;\n    }\n    /**\n     * Update the reducer indexes. If there are changes subscribers are notified. If data order is changed externally\n     * pass in true to force an update to subscribers.\n     *\n     * @param [force=false] - When true forces an update to subscribers.\n     */\n    update(force = false) {\n        if (this.destroyed) {\n            return;\n        }\n        const oldIndex = this.indexData.index;\n        const oldHash = this.indexData.hash;\n        const map = this.hostData[0];\n        const parentIndex = this.indexData.parent;\n        // Clear index if there are no filters and no sort function or the index length doesn't match the item length.\n        if ((this.filtersData.filters.length === 0 && !this.sortData.compareFn) ||\n            (this.indexData.index && map?.size !== this.indexData.index.length)) {\n            this.indexData.index = null;\n        }\n        // If there are filters build new index.\n        if (this.filtersData.filters.length > 0) {\n            this.indexData.index = this.reduceImpl();\n        }\n        // If the index isn't built yet and there is an active parent index then create it from the parent.\n        if (!this.indexData.index && parentIndex?.active) {\n            this.indexData.index = [...parentIndex];\n        }\n        if (this.sortData.compareFn && map instanceof Map) {\n            // If there is no index then create one with keys matching host item length.\n            if (!this.indexData.index) {\n                this.indexData.index = this.indexData.index = [...map.keys()];\n            }\n            this.indexData.index.sort(this.sortFn);\n        }\n        this.calcHashUpdate(oldIndex, oldHash, force);\n        // Update all derived reducers.\n        this.derivedAdapter?.update(force);\n    }\n}\n\n/**\n * Provides the base implementation derived reducer for arrays / DynArrayReducer.\n */\nclass DynMapReducerDerived {\n    #map;\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * @param map - Data host Map.\n     *\n     * @param parentIndex - Parent indexer.\n     *\n     * @param options - Any filters and sort functions to apply.\n     */\n    constructor(map, parentIndex, options) {\n        this.#map = map;\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this), parentIndex);\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DynMapReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        let filters = void 0;\n        let sort = void 0;\n        if (options !== void 0 && ('filters' in options || 'sort' in options)) {\n            if (options.filters !== void 0) {\n                if (DynReducerUtils.isIterable(options.filters)) {\n                    filters = options.filters;\n                }\n                else {\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (options.sort !== void 0) {\n                if (typeof options.sort === 'function') {\n                    sort = options.sort;\n                }\n                else if (typeof options.sort === 'object' && options.sort !== null) {\n                    sort = options.sort;\n                }\n                else {\n                    throw new TypeError(`DerivedMapReducer error (DataDerivedOptions): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // Add any filters and sort function defined by DataDynArray.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: The returned map is the same map set by the main reducer. If any changes are performed to the data\n     * externally do invoke {@link IndexerAPI.update} with `true` to recalculate the index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * Returns the Indexer public API.\n     *\n     * @returns Indexer API - is also iterable.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this derived reducer is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * @returns Main data / items length or indexed length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.index.length :\n            map ? map.size : 0;\n    }\n    /**\n     * @returns Gets current reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DerivedMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        this.#destroyed = true;\n        // Remove any external data reference and perform a final update.\n        this.#map = [null];\n        this.#index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#derived.destroy();\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom derived reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Provides an iterator for data stored in DerivedMapReducer.\n     *\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n    // -------------------------------------------------------------------------------------------------------------------\n    /**\n     * Subscribe to this DerivedMapReducer.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n}\n\n/**\n * Provides a managed Map with non-destructive reducing / filtering / sorting capabilities with subscription /\n * Svelte store support.\n */\nclass DynMapReducer {\n    #map = [null];\n    #derived;\n    #derivedPublicAPI;\n    #filters;\n    #filtersData = { filters: [] };\n    #index;\n    #indexPublicAPI;\n    #reversed = false;\n    #sort;\n    #sortData = { compareFn: null };\n    #subscriptions = [];\n    #destroyed = false;\n    /**\n     * Initializes DynMapReducer. Any iterable is supported for initial data. Take note that if `data` is an array it\n     * will be used as the host array and not copied. All non-array iterables otherwise create a new array / copy.\n     *\n     * @param [data] - Data iterable to store if array or copy otherwise.\n     */\n    constructor(data) {\n        let dataMap = void 0;\n        let filters = void 0;\n        let sort = void 0;\n        if (data === null) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && typeof data !== 'object' && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer error: 'data' is not an object or Map.`);\n        }\n        if (data !== void 0 && data instanceof Map) {\n            dataMap = data;\n        }\n        else if (data !== void 0 && ('data' in data || 'filters' in data || 'sort' in data)) {\n            if (data.data !== void 0 && !(data.data instanceof Map)) {\n                throw new TypeError(`DynMapReducer error (DataDynMap): 'data' attribute is not a Map.`);\n            }\n            dataMap = data.data;\n            if (data.filters !== void 0) {\n                if (DynReducerUtils.isIterable(data.filters)) {\n                    filters = data.filters;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'filters' attribute is not iterable.`);\n                }\n            }\n            if (data.sort !== void 0) {\n                if (typeof data.sort === 'function') {\n                    sort = data.sort;\n                }\n                else if (typeof data.sort === 'object' && data.sort !== null) {\n                    sort = data.sort;\n                }\n                else {\n                    throw new TypeError(`DynMapReducer error (DataDynMap): 'sort' attribute is not a function or object.`);\n                }\n            }\n        }\n        // In the case of the main data being an array directly use the array otherwise create a copy.\n        if (dataMap) {\n            this.#map[0] = dataMap;\n        }\n        this.#index = new Indexer(this.#map, this.#updateSubscribers.bind(this));\n        this.#indexPublicAPI = new IndexerAPI(this.#index);\n        this.#filters = new AdapterFilters(this.#indexPublicAPI.update, this.#filtersData);\n        this.#sort = new AdapterSort(this.#indexPublicAPI.update, this.#sortData);\n        this.#derived = new AdapterDerived(this.#map, this.#indexPublicAPI, DynMapReducerDerived);\n        this.#derivedPublicAPI = new DerivedAPI(this.#derived);\n        this.#index.initAdapters(this.#filtersData, this.#sortData, this.#derived);\n        // Add any filters and sort function defined by DataDynMap.\n        if (filters) {\n            this.filters.add(...filters);\n        }\n        if (sort) {\n            this.sort.set(sort);\n        }\n        // Invoke an custom initialization for child classes.\n        this.initialize();\n    }\n    /**\n     * Returns the internal data of this instance. Be careful!\n     *\n     * Note: When a map is set as data then that map is used as the internal data. If any changes are\n     * performed to the data externally do invoke {@link AdapterIndexer.index.update} with `true` to recalculate the\n     * index and notify all subscribers.\n     *\n     * @returns The internal data.\n     */\n    get data() { return this.#map[0]; }\n    /**\n     * @returns Derived public API.\n     */\n    get derived() { return this.#derivedPublicAPI; }\n    /**\n     * @returns The filters adapter.\n     */\n    get filters() { return this.#filters; }\n    /**\n     * @returns Returns the Indexer public API.\n     */\n    get index() { return this.#indexPublicAPI; }\n    /**\n     * Returns whether this instance is destroyed.\n     */\n    get destroyed() { return this.#destroyed; }\n    /**\n     * Gets the main data / items length.\n     *\n     * @returns {number} Main data / items length.\n     */\n    get length() {\n        const map = this.#map[0];\n        return this.#index.active ? this.#indexPublicAPI.length :\n            map ? map.size : 0;\n    }\n    /**\n     * Gets current reversed state.\n     *\n     * @returns {boolean} Reversed state.\n     */\n    get reversed() { return this.#reversed; }\n    /**\n     * @returns The sort adapter.\n     */\n    get sort() { return this.#sort; }\n    /**\n     * Sets reversed state and notifies subscribers.\n     *\n     * @param reversed - New reversed state.\n     */\n    set reversed(reversed) {\n        if (typeof reversed !== 'boolean') {\n            throw new TypeError(`DynMapReducer.reversed error: 'reversed' is not a boolean.`);\n        }\n        this.#reversed = reversed;\n        this.#index.reversed = reversed;\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Removes all derived reducers, subscriptions, and cleans up all resources.\n     */\n    destroy() {\n        if (this.#destroyed) {\n            return;\n        }\n        this.#destroyed = true;\n        this.#derived.destroy();\n        // Set the backing data to null and provide a final update.\n        this.#map = [null];\n        this.index.update(true);\n        // Remove all subscriptions.\n        this.#subscriptions.length = 0;\n        this.#index.destroy();\n        this.#filters.clear();\n        this.#sort.clear();\n    }\n    /**\n     * Provides a callback for custom reducers to initialize any data / custom configuration. This allows\n     * child classes to avoid implementing the constructor.\n     *\n     * @protected\n     */\n    initialize() { }\n    /**\n     * Removes internal data and pushes new data. This does not destroy any initial array set to internal data unless\n     * `replace` is set to true.\n     *\n     * @param data - New data to set to internal data.\n     *\n     * @param replace=false - New data to set to internal data.\n     */\n    setData(data, replace = false) {\n        if (data !== null && !(data instanceof Map)) {\n            throw new TypeError(`DynMapReducer.setData error: 'data' is not iterable.`);\n        }\n        if (typeof replace !== 'boolean') {\n            throw new TypeError(`DynMapReducer.setData error: 'replace' is not a boolean.`);\n        }\n        const map = this.#map[0];\n        // If the array isn't defined or 'replace' is true then replace internal data with new array or create an array\n        // from an iterable.\n        if (!(map instanceof Map) || replace) {\n            this.#map[0] = data instanceof Map ? data : null;\n        }\n        else if (data instanceof Map && map instanceof Map) {\n            // Create a set of all current entry IDs.\n            const removeKeySet = new Set(map.keys());\n            for (const key of data.keys()) {\n                map.set(key, data.get(key));\n                if (removeKeySet.has(key)) {\n                    removeKeySet.delete(key);\n                }\n            }\n            // Remove entries that are no longer in data.\n            for (const key of removeKeySet) {\n                map.delete(key);\n            }\n        }\n        else if (data === null) {\n            this.#map[0] = null;\n        }\n        // Recalculate index and force an update to any subscribers.\n        this.index.update(true);\n    }\n    /**\n     * Add a subscriber to this DynMapReducer instance.\n     *\n     * @param handler - Callback function that is invoked on update / changes. Receives `this` reference.\n     *\n     * @returns Unsubscribe function.\n     */\n    subscribe(handler) {\n        this.#subscriptions.push(handler); // add handler to the array of subscribers\n        handler(this); // call handler with current value\n        // Return unsubscribe function.\n        return () => {\n            const index = this.#subscriptions.findIndex((sub) => sub === handler);\n            if (index >= 0) {\n                this.#subscriptions.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * Updates subscribers on changes.\n     */\n    #updateSubscribers() {\n        for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) {\n            this.#subscriptions[cntr](this);\n        }\n    }\n    /**\n     * Provides an iterator for data stored in DynMapReducer.\n     *\n     * @yields {T}\n     */\n    *[Symbol.iterator]() {\n        const map = this.#map[0];\n        if (this.#destroyed || map === null || map?.size === 0) {\n            return;\n        }\n        if (this.#index.active) {\n            for (const key of this.index) {\n                yield map.get(key);\n            }\n        }\n        else {\n            if (this.reversed) {\n                // TODO: Not efficient due to creating temporary values array.\n                const values = [...map.values()];\n                for (let cntr = values.length; --cntr >= 0;) {\n                    yield values[cntr];\n                }\n            }\n            else {\n                for (const value of map.values()) {\n                    yield value;\n                }\n            }\n        }\n    }\n}\n\n/**\n * Creates a filter function to compare objects by a give property key against a regex test. The returned function\n * is also a writable Svelte store that builds a regex from the stores value.\n *\n * This filter function can be used w/ a dynamic reducer and bound as a store to input elements.\n *\n * @param {string|Iterable<string>}   accessors - Property key / accessors to lookup key to compare. To access deeper\n *        entries into the object format the accessor string with `.` between entries to walk.\n *\n * @param {object}   [opts] - Optional parameters.\n *\n * @param {boolean}  [opts.accessWarn=false] - When true warnings will be posted if accessor not retrieved.\n  *\n * @param {boolean}  [opts.caseSensitive=false] - When true regex test is case-sensitive.\n *\n * @param {import('svelte/store').Writable<string>}  [opts.store] - Use the provided store to instead of creating\n *        a default writable store.\n *\n * @returns {((data: object) => boolean) & import('svelte/store').Writable<string>} The query string filter.\n */\nfunction regexObjectQuery(accessors, { accessWarn = false, caseSensitive = false, store } = {})\n{\n   let keyword = '';\n   let regex;\n\n   if (store !== void 0 && !isWritableStore(store))\n   {\n      throw new TypeError(`createObjectQuery error: 'store' is not a writable store.`);\n   }\n\n   const storeKeyword = store ? store : writable(keyword);\n\n   // If an existing store is provided then set initial values.\n   if (store)\n   {\n      const current = get(store);\n\n      if (typeof current === 'string')\n      {\n         keyword = Strings.normalize(current);\n         regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\n      }\n      else\n      {\n         store.set(keyword);\n      }\n   }\n\n   /**\n    * If there is no filter keyword / regex then do not filter otherwise filter based on the regex\n    * created from the search input element.\n    *\n    * @param {object} data - Data object to test against regex.\n    *\n    * @returns {boolean} AnimationStore filter state.\n    */\n   function filterQuery(data)\n   {\n      if (keyword === '' || !regex) { return true; }\n\n      if (isIterable(accessors))\n      {\n         for (const accessor of accessors)\n         {\n            const value = safeAccess(data, accessor);\n            if (typeof value !== 'string')\n            {\n               if (accessWarn)\n               {\n                  console.warn(`regexObjectQuery warning: could not access string data from '${accessor}'.`);\n               }\n\n               continue;\n            }\n\n            if (regex.test(Strings.normalize(value))) { return true; }\n         }\n\n         return false;\n      }\n      else\n      {\n         const value = safeAccess(data, accessors);\n\n         if (typeof value !== 'string')\n         {\n            if (accessWarn)\n            {\n               console.warn(`regexObjectQuery warning: could not access string data from '${accessors}'.`);\n            }\n\n            return false;\n         }\n\n         return regex.test(Strings.normalize(value));\n      }\n   }\n\n   /**\n    * Create a custom store that changes when the search keyword changes.\n    *\n    * @param {(string) => void} handler - A callback function that accepts strings.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Store unsubscribe function.\n    */\n   filterQuery.subscribe = (handler) =>\n   {\n      return storeKeyword.subscribe(handler);\n   };\n\n   /**\n    * Set\n    *\n    * @param {string}   value - A new value for the keyword / regex test.\n    */\n   filterQuery.set = (value) =>\n   {\n      if (typeof value === 'string')\n      {\n         keyword = Strings.normalize(value);\n         regex = new RegExp(Strings.escape(keyword), caseSensitive ? '' : 'i');\n         storeKeyword.set(keyword);\n      }\n   };\n\n   return filterQuery;\n}\n\nconst filters = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    regexObjectQuery: regexObjectQuery\n});\n\n/**\n * Provides helper functions to create dynamic store driven filters and sort functions for dynamic reducers. The\n * returned functions are also Svelte stores and can be added to a reducer as well as used as a store.\n */\nclass DynReducerHelper\n{\n   /**\n    * Returns the following filter functions:\n    * - regexObjectQuery(accessors, options); suitable for object reducers matching one or more property keys /\n    *   accessors against the store value as a regex. To access deeper entries into the object format the accessor\n    *   string with `.` between entries to walk. Optional parameters include logging access warnings, case sensitivity,\n    *   and passing in an existing store.\n    *\n    * @returns {{\n    *    regexObjectQuery: (accessors: string|Iterable<string>, options?: {accessWarn?: boolean, caseSensitive?: boolean, store?: import('svelte/store').Writable<string>}) => (((data: {}) => boolean) & import('svelte/store').Writable<string>)\n    * }} All available filters.\n    */\n   static get filters() { return filters; }\n}\n\nexport { DynArrayReducer, DynArrayReducerDerived, DynMapReducer, DynMapReducerDerived, DynReducerHelper };\n//# sourceMappingURL=index.js.map\n","import { Hashing } from '@typhonjs-fvtt/runtime/util';\nimport { isPlainObject, isObject, hasPrototype } from '@typhonjs-fvtt/runtime/util/object';\nimport { DynMapReducer } from '@typhonjs-fvtt/runtime/svelte/store/reducer';\n\n/**\n * Provides management of reactive embedded collections.\n *\n * TODO: Consider subscribing to TJSDocument rather than exposing {@link EmbeddedStoreManager.handleDocChange} and\n * {@link EmbeddedStoreManager.handleUpdate}\n */\nclass EmbeddedStoreManager\n{\n   /**\n    * RegExp for detecting CRUD updates for renderContext.\n    *\n    * @type {RegExp}\n    */\n   static #renderContextRegex = /(?<action>create|delete|update)(?<sep>\\.?)(?<name>\\w+)/;\n\n   /**\n    * @type {Map<string, EmbeddedCollectionData<any>>}\n    */\n   #name = new Map();\n\n   /**\n    * @type {foundry.abstract.Document[]}\n    */\n   #document;\n\n   /**\n    * @type {Map<string, string>}\n    */\n   #collectionToDocName = new Map();\n\n   /**\n    * @type {Set<string>}\n    */\n   #embeddedNames = new Set();\n\n   /**\n    * @param {foundry.abstract.Document[]} document - The associated document holder.\n    */\n   constructor(document)\n   {\n      this.#document = document;\n\n      this.handleDocChange();\n\n      Object.seal(this);\n   }\n\n   /**\n    * @template [T=import('./types').NamedDocumentConstructor]\n    *\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\n    *\n    * @param {import('#runtime/svelte/store/reducer').DynOptionsMapCreate<string, T>} options - DynMapReducer\n    *        creation options.\n    *\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, T>} DynMapReducer instance.\n    */\n   create(FoundryDoc, options)\n   {\n      const docName = FoundryDoc?.documentName;\n\n      if (typeof docName !== 'string')\n      {\n         throw new TypeError(\n          `EmbeddedStoreManager.create error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n      }\n\n      /** @type {foundry.abstract.Document} */\n      const doc = this.#document[0];\n\n      let collection = null;\n\n      if (doc)\n      {\n         try\n         {\n            collection = doc.getEmbeddedCollection(docName);\n         }\n         catch (err)\n         {\n            console.warn(`EmbeddedStoreManager.create error: No valid embedded collection for: ${docName}`);\n         }\n      }\n\n      let embeddedData;\n\n      if (!this.#name.has(docName))\n      {\n         embeddedData = {\n            collection,\n            stores: new Map()\n         };\n\n         this.#name.set(docName, embeddedData);\n      }\n      else\n      {\n         embeddedData = this.#name.get(docName);\n      }\n\n      /** @type {string} */\n      let name;\n\n      /** @type {import('#runtime/svelte/store/reducer').DynDataOptions<T>} */\n      let rest = {};\n\n      /** @type {import('#runtime/svelte/store/reducer').IDynMapReducerCtor<string, T>} */\n      let ctor;\n\n      if (typeof options === 'string')\n      {\n         name = options;\n         ctor = DynMapReducer;\n      }\n      else if (typeof options === 'function' && hasPrototype(options, DynMapReducer))\n      {\n         ctor = options;\n      }\n      else if (isObject(options))\n      {\n         ({ name, ctor = DynMapReducer, ...rest } = options);\n      }\n      else\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'options' does not conform to allowed parameters.`);\n      }\n\n      if (!hasPrototype(ctor, DynMapReducer))\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'ctor' is not a 'DynMapReducer'.`);\n      }\n\n      name = name ?? ctor?.name;\n\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`EmbeddedStoreManager.create error: 'name' is not a string.`);\n      }\n\n      if (embeddedData.stores.has(name))\n      {\n         return embeddedData.stores.get(name);\n      }\n      else\n      {\n         const storeOptions = collection ? { data: collection, ...rest } : { ...rest };\n         const store = new ctor(storeOptions);\n         embeddedData.stores.set(name, store);\n         return store;\n      }\n   }\n\n   /**\n    * @template [T=import('./types').NamedDocumentConstructor]\n    *\n    * Destroys and removes embedded collection stores. Invoking this method with no parameters destroys all stores.\n    * Invoking with an embedded name destroys all stores for that particular collection. If you provide an embedded and\n    * store name just that particular store is destroyed and removed.\n    *\n    * @param {T}   [FoundryDoc] - A Foundry document class / constructor.\n    *\n    * @param {string}   [storeName] - Specific store name.\n    *\n    * @returns {boolean} One or more stores destroyed?\n    */\n   destroy(FoundryDoc, storeName)\n   {\n      let count = 0;\n\n      // Destroy all embedded stores\n      if (FoundryDoc === void 0)\n      {\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n            for (const store of embeddedData.stores.values())\n            {\n               store.destroy();\n               count++;\n            }\n         }\n\n         this.#name.clear();\n      }\n      else\n      {\n         const docName = FoundryDoc?.documentName;\n\n         if (typeof docName !== 'string')\n         {\n            throw new TypeError(\n             `EmbeddedStoreManager.delete error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n         }\n\n         if (storeName === void 0)\n         {\n            const embeddedData = this.#name.get(docName);\n            if (embeddedData)\n            {\n               embeddedData.collection = null;\n               for (const store of embeddedData.stores.values())\n               {\n                  store.destroy();\n                  count++;\n               }\n            }\n\n            this.#name.delete(docName);\n         }\n         else if (storeName === 'string')\n         {\n            const embeddedData = this.#name.get(docName);\n            if (embeddedData)\n            {\n               const store = embeddedData.stores.get(storeName);\n               if (store)\n               {\n                  store.destroy();\n                  count++;\n               }\n            }\n         }\n      }\n\n      return count > 0;\n   }\n\n   /**\n    * @template [T=import('./types').NamedDocumentConstructor]\n    *\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\n    *\n    * @param {string} storeName - Name of the embedded collection to retrieve.\n    *\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, InstanceType<T>>} DynMapReducer\n    *          instance.\n    */\n   get(FoundryDoc, storeName)\n   {\n      const docName = FoundryDoc?.documentName;\n\n      if (typeof docName !== 'string')\n      {\n         throw new TypeError(\n          `EmbeddedStoreManager.get error: 'FoundryDoc' does not have a valid 'documentName' property.`);\n      }\n\n      if (!this.#name.has(docName)) { return void 0; }\n\n      return this.#name.get(docName).stores.get(storeName);\n   }\n\n   /**\n    * Updates all existing embedded collection stores with the associated embedded collection\n    */\n   handleDocChange()\n   {\n      const doc = this.#document[0];\n\n      if (doc instanceof globalThis.foundry.abstract.Document)\n      {\n         const existingEmbeddedNames = new Set(this.#name.keys());\n\n         /** @type {[string, string][]} */\n         const embeddedNames = Object.entries(doc.constructor?.metadata?.embedded ?? []);\n\n         this.#collectionToDocName.clear();\n\n         // Remove all previously stored embedded name CRUD keys.\n         this.#embeddedNames.clear();\n\n         for (const [docName, collectionName] of embeddedNames)\n         {\n            // Remove processed embedded doc name from existingEmbeddedNames set.\n            existingEmbeddedNames.delete(docName);\n\n            // Update CRUD keys for v10.\n            this.#embeddedNames.add(`create${docName}`);\n            this.#embeddedNames.add(`delete${docName}`);\n            this.#embeddedNames.add(`update${docName}`);\n\n            // Update CRUD keys for v11.\n            this.#embeddedNames.add(`create.${collectionName}`);\n            this.#embeddedNames.add(`delete.${collectionName}`);\n            this.#embeddedNames.add(`update.${collectionName}`);\n\n            // Update CRUD keys for v12.\n            this.#embeddedNames.add(`create${collectionName}`);\n            this.#embeddedNames.add(`delete${collectionName}`);\n            this.#embeddedNames.add(`update${collectionName}`);\n\n            // v10 collection to doc name lookup.\n            this.#collectionToDocName.set(docName, docName);\n            this.#collectionToDocName.set(collectionName, docName);\n\n            let collection = null;\n\n            try\n            {\n               // Update any existing stores with the actual collection.\n               collection = doc.getEmbeddedCollection(docName);\n            }\n            catch (err)\n            {\n               console.warn(`EmbeddedStoreManager.handleDocUpdate error: No valid embedded collection for: ${docName}`);\n            }\n\n            // Update EmbeddedData for new collection.\n            const embeddedData = this.#name.get(docName);\n            if (embeddedData)\n            {\n               embeddedData.collection = collection;\n\n               // Update all existing stores.\n               for (const store of embeddedData.stores.values()) { store.setData(collection, true); }\n            }\n         }\n\n         // Update all existing embedded collections with null data that aren't processed above.\n         for (const embeddedName of existingEmbeddedNames)\n         {\n            const embeddedData = this.#name.get(embeddedName);\n            if (embeddedData)\n            {\n               embeddedData.collection = null;\n\n               for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n            }\n         }\n      }\n      else // Reset all embedded reducer stores to null data.\n      {\n         this.#collectionToDocName.clear();\n         this.#embeddedNames.clear();\n\n         for (const embeddedData of this.#name.values())\n         {\n            embeddedData.collection = null;\n\n            for (const store of embeddedData.stores.values()) { store.setData(null, true); }\n         }\n      }\n   }\n\n   /**\n    * Handles updates to embedded stores parsing the render context for valid embedded store types.\n    *\n    * On create, delete, update parse the type being modified then force index updates for the embedded type.\n    *\n    * @param {string}   renderContext - render context update from document.\n    */\n   handleUpdate(renderContext)\n   {\n      if (!this.#embeddedNames.has(renderContext)) { return; }\n\n      const match = EmbeddedStoreManager.#renderContextRegex.exec(renderContext);\n\n      if (match)\n      {\n         const docOrCollectionName = match.groups.name;\n         const embeddedName = this.#collectionToDocName.get(docOrCollectionName);\n\n         if (!this.#name.has(embeddedName)) { return; }\n\n         for (const store of this.#name.get(embeddedName).stores.values())\n         {\n            store.index.update(true);\n         }\n      }\n   }\n}\n\n/**\n * @template T\n *\n * @typedef {object} EmbeddedCollectionData\n *\n * @property {foundry.abstract.Collection} collection -\n *\n * @property {Map<string, import('#runtime/svelte/store/reducer').DynMapReducer<string, T>>} stores -\n */\n\n/**\n * @template [T=globalThis.foundry.abstract.Document]\n *\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n */\nclass TJSDocument\n{\n   /**\n    * @type {T[]}\n    */\n   #document = [void 0];\n\n   /**\n    * @type {EmbeddedStoreManager}\n    */\n   #embeddedStoreManager;\n\n   /**\n    * @type {import('./types').EmbeddedAPI}\n    */\n   #embeddedAPI;\n\n   /**\n    * @type {string}\n    */\n   #uuidv4;\n\n   /**\n    * @type {TJSDocumentOptions}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   /**\n    * @type {((value: T, updateOptions?: TJSDocumentUpdateOptions) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSDocumentUpdateOptions}\n    */\n   #updateOptions;\n\n   /**\n    * @param {T | TJSDocumentOptions}  [document] - Document to wrap or TJSDocumentOptions.\n    *\n    * @param {TJSDocumentOptions}      [options] - TJSDocument options.\n    */\n   constructor(document, options = {})\n   {\n      this.#uuidv4 = `tjs-document-${Hashing.uuidv4()}`;\n\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(document);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(document);\n      }\n   }\n\n   /**\n    * @returns {import('./types').EmbeddedAPI} Embedded store manager.\n    */\n   get embedded()\n   {\n      if (!this.#embeddedAPI)\n      {\n         this.#embeddedStoreManager = new EmbeddedStoreManager(this.#document);\n\n         /** @type {import('./types').EmbeddedAPI} */\n         this.#embeddedAPI = {\n            create: (doc, options) => this.#embeddedStoreManager.create(doc, options),\n            destroy: (doc, storeName) => this.#embeddedStoreManager.destroy(doc, storeName),\n            get: (doc, storeName) => this.#embeddedStoreManager.get(doc, storeName)\n         };\n      }\n\n      return this.#embeddedAPI;\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {TJSDocumentUpdateOptions} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuidv4() { return this.#uuidv4; }\n\n   /**\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const doc = this.#document[0];\n\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\n      if (doc instanceof globalThis.foundry.abstract.Document && !doc?.collection?.has(doc.id))\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#setDocument(void 0);\n\n         if (typeof this.#options.preDelete === 'function')\n         {\n            await this.#options.preDelete(doc);\n         }\n\n         this.#updateSubscribers(false, { action: 'delete', data: void 0 });\n\n         if (typeof this.#options.delete === 'function')\n         {\n            await this.#options.delete(doc);\n         }\n\n         this.#updateOptions = void 0;\n      }\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * ClientDocumentMixin `apps` tracking object.\n    */\n   destroy()\n   {\n      const doc = this.#document[0];\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.destroy();\n         this.#embeddedStoreManager = void 0;\n         this.#embeddedAPI = void 0;\n      }\n\n      if (doc instanceof globalThis.foundry.abstract.Document)\n      {\n         delete doc?.apps[this.#uuidv4];\n         this.#setDocument(void 0);\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have document update context.\n    */\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      const doc = this.#document[0];\n\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](doc, options); }\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.handleUpdate(options.renderContext);\n      }\n   }\n\n   /**\n    * @returns {T} Current document\n    */\n   get() { return this.#document[0]; }\n\n   /**\n    * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\n    *\n    * @param {object}   data - Drop transfer data.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.actor=true] - Accept actor owned documents.\n    *\n    * @param {boolean}  [opts.compendium=true] - Accept compendium documents.\n    *\n    * @param {boolean}  [opts.world=true] - Accept world documents.\n    *\n    * @param {string[]|undefined}   [opts.types] - Require the `data.type` to match entry in `types`.\n    *\n    * @returns {string|undefined} Foundry UUID for drop data.\n    */\n   static getUUIDFromDataTransfer(data, { actor = true, compendium = true, world = true, types = void 0 } = {})\n   {\n      if (!isObject(data)) { return void 0; }\n      if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\n\n      let uuid = void 0;\n\n      if (typeof data.uuid === 'string') // v10 and above provides a full UUID.\n      {\n         const isCompendium = data.uuid.startsWith('Compendium');\n\n         if (isCompendium && compendium)\n         {\n            uuid = data.uuid;\n         }\n         else if (world)\n         {\n            uuid = data.uuid;\n         }\n      }\n      else // v9 and below parsing.\n      {\n         if (actor && world && data.actorId && data.type)\n         {\n            uuid = `Actor.${data.actorId}.${data.type}.${data.data._id}`;\n         }\n         else if (typeof data.id === 'string') // v9 and below uses `id`\n         {\n            if (compendium && typeof data.pack === 'string')\n            {\n               uuid = `Compendium.${data.pack}.${data.id}`;\n            }\n            else if (world)\n            {\n               uuid = `${data.type}.${data.id}`;\n            }\n         }\n      }\n\n      return uuid;\n   }\n\n\n   /**\n    * @param {T | undefined}  document - New document to set.\n    *\n    * @param {TJSDocumentUpdateOptions}   [options] - New document update options to set.\n    */\n   set(document, options = {})\n   {\n      if (this.#document[0])\n      {\n         delete this.#document[0].apps[this.#uuidv4];\n      }\n\n      if (document !== void 0 && !(document instanceof globalThis.foundry.abstract.Document))\n      {\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (document instanceof globalThis.foundry.abstract.Document)\n      {\n         document.apps[this.#uuidv4] = {\n            close: this.#deleted.bind(this),\n            render: this.#updateSubscribers.bind(this)\n         };\n      }\n\n      this.#setDocument(document);\n      this.#updateOptions = options;\n      this.#updateSubscribers();\n   }\n\n   /**\n    *\n    * @param {T | undefined} doc -\n    */\n   #setDocument(doc)\n   {\n      this.#document[0] = doc;\n\n      if (this.#embeddedStoreManager) { this.#embeddedStoreManager.handleDocChange(); }\n   }\n\n   /**\n    * Potentially sets new document from data transfer object.\n    *\n    * @param {object}   data - Document transfer data.\n    *\n    * @param {{ actor?: boolean, compendium?: boolean, world?: boolean, types?: string[] } & TJSDocumentOptions}   [options] - Optional\n    *        parameters.\n    *\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\n    */\n   async setFromDataTransfer(data, options)\n   {\n      return this.setFromUUID(TJSDocument.getUUIDFromDataTransfer(data, options), options);\n   }\n\n   /**\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\n    *\n    * @param {string}   uuid - A Foundry UUID to lookup.\n    *\n    * @param {TJSDocumentOptions}   [options] - New document update options to set.\n    *\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\n    */\n   async setFromUUID(uuid, options = {})\n   {\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\n\n      try\n      {\n         const doc = await globalThis.fromUuid(uuid);\n\n         if (doc)\n         {\n            this.set(doc, options);\n            return true;\n         }\n      }\n      catch (err) { /**/ }\n\n      return false;\n   }\n\n   /**\n    * Sets options for this document wrapper / store.\n    *\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.preDelete !== void 0 && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'preDelete' attribute in options is not a function.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n\n      if (options.preDelete === void 0 || typeof options.preDelete === 'function')\n      {\n         this.#options.preDelete = options.preDelete;\n      }\n   }\n\n   /**\n    * @param {(value: T, updateOptions?: TJSDocumentUpdateOptions) => void} handler - Callback function that is\n    * invoked on update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\n\n      const updateOptions = { action: 'subscribe', data: void 0 };\n\n      handler(this.#document[0], updateOptions);      // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\n/**\n * @typedef {object} TJSDocumentOptions\n *\n * @property {(doc: globalThis.foundry.abstract.Document) => void} [delete] Optional post delete function to invoke when\n * document is deleted _after_ subscribers have been notified.\n *\n * @property {(doc: globalThis.foundry.abstract.Document) => void} [preDelete] Optional pre delete function to invoke\n * when document is deleted _before_ subscribers are notified.\n */\n\n/**\n * @typedef TJSDocumentUpdateOptions Provides data regarding the latest document change.\n *\n * @property {string}   [action] The update action. Useful for filtering.\n *\n * @property {string}   [renderContext] The update action. Useful for filtering.\n *\n * @property {object[]|string[]} [data] Foundry data associated with document changes.\n */\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @template [T=DocumentCollection]\n */\nclass TJSDocumentCollection\n{\n   #collection;\n   #collectionCallback;\n   #uuid;\n\n   /**\n    * @type {TJSDocumentCollectionOptions}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   /**\n    * @type {((value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSDocumentCollectionUpdateOptions<T>}\n    */\n   #updateOptions;\n\n   /**\n    * @param {T | TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\n    *\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\n    */\n   constructor(collection, options = {})\n   {\n      this.#uuid = `tjs-collection-${Hashing.uuidv4()}`;\n\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(collection);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(collection);\n      }\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {TJSDocumentCollectionUpdateOptions<T>} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuid() { return this.#uuid; }\n\n   /**\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      if (typeof this.#options.preDelete === 'function')\n      {\n         await this.#options.preDelete(collection);\n      }\n\n      this.#notify(false, { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\n\n      if (typeof this.#options.delete === 'function')\n      {\n         await this.#options.delete(collection);\n      }\n\n      this.#updateOptions = void 0;\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * DocumentCollection `apps` tracking array.\n    */\n   destroy()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection)\n      {\n         const index = collection?.apps?.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { collection?.apps?.splice(index, 1); }\n\n         this.#collection = void 0;\n      }\n\n      this.#options.delete = void 0;\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {object}   [options] - Options from render call; will have collection update context.\n    */\n   #notify(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\n      // support until 2023. IE not doing this will require several extra method calls otherwise.\n      const subscriptions = this.#subscriptions;\n      const collection = this.#collection;\n\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\n   }\n\n   /**\n    * @returns {T} Current collection\n    */\n   get() { return this.#collection; }\n\n   /**\n    * @param {T | undefined}  collection - New collection to set.\n    *\n    * @param {object}         [options] - New collection update options to set.\n    */\n   set(collection, options = {})\n   {\n      if (this.#collection)\n      {\n         const index = this.#collection.apps.findIndex((sub) => sub === this.#collectionCallback);\n         if (index >= 0) { this.#collection.apps.splice(index, 1); }\n\n         this.#collectionCallback = void 0;\n      }\n\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\n      {\n         throw new TypeError(\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      if (collection instanceof DocumentCollection)\n      {\n         this.#collectionCallback = {\n            close: this.#deleted.bind(this),\n            render: this.#notify.bind(this)\n         };\n\n         collection?.apps?.push(this.#collectionCallback);\n      }\n\n      this.#collection = collection;\n      this.#updateOptions = options;\n      this.#notify();\n   }\n\n   /**\n    * Sets options for this collection wrapper / store.\n    *\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function.`);\n      }\n\n      if (options.preDelete !== void 0 && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'preDelete' attribute in options is not a function.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete === void 0 || typeof options.delete === 'function')\n      {\n         this.#options.delete = options.delete;\n      }\n\n      if (options.preDelete === void 0 || typeof options.preDelete === 'function')\n      {\n         this.#options.preDelete = options.preDelete;\n      }\n   }\n\n   /**\n    * @param {(value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void} handler - Callback function\n    * that is invoked on update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\n\n      const collection = this.#collection;\n\n      const documentType = collection?.documentName ?? void 0;\n\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\n\n      handler(collection, updateOptions);  // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n}\n\nexport { TJSDocument, TJSDocumentCollection };\n//# sourceMappingURL=index.js.map\n","\n\nimport WelcomeAppShell from './WelcomeAppShell.svelte';\nimport { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\nimport { TJSDocument } from \"@typhonjs-fvtt/runtime/svelte/store/fvtt/document\";\nimport { MODULE_ID, MODULE_CODE } from \"~/src/helpers/constants\"\nimport { version } from \"../../module.json\";\n\nexport default class WelcomeApplication extends SvelteApplication\n{\n   /**\n    * Default Application options\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n    */\n   static get defaultOptions()\n   {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n        id: 'foundryvtt-actor-studio-welcome',\n        classes: [MODULE_CODE],\n         resizable: true,\n         minimizable: true,\n         width: 500,\n         height: 450,\n         headerIcon: 'modules/foundryvtt-actor-studio/assets/actor-studio-logo-dragon-white.svg',\n         title: game.i18n.localize('GAS.ActorStudio')+' v'+version,\n         svelte: {\n            class: WelcomeAppShell,\n            target: document.body,\n            intro: true,\n            props: {\n               version  // A prop passed to HelloFoundryAppShell for the initial message displayed.\n            }\n         }\n      });\n   }\n}","export default function preventDefault(event) {\n  event.preventDefault();\n  return;\n}","import { tick } from 'svelte';\nimport { subscribeFirstRest } from '@typhonjs-fvtt/runtime/util/store';\nimport { Timing } from '@typhonjs-fvtt/runtime/util';\nimport { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\n * Defines an `Element.animate` animation from provided keyframes and options.\n *\n * @param {object}         [opts] - Optional parameters.\n *\n * @param {number}         [opts.duration=600] - Duration in milliseconds.\n *\n * @param {Array|object}   opts.keyframes - An array of keyframe objects or a keyframe object whose properties are\n *                                          arrays of values to iterate over.\n *\n * @param {object}         [opts.options] - An object containing one or more timing properties. When defined it is used\n *                                          instead of duration.\n *\n * @param {string}         [opts.event='click'] - DOM event to bind element to respond with the ripple effect.\n *\n * @param {number}         [opts.debounce=undefined] - Add a debounce to incoming events in milliseconds.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API/Keyframe_Formats\n *\n * @returns {import('svelte/action').Action} Actual action.\n */\nfunction animate({ duration = 600, keyframes = [], options, event = 'click', debounce } = {})\n{\n   return (element) =>\n   {\n      /**\n       * Creates WAAPI animation.\n       */\n      function createAnimation()\n      {\n         element.animate(keyframes, isObject(options) ? options : duration);\n      }\n\n      const eventFn = Number.isInteger(debounce) && debounce > 0 ? Timing.debounce(createAnimation, debounce) :\n       createAnimation;\n\n      element.addEventListener(event, eventFn);\n\n      return {\n         destroy: () => element.removeEventListener(event, eventFn)\n      };\n   };\n}\n\n/**\n * Combines multiple composable actions.\n *\n * Note: The update function passes the same variable to all update functions of each action.\n *\n * @param {...import('svelte/action').Action} actions - One or more composable action functions to combine.\n *\n * @returns {import('svelte/action').Action<HTMLElement, any>} Composed action.\n */\nfunction composable(...actions)\n{\n   return (element, options) =>\n   {\n      let lifecycle = actions.map((action) => action(element, options));\n\n      return {\n         destroy: () =>\n         {\n            for (const action of lifecycle)\n            {\n               if (typeof action.destroy === 'function') { action.destroy(); }\n            }\n\n            lifecycle = void 0;\n         },\n         update: (parameters) =>\n         {\n            for (const action of lifecycle)\n            {\n               if (typeof action.update === 'function') { action.update(parameters); }\n            }\n         }\n      };\n   };\n}\n\n/**\n * Defines the classic Material Design ripple effect as an action. `ripple` is a wrapper around the returned action.\n * This allows it to be easily used as a prop.\n *\n * Note: A negative one translateZ transform is applied to the added spans allowing other content to be layered on top\n * with a positive translateZ.\n *\n * Styling: There is a single CSS variable `--tjs-action-ripple-background` that can be set to control the background.\n *\n * @param {object}   [opts] - Optional parameters.\n *\n * @param {number}   [opts.duration=600] - Duration in milliseconds.\n *\n * @param {string}   [opts.background='rgba(255, 255, 255, 0.7)'] - A valid CSS background attribute.\n *\n * @param {Iterable<string>}  [opts.events=['click', 'keyup']] - DOM event to bind element to respond with the ripple\n *                                                                  effect.\n *\n * @param {string}   [opts.keyCode='Enter'] - Key code to trigger for any applicable key events.\n *\n * @param {number}   [opts.debounce=undefined] - Add a debounce to incoming events in milliseconds.\n *\n * @returns {import('svelte/action').Action} Actual action.\n */\nfunction ripple({ duration = 600, background = 'rgba(255, 255, 255, 0.7)', events = ['click', 'keyup'],\n keyCode = 'Enter', debounce } = {})\n{\n   return (element) =>\n   {\n      /**\n       * Creates the ripple effect.\n       *\n       * @param {MouseEvent|KeyboardEvent}   e -\n       */\n      function createRipple(e)\n      {\n         const elementRect = element.getBoundingClientRect();\n\n         const diameter = Math.max(elementRect.width, elementRect.height);\n         const radius = diameter / 2;\n\n         // Find the adjusted click location relative to center or if no `clientX/Y` parameters choose center.\n         const left = e.clientX ? `${e.clientX - (elementRect.left + radius)}px` : '0';\n         const top = e.clientY ? `${e.clientY - (elementRect.top + radius)}px` : '0';\n\n         const span = document.createElement('span');\n\n         span.style.position = 'absolute';\n         span.style.width = `${diameter}px`;\n         span.style.height = `${diameter}px`;\n         span.style.left = left;\n         span.style.top = top;\n\n         span.style.background = `var(--tjs-action-ripple-background, ${background})`;\n         span.style.borderRadius = '50%';\n         span.style.pointerEvents = 'none';\n         span.style.transform = 'translateZ(-1px)';\n\n         element.prepend(span);\n\n         const animation = span.animate([\n            {  // from\n               transform: 'scale(.7)',\n               opacity: 0.5,\n               filter: 'blur(2px)'\n            },\n            {  // to\n               transform: 'scale(4)',\n               opacity: 0,\n               filter: 'blur(5px)'\n            }\n         ],\n         duration);\n\n         animation.onfinish = () =>\n         {\n            if (span && span.isConnected) { span.remove(); }\n         };\n      }\n\n      /**\n       * Handles any key event and only triggers the ripple effect if key code matches.\n       *\n       * @param {KeyboardEvent}  event -\n       */\n      function keyHandler(event)\n      {\n         if (event?.code === keyCode) { createRipple(event); }\n      }\n\n      const eventFn = Number.isInteger(debounce) && debounce > 0 ? Timing.debounce(createRipple, debounce) :\n       createRipple;\n\n      const keyEventFn = Number.isInteger(debounce) && debounce > 0 ? Timing.debounce(keyHandler, debounce) :\n       keyHandler;\n\n      for (const event of events)\n      {\n         if (['keydown', 'keyup'].includes(event))\n         {\n            element.addEventListener(event, keyEventFn);\n         }\n         else\n         {\n            element.addEventListener(event, eventFn);\n         }\n      }\n\n      return {\n         destroy: () =>\n         {\n            for (const event of events)\n            {\n               if (['keydown', 'keyup'].includes(event))\n               {\n                  element.removeEventListener(event, keyEventFn);\n               }\n               else\n               {\n                  element.removeEventListener(event, eventFn);\n               }\n            }\n         }\n      };\n   };\n}\n\n/**\n * Defines the classic Material Design ripple effect as an action that is attached to an elements focus and blur events.\n * `rippleFocus` is a wrapper around the returned action. This allows it to be easily used as a prop.\n *\n * Note: A negative one translateZ transform is applied to the added span allowing other content to be layered on top\n * with a positive translateZ.\n *\n * If providing the `selectors` option a target child element will be registered for the focus events otherwise the\n * first child is targeted with a final fallback of the element assigned to this action.\n *\n * Styling: There is a single CSS variable `--tjs-action-ripple-background-focus` that can be set to control the\n * background with a fallback to `--tjs-action-ripple-background`.\n *\n * @param {object}   [opts] - Optional parameters.\n *\n * @param {number}   [opts.duration=600] - Duration in milliseconds.\n *\n * @param {string}   [opts.background='rgba(255, 255, 255, 0.7)'] - A valid CSS background attribute.\n *\n * @param {string}   [opts.selectors] - A valid CSS selectors string.\n *\n * @returns {import('svelte/action').Action} Actual action.\n */\nfunction rippleFocus({ duration = 300, background = 'rgba(255, 255, 255, 0.7)', selectors } = {})\n{\n   return (element) =>\n   {\n      const targetEl = typeof selectors === 'string' ? element.querySelector(selectors) :\n       element.firstChild instanceof HTMLElement ? element.firstChild : element;\n\n      let span = void 0;\n      let clientX = -1;\n      let clientY = -1;\n\n      /**\n       * WAAPI ripple animation on blur.\n       */\n      function blurRipple()\n      {\n         // When clicking outside the browser window or to another tab `document.activeElement` remains\n         // the same despite blur being invoked; IE the target element.\n         if (!(span instanceof HTMLElement) || document.activeElement === targetEl)\n         {\n            return;\n         }\n\n         const animation = span.animate(\n         [\n            {  // from\n               transform: 'scale(3)',\n               opacity: 0.3,\n            },\n            {  // to\n               transform: 'scale(.7)',\n               opacity: 0.0,\n            }\n         ],\n         {\n            duration,\n            fill: 'forwards'\n         });\n\n         animation.onfinish = () =>\n         {\n            clientX = clientY = -1;\n            if (span && span.isConnected) { span.remove(); }\n            span = void 0;\n         };\n      }\n\n      /**\n       * WAAPI ripple animation on focus.\n       */\n      function focusRipple()\n      {\n         // If already focused and the span exists do not create another ripple effect.\n         if (span instanceof HTMLElement) { return; }\n\n         const elementRect = element.getBoundingClientRect();\n\n         // The order of events don't always occur with a pointer event first. In this case use the center of the\n         // element as the click point. Mostly this is seen when the focused target element has a followup event off\n         // the app / screen. If the next pointer down occurs on the target element the focus callback occurs before\n         // pointer down in Chrome and Firefox.\n         const actualX = clientX >= 0 ? clientX : elementRect.left + (elementRect.width / 2);\n         const actualY = clientX >= 0 ? clientY : elementRect.top + (elementRect.height / 2);\n\n         const diameter = Math.max(elementRect.width, elementRect.height);\n         const radius = diameter / 2;\n         const left = `${actualX - (elementRect.left + radius)}px`;\n         const top = `${actualY - (elementRect.top + radius)}px`;\n\n         span = document.createElement('span');\n\n         span.style.position = 'absolute';\n         span.style.width = `${diameter}px`;\n         span.style.height = `${diameter}px`;\n         span.style.left = left;\n         span.style.top = top;\n\n         span.style.background =\n          `var(--tjs-action-ripple-background-focus, var(--tjs-action-ripple-background, ${background}))`;\n\n         span.style.borderRadius = '50%';\n         span.style.pointerEvents = 'none';\n         span.style.transform = 'translateZ(-1px)';\n\n         element.prepend(span);\n\n         span.animate([\n            {  // from\n               transform: 'scale(.7)',\n               opacity: 0.5,\n            },\n            {  // to\n               transform: 'scale(3)',\n               opacity: 0.3,\n            }\n         ],\n         {\n            duration,\n            fill: 'forwards'\n         });\n      }\n\n      /**\n       * Store the pointer down location for the origination of the ripple.\n       *\n       * @param {PointerEvent} e - A PointerEvent.\n       */\n      function onPointerDown(e)\n      {\n         clientX = e.clientX;\n         clientY = e.clientY;\n      }\n\n      targetEl.addEventListener('pointerdown', onPointerDown);\n      targetEl.addEventListener('blur', blurRipple);\n      targetEl.addEventListener('focus', focusRipple);\n\n      return {\n         destroy: () =>\n         {\n            targetEl.removeEventListener('pointerdown', onPointerDown);\n            targetEl.removeEventListener('blur', blurRipple);\n            targetEl.removeEventListener('focus', focusRipple);\n         }\n      };\n   };\n}\n\n/**\n * Provides a toggle action for `details` HTML elements. The boolean store provided controls animation.\n *\n * It is not necessary to bind the store to the `open` attribute of the associated details element.\n *\n * When the action is triggered to close the details element a data attribute `closing` is set to `true`. This allows\n * any associated closing transitions to start immediately.\n *\n * @param {HTMLDetailsElement} details - The details element.\n *\n * @param {object} opts - Options parameters.\n *\n * @param {import('svelte/store').Writable<boolean>} opts.store - A boolean store.\n *\n * @param {boolean} [opts.clickActive] - When false click events are not handled.\n *\n * @returns {import('svelte/action').ActionReturn} Lifecycle functions.\n */\nfunction toggleDetails(details, { store, clickActive = true } = {})\n{\n   /** @type {HTMLElement} */\n   const summary = details.querySelector('summary');\n\n   /** @type {Animation} */\n   let animation;\n\n   /** @type {boolean} */\n   let open = details.open;  // eslint-disable-line no-shadow\n\n   // The store sets initial open state and handles animation on further changes.\n   const unsubscribe = subscribeFirstRest(store, (value) => { open = value; details.open = open; }, async (value) =>\n   {\n      open = value;\n\n      // Await `tick` to allow any conditional logic in the template to complete updating before handling animation.\n      await tick();\n\n      handleAnimation();\n   });\n\n   /**\n    * @param {number} a -\n    *\n    * @param {number} b -\n    *\n    * @param {boolean} value -\n    */\n   function animate(a, b, value)\n   {\n      details.style.overflow = 'hidden';\n\n      // Must guard when `b - a === 0`; add a small epsilon and wrap with Math.max.\n      const duration = Math.max(0, 30 * Math.log(Math.abs(b - a) + Number.EPSILON));\n\n      animation = details.animate(\n       {\n          height: [`${a}px`, `${b}px`]\n       },\n       {\n          duration,\n          easing: 'ease-out'\n       }\n      );\n\n      animation.onfinish = () =>\n      {\n         details.open = value;\n         details.dataset.closing = 'false';\n         details.style.overflow = '';\n      };\n   }\n\n   /**\n    * Handles animation coordination based on current state.\n    */\n   function handleAnimation()\n   {\n      if (open)\n      {\n         const a = details.offsetHeight;\n         if (animation) { animation.cancel(); }\n         details.open = true;\n         const b = details.offsetHeight;\n\n         animate(a, b, true);\n      }\n      else\n      {\n         const a = details.offsetHeight;\n         const b = summary.offsetHeight;\n\n         details.dataset.closing = 'true';\n\n         animate(a, b, false);\n      }\n   }\n\n   /**\n    * @param {MouseEvent} e - A mouse event.\n    */\n   function handleClick(e)\n   {\n      if (clickActive)\n      {\n         e.preventDefault();\n\n         // Simply set the store to the opposite of current open state and the callback above handles animation.\n         store.set(!open);\n      }\n   }\n\n   summary.addEventListener('click', handleClick);\n\n   return {\n      destroy()\n      {\n         unsubscribe();\n         summary.removeEventListener('click', handleClick);\n      }\n   };\n}\n\nexport { animate, composable, ripple, rippleFocus, toggleDetails };\n//# sourceMappingURL=index.js.map\n","<script>\n  import preventDefault from \"~/src/helpers/svelte-actions/PreventDefault.js\";\n  import { ripple } from \"@typhonjs-fvtt/runtime/svelte/action/animate\";\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import { dropItemRegistry } from \"~/src/stores/index\";\n\n  export let tabs = [];\n  export let sheet;\n  export let activeTab = void 0;\n  export let efx = ripple();\n\n  let initialTabs = [];\n\n  $: tabComponents = {}\n\n  // if the tabs change, load the new components\n  $: if(initialTabs !== tabs) {\n    initialTabs = tabs;\n    for (const tab of tabs) {\n      import(`~/src/components/organisms/dnd5e/Tabs/${tab.component}.svelte`).then(module => {\n        tabComponents[tab.component] = module.default;\n      });\n    }\n  }\n\n  onMount(async () => {\n    initialTabs = tabs;\n    for (const tab of tabs) {\n      const module = await import(`~/src/components/organisms/dnd5e/Tabs/${tab.component}.svelte`);\n      tabComponents[tab.component] = module.default;\n    }\n  });\n  \n  // Subscribe to the currentProcess to know when advancements are active\n  $: isAdvancementTab = activeTab === 'advancements';\n</script>\n\n<!--List of tabs-->\n<div class=\"tabs {$$restProps.class}\">\n  <!--Tab List-->\n  <div class=\"tabs-list\">\n    <!--For each tab-->\n    {#each tabs as tab, idx}\n      <button\n        class=\"{activeTab === tab.id ? 'active ' : ''}\"\n        on:click={() => {\n          activeTab = tab.id;\n        }}\n        on:mousedown={preventDefault}\n        use:efx\n      >\n        {tab.label}\n      </button>\n    {/each}\n  </div>\n\n  <!--Tab Content-->\n  <div class=\"tab-content\">\n    {#each tabs as tab}\n      {#if tab.id === activeTab && tabComponents[tab.component]}\n        <svelte:component this={tabComponents[tab.component]} {sheet} />\n      {/if}\n    {/each}\n  </div>\n</div>\n\n<style lang=\"scss\">\n  @import \"../../../styles/Mixins.scss\";\n\n  .tabs {\n    @include flex-column;\n    @include flex-group-top;\n    @include border;\n    height: 100%;\n    width: 100%;\n\n    .tabs-list {\n      @include flex-row;\n      @include flex-space-evenly;\n      @include border-bottom;\n      @include panel-1;\n      list-style: none;\n      width: 100%;\n      margin: 0;\n      padding: 0.25rem;\n      height: 100%;\n      flex: 0;\n\n      button {\n        --button-border-radius: 5px;\n        --button-line-height: var(--tab-line-height);\n        --button-font-size: var(--tab-font-size);\n        @include button;\n        position: relative;\n        overflow: hidden;\n        width: 100%;\n        height: 200%;\n        margin: -10px 2px;\n        font-weight: normal;\n        font-size: larger;\n        margin-bottom: -10px;\n        padding: 10px 0;\n        align-items: end;\n\n        &:not(:first-child) {\n          border-left: none;\n        }\n\n        &:not(.active) {\n          &:before {\n            content: \"\";\n            border-top: 5px solid var(--color-border-highlight);\n            position: absolute;\n            width: 100%;\n            bottom: 5px;\n          } \n          &:not(:hover) {\n            &:before {\n              border-top: 5px solid brown;\n            }\n          }\n        }\n\n        &.active {\n          &:hover {\n            background: #f9f9f9;\n            box-shadow: none;\n          }\n          font-weight: bold;\n          background: #f9f9f9;\n          color: var(--dnd5e-color-gold)\n        }\n      }\n    }\n  }\n\n\n  .tab-content {\n    @include flex-column;\n    flex: 2;\n    width: 100%;\n    position: relative;\n  }\n\n  .readonly-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.4);\n    z-index: 100;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .overlay-message {\n    background: #fff;\n    padding: 1rem;\n    border-radius: 5px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n\n  button.readonly {\n    opacity: 0.7;\n    cursor: not-allowed;\n\n    &:hover {\n      box-shadow: none;\n      background: inherit;\n    }\n  }\n</style>\n","import { writable, derived, get } from 'svelte/store';\n\n// Store structure will track selections by group\n// { \n//   groupId: { \n//     selectedItemId: string, \n//     selectedItem: object, \n//     completed: boolean, \n//     inProgress: boolean,\n//     granularSelections: {\n//       // For special types (tool, weapon, armor, focus)\n//       self?: string[], // UUIDs from equipment packs\n//       // For subgroups (AND/OR)\n//       children?: {\n//         [childId: string]: {\n//           type: string, // The special type if any\n//           selections: string[] // UUIDs from equipment packs\n//         }\n//       }\n//     }\n//   } \n// }\nexport const equipmentSelections = writable({});\n\nconst GRANULAR_TYPES = ['tool', 'weapon', 'armor', 'focus'];\nconst SUBGROUP_TYPES = ['AND', 'OR'];\n\nexport function getRequiredSelectionsCount(item) {\n  return item.count || 1;\n}\n\nfunction needsGranularSelection(item) {\n  return GRANULAR_TYPES.includes(item.type) || SUBGROUP_TYPES.includes(item.type);\n}\n\n// Add this function to check if an item requires multiple selections\nexport function getRequiredSelections(item) {\n  // If the item has a count > 1 and is not an AND type, it requires multiple selections\n  return item.count > 1 && item.type !== 'AND' ? item.count : 1;\n}\n\n// Helper functions to manage selections\nexport function selectEquipment(groupId, itemId) {\n  window.GAS.log.d('SELECT EQUIPMENT | Entry', {\n    groupId,\n    itemId,\n    currentState: get(equipmentSelections)\n  });\n\n  equipmentSelections.update(state => {\n    const group = state[groupId];\n    if (!group) return state;\n\n    // Prevent additional selections if:\n    // 1. The group is completed and not being edited\n    // 2. The group has a selected item and is in progress (handling granular selection)\n    if ((group.completed && !group.inProgress) || \n        (group.selectedItemId && group.inProgress)) {\n      return state;\n    }\n\n    const selectedItem = group.items.find(i => i._id === itemId);\n    if (!selectedItem) return state;\n\n    window.GAS.log.d('SELECT EQUIPMENT | Processing selection', {\n      selectedItem,\n      isAND: selectedItem.type === 'AND',\n      hasGranularChildren: selectedItem.type === 'AND' && \n        selectedItem.children?.some(child => GRANULAR_TYPES.includes(child.type))\n    });\n\n    // For granular types (weapon, armor, tool, focus), keep the group in progress\n    if (GRANULAR_TYPES.includes(selectedItem.type)) {\n      window.GAS.log.d('SELECT EQUIPMENT | Granular type selection', {\n        type: selectedItem.type,\n        groupId,\n        itemId\n      });\n\n      return {\n        ...state,\n        [groupId]: {\n          ...group,\n          selectedItemId: itemId,\n          selectedItem,\n          completed: false,\n          inProgress: true,\n          granularSelections: { self: [], children: {} } // Reset granular selections\n        }\n      };\n    }\n\n    // Find next group for progression\n    const sortedGroups = Object.values(state)\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n    const nextGroup = sortedGroups.find(g => \n      !g.completed && g.id !== groupId\n    );\n\n    // For regular linked items or AND groups, use the original simple selection logic\n    if (selectedItem.type === 'linked' || selectedItem.type === 'AND') {\n      const hasGranularChildren = selectedItem.type === 'AND' && \n        selectedItem.children?.some(child => GRANULAR_TYPES.includes(child.type));\n\n      window.GAS.log.d('SELECT EQUIPMENT | AND/linked processing', {\n        type: selectedItem.type,\n        hasGranularChildren,\n        children: selectedItem.children\n      });\n\n      return {\n        ...state,\n        [groupId]: {\n          ...group,\n          selectedItemId: itemId,\n          selectedItem,\n          completed: !hasGranularChildren,\n          inProgress: hasGranularChildren,\n          granularSelections: hasGranularChildren ? { self: [], children: {} } : null // Reset granular selections for AND groups\n        },\n        ...((!hasGranularChildren && nextGroup) ? {\n          [nextGroup.id]: {\n            ...nextGroup,\n            inProgress: true\n          }\n        } : {})\n      };\n    }\n\n    // For granular children in an AND group\n    if (group.selectedItem?.type === 'AND' && GRANULAR_TYPES.includes(selectedItem.type)) {\n      window.GAS.log.d('SELECT EQUIPMENT | Granular child in AND group', {\n        groupId,\n        selectedItem,\n        parentGroup: group\n      });\n\n      // Keep the group in progress and maintain the current selectedItem (the AND group)\n      return {\n        ...state,\n        [groupId]: {\n          ...group,\n          inProgress: true,\n          completed: false\n        }\n      };\n    }\n\n    // For weapon/armor/tool selections that need multiple of the same item\n    if (selectedItem.count > 1 && GRANULAR_TYPES.includes(selectedItem.type)) {\n      if (!group.selectedItemId) {\n        // First selection\n        return {\n          ...state,\n          [groupId]: {\n            ...group,\n            selectedItemId: itemId,\n            selectedItem,\n            inProgress: true,\n            completed: false,\n            remainingSelections: selectedItem.count - 1,\n            selections: [{ itemId, count: 1 }],\n            granularSelections: { self: [], children: {} } // Reset granular selections\n          }\n        };\n      }\n\n      // Subsequent selections\n      const selections = [...(group.selections || [])];\n      const existingSelection = selections.find(s => s.itemId === itemId);\n      \n      if (existingSelection) {\n        existingSelection.count++;\n      } else {\n        selections.push({ itemId, count: 1 });\n      }\n\n      const remainingSelections = group.remainingSelections - 1;\n      const completed = remainingSelections === 0;\n\n      return {\n        ...state,\n        [groupId]: {\n          ...group,\n          selections,\n          remainingSelections,\n          completed,\n          inProgress: !completed\n        },\n        ...(completed && nextGroup ? {\n          [nextGroup.id]: {\n            ...nextGroup,\n            inProgress: true\n          }\n        } : {})\n      };\n    }\n\n    // Default case - single selection\n    return {\n      ...state,\n      [groupId]: {\n        ...group,\n        selectedItemId: itemId,\n        selectedItem,\n        completed: true,\n        inProgress: false,\n        granularSelections: null // Reset granular selections\n      },\n      ...(nextGroup ? {\n        [nextGroup.id]: {\n          ...nextGroup,\n          inProgress: true\n        }\n      } : {})\n    };\n  });\n}\n\nexport const flattenedSelections = derived(equipmentSelections, ($equipmentSelections) => {\n  const result = Object.values($equipmentSelections)\n    .filter(group => {\n      const hasSelection = !!group.selectedItem || group.type === 'standalone';\n      window.GAS.log.d('[FlattenedSelections] Group filtering', {\n        groupId: group.id,\n        type: group.type,\n        hasSelection,\n        items: group.items\n      });\n      return hasSelection;\n    })\n    .flatMap(group => {\n      window.GAS.log.d('[FlattenedSelections] Processing group', {\n        groupId: group.id,\n        groupType: group.type,\n        items: group.items?.map(item => ({\n          id: item._id,\n          type: item.type,\n          key: item.key,\n          count: item.count,\n          isAND: item.type === 'AND',\n          children: item.type === 'AND' ? item.children?.map(c => ({\n            id: c._id,\n            type: c.type,\n            key: c.key,\n            count: c.count\n          })) : null\n        })),\n        selectedItem: group.selectedItem,\n        granularSelections: group.granularSelections\n      });\n\n      const selections = [];\n\n      // For standalone groups, process all items\n      if (group.type === 'standalone') {\n        group.items.forEach(item => {\n          // If it's an AND group, process its children\n          if (item.type === 'AND') {\n            window.GAS.log.d('[FlattenedSelections] Processing AND item in standalone', {\n              itemId: item._id,\n              children: item.children\n            });\n            \n            item.children.forEach(child => {\n              if (child.type === 'linked') {\n                // For linked children, add them directly\n                const count = child.count || 1;\n                for (let i = 0; i < count; i++) {\n                  selections.push({\n                    type: child.type,\n                    key: child.key\n                  });\n                }\n              } else if (GRANULAR_TYPES.includes(child.type)) {\n                // For configurable children, check granular selections\n                const childSelections = group.granularSelections?.children?.[child._id]?.selections || [];\n                childSelections.forEach(uuid => {\n                  selections.push({\n                    type: child.type,\n                    key: uuid\n                  });\n                });\n              }\n            });\n          } else if (item.type === 'linked') {\n            // Handle regular linked items\n            const count = item.count || 1;\n            for (let i = 0; i < count; i++) {\n              selections.push({\n                type: item.type,\n                key: item.key\n              });\n            }\n          }\n        });\n\n        window.GAS.log.d('[FlattenedSelections] Standalone group selections', {\n          groupId: group.id,\n          selections: selections.map(s => ({\n            type: s.type,\n            key: s.key\n          }))\n        });\n\n        return selections;\n      }\n\n      // For choice groups with a selected item\n      if (group.selectedItem) {\n        if (GRANULAR_TYPES.includes(group.selectedItem.type)) {\n          if (group.granularSelections?.self?.length) {\n            group.granularSelections.self.forEach(uuid => {\n              selections.push({\n                type: group.selectedItem.type,\n                key: uuid\n              });\n            });\n          }\n        } else if (group.selectedItem.type === 'linked') {\n          const count = group.selectedItem.count || 1;\n          for (let i = 0; i < count; i++) {\n            selections.push({\n              type: group.selectedItem.type,\n              key: group.selectedItem.key\n            });\n          }\n        } else if (group.selectedItem.type === 'AND') {\n          // Process AND group children\n          group.selectedItem.children.forEach(child => {\n            if (child.type === 'linked') {\n              // For linked children, add them directly\n              const count = child.count || 1;\n              for (let i = 0; i < count; i++) {\n                selections.push({\n                  type: child.type,\n                  key: child.key\n                });\n              }\n            } else if (GRANULAR_TYPES.includes(child.type)) {\n              // For configurable children, check granular selections\n              const childSelections = group.granularSelections?.children?.[child._id]?.selections || [];\n              childSelections.forEach(uuid => {\n                selections.push({\n                  type: child.type,\n                  key: uuid\n                });\n              });\n            }\n          });\n        }\n        return selections;\n      }\n\n      return [];\n    });\n\n  window.GAS.log.d('[FlattenedSelections] Final flattened result', {\n    resultCount: result.length,\n    items: result.map(item => ({\n      type: item.type,\n      key: item.key\n    }))\n  });\n\n  return result;\n});\n\n// Add granular selection for special types\nexport function addGranularSelection(groupId, uuid) {\n  equipmentSelections.update(selections => {\n    window.GAS.log.d('[EquipSelect STORE] addGranularSelection selections', selections);\n    const group = selections[groupId];\n    window.GAS.log.d('[EquipSelect STORE] addGranularSelection groupId', groupId);\n    window.GAS.log.d('[EquipSelect STORE] addGranularSelection group', group);\n    \n    if (!group?.selectedItem) return selections;\n\n    // Initialize granularSelections if it doesn't exist\n    const currentGranularSelections = group.granularSelections || { self: [], children: {} };\n\n    const updatedSelections = {\n      ...currentGranularSelections,\n      self: [...(currentGranularSelections.self || []), uuid]\n    };\n\n    const isComplete = updatedSelections.self.length >= getRequiredSelectionsCount(group.selectedItem);\n\n    // Find next group if complete\n    const sortedGroups = Object.values(selections)\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n    const nextGroup = isComplete ? sortedGroups.find(g => \n      !g.completed && g.id !== groupId\n    ) : null;\n\n    const result = {\n      ...selections,\n      [groupId]: {\n        ...group,\n        granularSelections: updatedSelections,\n        completed: isComplete,\n        inProgress: !isComplete\n      },\n      ...(nextGroup ? {\n        [nextGroup.id]: {\n          ...nextGroup,\n          inProgress: true\n        }\n      } : {})\n    };\n\n    window.GAS.log.d('[EquipSelect STORE] addGranularSelection result', result);\n    return result;\n  });\n}\n\n// Add granular selection for subgroup children\nexport function addChildGranularSelection(groupId, childId, uuid) {\n  window.GAS.log.d('AND GROUP DEBUG | addChildGranularSelection called:', { \n    groupId, \n    childId, \n    uuid,\n    currentStore: get(equipmentSelections)\n  });\n\n  equipmentSelections.update(selections => {\n    const group = selections[groupId];\n    window.GAS.log.d('AND GROUP DEBUG | Current group state:', { \n      group,\n      selectedItem: group?.selectedItem,\n      children: group?.selectedItem?.children,\n      granularSelections: group?.granularSelections\n    });\n\n    if (!group?.selectedItem) return selections;\n\n    const childItem = group.selectedItem.children?.find(c => c._id === childId);\n    window.GAS.log.d('AND GROUP DEBUG | Found child item:', {\n      childItem,\n      allChildren: group.selectedItem.children\n    });\n\n    if (!childItem) return selections;\n\n    // Initialize the granular selections structure if it doesn't exist\n    const currentGranularSelections = group.granularSelections || { self: [], children: {} };\n    window.GAS.log.d('AND GROUP DEBUG | Current granular selections:', currentGranularSelections);\n\n    const updatedSelections = {\n      ...currentGranularSelections,\n      children: {\n        ...currentGranularSelections.children,\n        [childId]: {\n          type: childItem.type,\n          selections: [uuid]\n        }\n      }\n    };\n\n    window.GAS.log.d('AND GROUP DEBUG | Updated selections:', updatedSelections);\n\n    // For AND types, check if all children that need selections have them\n    const isComplete = group.selectedItem.type === 'AND' ?\n      group.selectedItem.children.every(child => {\n        const needsSelection = GRANULAR_TYPES.includes(child.type);\n        const childSelections = updatedSelections.children?.[child._id]?.selections || [];\n        const hasEnoughSelections = childSelections.length >= getRequiredSelectionsCount(child);\n        \n        window.GAS.log.d('AND GROUP DEBUG | addChildGranularSelection completion check for child', {\n          childId: child._id,\n          childType: child.type,\n          needsSelection,\n          selections: childSelections,\n          required: getRequiredSelectionsCount(child),\n          hasEnough: hasEnoughSelections\n        });\n        \n        return !needsSelection || hasEnoughSelections;\n      }) : false;\n\n    const stillInProgress = group.selectedItem.type === 'AND' ?\n      group.selectedItem.children.some(child => \n        GRANULAR_TYPES.includes(child.type) && \n        (!updatedSelections.children?.[child._id]?.selections?.length || \n         updatedSelections.children[child._id].selections.length < getRequiredSelectionsCount(child))\n      ) : false;\n\n    window.GAS.log.d('AND GROUP DEBUG | addChildGranularSelection completion status', {\n      isComplete,\n      stillInProgress,\n      groupType: group.selectedItem.type\n    });\n\n    // Find next group if complete\n    const sortedGroups = Object.values(selections)\n      .sort((a, b) => (a.sort || 0) - (b.sort || 0));\n    const nextGroup = isComplete ? sortedGroups.find(g => \n      !g.completed && g.id !== groupId\n    ) : null;\n\n    const result = {\n      ...selections,\n      [groupId]: {\n        ...group,\n        granularSelections: updatedSelections,\n        completed: isComplete,\n        inProgress: stillInProgress\n      },\n      ...(nextGroup ? {\n        [nextGroup.id]: {\n          ...nextGroup,\n          inProgress: true\n        }\n      } : {})\n    };\n\n    window.GAS.log.d('AND GROUP DEBUG | addChildGranularSelection final state', result);\n\n    return result;\n  });\n}\n\n// Remove granular selection (works for both special types and subgroup children)\nexport function removeGranularSelection(groupId, uuid, childId = null) {\n  equipmentSelections.update(selections => {\n    const group = selections[groupId];\n    if (!group?.selectedItem) return selections;\n\n    let updatedSelections;\n    if (childId) {\n      // Remove from child selections\n      updatedSelections = {\n        ...group.granularSelections,\n        children: {\n          ...group.granularSelections.children,\n          [childId]: {\n            ...group.granularSelections.children[childId],\n            selections: group.granularSelections.children[childId].selections.filter(id => id !== uuid)\n          }\n        }\n      };\n    } else {\n      // Remove from self selections\n      updatedSelections = {\n        ...group.granularSelections,\n        self: (group.granularSelections.self || []).filter(id => id !== uuid)\n      };\n    }\n\n    return {\n      ...selections,\n      [groupId]: {\n        ...group,\n        granularSelections: updatedSelections,\n        completed: false,\n        inProgress: true\n      }\n    };\n  });\n}\n\nexport function initializeGroup(groupId, groupData) {\n  equipmentSelections.update(selections => {\n    // Only initialize if group doesn't exist or has different items\n    if (!selections[groupId] || \n        JSON.stringify(selections[groupId].items) !== JSON.stringify(groupData.items)) {\n      \n      // Check if any existing group is in progress or incomplete\n      const hasGroupInProgress = Object.values(selections).some(group => \n        !group.completed || group.inProgress\n      );\n\n      // For standalone groups, check if all items are fixed (linked)\n      const isAutoComplete = groupData.type === 'standalone' && \n        groupData.items.every(item => {\n          if (item.type === 'linked') return true;\n          if (item.type === 'AND') {\n            return item.children.every(child => child.type === 'linked');\n          }\n          return false;\n        });\n\n      // Find the next group if this one auto-completes\n      const nextGroup = isAutoComplete ? \n        Object.values(selections)\n          .sort((a, b) => (a.sort || 0) - (b.sort || 0))\n          .find(g => !g.completed) : null;\n\n      return {\n        ...selections,\n        [groupId]: {\n          id: groupId,\n          ...groupData,\n          selectedItemId: isAutoComplete ? groupData.items[0]._id : null,\n          selectedItem: isAutoComplete ? groupData.items[0] : null,\n          completed: isAutoComplete,\n          inProgress: !isAutoComplete && !hasGroupInProgress,\n          granularSelections: null\n        },\n        ...(nextGroup && isAutoComplete ? {\n          [nextGroup.id]: {\n            ...nextGroup,\n            inProgress: true\n          }\n        } : {})\n      };\n    }\n    return selections;\n  });\n}\n\nexport function setGroupInProgress(groupId) {\n  equipmentSelections.update(selections => {\n    // First, set all groups to not in progress\n    const updatedSelections = Object.entries(selections).reduce((acc, [id, group]) => ({\n      ...acc,\n      [id]: { ...group, inProgress: false }\n    }), {});\n\n    // Then set the target group to in progress\n    if (updatedSelections[groupId]) {\n      updatedSelections[groupId] = {\n        ...updatedSelections[groupId],\n        inProgress: true\n      };\n    }\n\n    return updatedSelections;\n  });\n}\n\nexport function editGroup(groupId) {\n  equipmentSelections.update(selections => {\n    // First, set all groups to not in progress\n    const updatedSelections = Object.entries(selections).reduce((acc, [id, group]) => ({\n      ...acc,\n      [id]: { ...group, inProgress: false }\n    }), {});\n\n    // Then set the target group to in progress and incomplete, and reset all selections\n    if (updatedSelections[groupId]) {\n      updatedSelections[groupId] = {\n        ...updatedSelections[groupId],\n        inProgress: true,\n        completed: false,\n        selectedItemId: null,\n        selectedItem: null,\n        granularSelections: null  // Reset granular selections\n      };\n    }\n\n    return updatedSelections;\n  });\n}\n\nexport function clearEquipmentSelections() {\n  equipmentSelections.set({});\n}\n\n// Add getEquipmentIcon function to the store\nexport function getEquipmentIcon(type) {\n  switch(type) {\n    case 'armor':\n      return 'icons/svg/shield.svg';\n    case 'weapon':\n      return 'icons/svg/sword.svg';\n    case 'tool':\n      return 'icons/svg/padlock.svg';\n    case 'focus':\n      return 'icons/svg/book.svg';\n    case 'linked':\n      return 'icons/svg/item-bag.svg';\n    case 'OR':\n      return 'icons/svg/dice-target.svg';\n    default:\n      return 'icons/svg/item-bag.svg';\n  }\n}\n\n// Add to the store's state\nconst selectedItemsData = writable({});\n\n// Add the function to update selected item data\nasync function updateSelectedItemData(groupId, selection) {\n  if (!selection?.granularSelections?.self?.[0]) return;\n  const itemData = await fromUuid(selection.granularSelections.self[0]);\n  if (itemData) {\n    selectedItemsData.update(data => ({\n      ...data,\n      [groupId]: itemData\n    }));\n  }\n}\n\n// Create a derived store that returns the actual data object\nexport const selectedItems = derived(equipmentSelections, ($equipmentSelections, set) => {\n  // Get current value of selectedItemsData\n  let currentData = {};\n  selectedItemsData.subscribe(value => currentData = value)();\n\n  // Update data for each group\n  Object.entries($equipmentSelections).forEach(([groupId, group]) => {\n    updateSelectedItemData(groupId, group);\n  });\n\n  // Return current data\n  set(currentData);\n\n  // Update when selectedItemsData changes\n  return selectedItemsData.subscribe(value => set(value));\n}); ","import { derived, get, writable } from 'svelte/store';\nimport {\n  race,\n  characterClass,\n  characterSubClass,\n  background,\n  abilityGenerationMethod,\n  pointBuyScoreTotal, \n  pointBuyLimit,\n  abilityRolls,\n  isStandardArrayValues,\n  subClassesForClass,\n  activeTab,\n} from './index';\nimport { goldRoll } from './storeDefinitions';\nimport { equipmentSelections } from './equipmentSelections';\nimport { areGoldChoicesComplete } from './goldChoices';\nimport { getDnd5eVersion, getSubclassLevel } from '~/src/helpers/Utility';\nimport { MODULE_ID } from '~/src/helpers/constants';\n\n\n// Convert to derived store\nconst isAbilityGenerationMethodReady = derived(\n  [abilityGenerationMethod, abilityRolls, pointBuyScoreTotal, pointBuyLimit, isStandardArrayValues],\n  ([$abilityGenerationMethod, $abilityRolls, $pointBuyScoreTotal, $pointBuyLimit, $isStandardArrayValues]) => {\n    // window.GAS.log.d('[PROGRESS] isAbilityGenerationMethodReady called', {\n    //   method: $abilityGenerationMethod,\n    //   rolls: $abilityRolls,\n    //   scoreTotal: $pointBuyScoreTotal,\n    //   pointBuyLimit: $pointBuyLimit,\n    //   standardArray: $isStandardArrayValues\n    // });\n\n    if (!$abilityGenerationMethod) {\n      return false;\n    }\n\n    const result = (() => {\n      switch ($abilityGenerationMethod) {\n        case 2: // Point Buy\n          const isComplete = Number($pointBuyScoreTotal) === Number($pointBuyLimit);\n          \n          return isComplete;\n        case 3:\n          // Check if all abilities are assigned\n          return Object.keys($abilityRolls).length === 6;\n        case 4:\n          // Check if all rolls are assigned\n          return $isStandardArrayValues;\n        case 1: default: // Manual Entry is always complete\n          return true;\n      }\n    })();\n\n    // window.GAS.log.d('[PROGRESS] isAbilityGenerationMethodReady result', result);\n    return result;\n  }\n);\n\n/**\n * @why: some classes don't have subclasses until later levels\n * @param characterClass\n * @param characterSubClass\n */\nfunction isSubclassForThisCharacterLevel(characterClass) {\n  if (!characterClass) return false;\n\n  const subClassLevel = getSubclassLevel(characterClass, MODULE_ID);\n  // window.GAS.log.d('[PROGRESS] subClassLevel determined to be: ', subClassLevel);\n\n  if (!subClassLevel) return false;\n\n  const newActorLevel = game.actor?.system?.details?.level\n    ? game.actor.system.details.level + 1\n    : 1;\n  // window.GAS.log.d(\"[PROGRESS] subClassLevel\", subClassLevel);\n  // window.GAS.log.d(\"[PROGRESS] level\", newActorLevel);\n  // window.GAS.log.d(\n  //   \"[PROGRESS] subClassLevel === level\",\n  //   subClassLevel === newActorLevel,\n  // );\n  return subClassLevel && parseInt(newActorLevel) === parseInt(subClassLevel);\n}\n\n// Define progress calculation functions for different modes\nconst progressCalculators = {\n  characterCreation: ({ \n    race, \n    background, \n    characterClass, \n    characterSubClass, \n    abilityGenerationMethod, \n    totalSteps,\n    pointBuyScoreTotal,\n    pointBuyLimit,\n    abilityRolls,\n    isStandardArrayValues\n  }) => {\n    // window.GAS.log.d('[PROGRESS] characterCreation calculator called', {\n    //   race,\n    //   background,\n    //   characterClass,\n    //   characterSubClass,\n    //   abilityGenerationMethod,\n    //   totalSteps,\n    //   pointBuyScoreTotal,\n    //   pointBuyLimit\n    // });\n\n    const completed = [race, background, characterClass, characterSubClass, abilityGenerationMethod]\n      .filter((value, index) => {\n        if (index === 4) {\n          // Check ability generation method completion directly\n          let result = false;\n          \n          if (!abilityGenerationMethod) {\n            result = false;\n          } else {\n            switch (abilityGenerationMethod) {\n              case 2: // Point Buy\n                result = Number(pointBuyScoreTotal) === Number(pointBuyLimit);\n                break;\n              case 3: // Ability Rolls\n                result = Object.keys(abilityRolls).length === 6;\n                break;\n              case 4: // Standard Array\n                result = isStandardArrayValues;\n                break;\n              case 1: default: // Manual Entry is always complete\n                result = true;\n                break;\n            }\n          }\n          \n          // window.GAS.log.d('[PROGRESS] abilityGenerationMethod check result', result);\n          return result;\n        }\n        return !!value;\n      }).length;\n\n    const progress = (completed / totalSteps) * 100;\n    // window.GAS.log.d('[PROGRESS] characterCreation progress calculated', {\n    //   completed,\n    //   totalSteps,\n    //   progress\n    // });\n    return progress;\n  },\n\n  equipment: ({ equipmentSelections, goldRoll, areGoldChoicesComplete }) => {\n    const groups = Object.values(equipmentSelections);\n    // window.GAS.log.d(\"[PROGRESS] goldRoll\", goldRoll);\n    \n    // Handle v4 gold choices\n    if (window.GAS.dnd5eVersion === 4  && window.GAS.dnd5eRules === \"2024\") {\n      if (!areGoldChoicesComplete) return 0; // Choices not made\n      if (groups.length === 0) return 100; // No equipment to select, but choices made\n      \n      // Equipment is complete when all groups are complete AND choices are made\n      const completedGroups = groups.filter(group => group.completed).length;\n      return Math.round((completedGroups / groups.length) * 100);\n    }\n    \n    // Handle v3 gold roll\n    if (!goldRoll) return 0; // Nothing selected and no gold rolled\n    if (groups.length === 0) return 100; // No equipment to select, but gold is rolled\n    \n    // Equipment is complete when all groups are complete AND gold is rolled\n    let completedGroups = groups.filter(group => group.completed).length;\n    if(goldRoll > 0) {\n      completedGroups += 1;\n    }\n    const equipmentProgress = Math.round((completedGroups / (groups.length + 1)) * 100);\n    \n    // Only return 100 if both equipment and gold are done\n    return goldRoll > 0 ? equipmentProgress : Math.min(equipmentProgress, 99);\n  }\n};\n\nconst stores = [\n  race,\n  characterClass,\n  characterSubClass,\n  background,\n  abilityGenerationMethod,\n  pointBuyScoreTotal,\n  pointBuyLimit,\n  abilityRolls,\n  isStandardArrayValues,\n];\n\n// Create a derived store for the total length\nexport const totalSteps = derived(\n  [characterClass, characterSubClass, subClassesForClass],\n  ([$characterClass, $characterSubClass, $subClassesForClass]) => {\n    let length = 5;\n    if (\n      //- @why: if there are no subclasses for this class, or the subclass is not available for this level, reduce the total steps\n      !$subClassesForClass.length > 0 ||\n      !isSubclassForThisCharacterLevel($characterClass, $characterSubClass)\n    ) {\n      length = length - 1;\n    }\n    // window.GAS.log.d(\"[PROGRESS] totalSteps\", length);\n    return length;\n  }\n);\n\n// Derive the progress value based on the current tab/mode\nexport const progress = derived(\n  [\n    race,\n    characterClass,\n    characterSubClass,\n    background,\n    abilityGenerationMethod,\n    totalSteps,\n    activeTab,\n    equipmentSelections,\n    goldRoll,\n    areGoldChoicesComplete,\n    abilityRolls,\n    pointBuyScoreTotal,\n    pointBuyLimit,\n    isStandardArrayValues\n  ],\n  ([\n    $race,\n    $characterClass,\n    $characterSubClass,\n    $background,\n    $abilityGenerationMethod,\n    $totalSteps,\n    $activeTab,\n    $equipmentSelections,\n    $goldRoll,\n    $areGoldChoicesComplete,\n    $abilityRolls,\n    $pointBuyScoreTotal,\n    $pointBuyLimit,\n    $isStandardArrayValues\n  ]) => {\n    // window.GAS.log.d('[PROGRESS] progress store update triggered', {\n    //   activeTab: $activeTab,\n    //   abilityGenerationMethod: $abilityGenerationMethod,\n    //   abilityRolls: $abilityRolls,\n    //   pointBuyScoreTotal: $pointBuyScoreTotal,\n    //   pointBuyLimit: $pointBuyLimit\n    // });\n\n    // Select the appropriate calculator based on the active tab\n    const calculator = $activeTab === 'equipment' \n      ? progressCalculators.equipment \n      : progressCalculators.characterCreation;\n\n    // Pass relevant data to the calculator\n    const result = calculator({\n      race: $race,\n      background: $background,\n      characterClass: $characterClass,\n      characterSubClass: $characterSubClass,\n      abilityGenerationMethod: $abilityGenerationMethod,\n      totalSteps: $totalSteps,\n      equipmentSelections: $equipmentSelections,\n      goldRoll: $goldRoll,\n      areGoldChoicesComplete: $areGoldChoicesComplete,\n      pointBuyScoreTotal: $pointBuyScoreTotal,\n      pointBuyLimit: $pointBuyLimit,\n      abilityRolls: $abilityRolls,\n      isStandardArrayValues: $isStandardArrayValues\n    });\n\n    // window.GAS.log.d('[PROGRESS] progress store result', result);\n    return result;\n  }\n);\n","<script>\n  import { onMount } from \"svelte\";\n\n  export let progress;\n  \n  $: cssClass = $progress == 0 ? \"center\" : \"\";\n  \n</script>\n<div class=\"progress\">\n  <div class=\"back\">{$progress}% Complete</div>\n  <div class=\"front\" style=\"clip-path: inset(0 0 0 {$progress}%); -webkit-clip-path: inset(0 0 0 {$progress}%);\">{$progress}% Complete</div>\n</div>\n<style lang=\"sass\">\n  @import '../../../styles/Mixins.scss'\n\n  .progress\n    position: relative\n    display: flex\n    border-radius: 5px\n    background-color: #e0e0e0\n    overflow: hidden\n\n  .back\n    display: flex\n    justify-content: center\n    align-items: center\n    width: 100%\n    background-color: rgba(10, 144, 50, 0.5)\n    color: white\n\n  .front\n    position: absolute\n    display: flex\n    justify-content: center\n    align-items: center\n    left: 0\n    right: 0\n    top: 0\n    bottom: 0\n    background: white\n    color: black\n    transition: clip-path 1s linear\n\n\n  \n</style>","import { isObject } from '@typhonjs-fvtt/runtime/util/object';\n\n/**\r\n * Provides a helper class to determine the version of the Foundry platform starting a version `9`.\r\n *\r\n * Note: You must use any of these utility methods after the Foundry `init` hook.\r\n */\r\nclass FVTTVersion\r\n{\r\n   static #regexMajorVersion = /(\\d+)\\./;\r\n\r\n   /**\r\n    * Returns true when Foundry is at least the specific major version number provided.\r\n    *\r\n    * @param {number}   version - Major version to check against.\r\n    *\r\n    * @returns {boolean} Foundry version is at least the major version specified.\r\n    */\r\n   static isAtLeast(version)\r\n   {\r\n      if (!Number.isInteger(version) && version < 9)\r\n      {\r\n         throw new TypeError(`'version' is not a positive integer greater than or equals '9'.`);\r\n      }\r\n\r\n      return !globalThis.foundry.utils.isNewerVersion(version, globalThis.game.version ??\r\n       globalThis.game?.data?.version);\r\n   }\r\n\r\n   /**\r\n    * Returns true when Foundry is between the min / max major version numbers provided.\r\n    *\r\n    * @param {number}   min - Major minimum version to check against.\r\n    *\r\n    * @param {number}   max - Major maximum version to check against.\r\n    *\r\n    * @returns {boolean} Foundry version is at least the major version specified.\r\n    */\r\n   static isBetween(min, max)\r\n   {\r\n      if (!Number.isInteger(min) && min < 9)\r\n      {\r\n         throw new TypeError(\r\n          `FVTTVersion.isBetween error: 'min' is not a positive integer greater than or equals '9'.`);\r\n      }\r\n\r\n      if (!Number.isInteger(max) && max < 9)\r\n      {\r\n         throw new TypeError(\r\n          `FVTTVersion.isBetween error: 'max' is not a positive integer greater than or equals '9'.`);\r\n      }\r\n\r\n      if (min > max)\r\n      {\r\n         throw new TypeError(`FVTTVersion.isBetween error: 'min' is greater than 'max'.`);\r\n      }\r\n\r\n      const match = this.#regexMajorVersion.exec(globalThis.game.version ?? globalThis.game?.data?.version);\r\n      if (!match)\r\n      {\r\n         throw new Error(`FVTTVersion.isBetween error: Could not parse 'globalThis.game.version'.`);\r\n      }\r\n\r\n      const version = parseInt(match[1], 10);\r\n\r\n      return version >= min && version <= max;\r\n   }\r\n}\n\n/**\r\n * Loads FVTT core fonts supporting `FontConfig` on Foundry v10+.\r\n *\r\n * Note: This class contains code modified from Foundry VTT core client code. There are only so many ways to process\r\n * core Foundry data structures correctly.\r\n */\r\nclass FontManager\r\n{\r\n   /**\r\n    * Collect all the font definitions and combine them.\r\n    *\r\n    * @returns { {[key: string]: globalThis.FontFamilyDefinition}[] } Core font definitions.\r\n    */\r\n   static getCoreDefinitions()\r\n   {\r\n      /** @type { {[key: string]: globalThis.FontFamilyDefinition}[] } */\r\n      const fonts = [];\r\n\r\n      if (FVTTVersion.isAtLeast(10))\r\n      {\r\n         let legacyFamilies;\r\n\r\n         /**\r\n          * @deprecated since v10, so check that it exists.\r\n          */\r\n         if (Array.isArray(globalThis.CONFIG?._fontFamilies))\r\n         {\r\n            legacyFamilies = globalThis.CONFIG._fontFamilies.reduce((obj, f) =>\r\n            {\r\n               obj[f] = { editor: true, fonts: [] };\r\n               return obj;\r\n            }, {});\r\n         }\r\n\r\n         if (Array.isArray(globalThis.CONFIG?.fontDefinitions))\r\n         {\r\n            fonts.push(globalThis.foundry.utils.duplicate(globalThis.CONFIG.fontDefinitions));\r\n         }\r\n\r\n         const coreFonts = globalThis.game?.settings.get('core', 'fonts');\r\n         if (Array.isArray(coreFonts))\r\n         {\r\n            fonts.push(globalThis.foundry.utils.duplicate(coreFonts));\r\n         }\r\n\r\n         if (legacyFamilies) { fonts.push(legacyFamilies); }\r\n      }\r\n      else\r\n      {\r\n         if (Array.isArray(globalThis.CONFIG?.fontFamilies))\r\n         {\r\n            // Handle v9 and below legacy font families.\r\n            const legacyFamilies = globalThis.CONFIG.fontFamilies.reduce((obj, f) =>\r\n            {\r\n               obj[f] = { editor: true, fonts: [] };\r\n               return obj;\r\n            }, {});\r\n\r\n            fonts.push(legacyFamilies);\r\n         }\r\n      }\r\n\r\n      FontManager.removeDuplicateDefinitions(fonts);\r\n\r\n      return fonts;\r\n   }\r\n\r\n   /**\r\n    * Load a font definition.\r\n    *\r\n    * @param {string}               fontSpecification - The font specification.\r\n    *\r\n    * @param {string}               family - The font family name (case-sensitive).\r\n    *\r\n    * @param {globalThis.FontFamilyDefinition} definition - The font family definition.\r\n    *\r\n    * @param {Document}             document - Target Document to load font into.\r\n    *\r\n    * @returns {Promise<boolean>} Returns true if the font was successfully loaded.\r\n    */\r\n   static async #loadFont(fontSpecification, family, definition, document)\r\n   {\r\n      try\r\n      {\r\n         for (const fontEntry of definition.fonts)\r\n         {\r\n            // Collect URLs from FontDefinition.\r\n            const urls = fontEntry.urls.map((url) => `url(\"${url}\")`).join(', ');\r\n\r\n            // Note: 'font' contains 'FontFaceDescriptors' data.\r\n            const fontFace = new FontFace(family, urls, fontEntry);\r\n            await fontFace.load();\r\n\r\n            document.fonts.add(fontFace);\r\n         }\r\n\r\n         await document.fonts.load(fontSpecification);\r\n      }\r\n      catch (err)\r\n      {\r\n         console.warn(`Font family \"${family}\" failed to load: `, err);\r\n         return false;\r\n      }\r\n\r\n      if (!document.fonts.check(fontSpecification))\r\n      {\r\n         console.warn(`Font family \"${family}\" failed to load.`);\r\n         return false;\r\n      }\r\n\r\n      return true;\r\n   }\r\n\r\n   /**\r\n    * Ensure that fonts have loaded and are ready for use.\r\n    * Enforce a maximum timeout in milliseconds.\r\n    * Proceed after that point even if fonts are not yet available.\r\n    *\r\n    * @param {object} [opts] - Optional parameters.\r\n    *\r\n    * @param {number} [opts.ms=4500] - The maximum time to spend loading fonts before proceeding.\r\n    *\r\n    * @param {Document} [opts.document] - The target document to load the fonts into.\r\n    *\r\n    * @param {boolean} [opts.editor=true] - When true verifies the `editor` field of {@link FontFamilyDefinition}.\r\n    *\r\n    * @param {(\r\n    *    {[key: string]: globalThis.FontFamilyDefinition}[] |\r\n    *    {[key: string]: globalThis.FontFamilyDefinition}\r\n    * )} [opts.fonts] - A custom set of font family definitions to load. If not defined the core font family definitions\r\n    *    are loaded.\r\n    *\r\n    * @returns {Promise<void>}\r\n    */\r\n   static async loadFonts({ ms = 4500, document = globalThis.document, editor = true, fonts } = {})\r\n   {\r\n      // TODO sanity checks\r\n\r\n      const allFonts = fonts ? Array.isArray(fonts) ? fonts : [fonts] : this.getCoreDefinitions();\r\n\r\n      const promises = [];\r\n\r\n      for (const definitions of allFonts)\r\n      {\r\n         if (isObject(definitions))\r\n         {\r\n            for (const [family, definition] of Object.entries(definitions))\r\n            {\r\n               // Don't load a font that is not marked to be used in the editor.\r\n               if (editor && (typeof definition.editor !== 'boolean' || !definition.editor)) { continue; }\r\n\r\n               const fontSpecification = `1rem \"${family}\"`;\r\n\r\n               // Early out if the font is already loaded.\r\n               if (document.fonts.check(fontSpecification)) { continue; }\r\n\r\n               promises.push(this.#loadFont(fontSpecification, family, definition, document));\r\n            }\r\n         }\r\n      }\r\n\r\n      const timeout = new Promise((resolve) => setTimeout(resolve, ms));\r\n      const ready = Promise.all(promises).then(() => document.fonts.ready);\r\n\r\n      return Promise.race([ready, timeout]);\r\n   }\r\n\r\n   /**\r\n    * Removes duplicate font definitions.\r\n    *\r\n    * @param { {[key: string]: globalThis.FontFamilyDefinition}[] }  fonts - An array of FontFamilyDefinition objects\r\n    *        to process.\r\n    *\r\n    * @returns { {[key: string]: globalThis.FontFamilyDefinition}[] } Filtered font definitions.\r\n    */\r\n   static removeDuplicateDefinitions(fonts)\r\n   {\r\n      if (!Array.isArray(fonts))\r\n      {\r\n         throw new TypeError(`FontManager.removeDuplicateDefinitions error: 'fonts' is not an array.`);\r\n      }\r\n\r\n      const familySet = new Set();\r\n\r\n      for (const definitions of fonts)\r\n      {\r\n         if (!isObject(definitions))\r\n         {\r\n            throw new TypeError(`FontManager.removeDuplicateDefinitions error: 'definitions' is not an object.`);\r\n         }\r\n\r\n         for (const family of Object.keys(definitions))\r\n         {\r\n            // Remove duplicate from current definitions set.\r\n            if (familySet.has(family))\r\n            {\r\n               delete definitions[family];\r\n            }\r\n            else\r\n            {\r\n               familySet.add(family);\r\n            }\r\n         }\r\n      }\r\n\r\n      return fonts;\r\n   }\r\n}\n\n/**\r\n * Parses the core Foundry style sheet creating an indexed object of properties by selector.\r\n */\r\nclass FoundryStyles\r\n{\r\n   static #sheet = void 0;\r\n\r\n   /** @type {Map<string, {[key: string]: string}>} */\r\n   static #sheetMap = new Map();\r\n\r\n   static #initialized = false;\r\n\r\n   /**\r\n    * Called once on initialization / first usage. Parses the core foundry style sheet.\r\n    */\r\n   static #initialize()\r\n   {\r\n      this.#initialized = true;\r\n\r\n      const styleSheets = Array.from(document.styleSheets).filter((entry) => entry.href !== null);\r\n\r\n      let sheet;\r\n\r\n      const foundryStyleSheet = globalThis.foundry.utils.getRoute('/css/style.css');\r\n\r\n      // Find the core Foundry stylesheet.\r\n      for (const styleSheet of styleSheets)\r\n      {\r\n         let url;\r\n\r\n         try\r\n         {\r\n            url = new URL(styleSheet.href);\r\n         }\r\n         catch (err) { continue; }\r\n\r\n         if (typeof url.pathname === 'string' && url.pathname === foundryStyleSheet)\r\n         {\r\n            this.#sheet = sheet = styleSheet;\r\n            break;\r\n         }\r\n      }\r\n\r\n      // Quit now if the Foundry style sheet was not found.\r\n      if (!sheet) { return; }\r\n\r\n      // Parse each CSSStyleRule and build the map of selectors to parsed properties.\r\n      for (const rule of sheet.cssRules)\r\n      {\r\n         if (!(rule instanceof CSSStyleRule)) { continue; }\r\n\r\n         const obj = {};\r\n\r\n         // Parse `cssText` into an object of properties & values.\r\n         for (const entry of rule.style.cssText.split(';'))\r\n         {\r\n            const parts = entry.split(':');\r\n\r\n            // Sanity check.\r\n            if (parts.length < 2) { continue; }\r\n\r\n            obj[parts[0].trim()] = parts[1].trim();\r\n         }\r\n\r\n         this.#sheetMap.set(rule.selectorText, obj);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Gets the properties object associated with the selector. Try and use a direct match otherwise all keys\r\n    * are iterated to find a selector string that includes the `selector`.\r\n    *\r\n    * @param {string}   selector - Selector to find.\r\n    *\r\n    * @returns { {[key: string]: string} } Properties object.\r\n    */\r\n   static getProperties(selector)\r\n   {\r\n      if (!this.#initialized) { this.#initialize(); }\r\n\r\n      // If there is a direct selector match then return a value immediately.\r\n      if (this.#sheetMap.has(selector))\r\n      {\r\n         return this.#sheetMap.get(selector);\r\n      }\r\n\r\n      for (const key of this.#sheetMap.keys())\r\n      {\r\n         if (key.includes(selector)) { return this.#sheetMap.get(key); }\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n\r\n   /**\r\n    * Gets a specific property value from the given `selector` and `property` key. Try and use a direct selector\r\n    * match otherwise all keys are iterated to find a selector string that includes `selector`.\r\n    *\r\n    * @param {string}   selector - Selector to find.\r\n    *\r\n    * @param {string}   property - Specific property to locate.\r\n    *\r\n    * @returns {string|undefined} Property value.\r\n    */\r\n   static getProperty(selector, property)\r\n   {\r\n      if (!this.#initialized) { this.#initialize(); }\r\n\r\n      // If there is a direct selector match then return a value immediately.\r\n      if (this.#sheetMap.has(selector))\r\n      {\r\n         const data = this.#sheetMap.get(selector);\r\n         return isObject(data) && property in data ? data[property] : void 0;\r\n      }\r\n\r\n      for (const key of this.#sheetMap.keys())\r\n      {\r\n         if (key.includes(selector))\r\n         {\r\n            const data = this.#sheetMap.get(key);\r\n            if (isObject(data) && property in data) { return data[property]; }\r\n         }\r\n      }\r\n\r\n      return void 0;\r\n   }\r\n}\n\nexport { FVTTVersion, FontManager, FoundryStyles };\n//# sourceMappingURL=index.js.map\n","import { TJSStyleManager } from '@typhonjs-fvtt/runtime/util/browser';\r\n\r\nexport const cssVariables = new TJSStyleManager({ docKey: '#__tjs-root-styles', version: 1 });\r\n","<script>\r\n   /**\r\n    * --tjs-default-text-shadow-focus-hover: system default\r\n    * --tjs-default-outline-focus-visible: undefined; global replacement for focus-visible outline.\r\n    *\r\n    * --tjs-button-background\r\n    * --tjs-button-background-focus\r\n    * --tjs-button-background-focus-visible\r\n    * --tjs-button-background-hover\r\n    * --tjs-button-background-selected\r\n    * --tjs-button-border\r\n    * --tjs-button-border-radius\r\n    * --tjs-button-border-width\r\n    * --tjs-button-box-shadow-focus-visible\r\n    * --tjs-button-clip-path\r\n    * --tjs-button-clip-path-hover\r\n    * --tjs-button-clip-path-focus\r\n    * --tjs-button-cursor\r\n    * --tjs-button-diameter\r\n    * --tjs-button-outline-focus-visible\r\n    * --tjs-button-text-shadow-focus: undefined\r\n    * --tjs-button-text-shadow-hover: undefined\r\n    * --tjs-button-transition\r\n    * --tjs-button-transition-focus-visible\r\n    *\r\n    * --tjs-icon-button-background\r\n    * --tjs-icon-button-background-focus\r\n    * --tjs-icon-button-background-focus-visible\r\n    * --tjs-icon-button-background-hover\r\n    * --tjs-icon-button-background-selected\r\n    * --tjs-icon-button-border\r\n    * --tjs-icon-button-border-radius\r\n    * --tjs-icon-button-border-width\r\n    * --tjs-icon-button-box-shadow-focus-visible\r\n    * --tjs-icon-button-clip-path\r\n    * --tjs-icon-button-clip-path-focus\r\n    * --tjs-icon-button-clip-path-hover\r\n    * --tjs-icon-button-cursor\r\n    * --tjs-icon-button-diameter\r\n    * --tjs-icon-button-outline-focus-visible\r\n    * --tjs-icon-button-text-shadow-focus: undefined\r\n    * --tjs-icon-button-text-shadow-hover: undefined\r\n    * --tjs-icon-button-transition\r\n    * --tjs-icon-button-transition-focus-visible\r\n    */\r\n   import { createEventDispatcher } from 'svelte';\r\n\r\n   import { applyStyles }           from '@typhonjs-fvtt/runtime/svelte/action/dom';\r\n   import { localize }              from '@typhonjs-fvtt/runtime/svelte/helper';\r\n   import { isObject }              from '@typhonjs-fvtt/runtime/util/object';\r\n\r\n   export let button = void 0;\r\n   export let icon = void 0;\r\n   export let title = void 0;\r\n   export let styles = void 0;\r\n   export let efx = void 0;\r\n   export let keyCode = void 0;\r\n   export let onPress = void 0;\r\n   export let onContextMenu = void 0;\r\n   export let onClickPropagate = void 0;\r\n\r\n   const dispatch = createEventDispatcher();\r\n\r\n   $: icon = isObject(button) && typeof button.icon === 'string' ? button.icon :\r\n    typeof icon === 'string' ? icon : '';\r\n   $: title = isObject(button) && typeof button.title === 'string' ? button.title :\r\n    typeof title === 'string' ? title : '';\r\n   $: styles = isObject(button) && isObject(button.styles) ? button.styles :\r\n    isObject(styles) ? styles : void 0;\r\n   $: efx = isObject(button) && typeof button.efx === 'function' ? button.efx :\r\n    typeof efx === 'function' ? efx : () => {};\r\n   $: keyCode = isObject(button) && typeof button.keyCode === 'string' ? button.keyCode :\r\n    typeof keyCode === 'string' ? keyCode : 'Enter';\r\n\r\n   $: onPress = isObject(button) && typeof button.onPress === 'function' ? button.onPress :\r\n    typeof onPress === 'function' ? onPress : void 0;\r\n   $: onContextMenu = isObject(button) && typeof button.onContextMenu === 'function' ? button.onContextMenu :\r\n    typeof onContextMenu === 'function' ? onContextMenu : void 0;\r\n\r\n   $: onClickPropagate = isObject(button) && typeof button.onClickPropagate === 'boolean' ? button.onClickPropagate :\r\n    typeof onClickPropagate === 'boolean' ? onClickPropagate : false;\r\n\r\n   /**\r\n    * Handle click event.\r\n    *\r\n    * @param {MouseEvent}    event -\r\n    */\r\n   function onClick(event)\r\n   {\r\n      if (typeof onPress === 'function') { onPress(); }\r\n\r\n      dispatch('press');\r\n\r\n      if (!onClickPropagate)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @param {MouseEvent}   event -\r\n    */\r\n   function onContextMenuPress(event)\r\n   {\r\n      if (typeof onContextMenu === 'function') { onContextMenu(); }\r\n\r\n      if (!onClickPropagate)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Consume / stop propagation of key down when key codes match.\r\n    *\r\n    * @param {KeyboardEvent}    event -\r\n    */\r\n   function onKeydown(event)\r\n   {\r\n      if (event.code === keyCode)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handle press event if key codes match.\r\n    *\r\n    * @param {KeyboardEvent}    event -\r\n    */\r\n   function onKeyup(event)\r\n   {\r\n      if (event.code === keyCode)\r\n      {\r\n         if (typeof onPress === 'function') { onPress(); }\r\n\r\n         dispatch('press');\r\n\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n</script>\r\n\r\n<!-- svelte-ignore a11y-click-events-have-key-events -->\r\n<div class=tjs-icon-button use:applyStyles={styles}>\r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <a on:click={onClick}\r\n       on:contextmenu={onContextMenuPress}\r\n       on:keydown={onKeydown}\r\n       on:keyup={onKeyup}\r\n       on:click\r\n       on:contextmenu\r\n       role=button\r\n       tabindex=0\r\n       title={localize(title)}\r\n       use:efx>\r\n        <i class={icon}></i>\r\n    </a>\r\n</div>\r\n\r\n<style>\r\n    div {\r\n        pointer-events: none;\r\n        display: block;\r\n        flex: 0 0 var(--tjs-icon-button-diameter, var(--tjs-button-diameter, 2em));\r\n        height: var(--tjs-icon-button-diameter, var(--tjs-button-diameter, 2em));\r\n        width: var(--tjs-icon-button-diameter, var(--tjs-button-diameter, 2em));\r\n        align-self: center;\r\n        text-align: center;\r\n    }\r\n\r\n    a {\r\n        pointer-events: initial;\r\n        display: inline-block;\r\n        background: var(--tjs-icon-button-background, var(--tjs-button-background));\r\n        border: var(--tjs-icon-button-border, var(--tjs-button-border));\r\n        border-radius: var(--tjs-icon-button-border-radius, var(--tjs-button-border-radius, 50%));\r\n        border-width: var(--tjs-icon-button-border-width, var(--tjs-button-border-width));\r\n        cursor: var(--tjs-icon-button-cursor, var(--tjs-button-cursor, pointer));\r\n        position: relative;\r\n        overflow: hidden;\r\n        clip-path: var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path, none));\r\n        transform-style: preserve-3d;\r\n        width: 100%;\r\n        height: 100%;\r\n        transition: var(--tjs-icon-button-transition, var(--tjs-button-transition, background 0.2s ease-in-out, clip-path 0.2s ease-in-out));\r\n        text-decoration: none;\r\n    }\r\n\r\n    a:focus {\r\n        background: var(--tjs-icon-button-background-focus, var(--tjs-button-background-focus));\r\n        text-shadow: var(--tjs-icon-button-text-shadow-focus, var(--tjs-button-text-shadow-focus, var(--tjs-default-text-shadow-focus-hover)));\r\n        clip-path: var(--tjs-icon-button-clip-path-focus, var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path-focus, var(--tjs-button-clip-path, none))));\r\n    }\r\n\r\n    a:focus-visible {\r\n        background: var(--tjs-icon-button-background-focus-visible, var(--tjs-button-background-focus-visible));\r\n        box-shadow: var(--tjs-icon-button-box-shadow-focus-visible, var(--tjs-button-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible)));\r\n        outline: var(--tjs-icon-button-outline-focus-visible, var(--tjs-button-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert)));\r\n        transition: var(--tjs-icon-button-transition-focus-visible, var(--tjs-button-transition-focus-visible, var(--tjs-default-transition-focus-visible)));\r\n    }\r\n\r\n    a:hover {\r\n        background: var(--tjs-icon-button-background-hover, var(--tjs-button-background-hover));\r\n        clip-path: var(--tjs-icon-button-clip-path-hover, var(--tjs-icon-button-clip-path, var(--tjs-button-clip-path-hover, var(--tjs-button-clip-path, none))));\r\n        text-shadow: var(--tjs-icon-button-text-shadow-hover, var(--tjs-button-text-shadow-hover, var(--tjs-default-text-shadow-focus-hover)));\r\n    }\r\n\r\n    i {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: var(--tjs-icon-button-border-radius, var(--tjs-button-border-radius, 50%));\r\n        transform: translateZ(1px);\r\n    }\r\n</style>\r\n","<script>\r\n   /**\r\n    * TJSFolder provides a collapsible folder using the details and summary HTMLElements.\r\n    *\r\n    * This is a slotted component. The default slot is the collapsible contents. There are also two additional optional\r\n    * named slots available for the summary element. `label` allows setting custom content with the fallback being the\r\n    * `label` string. Additionally, `summary-end` allows a component or text to be slotted after the label. This can be\r\n    * useful for say an \"expand all\" button.\r\n    *\r\n    * ----------------------------------------------------------------------------------------------------------------\r\n    * Exported props include:\r\n    * `folder` ({@link TJSFolderData}): An object defining all properties of a folder including potentially data driven\r\n    * minimal Svelte configuration objects (`slotDefault`, `slotLabel`, and `slotSummaryEnd`) providing default\r\n    * component implementations.\r\n    *\r\n    * Or in lieu of passing the folder object you can assign these props directly:\r\n    * `id`: Anything used for an ID.\r\n    * `label`: The label name of the folder; string.\r\n    * `store`: The store tracking the open / close state: writable<boolean>\r\n    * `styles`: Styles to be applied inline via `applyStyles` action.\r\n    *\r\n    * ----------------------------------------------------------------------------------------------------------------\r\n    * Events: There are several events that are fired and / or bubbled up through parent elements. There are four\r\n    * custom events that pass a details object including: `the details element, id, label, and store`.\r\n    *\r\n    * The following events are bubbled up such that assigning a listener in any parent component receives them\r\n    * from all children folders:\r\n    * `click` - Basic MouseEvent of folder being clicked.\r\n    * `keydown` - Key down event.\r\n    * `keyup` - Key up event.\r\n    * `closeAny` - Triggered when any child folder is closed w/ details object.\r\n    * `openAny` - Triggered when any child folder is opened w/ details object.\r\n    *\r\n    * The following events do not propagate / bubble up and can be registered with:\r\n    * `close` - Triggered when direct descendent folder is closed w/ details object.\r\n    * `open` - Triggered when direct descendent folder is opened w/ details object.\r\n    *\r\n    * ----------------------------------------------------------------------------------------------------------------\r\n    * Styling: To style this component use `details.tjs-folder` as a selector. Each element also contains data\r\n    * attributes for `id` and `label`.\r\n    *\r\n    * There are several local CSS variables that you can use to change the appearance dynamically. Either use\r\n    * CSS props or pass in a `styles` object w/ key / value props to set to the details element.\r\n    *\r\n    * The following CSS variables are supported, but not defined by default.\r\n    *\r\n    * Details element (attributes follow `--tjs-folder-details-`):\r\n    * --tjs-folder-details-margin-left: -0.4em;\r\n    * --tjs-folder-details-padding-left: 0.4em; set for children to indent more;\r\n    *\r\n    * Summary element (attributes follow `--tjs-folder-summary-`):\r\n    * --tjs-folder-summary-background-blend-mode: initial\r\n    * --tjs-folder-summary-background: none\r\n    * --tjs-folder-summary-background-open - fallback: --tjs-folder-summary-background; default: inherit\r\n    * --tjs-folder-summary-border: none\r\n    * --tjs-folder-summary-border-radius: 0\r\n    * --tjs-folder-summary-border-width: initial\r\n    * --tjs-folder-summary-cursor: pointer\r\n    * --tjs-folder-summary-font-size: inherit\r\n    * --tjs-folder-summary-font-weight: bold\r\n    * --tjs-folder-summary-font-family: inherit\r\n    * --tjs-folder-summary-gap: 0.125em\r\n    * --tjs-folder-summary-padding: 0.25em\r\n    * --tjs-folder-summary-transition: background 0.1s\r\n    * --tjs-folder-summary-width: fit-content; wraps content initially, set to 100% or other width measurement\r\n    *\r\n    * Summary element (focus visible):\r\n    * --tjs-folder-summary-box-shadow-focus-visible - fallback: --tjs-default-box-shadow-focus-visible\r\n    * --tjs-folder-summary-outline-focus-visible - fallback: --tjs-default-outline-focus-visible; default: revert\r\n    * --tjs-folder-summary-transition-focus-visible - fallback: --tjs-default-transition-focus-visible\r\n    *\r\n    * A keyboard focus indicator is defined by the following CSS variables:\r\n    * --tjs-folder-summary-focus-indicator-align-self - fallback: --tjs-default-focus-indicator-align-self; default: stretch\r\n    * --tjs-folder-summary-focus-indicator-background - fallback: --tjs-default-focus-indicator-background; default: white\r\n    * --tjs-folder-summary-focus-indicator-border - fallback: --tjs-default-focus-indicator-border; default: undefined\r\n    * --tjs-folder-summary-focus-indicator-border-radius - fallback: --tjs-default-focus-indicator-border-radius; default: 0.1em\r\n    * --tjs-folder-summary-focus-indicator-height - fallback: --tjs-default-focus-indicator-height; default: undefined\r\n    * --tjs-folder-summary-focus-indicator-transition - fallback: --tjs-default-focus-indicator-transition\r\n    * --tjs-folder-summary-focus-indicator-width - fallback: --tjs-default-focus-indicator-width; default: 0.25em\r\n    *\r\n    * Summary SVG / chevron element (attributes follow `--tjs-folder-summary-chevron-`):\r\n    *\r\n    * The width and height use multiple fallback variables before setting a default of 1.25em. You can provide\r\n    * `--tjs-folder-summary-chevron-size`. If not provided then the chevron dimensions are set by\r\n    * `--tjs-folder-summary-font-size`; default: 1.25em.\r\n    *\r\n    * --tjs-folder-summary-chevron-color: currentColor\r\n    * --tjs-folder-summary-chevron-opacity: 0.2; Opacity when not hovering.\r\n    * --tjs-folder-summary-chevron-opacity-hover: 1; Opacity when hovering.\r\n    * --tjs-folder-summary-chevron-margin: 0;\r\n    * --tjs-folder-summary-chevron-transition: opacity 0.2s, transform 0.1s\r\n    * --tjs-folder-summary-chevron-rotate-closed: -90deg; rotation angle when closed.\r\n    * --tjs-folder-summary-chevron-rotate-open: 0; rotation angle when open.\r\n    *\r\n    * Summary label element (attributes follow `--tjs-folder-summary-label-):\r\n    *\r\n    * By default the label element does not wrap and uses ellipsis for text overflow.\r\n    *\r\n    * --tjs-folder-summary-label-overflow: hidden\r\n    * --tjs-folder-summary-label-text-overflow: ellipsis\r\n    * --tjs-folder-summary-label-white-space: nowrap\r\n    * --tjs-folder-summary-label-width: fit-content\r\n    *\r\n    * Default label (focus visible):\r\n    * --tjs-folder-summary-label-text-shadow-focus-visible - fallback: --tjs-default-text-shadow-focus-hover; default: revert\r\n    *\r\n    * Contents element (attributes follow `--tjs-folder-contents-`):\r\n    * --tjs-folder-contents-background-blend-mode: initial\r\n    * --tjs-folder-contents-background: none\r\n    * --tjs-folder-contents-border: none\r\n    * --tjs-folder-contents-margin: 0 0 0 -0.4em\r\n    *\r\n    * Padding is set directly by `--tjs-folder-contents-padding` or follows the following calculation:\r\n    * `0 0 0 calc(var(--tjs-folder-summary-font-size, 1em) * 0.8)`\r\n    *\r\n    * If neither `--tjs-folder-contents-padding` or `--tjs-folder-summary-font-size` is defined the default is\r\n    * `1em * 0.8`.\r\n    */\r\n\r\n   import { onDestroy }         from 'svelte';\r\n   import { writable }          from 'svelte/store';\r\n\r\n   import { toggleDetails }     from '@typhonjs-fvtt/runtime/svelte/action/animate';\r\n   import { applyStyles }       from '@typhonjs-fvtt/runtime/svelte/action/dom';\r\n   import { localize }          from '@typhonjs-fvtt/runtime/svelte/helper';\r\n   import { isSvelteComponent } from '@typhonjs-fvtt/runtime/svelte/util';\r\n   import { isObject }          from '@typhonjs-fvtt/runtime/util/object';\r\n\r\n   import {\r\n      isWritableStore,\r\n      subscribeIgnoreFirst }    from '@typhonjs-fvtt/runtime/util/store';\r\n\r\n   /** @type {TJSFolderData} */\r\n   export let folder = void 0;\r\n\r\n   /** @type {string} */\r\n   export let id = void 0;\r\n\r\n   /** @type {string} */\r\n   export let label = void 0;\r\n\r\n   /** @type {string} */\r\n   export let keyCode = void 0;\r\n\r\n   /** @type {TJSFolderOptions} */\r\n   export let options = void 0;\r\n\r\n   /** @type {import('svelte/store').Writable<boolean>} */\r\n   export let store = void 0;\r\n\r\n   /** @type {object} */\r\n   export let styles = void 0;\r\n\r\n   /** @type {() => void} */\r\n   export let onClose = void 0;\r\n\r\n   /** @type {() => void} */\r\n   export let onOpen = void 0;\r\n\r\n   /** @type {(event?: MouseEvent) => void} */\r\n   export let onContextMenu = void 0;\r\n\r\n   /** @type {TJSFolderOptions} */\r\n   const localOptions = {\r\n      chevronOnly: false,\r\n      focusIndicator: false\r\n   }\r\n\r\n   let detailsEl, labelEl, summaryEl, svgEl;\r\n   let storeUnsubscribe;\r\n\r\n   $: id = isObject(folder) && typeof folder.id === 'string' ? folder.id :\r\n    typeof id === 'string' ? id : void 0;\r\n\r\n   $: label = isObject(folder) && typeof folder.label === 'string' ? folder.label :\r\n    typeof label === 'string' ? label : '';\r\n\r\n   $: keyCode = isObject(folder) && typeof folder.keyCode === 'string' ? folder.keyCode :\r\n    typeof keyCode === 'string' ? keyCode : 'Enter';\r\n\r\n   $: {\r\n      options = isObject(folder) && isObject(folder.options) ? folder.options :\r\n       isObject(options) ? options : {};\r\n\r\n      if (typeof options?.chevronOnly === 'boolean') { localOptions.chevronOnly = options.chevronOnly; }\r\n      if (typeof options?.focusIndicator === 'boolean') { localOptions.focusIndicator = options.focusIndicator; }\r\n   }\r\n\r\n   $: {\r\n      store = isObject(folder) && isWritableStore(folder.store) ? folder.store :\r\n       isWritableStore(store) ? store : writable(false);\r\n\r\n      if (typeof storeUnsubscribe === 'function') { storeUnsubscribe(); }\r\n\r\n      // Manually subscribe to store in order to trigger only on changes; avoids initial dispatch on mount as `detailsEl`\r\n      // is not set yet. Directly dispatch custom events as Svelte 3 does not support bubbling of custom events by\r\n      // `createEventDispatcher`.\r\n      storeUnsubscribe = subscribeIgnoreFirst(store, ((value) =>\r\n      {\r\n         if (detailsEl)\r\n         {\r\n            detailsEl.dispatchEvent(createEvent(value ? 'open' : 'close'));\r\n            detailsEl.dispatchEvent(createEvent(value ? 'openAny' : 'closeAny', true));\r\n         }\r\n      }));\r\n   }\r\n\r\n   $: styles = isObject(folder) && isObject(folder.styles) ? folder.styles :\r\n    isObject(styles) ? styles : void 0;\r\n\r\n   $: onClose = isObject(folder) && typeof folder.onClose === 'function' ? folder.onClose :\r\n    typeof onClose === 'function' ? onClose : void 0;\r\n\r\n   $: onOpen = isObject(folder) && typeof folder.onOpen === 'function' ? folder.onOpen :\r\n    typeof onOpen === 'function' ? onOpen : void 0;\r\n\r\n   $: onContextMenu = isObject(folder) && typeof folder.onContextMenu === 'function' ? folder.onContextMenu :\r\n    typeof onContextMenu === 'function' ? onContextMenu : () => null;\r\n\r\n   // For performance reasons when the folder is closed the main slot is not rendered.\r\n   // When the folder is closed `visible` is set to false with a slight delay to allow the closing animation to\r\n   // complete.\r\n   let visible = $store;\r\n   let timeoutId;\r\n\r\n   $: if (!$store)\r\n   {\r\n      timeoutId = setTimeout(() => visible = false, 500);\r\n   }\r\n   else\r\n   {\r\n      clearTimeout(timeoutId);\r\n      visible = true;\r\n   }\r\n\r\n   onDestroy(() => storeUnsubscribe());\r\n\r\n   /**\r\n    * Create a CustomEvent with details object containing relevant element and props.\r\n    *\r\n    * @param {string}   type - Event name / type.\r\n    *\r\n    * @param {boolean}  [bubbles=false] - Does the event bubble.\r\n    *\r\n    * @returns {CustomEvent<object>}\r\n    */\r\n   function createEvent(type, bubbles = false)\r\n   {\r\n      return new CustomEvent(type, {\r\n         detail: { element: detailsEl, folder, id, label, store },\r\n         bubbles\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Handles opening / closing the details element from either click or keyboard event when summary focused.\r\n    *\r\n    * @param {KeyboardEvent|MouseEvent} event -\r\n    *\r\n    * @param {boolean} [fromKeyboard=false] - True when event is coming from keyboard. This is used to ignore the\r\n    * chevronOnly click event handling.\r\n    */\r\n   function handleOpenClose(event, fromKeyboard = false)\r\n   {\r\n      const target = event.target;\r\n\r\n      const chevronTarget = target === svgEl || svgEl.contains(target);\r\n\r\n      if (target === summaryEl || target === labelEl || chevronTarget ||\r\n       target.querySelector('.summary-click') !== null)\r\n      {\r\n         if (!fromKeyboard && localOptions.chevronOnly && !chevronTarget)\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return;\r\n         }\r\n\r\n         $store = !$store;\r\n\r\n         if ($store && typeof onOpen === 'function')\r\n         {\r\n            onOpen();\r\n         }\r\n         else if (typeof onClose === 'function')\r\n         {\r\n            onClose();\r\n         }\r\n\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n      else\r\n      {\r\n         // Handle exclusion cases when no-summary-click class is in target, targets children, or targets parent\r\n         // element.\r\n         if (target.classList.contains('no-summary-click') || target.querySelector('.no-summary-click') !== null ||\r\n          (target.parentElement && target.parentElement.classList.contains('no-summary-click')))\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Detects whether the summary click came from a pointer / mouse device or the keyboard. If from the keyboard and\r\n    * the active element is `summaryEl` then no action is taken and `onKeyDown` will handle the key event to open /\r\n    * close the detail element.\r\n    *\r\n    * @param {PointerEvent|MouseEvent} event\r\n    */\r\n   function onClickSummary(event)\r\n   {\r\n      // Firefox sends a `click` event / non-standard response so check for mozInputSource equaling 6 (keyboard) or\r\n      // a negative pointerId from Chromium and prevent default. This allows `onKeyUp` to handle any open / close\r\n      // action.\r\n      if (document.activeElement === summaryEl && (event?.pointerId === -1 || event?.mozInputSource === 6))\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n         return;\r\n      }\r\n\r\n      handleOpenClose(event);\r\n   }\r\n\r\n   /**\r\n    * Detect if the key event came from the active tabbed / focused summary element and `options.keyCode` matches.\r\n    *\r\n    * @param {KeyboardEvent} event -\r\n    */\r\n   function onKeyDown(event)\r\n   {\r\n      if (document.activeElement === summaryEl && event.code === keyCode)\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Detect if the key event came from the active tabbed / focused summary element and `options.keyCode` matches.\r\n    *\r\n    * @param {KeyboardEvent} event -\r\n    */\r\n   function onKeyUp(event)\r\n   {\r\n      if (document.activeElement === summaryEl && event.code === keyCode)\r\n      {\r\n         handleOpenClose(event, true);\r\n\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handle receiving bubbled event from summary or content to close details / content.\r\n    */\r\n   function onLocalClose(event)\r\n   {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      store.set(false);\r\n   }\r\n\r\n   /**\r\n    * Handle receiving bubbled event from summary bar to open details / content.\r\n    */\r\n   function onLocalOpen(event)\r\n   {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      store.set(true);\r\n   }\r\n</script>\r\n\r\n<!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\r\n<details class=tjs-svg-folder\r\n         bind:this={detailsEl}\r\n\r\n         on:close={onLocalClose}\r\n         on:closeAny={onLocalClose}\r\n         on:open={onLocalOpen}\r\n         on:openAny={onLocalOpen}\r\n\r\n         on:click\r\n         on:keydown\r\n         on:keyup\r\n         on:open\r\n         on:close\r\n         on:openAny\r\n         on:closeAny\r\n\r\n         use:toggleDetails={{ store, clickActive: false }}\r\n         use:applyStyles={styles}\r\n         data-id={id}\r\n         data-label={label}\r\n         data-closing='false'>\r\n    <!-- svelte-ignore a11y-no-redundant-roles -->\r\n    <summary bind:this={summaryEl}\r\n             on:click|capture={onClickSummary}\r\n             on:contextmenu={onContextMenu}\r\n             on:keydown|capture={onKeyDown}\r\n             on:keyup|capture={onKeyUp}\r\n             class:default-cursor={localOptions.chevronOnly}\r\n             role=button\r\n             tabindex=0>\r\n        <svg bind:this={svgEl} viewBox=\"0 0 24 24\">\r\n            <path\r\n                fill=currentColor\r\n                stroke=currentColor\r\n                style=\"stroke-linejoin: round; stroke-width: 3;\"\r\n                d=\"M5,8L19,8L12,15Z\"\r\n            />\r\n        </svg>\r\n\r\n        {#if localOptions.focusIndicator}\r\n           <div class=tjs-folder-focus-indicator />\r\n        {/if}\r\n\r\n        <slot name=label>\r\n            {#if isSvelteComponent(folder?.slotLabel?.class)}\r\n                <svelte:component this={folder.slotLabel.class} {...(isObject(folder?.slotLabel?.props) ? folder.slotLabel.props : {})} />\r\n            {:else}\r\n                <div bind:this={labelEl} class=label>{localize(label)}</div>\r\n            {/if}\r\n        </slot>\r\n\r\n        <slot name=\"summary-end\">\r\n            {#if isSvelteComponent(folder?.slotSummaryEnd?.class)}\r\n                <svelte:component this={folder.slotSummaryEnd.class} {...(isObject(folder?.slotSummaryEnd?.props) ? folder.slotSummaryEnd.props : {})} />\r\n            {/if}\r\n        </slot>\r\n    </summary>\r\n\r\n    <div class=contents>\r\n        {#if visible}\r\n            <slot>\r\n                {#if isSvelteComponent(folder?.slotDefault?.class)}\r\n                    <svelte:component this={folder.slotDefault.class} {...(isObject(folder?.slotDefault?.props) ? folder.slotDefault.props : {})} />\r\n                {/if}\r\n            </slot>\r\n        {/if}\r\n    </div>\r\n</details>\r\n\r\n<style>\r\n    details {\r\n        margin-left: var(--tjs-folder-details-margin-left, -0.4em);\r\n        padding-left: var(--tjs-folder-details-padding-left, 0.4em); /* Set for children folders to increase indent */\r\n    }\r\n\r\n    summary {\r\n        display: flex;\r\n        position: relative;\r\n        align-items: center;\r\n        background-blend-mode: var(--tjs-folder-summary-background-blend-mode, initial);\r\n        background: var(--tjs-folder-summary-background, none);\r\n        border: var(--tjs-folder-summary-border, none);\r\n        border-radius: var(--tjs-folder-summary-border-radius, 0);\r\n        border-width: var(--tjs-folder-summary-border-width, initial);\r\n        cursor: var(--tjs-folder-summary-cursor, pointer);\r\n        font-size: var(--tjs-folder-summary-font-size, inherit);\r\n        font-weight: var(--tjs-folder-summary-font-weight, bold);\r\n        font-family: var(--tjs-folder-summary-font-family, inherit);\r\n        gap: var(--tjs-folder-summary-gap, 0.125em);\r\n        list-style: none;\r\n        margin: var(--tjs-folder-summary-margin, 0 0 0 -0.4em);\r\n        padding: var(--tjs-folder-summary-padding, 0.25em) 0;\r\n        transition: var(--tjs-folder-summary-transition, background 0.1s);\r\n        user-select: none;\r\n        width: var(--tjs-folder-summary-width, fit-content);\r\n    }\r\n\r\n    .default-cursor {\r\n        cursor: default;\r\n    }\r\n\r\n    summary svg {\r\n        width: var(--tjs-folder-summary-chevron-size, var(--tjs-folder-summary-font-size, 1.25em));\r\n        height: var(--tjs-folder-summary-chevron-size, var(--tjs-folder-summary-font-size, 1.25em));\r\n        color: var(--tjs-folder-summary-chevron-color, currentColor);\r\n        cursor: var(--tjs-folder-summary-cursor, pointer);\r\n        opacity: var(--tjs-folder-summary-chevron-opacity, 0.2);\r\n        margin: var(--tjs-folder-summary-chevron-margin, 0);\r\n        transition: var(--tjs-folder-summary-chevron-transition, opacity 0.2s, transform 0.1s);\r\n        transform: var(--tjs-folder-summary-chevron-rotate-closed, rotate(-90deg));\r\n    }\r\n\r\n    summary:focus-visible {\r\n        box-shadow: var(--tjs-folder-summary-box-shadow-focus-visible, var(--tjs-default-box-shadow-focus-visible));\r\n        outline: var(--tjs-folder-summary-outline-focus-visible, var(--tjs-default-outline-focus-visible, revert));\r\n        transition: var(--tjs-folder-summary-transition-focus-visible, var(--tjs-default-transition-focus-visible));\r\n    }\r\n\r\n    summary:focus-visible .label {\r\n        text-shadow: var(--tjs-folder-summary-label-text-shadow-focus-visible, var(--tjs-default-text-shadow-focus-hover, revert));\r\n    }\r\n\r\n    summary:focus-visible .tjs-folder-focus-indicator {\r\n        background: var(--tjs-folder-summary-focus-indicator-background, var(--tjs-default-focus-indicator-background, white));\r\n    }\r\n\r\n    summary:hover svg {\r\n        opacity: var(--tjs-folder-summary-chevron-opacity-hover, 1);\r\n    }\r\n\r\n    .tjs-folder-focus-indicator {\r\n        align-self: var(--tjs-folder-summary-focus-indicator-align-self, var(--tjs-default-focus-indicator-align-self, stretch));\r\n        border: var(--tjs-folder-summary-focus-indicator-border, var(--tjs-default-focus-indicator-border));\r\n        border-radius: var(--tjs-folder-summary-focus-indicator-border-radius, var(--tjs-default-focus-indicator-border-radius, 0.1em));\r\n        flex: 0 0 var(--tjs-folder-summary-focus-indicator-width, var(--tjs-default-focus-indicator-width, 0.25em));\r\n        height: var(--tjs-folder-summary-focus-indicator-height, var(--tjs-default-focus-indicator-height));\r\n        transition: var(--tjs-folder-summary-focus-indicator-transition, var(--tjs-default-focus-indicator-transition));\r\n    }\r\n\r\n    details[open] > summary {\r\n        background: var(--tjs-folder-summary-background-open, var(--tjs-folder-summary-background, inherit));\r\n    }\r\n\r\n    [open]:not(details[data-closing='true']) > summary svg {\r\n        transform: rotate(var(--tjs-folder-summary-chevron-rotate-open, 0));\r\n    }\r\n\r\n    .contents {\r\n        position: relative;\r\n        background-blend-mode: var(--tjs-folder-contents-background-blend-mode, initial);\r\n        background: var(--tjs-folder-contents-background, none);\r\n        border: var(--tjs-folder-contents-border, none);\r\n        margin: var(--tjs-folder-contents-margin, 0 0 0 -0.4em);\r\n        padding: var(--tjs-folder-contents-padding, 0 0 0 calc(var(--tjs-folder-summary-font-size, 1em) * 0.8));\r\n    }\r\n\r\n    .contents::before {\r\n        content: '';\r\n        position: absolute;\r\n        width: 0;\r\n        height: calc(100% + 0.65em);\r\n        left: 0;\r\n        top: -0.65em;\r\n    }\r\n\r\n    .label {\r\n        overflow: var(--tjs-folder-summary-label-overflow, hidden);\r\n        text-overflow: var(--tjs-folder-summary-label-text-overflow, ellipsis);\r\n        white-space: var(--tjs-folder-summary-label-white-space, nowrap);\r\n        width: var(--tjs-folder-summary-label-width, fit-content);\r\n    }\r\n\r\n    summary:focus-visible + .contents::before {\r\n        height: 100%;\r\n        top: 0;\r\n    }\r\n</style>\r\n","<script>\r\n   /**\r\n    * A number input type.\r\n    *\r\n    * --tjs-input-appearance\r\n    * --tjs-input-background\r\n    * --tjs-input-border\r\n    * --tjs-input-border-radius\r\n    * --tjs-input-box-shadow-focus\r\n    * --tjs-input-box-shadow-focus-visible\r\n    * --tjs-input-caret-color\r\n    * --tjs-input-cursor\r\n    * --tjs-input-flex\r\n    * --tjs-input-height\r\n    * --tjs-input-padding\r\n    * --tjs-input-placeholder-color\r\n    * --tjs-input-outline-focus-visible\r\n    * --tjs-input-outline-offset\r\n    * --tjs-input-overflow\r\n    * --tjs-input-text-align\r\n    * --tjs-input-transition-focus-visible\r\n    * --tjs-input-value-invalid-color\r\n    * --tjs-input-width\r\n    *\r\n    * --tjs-input-number-appearance\r\n    * --tjs-input-number-background\r\n    * --tjs-input-number-border\r\n    * --tjs-input-number-border-radius\r\n    * --tjs-input-number-box-shadow-focus\r\n    * --tjs-input-number-box-shadow-focus-visible\r\n    * --tjs-input-number-caret-color\r\n    * --tjs-input-number-cursor\r\n    * --tjs-input-number-flex\r\n    * --tjs-input-number-height\r\n    * --tjs-input-number-outline-focus-visible\r\n    * --tjs-input-number-outline-offset\r\n    * --tjs-input-number-overflow\r\n    * --tjs-input-number-padding\r\n    * --tjs-input-number-placeholder-color\r\n    * --tjs-input-number-text-align\r\n    * --tjs-input-number-transition-focus-visible\r\n    * --tjs-input-number-value-invalid-color\r\n    * --tjs-input-number-width\r\n    *\r\n    * Webkit unique variables:\r\n    * --tjs-input-number-webkit-inner-spin-button-opacity\r\n    * --tjs-input-number-webkit-outer-spin-button-opacity\r\n    */\r\n\r\n   import { writable }      from 'svelte/store';\r\n\r\n   import { applyStyles }   from '@typhonjs-fvtt/runtime/svelte/action/dom';\r\n   import { localize }      from '@typhonjs-fvtt/runtime/svelte/helper';\r\n   import { isObject }      from '@typhonjs-fvtt/runtime/util/object';\r\n\r\n   import {\r\n      isReadableStore,\r\n      isWritableStore }     from '@typhonjs-fvtt/runtime/util/store';\r\n\r\n   export let input = void 0;\r\n   export let disabled = void 0;\r\n   export let options = void 0;\r\n   export let max = void 0;\r\n   export let min = void 0;\r\n   export let placeholder = void 0;\r\n   export let step = void 0;\r\n   export let store = void 0;\r\n   export let storeIsValid = void 0;\r\n   export let styles = void 0;\r\n   export let efx = void 0;\r\n\r\n   const localOptions = {\r\n      blurOnEnterKey: true,\r\n      cancelOnEscKey: false\r\n   }\r\n\r\n   let inputEl;\r\n\r\n   $: disabled = isObject(input) && typeof input.disabled === 'boolean' ? input.disabled :\r\n    typeof disabled === 'boolean' ? disabled : false;\r\n\r\n   $: {\r\n      options = isObject(input) && isObject(input.options) ? input.options :\r\n       isObject(options) ? options : {};\r\n\r\n      if (typeof options?.blurOnEnterKey === 'boolean') { localOptions.blurOnEnterKey = options.blurOnEnterKey; }\r\n      if (typeof options?.cancelOnEscKey === 'boolean') { localOptions.cancelOnEscKey = options.cancelOnEscKey; }\r\n   }\r\n\r\n   $: max = isObject(input) && typeof input.max === 'number' ? input.max :\r\n    typeof max === 'number' ? max : void 0;\r\n\r\n   $: min = isObject(input) && typeof input.min === 'number' ? input.min :\r\n    typeof min === 'number' ? min : void 0;\r\n\r\n   $: placeholder = isObject(input) && typeof input.placeholder === 'string' ? localize(input.placeholder) :\r\n    typeof placeholder === 'string' ? localize(placeholder) : void 0;\r\n\r\n   $: step = isObject(input) && typeof input.step === 'number' ? input.step :\r\n    typeof step === 'number' ? step : void 0;\r\n\r\n   $: store = isObject(input) && isWritableStore(input.store) ? input.store :\r\n    isWritableStore(store) ? store : writable(void 0);\r\n\r\n   $: storeIsValid = isObject(input) && isReadableStore(input.storeIsValid) ? input.storeIsValid :\r\n    isReadableStore(storeIsValid) ? storeIsValid : writable(true);\r\n\r\n   $: storeIsValid = isObject(input) && isReadableStore(input.storeIsValid) ? input.storeIsValid :\r\n    isReadableStore(storeIsValid) ? storeIsValid : writable(true);\r\n\r\n   $: styles = isObject(input) && isObject(input.styles) ? input.styles :\r\n    isObject(styles) ? styles : void 0;\r\n\r\n   $: efx = isObject(input) && typeof input.efx === 'function' ? input.efx :\r\n    typeof efx === 'function' ? efx : () => {};\r\n\r\n   /** @type {number|null} */\r\n   let initialValue;\r\n\r\n   /**\r\n    * Save initial value on focus. Convert to number or null the same way that Svelte does for binding `value`.\r\n    */\r\n   function onFocusIn()\r\n   {\r\n      if (localOptions.cancelOnEscKey)\r\n      {\r\n         initialValue = inputEl.value === '' ? null : globalThis.parseFloat(inputEl.value);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Blur input on enter key down.\r\n    *\r\n    * @param {KeyboardEvent} event -\r\n    */\r\n   function onKeyDown(event)\r\n   {\r\n      if (localOptions.blurOnEnterKey && event.code === 'Enter')\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n\r\n         inputEl.blur();\r\n         return;\r\n      }\r\n\r\n      if (event.code === 'Escape')\r\n      {\r\n         if (localOptions.cancelOnEscKey && (initialValue === null || typeof initialValue === 'number'))\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            store.set(initialValue);\r\n            initialValue = void 0;\r\n            inputEl.blur();\r\n         }\r\n      }\r\n   }\r\n</script>\r\n\r\n<div class=tjs-input-container use:efx use:applyStyles={styles}>\r\n    <input class=tjs-input\r\n           type=number\r\n           bind:this={inputEl}\r\n           bind:value={$store}\r\n           class:is-value-invalid={!$storeIsValid}\r\n           max={max}\r\n           min={min}\r\n           step={step}\r\n           {placeholder}\r\n           {disabled}\r\n           on:focusin={onFocusIn}\r\n           on:keydown={onKeyDown}\r\n    />\r\n</div>\r\n\r\n<style>\r\n    .tjs-input-container {\r\n        display: block;\r\n        pointer-events: none;\r\n        overflow: var(--tjs-input-number-overflow, var(--tjs-input-overflow, hidden));\r\n        transform-style: preserve-3d;\r\n\r\n        background: var(--tjs-input-number-background, var(--tjs-input-background));\r\n        border-radius: var(--tjs-input-number-border-radius, var(--tjs-input-border-radius));\r\n        flex: var(--tjs-input-number-flex, var(--tjs-input-flex));\r\n        margin: var(--tjs-input-number-margin, var(--tjs-input-margin));\r\n        height: var(--tjs-input-number-height, var(--tjs-input-height));\r\n        width: var(--tjs-input-number-width, var(--tjs-input-width));\r\n    }\r\n\r\n    .is-value-invalid {\r\n        color: var(--tjs-input-number-value-invalid-color, var(--tjs-input-value-invalid-color, red));\r\n    }\r\n\r\n    input {\r\n        pointer-events: initial;\r\n        display: inline-block;\r\n        position: relative;\r\n\r\n        appearance: var(--tjs-input-number-appearance, var(--tjs-input-appearance, inherit));\r\n\r\n        background: transparent;\r\n\r\n        border: var(--tjs-input-number-border, var(--tjs-input-border));\r\n        border-radius: var(--tjs-input-number-border-radius, var(--tjs-input-border-radius));\r\n\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        padding: var(--tjs-input-number-padding, var(--tjs-input-padding, initial));\r\n\r\n        color: inherit;\r\n        caret-color: var(--tjs-input-number-caret-color, var(--tjs-input-caret-color));\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        line-height: inherit;\r\n        outline-offset: var(--tjs-input-number-outline-offset, var(--tjs-input-outline-offset));\r\n        text-align: var(--tjs-input-number-text-align, var(--tjs-input-text-align));\r\n\r\n        cursor: var(--tjs-input-number-cursor, var(--tjs-input-cursor, text));\r\n\r\n        transform: translateZ(1px);\r\n    }\r\n\r\n    input:focus {\r\n        box-shadow: var(--tjs-input-number-box-shadow-focus, var(--tjs-input-box-shadow-focus, unset));\r\n    }\r\n\r\n    input:focus-visible {\r\n        box-shadow: var(--tjs-input-number-box-shadow-focus-visible, var(--tjs-input-box-shadow-focus-visible, unset));\r\n        outline: var(--tjs-input-number-outline-focus-visible, var(--tjs-input-outline-focus-visible));\r\n        transition: var(--tjs-input-number-transition-focus-visible, var(--tjs-input-transition-focus-visible));\r\n    }\r\n\r\n    input::placeholder {\r\n        color: var(--tjs-input-number-placeholder-color, var(--tjs-input-placeholder-color, inherit));\r\n    }\r\n\r\n    /* For Webkit */\r\n    input::-webkit-inner-spin-button {\r\n        opacity: var(--tjs-input-number-webkit-inner-spin-button-opacity, inherit);\r\n    }\r\n\r\n    input::-webkit-outer-spin-button {\r\n        opacity: var(--tjs-input-number-webkit-outer-spin-button-opacity, inherit);\r\n    }\r\n</style>\r\n","<script>\r\n   /**\r\n    * A generic input type has issues w/ 2-way binding w/ Svelte.\r\n    * https://github.com/sveltejs/svelte/issues/3921\r\n    *\r\n    * A \"hack\" is used to set the type on the input element: `{...{ type }}`\r\n    *\r\n    * Only use this component for text inputs presently. More work to come.\r\n    *\r\n    * --tjs-input-appearance\r\n    * --tjs-input-background\r\n    * --tjs-input-border\r\n    * --tjs-input-border-radius\r\n    * --tjs-input-box-shadow-focus\r\n    * --tjs-input-box-shadow-focus-visible\r\n    * --tjs-input-caret-color\r\n    * --tjs-input-cursor\r\n    * --tjs-input-flex\r\n    * --tjs-input-height\r\n    * --tjs-input-padding\r\n    * --tjs-input-placeholder-color\r\n    * --tjs-input-outline-focus-visible\r\n    * --tjs-input-outline-offset\r\n    * --tjs-input-overflow\r\n    * --tjs-input-text-align\r\n    * --tjs-input-transition-focus-visible\r\n    * --tjs-input-value-invalid-color\r\n    * --tjs-input-width\r\n    *\r\n    * --tjs-input-text-appearance\r\n    * --tjs-input-text-background\r\n    * --tjs-input-text-border\r\n    * --tjs-input-text-border-radius\r\n    * --tjs-input-text-box-shadow-focus\r\n    * --tjs-input-text-box-shadow-focus-visible\r\n    * --tjs-input-text-caret-color\r\n    * --tjs-input-text-cursor\r\n    * --tjs-input-text-flex\r\n    * --tjs-input-text-height\r\n    * --tjs-input-text-outline-focus-visible\r\n    * --tjs-input-text-outline-offset\r\n    * --tjs-input-text-overflow\r\n    * --tjs-input-text-padding\r\n    * --tjs-input-text-placeholder-color\r\n    * --tjs-input-text-text-align\r\n    * --tjs-input-text-transition-focus-visible\r\n    * --tjs-input-text-value-invalid-color\r\n    * --tjs-input-text-width\r\n    */\r\n\r\n   import { writable }          from 'svelte/store';\r\n\r\n   import { applyStyles }       from '@typhonjs-fvtt/runtime/svelte/action/dom';\r\n   import { localize }          from '@typhonjs-fvtt/runtime/svelte/helper';\r\n   import { isObject }          from '@typhonjs-fvtt/runtime/util/object';\r\n\r\n   import {\r\n      isReadableStore,\r\n      isWritableStore }         from '@typhonjs-fvtt/runtime/util/store';\r\n\r\n   export let input = void 0;\r\n   export let type = void 0;\r\n   export let disabled = void 0;\r\n   export let options = void 0;\r\n   export let placeholder = void 0;\r\n   export let store = void 0;\r\n   export let storeIsValid = void 0;\r\n   export let styles = void 0;\r\n   export let efx = void 0;\r\n\r\n   const localOptions = {\r\n      blurOnEnterKey: true,\r\n      cancelOnEscKey: false,\r\n      clearOnEscKey: false\r\n   }\r\n\r\n   let inputEl;\r\n\r\n   $: {\r\n      type = isObject(input) && typeof input.type === 'string' ? input.type :\r\n       typeof type === 'string' ? type : 'text';\r\n\r\n      switch (type)\r\n      {\r\n         case 'email':\r\n         case 'password':\r\n         case 'search':\r\n         case 'text':\r\n         case 'url':\r\n            break;\r\n\r\n         default:\r\n            throw new Error(\r\n             `'TJSInputText only supports text input types: 'email', 'password', 'search', 'text', 'url'.`);\r\n      }\r\n   }\r\n\r\n   $: disabled = isObject(input) && typeof input.disabled === 'boolean' ? input.disabled :\r\n    typeof disabled === 'boolean' ? disabled : false;\r\n\r\n   $: {\r\n      options = isObject(input) && isObject(input.options) ? input.options :\r\n       isObject(options) ? options : {};\r\n\r\n      if (typeof options?.blurOnEnterKey === 'boolean') { localOptions.blurOnEnterKey = options.blurOnEnterKey; }\r\n      if (typeof options?.cancelOnEscKey === 'boolean') { localOptions.cancelOnEscKey = options.cancelOnEscKey; }\r\n      if (typeof options?.clearOnEscKey === 'boolean') { localOptions.clearOnEscKey = options.clearOnEscKey; }\r\n   }\r\n\r\n   $: placeholder = isObject(input) && typeof input.placeholder === 'string' ? localize(input.placeholder) :\r\n    typeof placeholder === 'string' ? localize(placeholder) : void 0;\r\n\r\n   $: store = isObject(input) && isWritableStore(input.store) ? input.store :\r\n    isWritableStore(store) ? store : writable(void 0);\r\n\r\n   $: storeIsValid = isObject(input) && isReadableStore(input.storeIsValid) ? input.storeIsValid :\r\n    isReadableStore(storeIsValid) ? storeIsValid : writable(true);\r\n\r\n   $: styles = isObject(input) && isObject(input.styles) ? input.styles :\r\n    isObject(styles) ? styles : void 0;\r\n\r\n   $: efx = isObject(input) && typeof input.efx === 'function' ? input.efx :\r\n    typeof efx === 'function' ? efx : () => {};\r\n\r\n   let initialValue;\r\n\r\n   function onFocusIn(event)\r\n   {\r\n      initialValue = localOptions.cancelOnEscKey ? inputEl.value : void 0;\r\n   }\r\n\r\n   /**\r\n    * Blur input on enter key down.\r\n    *\r\n    * @param {KeyboardEvent} event -\r\n    */\r\n   function onKeyDown(event)\r\n   {\r\n      if (localOptions.blurOnEnterKey && event.code === 'Enter')\r\n      {\r\n         event.preventDefault();\r\n         event.stopPropagation();\r\n\r\n         inputEl.blur();\r\n         return;\r\n      }\r\n\r\n      if (event.code === 'Escape')\r\n      {\r\n         if (localOptions.cancelOnEscKey && typeof initialValue === 'string')\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            store.set(initialValue);\r\n            initialValue = void 0;\r\n            inputEl.blur();\r\n         }\r\n         else if (localOptions.clearOnEscKey)\r\n         {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            store.set('');\r\n            inputEl.blur();\r\n         }\r\n      }\r\n   }\r\n</script>\r\n\r\n<div class=tjs-input-container use:efx use:applyStyles={styles}>\r\n    <input class=tjs-input\r\n           {...{ type }}\r\n           bind:this={inputEl}\r\n           bind:value={$store}\r\n           class:is-value-invalid={!$storeIsValid}\r\n           {placeholder}\r\n           {disabled}\r\n           on:focusin={onFocusIn}\r\n           on:keydown={onKeyDown}\r\n    />\r\n</div>\r\n\r\n<style>\r\n    .tjs-input-container {\r\n        display: block;\r\n        overflow: var(--tjs-input-text-overflow, var(--tjs-input-overflow, hidden));\r\n        pointer-events: none;\r\n        transform-style: preserve-3d;\r\n\r\n        background: var(--tjs-input-text-background, var(--tjs-input-background));\r\n        border-radius: var(--tjs-input-text-border-radius, var(--tjs-input-border-radius));\r\n        flex: var(--tjs-input-text-flex, var(--tjs-input-flex));\r\n        margin: var(--tjs-input-text-margin, var(--tjs-input-margin));\r\n        height: var(--tjs-input-text-height, var(--tjs-input-height));\r\n        width: var(--tjs-input-text-width, var(--tjs-input-width));\r\n    }\r\n\r\n    .is-value-invalid {\r\n        color: var(--tjs-input-text-value-invalid-color, var(--tjs-input-value-invalid-color, red));\r\n    }\r\n\r\n    input {\r\n        pointer-events: initial;\r\n        display: inline-block;\r\n        position: relative;\r\n\r\n        appearance: var(--tjs-input-text-appearance, var(--tjs-input-appearance, inherit));\r\n\r\n        background: transparent;\r\n\r\n        border: var(--tjs-input-text-border, var(--tjs-input-border));\r\n        border-radius: var(--tjs-input-text-border-radius, var(--tjs-input-border-radius));\r\n\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        padding: var(--tjs-input-text-padding, var(--tjs-input-padding, initial));\r\n\r\n        color: inherit;\r\n        caret-color: var(--tjs-input-text-caret-color, var(--tjs-input-caret-color));\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        line-height: inherit;\r\n        outline-offset: var(--tjs-input-text-outline-offset, var(--tjs-input-outline-offset));\r\n        text-align: var(--tjs-input-text-text-align, var(--tjs-input-text-align));\r\n\r\n        cursor: var(--tjs-input-text-cursor, var(--tjs-input-cursor, text));\r\n\r\n        transform: translateZ(1px);\r\n    }\r\n\r\n    input:focus {\r\n        box-shadow: var(--tjs-input-text-box-shadow-focus, var(--tjs-input-box-shadow-focus, unset));\r\n    }\r\n\r\n    input:focus-visible {\r\n        box-shadow: var(--tjs-input-text-box-shadow-focus-visible, var(--tjs-input-box-shadow-focus-visible, unset));\r\n        outline: var(--tjs-input-text-outline-focus-visible, var(--tjs-input-outline-focus-visible));\r\n        transition: var(--tjs-input-text-transition-focus-visible, var(--tjs-input-transition-focus-visible));\r\n    }\r\n\r\n    input::placeholder {\r\n        color: var(--tjs-input-text-placeholder-color, var(--tjs-input-placeholder-color, inherit));\r\n    }\r\n</style>\r\n","<script>\r\n   /**\r\n    * Provides a generic \"input\" component that creates the specific input component based on 'type'.\r\n    *\r\n    * You must provide the configuration solely through the `input` prop which is passed onto the actual implementation.\r\n    *\r\n    * If no `type` property is available in the input object `text` is assumed as the default.\r\n    */\r\n\r\n   import { isObject }          from '@typhonjs-fvtt/runtime/util/object';\r\n\r\n   import TJSInputNumber        from './TJSInputNumber.svelte';\r\n   import TJSInputText          from './TJSInputText.svelte';\r\n\r\n   export let input = void 0;\r\n\r\n   let component;\r\n\r\n   $: {\r\n      const type = isObject(input) && typeof input.type === 'string' ? input.type : 'text';\r\n\r\n      switch (type)\r\n      {\r\n         case 'email':\r\n         case 'password':\r\n         case 'search':\r\n         case 'text':\r\n         case 'url':\r\n            component = TJSInputText;\r\n            break;\r\n\r\n         case 'number':\r\n            component = TJSInputNumber;\r\n            break;\r\n\r\n         default:\r\n            throw new Error(\r\n             `'TJSInput' currently only supports text input types: 'email', 'number', 'password', 'search', 'text', 'url'.`);\r\n      }\r\n   }\r\n</script>\r\n\r\n<svelte:component this={component} {input} />\r\n","// Protect for absent global `ProseMirror` on Foundry v9.\r\nconst ProseMirrorKeyMaps = globalThis.ProseMirror ? globalThis.ProseMirror.ProseMirrorKeyMaps : class {};\r\n\r\n/**\r\n * Provides an additional key mapping to `Escape` to destroy / cancel the active editor.\r\n */\r\nclass TJSKeyMaps extends ProseMirrorKeyMaps\r\n{\r\n   /** @type {Function} */\r\n   #onQuit;\r\n\r\n   /**\r\n    * @param {globalThis.Schema}   schema - The ProseMirror schema to build keymaps for.\r\n    *\r\n    * @param {object}   [options] - Additional options to configure the plugin's behaviour.\r\n    *\r\n    * @param {Function} [options.onSave] - A function to call when Ctrl+S is pressed.\r\n    *\r\n    * @param {Function} [options.onQuit] - A function to call when Ctrl+Q is pressed.\r\n    */\r\n   constructor(schema, options)\r\n   {\r\n      super(schema, options);\r\n\r\n      if (typeof options.onQuit === 'function') { this.#onQuit = options.onQuit; }\r\n   }\r\n\r\n   // eslint-disable-next jsdoc/check-types\r\n   /**\r\n    * Swaps the Foundry default `Escape` / selectParentNode to `Mod-p` and enables `onQuit` function for `Escape`.\r\n    *\r\n    * @returns { {[key: string]: globalThis.ProseMirrorCommand} } ProseMirror keymap data.\r\n    */\r\n   buildMapping()\r\n   {\r\n      const mapping = super.buildMapping();\r\n\r\n      // Add onQuit callback if defined.\r\n      if (this.#onQuit)\r\n      {\r\n         // Swap Foundry core mapping for `Escape` / selectParentNode to `Mod-p`.\r\n         if (mapping['Escape']) { mapping['Mod-p'] = mapping['Escape']; }\r\n\r\n         mapping['Escape'] = () => this.#onQuit();\r\n      }\r\n\r\n      return mapping;\r\n   }\r\n}\n\n// Protect for absent global `ProseMirror` on Foundry v9.\r\nconst Plugin = globalThis.ProseMirror ? globalThis.ProseMirror.Plugin : class {};\r\n\r\n/**\r\n * A ProseMirror plugin to transform pasted text that is a raw document UUID into a document link suitable for\r\n * `TextEditor.enrichHTML`.\r\n */\r\nclass TJSPasteUUID\r\n{\r\n   /**\r\n    * Defines a regex to check for the shape of a raw Foundry document UUID.\r\n    *\r\n    * @type {RegExp}\r\n    */\r\n   static #s_UUID_REGEX = /(\\.).*([a-zA-Z0-9]{16})/;\r\n\r\n   /**\r\n    * @returns {Plugin<any>} PM Plugin.\r\n    */\r\n   static build()\r\n   {\r\n      const instance = new this();\r\n      return new Plugin({\r\n         // key: new PluginKey('tjsPasteRawUUID'), // TODO: Add back when exported by Foundry / ProseMirror bundle.\r\n         props: {\r\n            transformPastedText: (text) => instance.#transformUUID(text)\r\n         }\r\n      });\r\n   }\r\n\r\n   /**\r\n    * Transforms pasted text. Check if pasted test matches the shape of a raw UUID. If so do a lookup and if a\r\n    * document is retrieved transform it to a document link.\r\n    *\r\n    * @param {string}   text - pasted text to transform.\r\n    *\r\n    * @returns {string} Potentially transformed pasted text.\r\n    */\r\n   #transformUUID(text)\r\n   {\r\n      if (typeof text === 'string')\r\n      {\r\n         if (TJSPasteUUID.#s_UUID_REGEX.test(text))\r\n         {\r\n            const uuidDoc = globalThis.fromUuidSync(text);\r\n            if (uuidDoc)\r\n            {\r\n               text = `@UUID[${text}]{${typeof uuidDoc.name === 'string' ? uuidDoc.name : 'Unknown'}}`;\r\n            }\r\n         }\r\n      }\r\n\r\n      return text;\r\n   }\r\n}\n\nexport { TJSKeyMaps, TJSPasteUUID };\n//# sourceMappingURL=index.js.map\n","<script>\r\n   /**\r\n    * --tjs-input-appearance\r\n    * --tjs-input-background\r\n    * --tjs-input-border\r\n    * --tjs-input-border-radius\r\n    * --tjs-input-box-shadow-focus\r\n    * --tjs-input-box-shadow-focus-visible\r\n    * --tjs-input-cursor\r\n    * --tjs-input-flex\r\n    * --tjs-input-height\r\n    * --tjs-input-outline-focus-visible\r\n    * --tjs-input-outline-offset\r\n    * --tjs-input-overflow\r\n    * --tjs-input-text-overflow\r\n    * --tjs-input-transition-focus-visible\r\n    * --tjs-input-width\r\n    *\r\n    * --tjs-select-appearance\r\n    * --tjs-select-background\r\n    * --tjs-select-border\r\n    * --tjs-select-border-radius\r\n    * --tjs-select-box-shadow-focus\r\n    * --tjs-select-box-shadow-focus-visible\r\n    * --tjs-select-cursor\r\n    * --tjs-select-flex\r\n    * --tjs-select-height\r\n    * --tjs-select-outline-focus-visible\r\n    * --tjs-select-outline-offset\r\n    * --tjs-select-overflow\r\n    * --tjs-select-text-overflow\r\n    * --tjs-select-transition-focus-visible\r\n    * --tjs-select-width\r\n    *\r\n    * --tjs-select-option-background; fallback: --tjs-default-popup-background; default: #23221d\r\n    * --tjs-select-option-color; fallback: --tjs-default-popup-primary-color; default: #b5b3a4\r\n    */\r\n\r\n   /**\r\n    * Note: A Svelte reactivity bug / issue is worked around below. Due to the several reactive statements over handling\r\n    * props when binding the store directly to the select element the #each block of options causes the compiler to\r\n    * incorrectly invalidate / run the reactive statements again for `options` and `select` on any changes to the select\r\n    * element. Running the `select` reactive statements causes the store statement to be run again causing the store to\r\n    * be unsubscribed and subscribed to. Technically this isn't a problem, but the workaround solution of using an\r\n    * on:change instead of bind in this instance fixes it.\r\n    *\r\n    * @see https://github.com/sveltejs/svelte/issues/4933\r\n    * @see https://dev.to/isaachagoel/svelte-reactivity-gotchas-solutions-if-you-re-using-svelte-in-production-you-should-read-this-3oj3\r\n    */\r\n\r\n   import { onMount }         from 'svelte';\r\n   import { writable }        from 'svelte/store';\r\n\r\n   import { applyStyles }     from '@typhonjs-fvtt/runtime/svelte/action/dom';\r\n   import { isWritableStore } from '@typhonjs-fvtt/runtime/util/store';\r\n   import { isObject }        from '@typhonjs-fvtt/runtime/util/object';\r\n\r\n   export let select = void 0;\r\n   export let selected = void 0;\r\n   export let options = void 0;\r\n   export let store = void 0;\r\n   export let styles = void 0;\r\n   export let efx = void 0;\r\n\r\n   $: selected = isObject(select) && typeof select.selected === 'string' ? select.selected :\r\n    typeof selected === 'string' ? selected : void 0;\r\n   $: options = isObject(select) && Array.isArray(select.options) ? select.options :\r\n    Array.isArray(options) ? options : [];\r\n   $: store = isObject(select) && isWritableStore(select.store) ? select.store :\r\n    isWritableStore(store) ? store : writable(void 0);\r\n   $: styles = isObject(select) && isObject(select.styles) ? select.styles :\r\n    isObject(styles) ? styles : void 0;\r\n   $: efx = isObject(select) && typeof select.efx === 'function' ? select.efx :\r\n    typeof efx === 'function' ? efx : () => {};\r\n\r\n   onMount(() =>\r\n   {\r\n      // On mount verify that the current store value is included in options otherwise check the `selected` value if set\r\n      // and if this initial value is in the list of options then set it as the default option.\r\n      if (selected && store && !options.includes($store) && options.includes(selected)) { store.set(selected); }\r\n   });\r\n</script>\r\n\r\n<div on:change class=tjs-select-container use:efx use:applyStyles={styles}>\r\n   <!-- Please see note at top / above on why on:change is used over `bind:value={$store}`. -->\r\n   <select on:change class=tjs-select bind:value={$store}>\r\n      {#each options as option}\r\n         <option class=tjs-select-option value={option.value}>\r\n            {option.label}\r\n         </option>\r\n      {/each}\r\n   </select>\r\n</div>\r\n\r\n<style>\r\n   .tjs-select-container {\r\n      pointer-events: none;\r\n      display: block;\r\n      overflow: var(--tjs-select-overflow, var(--tjs-input-overflow, hidden));\r\n      transform-style: preserve-3d;\r\n\r\n      background: var(--tjs-select-background, var(--tjs-input-background));\r\n      border-radius: var(--tjs-select-border-radius, var(--tjs-input-border-radius));\r\n      flex: var(--tjs-select-flex, var(--tjs-input-flex));\r\n      margin: var(--tjs-select-margin, var(--tjs-input-margin));\r\n      height: var(--tjs-select-height, var(--tjs-input-height));\r\n      width: var(--tjs-select-width, var(--tjs-input-width));\r\n   }\r\n\r\n   select {\r\n      pointer-events: initial;\r\n      display: inline-block;\r\n      position: relative;\r\n\r\n      appearance: var(--tjs-select-appearance, var(--tjs-input-appearance, inherit));\r\n\r\n      background: transparent;\r\n\r\n      border: var(--tjs-select-border, var(--tjs-input-border));\r\n      border-radius: var(--tjs-select-border-radius, var(--tjs-input-border-radius));\r\n\r\n      width: 100%;\r\n      height: 100%;\r\n\r\n      padding: var(--tjs-select-padding, var(--tjs-input-padding, initial));\r\n\r\n      color: inherit;\r\n      font-family: inherit;\r\n      font-size: inherit;\r\n      line-height: inherit;\r\n      outline-offset: var(--tjs-select-outline-offset, var(--tjs-input-outline-offset));\r\n      text-align: var(--tjs-select-text-align, var(--tjs-input-text-align));\r\n      text-overflow: var(--tjs-select-text-overflow, var(--tjs-input-text-overflow, ellipsis));\r\n\r\n      cursor: var(--tjs-select-cursor, var(--tjs-input-cursor));\r\n\r\n      transform: translateZ(1px);\r\n   }\r\n\r\n   select option {\r\n      background: var(--tjs-select-option-background, var(--tjs-default-popup-background, #23221d));\r\n      color: var(--tjs-select-option-color, var(--tjs-default-popup-primary-color, #b5b3a4));\r\n   }\r\n\r\n   select:focus {\r\n      box-shadow: var(--tjs-select-box-shadow-focus, var(--tjs-input-box-shadow-focus, unset));\r\n   }\r\n\r\n   select:focus-visible {\r\n      box-shadow: var(--tjs-select-box-shadow-focus-visible, var(--tjs-input-box-shadow-focus-visible, unset));\r\n      outline: var(--tjs-select-outline-focus-visible, var(--tjs-input-outline-focus-visible));\r\n      transition: var(--tjs-select-transition-focus-visible, var(--tjs-input-transition-focus-visible));\r\n   }\r\n</style>\r\n","<script>\r\n   /**\r\n    * --tjs-settings-entry-margin - 0 0 1rem 0\r\n    *\r\n    * --tjs-settings-entry-label-color - inherit\r\n    * --tjs-settings-entry-label-font-size - inherit\r\n    * --tjs-settings-entry-label-line-height - var(--form-field-height) / Foundry variable\r\n    *\r\n    * --tjs-settings-entry-hint-color - var(--color-text-dark-secondary) / Foundry variable\r\n    * --tjs-settings-entry-hint-font-size - var(--font-size-12) / Foundry variable\r\n    * --tjs-settings-entry-hint-line-height - var(--line-height-16) / Foundry variable\r\n    * --tjs-settings-entry-hint-margin - 0.5em 0\r\n    *\r\n    * TODO: replace range input support below w/ TJSInputRange when available.\r\n    */\r\n\r\n   import { TJSIconButton } from '../button/index.js';\r\n\r\n   import {\r\n      TJSInput,\r\n      TJSSelect }           from '../form/index.js';\r\n\r\n   /** @type {object} */\r\n   export let setting = void 0;\r\n\r\n   const store = setting.store;\r\n\r\n   let filePickerApp;\r\n\r\n   function onFilePicker()\r\n   {\r\n      // Bring any existing file picker to the top.\r\n      if (filePickerApp)\r\n      {\r\n         filePickerApp.bringToTop();\r\n         return;\r\n      }\r\n\r\n      filePickerApp = new FilePicker({\r\n         type: setting.filePicker,\r\n         current: setting.value,\r\n         callback: (result) => $store = result\r\n      });\r\n\r\n      // A little hack here to remove the existing reference to `filePickerApp` when closed.\r\n      const originalClose = filePickerApp.close;\r\n      filePickerApp.close = async function (options)\r\n      {\r\n         await originalClose.call(filePickerApp, options);\r\n         filePickerApp = void 0;\r\n      }\r\n\r\n      filePickerApp.render(true, { focus: true });\r\n   }\r\n</script>\r\n\r\n<section class=tjs-settings-entry>\r\n    <label for={setting.id}>{setting.name}</label>\r\n    <div class:checkbox={setting.componentType === 'checkbox'}>\r\n        {#if setting.componentType === 'checkbox'}\r\n            <input type=checkbox id={setting.id} bind:checked={$store} />\r\n        {:else if setting.componentType === 'number'}\r\n            <TJSInput input={setting.inputData} />\r\n        {:else if setting.componentType === 'range'}\r\n            <input type=range id={setting.id} min={setting.range.min} max={setting.range.max} step={setting.range.step} bind:value={$store} />\r\n            <span class=range-value>{$store}</span>\r\n        {:else if setting.componentType === 'select'}\r\n            <TJSSelect select={setting.selectData} />\r\n        {:else if setting.componentType === 'text'}\r\n            <TJSInput input={setting.inputData} />\r\n        {/if}\r\n        {#if setting.filePicker}\r\n            <TJSIconButton button={setting.buttonData} on:click={onFilePicker} />\r\n        {/if}\r\n    </div>\r\n    {#if setting.hint}\r\n        <p class=hint>{setting.hint}</p>\r\n    {/if}\r\n</section>\r\n\r\n<style>\r\n    div {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: nowrap;\r\n        flex: 3;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n    }\r\n\r\n    div.checkbox {\r\n        flex: 0\r\n    }\r\n\r\n    label {\r\n        color: var(--tjs-settings-entry-label-color, inherit);\r\n        font-size: var(--tjs-settings-entry-label-font-size, inherit);\r\n        line-height: var(--tjs-settings-entry-label-line-height, var(--form-field-height));\r\n        flex: 2;\r\n    }\r\n\r\n    input[type=range] {\r\n        margin-left: 0.25em;\r\n    }\r\n\r\n    span.range-value {\r\n        display: block;\r\n        flex: 0 1 fit-content;\r\n        text-align: center;\r\n        border: var(--tjs-input-border, 1px solid var(--color-border-light-primary));\r\n        border-radius: var(--tjs-input-border-radius);\r\n        padding: 0.25em;\r\n        margin-left: 0.5em;\r\n    }\r\n\r\n    p {\r\n        flex: 0 0 100%;\r\n        color: var(--tjs-settings-entry-hint-color, var(--color-text-dark-secondary));\r\n        font-size: var(--tjs-settings-entry-hint-font-size, var(--font-size-12));\r\n        line-height: var(--tjs-settings-entry-hint-line-height, var(--line-height-16));\r\n        margin: var(--tjs-settings-entry-hint-margin, 0.5em 0);\r\n        min-height: 1rem;\r\n    }\r\n\r\n    section {\r\n        clear: both;\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n    }\r\n\r\n    section:not(:last-child) {\r\n        margin: var(--tjs-settings-entry-margin, 0 0 1rem 0);\r\n    }\r\n</style>\r\n","<script>\r\n   /**\r\n    * TJSSettingsEdit provides the main Svelte component to display and modify settings registered with\r\n    * {@link TJSGameSettings}. Refer to the documentation in {@link TJSGameSettings.register} and\r\n    * {@link TJSGameSettings.registerAll}. Adding custom defined sections is accomplished with\r\n    * {@link TJSGameSettings.addSection}. You must pass an instance of TJSGameSettings as the `settings` prop.\r\n    *\r\n    * Note: to group settings into specific folders instead of a single top level section use the `folder` option when\r\n    * registering settings with TJSGameSettings. Also please refer to the extra folder options described by\r\n    * {@link TJSGameSettings.addSection}.\r\n    *\r\n    * The other prop `options` is an object instance defined by {@link TJSSettingsCreateOptions}. This allows you to\r\n    * associate a {@link import('@typhonjs-fvtt/runtime/svelte/store/web-storage').TJSWebStorage} instance that automatically\r\n    * will track open / closed state of any section folders configured along with the scrolling position of the\r\n    * scrollbar and define the `efx action` associated with the TJS input elements used in\r\n    *\r\n    * TJSSettingsEdit supports two additional named slots `settings-header` and `settings-footer` allowing you to\r\n    * set Svelte components as a fixed header and / or footer to the main scrollable settings content.\r\n    *\r\n    * When TJSSettingsEdit is displayed the UI display data is generated from {@link TJSGameSettings.uiControl}\r\n    * automatically. When the TJSSettingsEdit component is destroyed any settings registered for UI display will be\r\n    * checked for `requiresReload` setting option. If the setting has changed while TJSSettingsEdit is displayed a\r\n    * modal dialog is opened to inform the user that a setting changed that requires reloading.\r\n    *\r\n    * If you need an easy to use slotted component that allows swapping from the main slot and TJSSettingsEdit please\r\n    * refer to {@link TJSSettingsSwap}.\r\n    *\r\n    * CSS variables available include the following options.\r\n    *\r\n    * Top level 'main' element:\r\n    * --tjs-settings-section-background - none\r\n    *\r\n    * Scrollable div element:\r\n    * --tjs-settings-padding - 0\r\n    *\r\n    * Each section element for a grouping of settings:\r\n    * --tjs-settings-section-background - none\r\n    * --tjs-settings-section-border - none\r\n    * --tjs-settings-section-border-radius - 0\r\n    * --tjs-settings-section-margin-bottom - 0.75em\r\n    * --tjs-settings-section-padding - 0.5em\r\n    */\r\n\r\n   import { onDestroy }          from 'svelte';\r\n\r\n   import {\r\n      applyScrolltop,\r\n      applyStyles }              from '@typhonjs-fvtt/runtime/svelte/action/dom';\r\n\r\n   import { isSvelteComponent }  from '@typhonjs-fvtt/runtime/svelte/util';\r\n   import { isObject }           from '@typhonjs-fvtt/runtime/util/object';\r\n\r\n   import { TJSSvgFolder }       from '../folder/index.js';\r\n\r\n   import SettingEntry           from './SettingEntry.svelte';\r\n\r\n   /** @type {TJSGameSettings} */\r\n   export let settings = void 0;\r\n\r\n   /** @type {TJSSettingsCreateOptions} */\r\n   export let options = void 0;\r\n\r\n   /**\r\n    * Optional inline styles applied to the main element; useful for setting CSS variables.\r\n    *\r\n    * @type {object}\r\n    */\r\n   export let styles = void 0;\r\n\r\n   const uiSettings = settings.uiControl.create(options);\r\n\r\n   onDestroy(() => uiSettings.destroy());\r\n</script>\r\n\r\n<main class=tjs-settings use:applyStyles={styles}>\r\n   <slot name=settings-header {settings} {options} {uiSettings} />\r\n   <div class=scrollable use:applyScrolltop={uiSettings.storeScrollbar}>\r\n      {#if uiSettings.topLevel.length}\r\n         <section class=tjs-settings-section>\r\n            {#each uiSettings.topLevel as setting (setting.key)}\r\n               <SettingEntry {setting} />\r\n            {/each}\r\n         </section>\r\n      {/if}\r\n      {#each uiSettings.folders as folder}\r\n      <section class=tjs-settings-section>\r\n         <TJSSvgFolder label={folder.label} store={folder.store}>\r\n            {#each folder.settings as setting (setting.key)}\r\n               <SettingEntry {setting} />\r\n            {/each}\r\n         </TJSSvgFolder>\r\n      </section>\r\n      {/each}\r\n      {#each uiSettings.sections as section}\r\n         <section class=tjs-settings-section use:applyStyles={section.styles}>\r\n            {#if section.folder}\r\n               <TJSSvgFolder folder={section.folder}>\r\n                  <svelte:component this={section.class} {...(isObject(section.props) ? section.props : {})}/>\r\n\r\n                  <svelte:fragment slot=summary-end>\r\n                     {#if isSvelteComponent(section?.folder?.summaryEnd?.class)}\r\n                        <svelte:component this={section.folder.summaryEnd.class} {...(isObject(section?.folder?.summaryEnd?.props) ? section.folder.summaryEnd.props : {})}/>\r\n                     {/if}\r\n                  </svelte:fragment>\r\n               </TJSSvgFolder>\r\n            {:else}\r\n               <svelte:component this={section.class} {...(isObject(section.props) ? section.props : {})}/>\r\n            {/if}\r\n         </section>\r\n      {/each}\r\n   </div>\r\n   <slot name=settings-footer {settings} {options} {uiSettings} />\r\n</main>\r\n\r\n<style>\r\n   main {\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 100%;\r\n      background: var(--tjs-settings-background, none);\r\n   }\r\n\r\n   .scrollable {\r\n      display: flex;\r\n      flex: 1;\r\n      flex-direction: column;\r\n      flex-wrap: nowrap;\r\n      min-height: 0;\r\n      overflow: hidden auto;\r\n      padding: var(--tjs-settings-padding, 0);\r\n\r\n      scrollbar-width: thin;  /* For Firefox */\r\n   }\r\n\r\n   section {\r\n      background: var(--tjs-settings-section-background, none);\r\n      border: var(--tjs-settings-section-border, none);\r\n      border-radius: var(--tjs-settings-section-border-radius, 0);\r\n      padding: var(--tjs-settings-section-padding, 0.5em);\r\n   }\r\n\r\n   section:not(:last-child) {\r\n      margin-bottom: var(--tjs-settings-section-margin-bottom, 0.75em);\r\n   }\r\n</style>\r\n","import { SvelteApplication }  from '@typhonjs-fvtt/runtime/svelte/application';\r\nimport { isObject }           from '@typhonjs-fvtt/runtime/util/object';\r\n\r\nimport { FoundryStyles }      from '@typhonjs-fvtt/svelte-standard/fvtt';\r\n\r\nimport { cssVariables }       from '../internal/index.js';     // TODO: Figure out better build to use #internal again.\r\n\r\nexport * from './button/index.js';\r\nexport * from './color/index.js';\r\nexport * from './container/index.js';\r\nexport * from './editor/index.js';\r\nexport * from './folder/index.js';\r\nexport * from './form/index.js';\r\nexport * from './label/index.js';\r\nexport * from './layers/index.js';\r\nexport * from './menu/index.js';\r\nexport * from './settings/index.js';\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Assign all TyphonJS thematic CSS variables.\r\n */\r\n\r\ncssVariables.setProperties({\r\n   // For components w/ transparent background checkered pattern.\r\n   '--tjs-checkerboard-background-dark': 'rgb(205, 205, 205)',\r\n   '--tjs-checkerboard-background-10': `url('data:image/svg+xml;utf8,<svg preserveAspectRatio=\"none\"  viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\"><rect x=\"0\" y=\"0\" width=\"5\" height=\"5\" fill=\"transparent\" /><rect x=\"5\" y=\"5\" width=\"5\" height=\"5\" fill=\"transparent\" /><rect x=\"5\" y=\"0\" width=\"5\" height=\"5\" fill=\"white\" /><rect x=\"0\" y=\"5\" width=\"5\" height=\"5\" fill=\"white\" /></svg>') 0 0 / 10px 10px, var(--tjs-checkerboard-background-dark, rgb(205, 205, 205))`\r\n}, false);\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\n/**\r\n * Assign all TyphonJS CSS variables to Foundry defaults.\r\n */\r\n\r\ncssVariables.setProperties({\r\n   '--tjs-action-ripple-background': 'rgba(0, 0, 0, 0.35)'\r\n}, false);\r\n\r\n// -------------------------------------------------------------------------------------------------------------------\r\n\r\ncssVariables.setProperties({\r\n   '--tjs-icon-button-background-hover': 'rgba(0, 0, 0, 0.10)',\r\n   '--tjs-icon-button-background-selected': 'rgba(0, 0, 0, 0.20)',\r\n}, false);\r\n\r\n{\r\n   /**\r\n    * All input related components including: TJSSelect,\r\n    */\r\n   const props = FoundryStyles.getProperties('input[type=\"text\"], input[type=\"number\"]');\r\n\r\n   if (isObject(props))\r\n   {\r\n      cssVariables.setProperties({\r\n         '--tjs-input-background': 'background' in props ? props.background : 'rgba(0, 0, 0, 0.05)',\r\n         '--tjs-input-border': 'border' in props ? props.border : '1px solid var(--color-border-light-tertiary)',\r\n         '--tjs-input-border-radius': 'border-radius' in props ? props['border-radius'] : '3px',\r\n         '--tjs-input-height': 'height' in props ? props.height : 'var(--form-field-height)',\r\n         '--tjs-input-min-width': 'min-width' in props ? props['min-width'] : '20px',\r\n         '--tjs-input-padding': 'padding' in props ? props['padding'] : '1px 3px',\r\n         '--tjs-input-width': 'width' in props ? props.width : 'calc(100% - 2px)',\r\n\r\n         // Set default values that are only to be referenced and not set.\r\n         '--_tjs-default-input-height': 'height' in props ? props.height : 'var(--form-field-height)',\r\n\r\n         // Set directly / no lookup:\r\n         '--tjs-input-border-color': 'var(--color-border-light-tertiary)',\r\n      }, false);\r\n   }\r\n}\r\n\r\ncssVariables.setProperties({\r\n   // `popup` is for components that are slightly elevated, but connected to an application;\r\n   // see: TJSMenu / TJSContextMenu / TJSColordPicker\r\n   '--tjs-default-popup-background': 'var(--color-text-dark-header, #23221d)',\r\n   '--tjs-default-popup-border': '1px solid var(--color-border-dark, #000)',\r\n   '--tjs-default-popup-box-shadow': '0 0 2px var(--color-shadow-dark, #000)',\r\n   '--tjs-default-popup-primary-color': 'var(--color-text-light-primary, #b5b3a4)',\r\n   '--tjs-default-popup-highlight-color': 'var(--color-text-light-highlight, #f0f0e0)',\r\n\r\n   // `popover` is for components that are elevated and independent; see: TJSContextMenu\r\n   '--tjs-default-popover-border': '1px solid var(--color-border-dark, #000)',\r\n   '--tjs-default-popover-box-shadow': '0 0 10px var(--color-shadow-dark, #000)',\r\n}, false);\r\n\r\n// Handle `PopOut!` module hooks to allow applications to popout to their own browser window -------------------------\r\n\r\nHooks.on('PopOut:loading', (app, popout) =>\r\n{\r\n   if (app instanceof SvelteApplication)\r\n   {\r\n      // Clone and load `svelte-standard` CSS variables into new window document.\r\n      popout.document.addEventListener('DOMContentLoaded', () => cssVariables.clone(popout.document));\r\n   }\r\n});\r\n","<script>\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import { get } from \"svelte/store\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import {\n    race,\n    abilities,\n    characterClass,\n    characterSubClass,\n    background,\n    spells,\n    subRace,\n    isActorCreated,\n    isLevelUp,\n    activeTab,\n    dropItemRegistry,\n    actorInGame,\n    isNewMultiClass,\n    abilityRolls,\n    isStandardArrayValues,\n    subClassesForClass,\n    preAdvancementSelections,\n    hasCharacterCreationChanges,\n    changedCharacterCreationItems,\n    level,\n    tabs,\n    classUuidForLevelUp,\n    subClassUuidForLevelUp,\n    levelUpClassObject,\n    levelUpSubClassObject,\n    levelUpClassGetsSubclassThisLevel,\n    isNewMultiClassSelected\n  } from \"~/src/stores/index\";\n  import { progress } from \"~/src/stores/progress\";\n  import { flattenedSelections } from \"~/src/stores/equipmentSelections\";\n  import { flattenedStartingEquipment } from \"~/src/stores/startingEquipment\";\n  import { goldChoices, totalGoldFromChoices, areGoldChoicesComplete } from \"~/src/stores/goldChoices\";\n  \n  import {\n    getLevelByDropType,\n    itemHasAdvancementChoices,\n    isAdvancementsForLevelInItem,\n    dropItemOnCharacter\n  } from \"~/src/helpers/Utility\";\n  import ProgressBar from \"~/src/components/molecules/ProgressBar.svelte\";\n  import { abilityGenerationMethod } from \"~/src/stores/index\";\n  import { derived, writable } from \"svelte/store\";\n  import { localize } from \"~/src/helpers/Utility\";\n  import { TJSSelect } from \"@typhonjs-fvtt/svelte-standard/component\";\n  import { equipmentSelections } from \"~/src/stores/equipmentSelections\";\n  import { goldRoll } from \"~/src/stores/storeDefinitions\";\n\n  // Add a local store to track if equipment has been added\n  const equipmentAdded = writable(false);\n  \n  // Add a flag to track if equipment has been added during this session\n  let hasAddedEquipmentThisSession = false;\n\n  // Add this after your store imports\n  const storeMap = {\n    'race': race,\n    'background': background,\n    'characterClass': characterClass,\n    'characterSubClass': characterSubClass\n  };\n\n  // Derived store for level-up progress\n  const levelUpProgress = derived(\n    [classUuidForLevelUp, levelUpClassGetsSubclassThisLevel, subClassUuidForLevelUp],\n    ([$classUuidForLevelUp, $levelUpClassGetsSubclassThisLevel, $subClassUuidForLevelUp]) => {\n\n      window.GAS.log.d('levelUpProgress', $classUuidForLevelUp, $levelUpClassGetsSubclassThisLevel, $subClassUuidForLevelUp);\n      // If a new multiclass is selected, show 100% progress\n      if ($classUuidForLevelUp && $levelUpClassGetsSubclassThisLevel && !$subClassUuidForLevelUp) return 50;\n      if ($classUuidForLevelUp && $levelUpClassGetsSubclassThisLevel && $subClassUuidForLevelUp) return 100;\n      if ($classUuidForLevelUp && !$levelUpClassGetsSubclassThisLevel) return 100;\n      \n      return 0\n    }\n  );\n\n  export let value = null;\n\n  const actor = getContext(\"#doc\");\n  const app = getContext(\"#external\").application;\n  let actorName = $actor?.name || \"\";\n\n  // Derived store to check if actor has items in inventory\n  const hasInventoryItems = derived(actorInGame, ($actorInGame) => {\n    if (!$actorInGame) return false;\n    \n    // Check if the actor has any items\n    // In Foundry VTT, items is a Collection that has methods like filter and size\n    const inventoryTypes = [\"weapon\", \"equipment\", \"consumable\", \"tool\", \"backpack\", \"loot\"];\n    \n    // First check if items collection exists and has any items\n    if (!$actorInGame.items || $actorInGame.items.size === 0) {\n      // window.GAS.log.d('[FOOTER] No items found on actor');\n      return false;\n    }\n    \n    // Use the Foundry Collection's filter method\n    const inventoryItems = $actorInGame.items.filter(item => inventoryTypes.includes(item.type));\n    const hasItems = inventoryItems.size > 0;\n    \n    // window.GAS.log.d('[FOOTER] hasInventoryItems check:', {\n    //   actorId: $actorInGame.id,\n    //   totalItems: $actorInGame.items.size,\n    //   inventoryItems: inventoryItems,\n    //   inventoryItemCount: inventoryItems.size,\n    //   hasItems: hasItems\n    // });\n    \n    return hasItems;\n  });\n\n  const handleNameInput = (e) => {\n    if ($isLevelUp) {\n      //- @why: for existing actors, we need to update the actor object in the database\n      actorName = e.target.value;\n    } else {\n      //- @why: for new actors, we need to update the actor source object in memory,\n      $actor.updateSource({ name: e.target.value });\n    }\n  };\n  const handleTokenNameInput = (e) => {\n    if (!$actor.flags[MODULE_ID]) $actor.flags[MODULE_ID] = {};\n    $actor.flags[MODULE_ID].tokenName = e.target.value;\n  };\n\n  const clickCreateHandler = async () => {\n    await createActorInGameAndEmbedItems();\n    $isActorCreated = true;\n  };\n\n  const clickUpdateLevelUpHandler = async () => {\n    window.GAS.log.d('[FOOTER] clickUpdateLevelUpHandler', $classUuidForLevelUp);\n\n    await updateActorAndEmbedItems();\n  };\n\n  const clickUpdateHandler = async () => {\n    \n    if (!$hasCharacterCreationChanges) {\n      return;\n    }\n\n    const confirmed = await Dialog.confirm({\n      title: \"Update\",\n      content:\n        \"You have advancements in progress, if you update the actor, any advancements related to the changes will be lost. Are you sure you want to update the actor?\",\n      yes: () => true,\n      no: () => false,\n      defaultYes: false,\n    });\n\n    if (!confirmed) {\n      return;\n    }\n\n    // Close any open advancement dialogs first\n    const currentProcess = get(dropItemRegistry).currentProcess;\n    if (currentProcess?.app) {\n      currentProcess.app.close();\n    }\n\n    // Remove only the items we're about to update from the queue\n    for (const item of $changedCharacterCreationItems) {\n      dropItemRegistry.remove(item.type);\n    }\n\n    for (const item of $changedCharacterCreationItems) {\n      \n      // Find the item on the actor that matches the type\n      const actorItem = $actorInGame.items.find(i => i.type === item.type);\n\n      // Delete the item from the actor (not the compendium)\n      if (actorItem) {\n        await actorItem.delete();\n      }\n\n      // Get the new item from the store\n      const newStoreItem = get(storeMap[item.type]);\n      if (newStoreItem) {\n        // Add the new item to dropItemRegistry using splice to maintain order\n        dropItemRegistry.splice({\n          actor: $actorInGame,\n          id: item.type,\n          itemData: newStoreItem,\n          isLevelUp: $isLevelUp,\n          isNewMultiClass: item.type === \"characterClass\" ? $isNewMultiClass : undefined,\n          hasAdvancementChoices: itemHasAdvancementChoices(newStoreItem),\n          hasAdvancementsForLevel: isAdvancementsForLevelInItem(\n            getLevelByDropType($actorInGame, item.type === \"characterClass\" ? \"class\" : item.type),\n            newStoreItem\n          ),\n        });\n      }\n    }\n\n    // Start processing the queue once all items are added\n    dropItemRegistry.advanceQueue(true);\n  };\n\n  const createActorInGameAndEmbedItems = async () => {\n\n    // Create the actor first\n    $actorInGame = await Actor.create($actor.toObject());\n    // window.GAS.log.d('[FOOTER] createActorInGameAndEmbedItems created actor', $actorInGame);\n\n    // race\n    if ($race) {\n      const raceData = $race;\n      dropItemRegistry.add({\n        actor: $actorInGame,\n        id: \"race\",\n        itemData: raceData,\n        isLevelUp: $isLevelUp,\n        hasAdvancementChoices: itemHasAdvancementChoices($race),\n        hasAdvancementsForLevel: isAdvancementsForLevelInItem(\n          getLevelByDropType($actorInGame, $race),\n          $race,\n        ),\n      });\n      $preAdvancementSelections.race = $race;\n    }\n    \n    // subrace\n    if ($subRace) {\n      const subRaceData = $subRace;\n      dropItemRegistry.add({\n        actor: $actorInGame,\n        id: \"subRace\",\n        itemData: subRaceData,\n        isLevelUp: $isLevelUp,\n        hasAdvancementChoices: itemHasAdvancementChoices($subRace),\n        hasAdvancementsForLevel: isAdvancementsForLevelInItem(\n          getLevelByDropType($actorInGame, $subRace),\n          $subRace,\n        ),\n        });\n      $preAdvancementSelections.subRace = $subRace;\n    }\n    \n    if ($background) {\n      dropItemRegistry.add({\n        actor: $actorInGame,\n        id: \"background\",\n        itemData: $background,\n        isLevelUp: $isLevelUp,\n        hasAdvancementChoices: itemHasAdvancementChoices($background),\n        hasAdvancementsForLevel: isAdvancementsForLevelInItem(\n          getLevelByDropType($actorInGame, $background),\n          $background,\n        ),\n      });\n      $preAdvancementSelections.background = $background;\n    }\n\n    if ($characterClass) {\n      dropItemRegistry.add({\n        actor: $actorInGame,\n        id: \"characterClass\",\n        itemData: $characterClass,\n        isLevelUp: $isLevelUp,\n        isNewMultiClass: $isNewMultiClass,\n        hasAdvancementChoices: itemHasAdvancementChoices($characterClass),\n        hasAdvancementsForLevel: isAdvancementsForLevelInItem(\n          getLevelByDropType($actorInGame, \"class\"),\n          $characterClass,\n        ),\n      });\n      $preAdvancementSelections.class = $characterClass;\n    }\n\n    if ($characterSubClass) {\n      dropItemRegistry.add({\n        actor: $actorInGame,\n        id: \"characterSubClass\",\n        itemData: $characterSubClass,\n        isLevelUp: $isLevelUp,\n        hasAdvancementChoices: itemHasAdvancementChoices($characterSubClass),\n        hasAdvancementsForLevel: isAdvancementsForLevelInItem(\n          getLevelByDropType($actorInGame, \"subclass\"),\n          $characterSubClass,\n        ),\n      });\n      $preAdvancementSelections.subclass = $characterSubClass;\n    }\n\n    // window.GAS.log.d('[FOOTER] createActorInGameAndEmbedItems advancing queue with dropItemRegistry', $dropItemRegistry);\n\n    await dropItemRegistry.advanceQueue(true);\n\n  };\n\n  const updateActorAndEmbedItems = async () => {\n    window.GAS.log.d('[FOOTER] updateActorAndEmbedItems', $classUuidForLevelUp);\n\n    await $actor.update({ name: actorName });\n\n    $actorInGame = $actor;\n    \n    // Add the class level update to the queue\n    if ($classUuidForLevelUp) {\n      dropItemRegistry.add({\n        actor: $actorInGame,\n        id: \"characterClass\",\n        itemData: $levelUpClassObject,\n        isLevelUp: $isLevelUp,\n        isNewMultiClass: $isNewMultiClass,\n      });\n    }\n    \n    // Add the subclass to the queue if it exists\n    if ($subClassUuidForLevelUp) {\n      dropItemRegistry.add({\n        actor: $actorInGame,\n        id: \"characterSubClass\",\n        itemData: $levelUpSubClassObject,\n        isLevelUp: $isLevelUp,\n        hasAdvancementChoices: itemHasAdvancementChoices($levelUpSubClassObject),\n        hasAdvancementsForLevel: isAdvancementsForLevelInItem(\n          getLevelByDropType($actorInGame, \"subclass\"),\n          $levelUpSubClassObject,\n        ),\n      });\n    }\n\n    window.GAS.log.d('[FOOTER] updateActorAndEmbedItems advancing queue with dropItemRegistry', $dropItemRegistry);\n    // Process the queue\n    dropItemRegistry.advanceQueue(true);\n  };\n\n  $: value = $actor?.name || \"\";\n  $: tokenValue = $actor?.flags?.[MODULE_ID]?.tokenName || value;\n\n  // Define valid tabs for footer visibility\n  const FOOTER_TABS = ['race', 'class', 'background', 'abilities', 'equipment', 'level-up'];\n  const CHARACTER_CREATION_TABS = ['race', 'class', 'background', 'abilities'];\n\n  // Handler for adding equipment\n  const handleAddEquipment = async () => {\n    // window.GAS.log.d('[FOOTER] handleAddEquipment for ', window.GAS.dnd5eVersion, window.GAS.dnd5eRules);\n    // For v4, check if choices are complete\n    if (window.GAS.dnd5eVersion === 4 && window.GAS.dnd5eRules === \"2024\") {\n      const choices = get(goldChoices);\n      if (!choices.fromClass.choice || !choices.fromBackground.choice) {\n        ui.notifications.warn(\"Please make gold choices for both class and background first.\");\n        return;\n      }\n\n      // Add total gold from choices to the actor\n      const totalGold = get(totalGoldFromChoices);\n      await $actorInGame.update({\n        \"system.currency.gp\": totalGold\n      });\n\n      // Only process equipment if either class or background chose equipment\n      if (choices.fromClass.choice === 'equipment' || choices.fromBackground.choice === 'equipment') {\n        const selections = get(flattenedSelections);\n\n        // Group duplicates by their UUID BEFORE starting async operations\n        const groupedSelections = selections.reduce((acc, selection) => {\n          \n          if (!acc[selection.key]) {\n            acc[selection.key] = {\n              key: selection.key,\n              count: 1\n            };\n          } else {\n            acc[selection.key].count++;\n          }\n          return acc;\n        }, {});\n\n\n        // Drop each unique item with its accumulated quantity\n        for (const [uuid, data] of Object.entries(groupedSelections)) {\n          const item = await fromUuid(data.key);\n          if (item) {\n\n            // Create a copy of the item data\n            const itemData = foundry.utils.deepClone(item);\n\n            itemData.updateSource({ \n              \"system.quantity\": data.count\n            });\n\n            await dropItemOnCharacter($actorInGame, itemData);\n          }\n        }\n      }\n    } else {\n      // v3 logic\n      if ($goldRoll <= 0) {\n        ui.notifications.warn(\"Please roll for starting gold first.\");\n        return;\n      }\n\n      // Add starting gold to the actor\n      await $actorInGame.update({\n        \"system.currency.gp\": $goldRoll\n      });\n\n      const selections = get(flattenedSelections);\n\n      // Group duplicates by their UUID BEFORE starting async operations\n      const groupedSelections = selections.reduce((acc, selection) => {\n        \n        if (!acc[selection.key]) {\n          acc[selection.key] = {\n            key: selection.key,\n            count: 1\n          };\n        } else {\n          acc[selection.key].count++;\n        }\n        return acc;\n      }, {});\n\n\n      // Drop each unique item with its accumulated quantity\n      for (const [uuid, data] of Object.entries(groupedSelections)) {\n        const item = await fromUuid(data.key);\n        if (item) {\n          window.GAS.log.d('FOOTER | Pre-modification item:', {\n            uuid: data.key,\n            intendedQuantity: data.count,\n            currentQuantity: item.system.quantity,\n            item\n          });\n\n          // Create a copy of the item data\n          const itemData = foundry.utils.deepClone(item);\n\n          itemData.updateSource({ \n            \"system.quantity\": data.count\n          });\n\n          await dropItemOnCharacter($actorInGame, itemData);\n        }\n      }\n    }\n\n    Hooks.call(\"gas.close\");\n    \n    // Mark equipment as added\n    equipmentAdded.set(true);\n    hasAddedEquipmentThisSession = true;\n  };\n\n  // Derive whether equipment section is complete\n  $: isEquipmentComplete = window.GAS.dnd5eVersion === 4 \n    ? ($progress === 100 && $areGoldChoicesComplete) \n    : ($progress === 100 && $goldRoll > 0);\n  \n  // Debug log for button visibility condition\n  $: {\n    if ($activeTab === 'equipment') {\n      // window.GAS.log.d('[FOOTER] Button visibility check:', {\n      //   isEquipmentComplete,\n      //   hasInventoryItems: $hasInventoryItems,\n      //   equipmentAdded: $equipmentAdded,\n      //   shouldShowButton: isEquipmentComplete && !$equipmentAdded\n      // });\n    }\n  }\n\n  // Helper function to check actor inventory and update equipmentAdded\n  function checkActorInventory(actor) {\n    if (actor && actor.items && actor.items.size > 0) {\n      const inventoryTypes = [\"weapon\", \"equipment\", \"consumable\", \"tool\", \"backpack\", \"loot\"];\n      const hasInventory = actor.items.some(item => inventoryTypes.includes(item.type));\n      \n      if (hasInventory) {\n        // window.GAS.log.d('[FOOTER] Actor has inventory items, setting equipmentAdded to true');\n        equipmentAdded.set(true);\n      }\n    }\n  }\n  \n  // Check actor inventory when actorInGame changes\n  $: if ($actorInGame) {\n    // If equipment has already been added this session, don't change the flag\n    if (!hasAddedEquipmentThisSession) {\n      checkActorInventory($actorInGame);\n    }\n  }\n  \n  // Reset equipmentAdded when tab changes to equipment\n  $: if ($activeTab === 'equipment') {\n    // If equipment has been added this session, keep the button hidden\n    if (hasAddedEquipmentThisSession) {\n      equipmentAdded.set(true);\n    } \n    // Otherwise, check if the actor has inventory items\n    else if (!$hasInventoryItems) {\n      equipmentAdded.set(false);\n    } else {\n      equipmentAdded.set(true);\n    }\n    \n    // window.GAS.log.d('[FOOTER] Tab changed to equipment:', {\n    //   hasAddedEquipmentThisSession,\n    //   hasInventoryItems: $hasInventoryItems,\n    //   equipmentAdded: $equipmentAdded\n    // });\n  }\n</script>\n\n<template lang=\"pug\">\n.footer-container\n  +if(\"FOOTER_TABS.includes($activeTab)\")\n    .flexrow.gap-10.pr-md.mt-sm\n      //- Character name section (not available in level-up tab)\n      //- pre $activeTab {$activeTab}\n      +if(\"CHARACTER_CREATION_TABS.includes($activeTab) && $activeTab !== 'level-up'\")\n        .flex2\n          .flexcol\n            .flexrow.gap-10\n              .flex0.right.mt-xs.no-wrap.ml-md\n                label {localize('Footer.CharacterName')}\n              .flex2\n                input.left(type=\"text\" value=\"{value}\" on:input=\"{handleNameInput}\")\n      \n      //- Progress and buttons section\n      .flex1\n        +if(\"$isLevelUp\")\n          .progress-container\n            ProgressBar(progress=\"{levelUpProgress}\")\n            +if(\"$levelUpProgress === 100\")\n              .button-container\n                button(\n                  disabled=\"{!$classUuidForLevelUp}\"\n                  type=\"button\"\n                  role=\"button\"\n                  on:mousedown=\"{clickUpdateLevelUpHandler}\"\n                  data-tooltip=\"{$classUuidForLevelUp ? '' : 'First select a class to level up, or a multi-class to add'}\"\n                )\n                  span {localize('Footer.AddLevel')}\n        \n        +if(\"$activeTab === 'equipment'\")\n          .progress-container\n            ProgressBar(progress=\"{progress}\")\n            +if(\"isEquipmentComplete && !$equipmentAdded\")\n              .button-container\n                button.mt-xs(\n                  type=\"button\"\n                  role=\"button\"\n                  on:mousedown=\"{handleAddEquipment}\"\n                )\n                  span {localize('Footer.AddEquipment')}\n              \n        \n        +if(\"CHARACTER_CREATION_TABS.includes($activeTab)\")\n          .progress-container\n            ProgressBar(progress=\"{progress}\")\n            +if(\"$progress === 100\")\n              .button-container\n                +if(\"!$isActorCreated\")\n                  button.mt-xs(\n                    type=\"button\"\n                    role=\"button\"\n                    on:mousedown=\"{clickCreateHandler}\"\n                  )\n                    span {localize('Footer.CreateCharacter')}\n                  +else()\n                    +if(\"$hasCharacterCreationChanges\")\n                      button(\n                        type=\"button\"\n                        role=\"button\"\n                        on:mousedown=\"{clickUpdateHandler}\"\n                      )\n                        span {localize('Footer.UpdateCharacter')}\n</template>\n\n<style lang=\"sass\">\n.gap-10\n  gap: 10px\n  justify-content: space-between\n  align-items: center\nlabel\n  margin: 10px 0 0 0\nbutton[disabled]\n  cursor: not-allowed\n  background-color: #ccc\n  color: #666\n  border: 1px solid #ccc\n  &:hover\n    background-color: #ccc\n    color: #666\n.hint\n  font-size: 0.8em\n  color: var(--color-text-dark-secondary)\n  text-align: center\n  margin-top: 0.5rem\n</style>\n","<script>\n  import { ApplicationShell }   from '#runtime/svelte/component/core';\n  import { setContext, getContext, onMount, onDestroy } from \"svelte\";\n  import { characterClass, characterSubClass, resetStores, tabs, isLevelUp, levelUpTabs, activeTab, actorInGame, readOnlyTabs } from \"~/src/stores/index\"\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import Footer from \"~/src/components/molecules/Footer.svelte\";\n  import dnd5e from \"~/config/systems/dnd5e.json\"\n  import Spells from \"~/src/components/organisms/dnd5e/Tabs/Spells.svelte\";\n  import Equipment from \"~/src/components/organisms/dnd5e/Tabs/Equipment.svelte\";\n  import { log } from '~/src/helpers/Utility';\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n\n  export let elementRoot; //- passed in by SvelteApplication\n  export let documentStore; //- passed in by DocumentSheet.js where it attaches DocumentShell to the DOM body\n  export let document; //- passed in by DocumentSheet.js where it attaches DocumentShell to the DOM body\n  export let levelUp = false;\n\n  //- register hooks\n  Hooks.once(\"gas.close\", gasClose);\n  Hooks.once(\"gas.equipmentSelection\", handleEquipmentSelection);\n\n  setContext(\"#doc\", documentStore);\n\n  const application = getContext('#external').application;\n  \n  // set initial active tab\n  $activeTab = levelUp ? $levelUpTabs[0].id : $tabs[0].id\n\n  $: filteredTabs = levelUp ? $levelUpTabs : $tabs\n\n  // Get illumination settings\n  const illuminatedHeight = Number(game.settings.get(MODULE_ID, 'illuminatedHeight').replace(/[a-zA-Z]/g, '')) + 'px';\n  const illuminatedWidth = Number(game.settings.get(MODULE_ID, 'illuminatedWidth').replace(/[a-zA-Z]/g, '')) + 'px';\n\n  $: stylesApp = {\n    '--tjs-app-overflow': 'visible',\n    '--illuminated-initial-height': illuminatedHeight,\n    '--illuminated-initial-width': illuminatedWidth\n  };\n\n  onMount( async () => {\n    if(levelUp) {\n      $actorInGame = $documentStore\n      // Initialize characterClass from the actor's class data if in level-up mode\n      if ($actorInGame) {\n        // Find the first class item in the actor's items\n        const classItem = $actorInGame.items.find(item => item.type === \"class\");\n        if (classItem) {\n          // Set the characterClass store with the class item\n          characterClass.set(classItem);\n          window.GAS.log.d('[PCAppShell] Initialized characterClass for level-up:', classItem);\n        } else {\n          window.GAS.log.d('[PCAppShell] No class found on actor for level-up');\n        }\n      }\n    }\n    isLevelUp.set(levelUp);\n\n    window.GAS.log.d(stylesApp)\n\n    // window.GAS.log.d($isLevelUp)\n  });\n\n  onDestroy(() => {\n    resetStores();\n    Hooks.off(\"gas.close\", gasClose);\n    Hooks.off(\"gas.equipmentSelection\", handleEquipmentSelection);\n  });\n\n  function gasClose() {\n    window.GAS.log.d('gas.close')\n    window.GAS.log.d($actorInGame);\n    window.GAS.log.d($actorInGame.sheet);\n    window.GAS.log.d($isLevelUp)\n    if(!$isLevelUp) {\n      $actorInGame.sheet.render(true);\n      \n    }\n    resetStores();\n    application.close();\n  }\n\n  /**\n   * NB: this is called after advancements because some equipment selection\n   * is dependent on the proficiencies selected\n   * @todo: logic for those proficiency dependencies are not yet implemented\n   */\n  function handleEquipmentSelection() {\n    window.GAS.log.d('[PCAPP] handleEquipmentSelection')\n    // Add Equipment tab\n    if(!$tabs.find(x => x.id === \"equipment\")) {\n      window.GAS.log.d('[PCAPP] adding equipment tab')\n      tabs.update(t => [...t, { label: \"Equipment\", id: \"equipment\", component: \"Equipment\" }]);\n    }\n\n    // Remove Advancements tab as it will be empty\n    tabs.update(t => t.filter(x => x.id !== \"advancements\"));\n\n    // Set active tab to equipment\n    activeTab.set(\"equipment\");\n\n    // Set read-only state for other tabs\n    readOnlyTabs.set([\"race\", \"background\", \"abilities\", \"class\"]);\n  }\n\n\n</script>\n\n<!-- This is necessary for Svelte to generate accessors TRL can access for `elementRoot` -->\n<svelte:options accessors={true}/>\n\n<!-- ApplicationShell provides the popOut / application shell frame, header bar, content areas -->\n<!-- ApplicationShell exports `elementRoot` which is the outer application shell element -->\n\n<template lang=\"pug\">\n  ApplicationShell(bind:elementRoot bind:stylesApp)\n    main\n      section.a\n        Tabs.gas-tabs( tabs=\"{filteredTabs}\" bind:activeTab=\"{$activeTab}\" sheet=\"PC\")\n\n      section.b\n        Footer\n\n</template>\n\n\n\n<style lang=\"sass\">\n  main \n    text-align: center\n    display: flex\n    flex-direction: column\n    height: 100%\n\n  section \n    padding: 0.5rem 0.2rem\n\n  .a\n    flex: 1\n    overflow-y: scroll\n    min-width: 200px\n\n  .b \n    height: 65px\n\n\n  .flex-grow\n    flex: 1 // Make this section grow to fill available space\n    overflow-y: scroll\n    height: 90%\n\n  .section-bottom\n    // Add any additional styling for the bottom section\n\n  :global(.tabs-list) \n    padding: 0.25rem 1.5rem !important\n\n  :global(.gas-tabs)\n    position: relative \n    padding-top: 1rem\n\n  :global(.gas-tabs .tabs-list) \n    background: #dbd9cd !important\n    position: fixed\n    top: 30px\n    left: 0\n    width: 100%\n    z-index: 1\n    height: 2.5rem !important\n    padding-top: 1rem !important\n\n  :global(.gas-tabs .tabs-list::after)\n    content: \"\"\n    display: block\n    position: fixed\n    top: 71px\n    left: auto\n    width: 95%\n    height: 17px\n    background: black\n    background: linear-gradient(0deg, rgba(219, 217, 205, 0) 0%, #f9f9f9 100%)\n    z-index: 1 \n\n  :global(.gas-tabs .tabs-list button:hover)\n    box-shadow: 0px -5px 14px -8px var(--color-shadow-primary) !important\n\n  :global(.tab-content)\n    --tjs-app-overflow: visible\n    padding: 15px 0px 15px 15px\n    border: 2px solid transparent\n    border-radius: 10px \n    background-color: #f9f9f9\n    position: relative \n    margin-top: 5px\n\n    position: relative\n    padding: 0\n\n  :global(.tab-content .scroll)\n    box-sizing: content-box\n    padding: 15px\n\n  :global(.tab-content .col-a)\n    padding: 1rem\n\n  :global(.tab-content ul.icon-list .image)\n    min-width: 24px\n\n  :global(.tab-content ul.icon-list)\n    list-style-type: none !important\n    padding: 0\n    position: relative\n    margin: 0\n\n  :global(.tab-content ul.icon-list li)\n    margin: 3px 0\n    box-shadow: 0 0 0 1px var(--li-inset-color) inset\n    padding: 0.5rem 0.3rem\n    border-radius: var(--border-radius)\n    background: var(--li-background-color)\n\n  :global(.tab-content ul.icon-list .image img.icon)\n    position: absolute\n    top: -3px\n    left: 0\n    width: 24px\n    height: 24px\n    vertical-align: middle\n    border: 0\n\n  :global(.tab-content ul.icon-list li.tight .flexcol)\n    gap: 0\n    line-height: 11px\n    height: 19px\n    margin: 4px 0 5px 0\n\n  :global(.tab-content ul.icon-list li.tight .image img.icon)\n    top: 2px\n    left: 2px\n  \n</style>","import PCAppShell from './PCAppShell.svelte';\nimport { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\nimport { TJSDocument } from \"@typhonjs-fvtt/runtime/svelte/store/fvtt/document\";\nimport { MODULE_ID, MODULE_CODE } from \"~/src/helpers/constants\"\nimport { activeTab, actorInGame, isAdvancementInProgress } from \"~/src/stores/index\";\nimport { get } from 'svelte/store';\n\nexport default class PCApplication extends SvelteApplication {\n  /**\n   * Document store that monitors updates to any assigned document.\n   *\n   * @type {TJSDocument<foundry.abstract.Document>}\n   */\n  #documentStore = new TJSDocument(void 0, { delete: this.close.bind(this) });\n\n  /**\n   * Holds the document unsubscription function.\n   *\n   * @type {Function}\n   */\n  #storeUnsubscribe;\n\n  constructor(object, levelUp = false) {\n    super(object);\n\n    // Define document store property\n    Object.defineProperty(this.reactive, \"document\", {\n      get: () => this.#documentStore.get(),\n      set: (document) => {\n        this.#documentStore.set(document);\n      },\n    });\n    this.reactive.document = object;\n    this.levelUp = levelUp\n  }\n\n\n\n  /**\n   * Default Application options\n   *\n   * @returns {object} options - Application options.\n   * @see https://foundryvtt.com/api/Application.html#options\n   */\n  static get defaultOptions() {\n    const title = this.title;\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      id: 'foundryvtt-actor-studio-pc-sheet',\n      title: game.i18n.localize('GAS.ActorStudio') + ' - ' + game.i18n.localize('GAS.PCTitle'),\n      classes: [MODULE_CODE],\n      width: game.settings.get(MODULE_ID, 'windowX') || 700,\n      height: game.settings.get(MODULE_ID, 'windowX') || 800,\n      headerIcon: 'modules/foundryvtt-actor-studio/assets/actor-studio-logo-dragon-white.svg',\n      minWidth: 500,\n      padding: 0,\n      resizable: true,\n      focusAuto: false,\n      minimizable: true,\n      svelte: {\n        class: PCAppShell,\n        target: document.body,\n        props: function () {\n          return { documentStore: this.#documentStore, document: this.reactive.document, levelUp: this.levelUp  };\n        },\n      },\n    });\n  }\n\n    /**\n   * Gets the header buttons configuration for the sheet\n   * @return {Array<object>} Returns an array of button configurations for the sheet header\n   */\n  _getHeaderButtons() {\n    const buttons = super._getHeaderButtons();\n    \n    // Find the close button\n    const closeIndex = buttons.findIndex(button => button.class === 'close');\n    if (closeIndex === -1) return buttons;\n    \n    // Modify the close button's onClick handler\n    buttons[closeIndex].onclick = async (ev) => {\n      const currentTab = get(activeTab);\n      const actor = get(actorInGame);\n      \n      // Only show confirmation if advancements tab is active\n      if (get(isAdvancementInProgress)) {\n        const confirmed = await Dialog.confirm({\n          title: 'Close',\n          content: 'Are you sure you want to close? If you have incomplete advancements, they will be lost.',\n          yes: () => true,\n          no: () => false,\n          defaultYes: false\n        });\n        \n        if (confirmed) {\n          this.close();\n        }\n      } else {\n        // If not on advancements tab, just close normally\n        this.close();\n      }\n    };\n\n    return buttons;\n  }\n\n  /**\n   * Drag&Drop handling\n   */\n  _canDragStart(selector) {\n    return true;\n  }\n  _canDragDrop(selector) {\n    return this.reactive.document.isOwner || game.user.isGM;\n  }\n  _onDragOver(event) { }\n\n  _onDragStart(event) {\n\n  }\n\n  async _onDrop(event) {\n\n  }\n\n  async close(options = {}) {\n    await super.close(options);\n\n    if (this.#storeUnsubscribe) {\n      this.#storeUnsubscribe();\n      this.#storeUnsubscribe = void 0;\n    }\n  }\n\n  /**\n   * Handles any changes to document.\n   *\n   * @param {foundry.abstract.Document}  doc -\n   *\n   * @param {object}                     options -\n   */\n  async #handleDocUpdate(doc, options) {\n    const { action, data, documentType } = options;\n    if ((action === void 0 || action === \"update\" || action === \"subscribe\") && doc) {\n      const isDebug = game.settings.get(MODULE_ID, 'debug');\n      const moduleVersion = game.modules.get(MODULE_ID)?.version;\n      const tokenText = doc.flags?.[MODULE_ID]?.tokenName ? ` (${doc.flags[MODULE_ID].tokenName})` : \"\";\n      this.reactive.title = `${game.i18n.localize('GAS.ActorStudio')} - ${isDebug ? moduleVersion : ''} [${window.GAS.dnd5eRules}] - ${game.i18n.localize('GAS.PCTitle')} - ${doc.name} ${tokenText}`;\n    }\n  }\n\n  render(force = false, options = {}) {\n    if (!this.#storeUnsubscribe) {\n      this.#storeUnsubscribe = this.#documentStore.subscribe(this.#handleDocUpdate.bind(this));\n    }\n    super.render(force, options);\n    return this;\n  }\n\n}","import { get } from 'svelte/store';\nimport { MODULE_ID } from '~/src/helpers/constants';\nimport { levelUpSubClassObject } from '~/src/stores/storeDefinitions';\nimport PCApplication from '~/src/app/PCApplication.js';\n\nconst pulseKeyframes = `\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n`;\n\nexport function dnd5eSheet2UI(app, html, data) {\n\n  const actor = data.actor;\n  // window.GAS.log.d(actor);\n\n  const sheetheader = html.find('.sheet-header');\n  const buttons = sheetheader.find('.sheet-header-buttons')\n\n  console.log('actor._classes', actor._classes);\n  if (!Object.keys(actor._classes).length || !game.settings.get(MODULE_ID, 'milestoneLeveling') && (actor.system.details.xp.max - actor.system.details.xp.value > 0)) return;\n\n  buttons.css('gap', '0.35rem');\n  const levelUpButton = $(`\n    <button type=\"button\" class=\"config-button gold-button level-up\" data-action=\"flags\" data-tooltip=\"GAS.LevelUp.Button\" aria-label=\"GAS.LevelUp.Button\" style=\"\n      animation: pulse 2s infinite;\n    \">\n      <i class=\"fas fa-arrow-alt-circle-up\"></i>\n    </button>\n  `);\n\n  levelUpButton.on('click', async (event) => {\n    //- check if Actor Studio is already open\n    if (document.querySelector('#foundryvtt-actor-studio-pc-sheet')) {\n      ui.notifications.error('Actor Studio is already open and busy with another task. Please close the existing Actor Studio window before attempting to opening a new one.');\n      return;\n    }\n    //- render the level up UI\n    new PCApplication(app.actor, true).render(true, { focus: true });\n  })\n  \n\n  $('<style>')\n    .prop('type', 'text/css')\n    .html(pulseKeyframes)\n    .appendTo('head');\n  \n  buttons.append(levelUpButton);\n\n}\n\nexport function tidy5eSheetUI(app, element, data) {\n  const tidy5eApi = game.modules.get(\"tidy5e-sheet\").api;\n\n  if (!tidy5eApi.isTidy5eCharacterSheet(app)) {\n    return;\n  }\n\n  const actor = data.actor;\n\n  if (!Object.keys(actor._classes).length || !game.settings.get(MODULE_ID, 'milestoneLeveling') && (actor.system.details.xp.max - actor.system.details.xp.value > 0)) return;\n\n  const levelUpButton = $(`\n    <button\n      type=\"button\"\n      data-tidy-render-scheme=\"handlebars\"\n      class=\"inline-transparent-button\"\n      data-action=\"flags\"\n      data-tooltip=\"GAS.LevelUp.Button\"\n      aria-label=\"GAS.LevelUp.Button\"\n      style=\"animation: pulse 2s infinite;\"\n    >\n      <i class=\"fas fa-arrow-alt-circle-up\"></i>\n    </button>\n  `);\n\n  levelUpButton.on(\"click\", async (event) => {\n    //- render the level up UI\n    new PCApplication(app.actor, true).render(true, { focus: true });\n  });\n\n  $(\"<style>\").prop(\"type\", \"text/css\").html(pulseKeyframes).appendTo(\"head\");\n\n  $(element)\n    .find('[data-tidy-sheet-part=\"name-container\"]')\n    .after(levelUpButton);\n}\n\nexport function initLevelup() {\n\n\n  Hooks.on(\"renderActorSheet5e\", (app, html, data) => {\n    // window.GAS.log.d(app.constructor.name)\n    if(game.settings.get(MODULE_ID, 'enableLevelUp') === false) return;\n\n    if(app.constructor.name === \"ActorSheet5eCharacter\") {\n      log.e(\"Level Up not implemented for old dnd5e character sheet\")\n    }\n    if(app.constructor.name === \"ActorSheet5eCharacter2\") {\n      dnd5eSheet2UI(app, html, data)\n    }\n\n  })\n\n  Hooks.on(\"tidy5e-sheet.renderActorSheet\", (app, element, data) => {\n    tidy5eSheetUI(app, element, data);\n  });\n\n  //- potentially hook into the subclass flow\n  Hooks.on(\"renderSubclassFlow\", (SubClassFlow, html, app) => {\n    \n    html.find('.pill-lg').text(get(levelUpSubClassObject)?.name)\n    //- remove drop listener\n    html.find('.pill-lg').off('drop');\n    html.find('.pill-lg').off('dragover');\n    html.find('.pill-lg').off('dragleave');\n    html.find('.pill-lg').off('dragenter');\n    html.find('.pill-lg').off('dragend');\n    html.find('.pill-lg').off('dragstart');\n    //- remove the click listener\n    html.find('div.pill-lg.roboto-upper.empty').off('click');\n    \n    // Remove the handler via the element's onclick property\n    const pillElement = html.find('.pill-lg')[0];\n    if (pillElement) {\n      pillElement.onclick = null;\n      // If data-action attribute is triggering the event, remove it too\n      pillElement.removeAttribute('data-action');\n    }\n  });\n\n\n}\n\n","import { DEFAULT_SOURCES, LOG_PREFIX, MODULE_ID } from '../helpers/constants';\n\nexport default class CompendiumSourcesSubmenu extends FormApplication {\n  constructor() {\n    super({});\n    this.baseCompendiumList = game.packs.filter((p) => p.documentName === 'Item');\n    this.filterPackSourcesAppropriatelyByName = game.settings.get(MODULE_ID, 'filterPackSourcesAppropriatelyByName');\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: ['form'],\n      popOut: true,\n      width: 420,\n      height: 600,\n\n      template: `/modules/foundryvtt-actor-studio/templates/sources-submenu.html`,\n      id: 'gas-settings-submenu',\n      title: 'Actor Studio - Sources',\n      resizable: false,\n    });\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n  }\n\n  getData() {\n    let selected = game.settings.get(MODULE_ID, 'compendiumSources');\n    if (foundry.utils.isEmpty(selected)) {\n      selected = DEFAULT_SOURCES;\n    }\n    const data = this.buildTemplateData({\n      compendiaList: this.baseCompendiumList,\n      selectedCompendia: selected,\n    });\n    return data;\n  }\n\n  _updateObject(event, formData) {\n    console.info(`${LOG_PREFIX} | Saving compendia sources:`);\n    console.info(formData);\n    return game.settings.set(MODULE_ID, 'compendiumSources', formData);\n  }\n\n  _getSubmitData(updateData) {\n    if (!this.form) throw new Error('The FormApplication subclass has no registered form element');\n    const fd = new FormDataExtended(this.form, { editors: this.editors });\n    const data = fd.object;\n    Object.keys(data).forEach((k) => data[k] = []);\n    this.form.querySelectorAll('[type=\"checkbox\"]:checked').forEach((el) => {\n      if (!Array.isArray(data[el.name]) || typeof data[el.name][0] === 'boolean') data[el.name] = [];\n      data[el.name].push(el.value);\n    });\n    return data;\n  }\n\n  buildTemplateData({ compendiaList, selectedCompendia }) {\n    return {\n      source: {\n        races: {\n          label: game.i18n.localize('GAS.Setting.Sources.RaceCompendia'),\n          compendia: this.buildCompendiaList(compendiaList, selectedCompendia, 'races',['race'])\n        },\n        classes: {\n          label: game.i18n.localize('GAS.Setting.Sources.ClassCompendia'),\n          compendia: this.buildCompendiaList(compendiaList, selectedCompendia, 'classes', ['class'], ['subclass'])\n        },\n        subclasses: {\n          label: game.i18n.localize('GAS.Setting.Sources.SubclassCompendia'),\n          compendia: this.buildCompendiaList(compendiaList, selectedCompendia, 'subclasses', ['subclass'])\n        },\n        backgrounds: {\n          label: game.i18n.localize('GAS.Setting.Sources.BackgroundCompendia'),\n          compendia: this.buildCompendiaList(compendiaList, selectedCompendia, 'backgrounds', ['background'])\n        },\n        equipment: {\n          label: game.i18n.localize('GAS.Setting.Sources.EquipmentCompendia'),\n          compendia: this.buildCompendiaList(compendiaList, selectedCompendia, 'equipment', ['item', 'equipment'])\n        }\n      }\n    };\n  }\n\n  /**\n   * Builds a list of compendia based on the inclusions and storage key.\n   * @param {Array} compendiaList - The list of compendia to filter.\n   * @param {string} defaultCollection - The default collection to filter by.\n   * @param {string} storageKey - The storage key to use for the filtered list.\n   * @param {Array} inclusions - The list of terms to include when filtering.\n   * @param {Array} exclusions - The list of exclusions to filter by.\n   * @returns {Array} The filtered list of compendia.\n   */\n  buildCompendiaList(compendiaList, defaultCollection, storageKey, inclusions = [], exclusions = []) {\n    window.GAS.log.d('buildCompendiaList input:', {\n      compendiaListLength: compendiaList.length,\n      defaultCollection,\n      inclusions,\n      storageKey,\n      exclusions,\n      filterEnabled: this.filterPackSourcesAppropriatelyByName\n    });\n\n    let filter = (pack) => {\n      const hasMatch = inclusions.some(inclusion =>\n        pack.metadata.id.toLowerCase().includes(inclusion.toLowerCase()) ||\n        pack.metadata.name.toLowerCase().includes(inclusion.toLowerCase()) ||\n        pack.metadata.path.toLowerCase().includes(inclusion.toLowerCase()) ||\n        pack.metadata.label.toLowerCase().includes(inclusion.toLowerCase())\n      );\n\n      const hasExclusion = exclusions.some(exclusion => \n        pack.metadata.id.toLowerCase().includes(exclusion.toLowerCase()) ||\n        pack.metadata.name.toLowerCase().includes(exclusion.toLowerCase()) ||\n        pack.metadata.path.toLowerCase().includes(exclusion.toLowerCase()) ||\n        pack.metadata.label.toLowerCase().includes(exclusion.toLowerCase())\n      );\n\n      window.GAS.log.d('Filtering pack:', {\n        id: pack.metadata.id,\n        name: pack.metadata.name,\n        path: pack.metadata.path,\n        label: pack.metadata.label,\n        inclusions,\n        hasMatch,\n        hasExclusion,\n        exclusions\n      });\n\n      return hasMatch && !hasExclusion;\n    };\n\n    const filteredCompendia = this.filterPackSourcesAppropriatelyByName ? compendiaList.filter(filter) : compendiaList;\n    \n    window.GAS.log.d('After filtering:', {\n      originalLength: compendiaList.length,\n      filteredLength: filteredCompendia.length,\n      filtered: filteredCompendia.map(p => ({\n        id: p.metadata.id,\n        name: p.metadata.name\n      }))\n    });\n\n    return filteredCompendia\n      .map((p) => ({\n        collection: p.collection,\n        label: `${p.metadata.label} [${p.metadata.packageName}]`,\n        checked: defaultCollection[storageKey]?.includes(p.collection),\n      }));\n  }\n}\n","import { writable } from 'svelte/store';\nimport { isObject, isIterable } from '@typhonjs-fvtt/runtime/util/object';\nimport { isWritableStore, subscribeIgnoreFirst } from '@typhonjs-fvtt/runtime/util/store';\nimport { ripple, rippleFocus } from '@typhonjs-fvtt/runtime/svelte/action/animate';\nimport { isSvelteComponent } from '@typhonjs-fvtt/runtime/svelte/util';\nimport { TJSDialog } from '@typhonjs-fvtt/runtime/svelte/application';\nimport { localize } from '@typhonjs-fvtt/runtime/svelte/helper';\n\n/**\n * Controls preparation and processing of registered game settings w/ TJSGameSettings. Game settings are parsed\n * for UI display by TJSSettingsEdit. The store `showSettings` is utilized in TJSSettingsSwap component to provide\n * an easy way to flip between settings component or any main slotted component.\n */\nclass UIControl\n{\n   /** @type {import('./types').TJSSettingsCustomSection[]} */\n   #sections = [];\n\n   /** @type {import('./').TJSGameSettings} */\n   #settings;\n\n   /** @type {boolean} */\n   #showSettings = false;\n\n   /** @type {Function} */\n   #showSettingsSet;\n\n   /** @type {{showSettings: import('svelte/store').Readable<boolean>}} */\n   #stores;\n\n   /**\n    * @param {import('./').TJSGameSettings}   settings -\n    */\n   constructor(settings)\n   {\n      this.#settings = settings;\n\n      const showSettings = writable(this.#showSettings);\n      this.#showSettingsSet = showSettings.set;\n\n      this.#stores = {\n         showSettings: { subscribe: showSettings.subscribe }\n      };\n\n      Object.freeze(this.#stores);\n   }\n\n   /**\n    * @returns {boolean} Current `showSettings` state.\n    */\n   get showSettings()\n   {\n      return this.#showSettings;\n   }\n\n   /**\n    * @returns {{ showSettings: import('svelte/store').Readable<boolean> }} Returns the managed stores.\n    */\n   get stores()\n   {\n      return this.#stores;\n   }\n\n   /**\n    * Sets current `showSettings` state.\n    *\n    * @param {boolean}  showSettings - New `showSettings` state.\n    */\n   set showSettings(showSettings)\n   {\n      this.#showSettings = showSettings;\n      this.#showSettingsSet(this.#showSettings);\n   }\n\n   /**\n    * Adds a custom section / folder defined by the provided TJSSettingsCustomSection options object.\n    *\n    * @param {import('./types').TJSSettingsCustomSection} options - The configuration object for the custom section.\n    */\n   addSection(options)\n   {\n      if (!isObject(options)) { throw new TypeError(`'options' is not an object.`); }\n\n      if (!isSvelteComponent(options.class)) { throw new TypeError(`'options.class' is not a Svelte component.`); }\n\n      if (options.props !== void 0 && !isObject(options.props))\n      {\n         throw new TypeError(`'options.props' is not an object.`);\n      }\n\n      if (options.folder !== void 0)\n      {\n         const folder = options.folder;\n\n         if (typeof folder !== 'string' && !isObject(folder))\n         {\n            throw new TypeError(`'options.folder' is not a string or object.`);\n         }\n\n         if (isObject(folder))\n         {\n            if (typeof folder.label !== 'string') { throw new TypeError(`'options.folder.label' is not a string.`); }\n\n            // Validate custom component set as folder summary end.\n            if (folder.summaryEnd !== void 0)\n            {\n               if (!isObject(folder.summaryEnd))\n               {\n                  throw new TypeError(`'options.folder.summaryEnd' is not an object.`);\n               }\n\n               if (!isSvelteComponent(folder.summaryEnd.class))\n               {\n                  throw new TypeError(`'options.folder.summaryEnd.class' is not a Svelte component.`);\n               }\n\n               if (folder.summaryEnd.props !== void 0 && !isObject(folder.summaryEnd.props))\n               {\n                  throw new TypeError(`'options.folder.summaryEnd.props' is not an object.`);\n               }\n            }\n\n            // Validate that folder inline styles is an object.\n            if (folder.styles !== void 0 && !isObject(folder.styles))\n            {\n               throw new TypeError(`'options.folder.styles' is not an object.`);\n            }\n         }\n      }\n\n      // Validate that section inline styles is an object.\n      if (options.styles !== void 0 && !isObject(options.styles))\n      {\n         throw new TypeError(`'options.styles' is not an object.`);\n      }\n\n      this.#sections.push(options);\n   }\n\n   /**\n    * Creates the UISettingsData object by parsing stored settings in\n    *\n    * @param {import('./types').TJSSettingsCreateOptions} [options] - Optional parameters.\n    *\n    * @returns {import('./types').TJSSettingsUIData} Parsed UI settings data.\n    */\n   create(options)\n   {\n      const settings = this.#parseSettings(options);\n      const destroy = () => this.#destroy(settings);\n\n      return {\n         ...settings,\n         destroy\n      };\n   }\n\n   /**\n    * Destroy callback. Checks for any `requiresReload` parameter in each setting comparing against initial value\n    * when `settings` is created and current value. If there is a difference then show a modal dialog asking the user\n    * if they want to reload for those settings to take effect.\n    *\n    * @param {import('./types').TJSSettingsUIData}   settings - The UI data object initiated w/ `create`.\n    */\n   #destroy(settings)\n   {\n      let requiresClientReload = false;\n      let requiresWorldReload = false;\n\n      if (Array.isArray(settings.topLevel))\n      {\n         for (const setting of settings.topLevel)\n         {\n            const current = globalThis.game.settings.get(setting.namespace, setting.key);\n            if (current === setting.initialValue) { continue; }\n\n            requiresClientReload ||= (setting.scope === 'client') && setting.requiresReload;\n            requiresWorldReload ||= (setting.scope === 'world') && setting.requiresReload;\n         }\n      }\n\n      if (Array.isArray(settings.folders))\n      {\n         for (const folder of settings.folders)\n         {\n            if (Array.isArray(folder.settings))\n            {\n               for (const setting of folder.settings)\n               {\n                  const current = globalThis.game.settings.get(setting.namespace, setting.key);\n                  if (current === setting.initialValue) { continue; }\n\n                  requiresClientReload ||= (setting.scope === 'client') && setting.requiresReload;\n                  requiresWorldReload ||= (setting.scope === 'world') && setting.requiresReload;\n               }\n            }\n         }\n      }\n\n      if (requiresClientReload || requiresWorldReload) { this.#reloadConfirm({ world: requiresWorldReload }); }\n\n      this.#showSettings = false;\n      this.#showSettingsSet(this.#showSettings);\n   }\n\n   /**\n    * @param {import('./types').TJSSettingsCreateOptions} [options] - Optional parameters.\n    *\n    * @returns {import('./types').TJSSettingsUIData} Parsed UI settings data.\n    */\n   #parseSettings({ efx = 'ripple', storage } = {})\n   {\n      const namespace = this.#settings.namespace;\n\n      if (storage && typeof namespace !== 'string')\n      {\n         console.warn(\n          `TJSGameSettings warning: 'options.storage' defined, but 'namespace' not defined in TJSGameSettings.`);\n      }\n\n      const hasStorage = storage && typeof namespace === 'string';\n\n      const uiSettings = [];\n\n      const canConfigure = globalThis.game.user.can('SETTINGS_MODIFY');\n\n      for (const setting of this.#settings)\n      {\n         if (!setting.config || (!canConfigure && (setting.scope !== 'client'))) { continue; }\n\n         let options;\n\n         if (isObject(setting.choices))\n         {\n            options = Object.entries(setting.choices).map((entry) => ({ value: entry[0], label: localize(entry[1]) }));\n         }\n\n         let range;\n         if (isObject(setting.range))\n         {\n            range = {};\n\n            // TODO Better error messages.\n            // Verify range data.\n            if (typeof setting.range.min !== 'number') { throw new TypeError(`Setting 'range.min' is not a number.`); }\n            if (typeof setting.range.max !== 'number') { throw new TypeError(`Setting 'range.max' is not a number.`); }\n            if (setting.range.step !== void 0 && typeof setting.range.step !== 'number')\n            {\n               throw new TypeError(`Setting 'range.step' is not a number.`);\n            }\n\n            range.min = setting.range.min;\n            range.max = setting.range.max;\n            range.step = setting.range.step ? setting.range.step : 1;\n         }\n\n         // Default to `String` if no type is provided.\n         const type = setting.type instanceof Function ? setting.type.name : 'String';\n\n         // Only configure file picker if setting type is a string.\n         let filePicker;\n         if (type === 'String')\n         {\n            filePicker = setting.filePicker === true ? 'any' : setting.filePicker;\n         }\n\n         let buttonData;\n         if (filePicker)\n         {\n            buttonData = {\n               icon: 'fas fa-file-import fa-fw',\n               efx: efx === 'ripple' ? ripple() : void 0,\n               title: 'FILES.BrowseTooltip',\n               styles: { 'margin-left': '0.25em' }\n            };\n         }\n\n         const store = this.#settings.getStore(setting.key);\n\n         let selectData;\n\n         /** @type {string} */\n         let componentType = 'text';\n\n         if (setting.type === Boolean)\n         {\n            componentType = 'checkbox';\n         }\n         else if (options !== void 0)\n         {\n            componentType = 'select';\n\n            selectData = {\n               store,\n               efx: efx === 'ripple' ? rippleFocus() : void 0,\n               type: componentType,\n               options\n            };\n         }\n         else if (setting.type === Number)\n         {\n            componentType = isObject(setting.range) ? 'range' : 'number';\n         }\n\n         let inputData;\n         if (componentType === 'text' || componentType === 'number')\n         {\n            inputData = {\n               store,\n               efx: efx === 'ripple' ? rippleFocus() : void 0,\n               type: componentType\n            };\n         }\n\n         uiSettings.push({\n            id: `${setting.namespace}.${setting.key}`,\n            namespace: setting.namespace,\n            folder: setting.folder,\n            key: setting.key,\n            name: localize(setting.name),\n            hint: localize(setting.hint),\n            type,\n            componentType,\n            filePicker,\n            range,\n            store,\n            initialValue: globalThis.game.settings.get(setting.namespace, setting.key),\n            scope: setting.scope,\n            requiresReload: typeof setting.requiresReload === 'boolean' ? setting.requiresReload : false,\n            buttonData,\n            inputData,\n            selectData\n         });\n      }\n\n      // If storage is available then create a key otherwise create a dummy store, so `applyScrolltop` works.\n      const storeScrollbar = hasStorage ? storage.getStore(`${namespace}-settings-scrollbar`) : writable(0);\n\n      const topLevel = [];\n\n      const folderData = {};\n\n      // Sort into folders\n      for (const setting of uiSettings)\n      {\n         if (typeof setting.folder === 'string')\n         {\n            const folderName = localize(setting.folder);\n\n            // Create folder array if one doesn't exist already.\n            if (!Array.isArray(folderData[folderName])) { folderData[folderName] = []; }\n            folderData[folderName].push(setting);\n         }\n         else // Add to 'toplevel' settings\n         {\n            topLevel.push(setting);\n         }\n      }\n\n      // Convert folderData object to array.\n      const folders = Object.entries(folderData).map((entry) =>\n      {\n         return {\n            label: entry[0],\n            store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${entry[0]}`) : void 0,\n            settings: entry[1],\n         };\n      });\n\n      const sections = [];\n\n      // Parse custom component sections\n      for (const section of this.#sections)\n      {\n         const parsedSection = {\n            class: section.class,\n            props: section.props,\n            styles: section.styles\n         };\n\n         if (typeof section.folder === 'string')\n         {\n            const label = localize(section.folder);\n\n            parsedSection.folder = {\n               label,\n               store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${label}`) : void 0\n            };\n         }\n         else if (isObject(section.folder))\n         {\n            const label = localize(section.folder.label);\n\n            parsedSection.folder = {\n               label,\n               store: hasStorage ? storage.getStore(`${namespace}-settings-folder-${label}`) : void 0,\n               summaryEnd: section.folder.summaryEnd,\n               styles: section.folder.styles\n            };\n         }\n\n         sections.push(parsedSection);\n      }\n\n      return {\n         storeScrollbar,\n         topLevel,\n         folders,\n         sections\n      };\n   }\n\n   async #reloadConfirm({ world = false } = {})\n   {\n      let title = localize('SETTINGS.ReloadPromptTitle');\n      let label = localize('SETTINGS.ReloadPromptBody');\n\n      // Foundry v9 doesn't have the reload lang keys, so substitute just for English translation.\n      // TODO: FOUNDRY_V9 - remove when support for v9 is dropped.\n      title = title !== 'SETTINGS.ReloadPromptTitle' ? title : 'Reload Application?';\n      label = label !== 'SETTINGS.ReloadPromptBody' ? label :\n       'Some of the changed settings require a reload of the application to take effect. Would you like to reload now?';\n\n      const reload = await TJSDialog.confirm({\n         modal: true,\n         draggable: false,\n         title,\n         content: `<p>${label}</p>`\n      });\n\n      if (!reload) { return; }\n\n      // Reload all connected clients. Note: Foundry v9 might not support this event.\n      if (world && globalThis.game.user.isGM) { globalThis.game.socket.emit('reload'); }\n\n      // Reload locally.\n      window.location.reload();\n   }\n\n   /**\n    * Convenience method to swap `showSettings`.\n    *\n    * @returns {boolean} New `showSettings` state.\n    */\n   swapShowSettings()\n   {\n      this.#showSettings = !this.#showSettings;\n      this.#showSettingsSet(this.#showSettings);\n      return this.#showSettings;\n   }\n}\n\n/**\n * Registers game settings and creates a backing Svelte store for each setting. The Svelte store will update the\n * Foundry game settings and vice versa when changes occur to the Foundry game settings the updated data is set to the\n * store.\n *\n * Note: It is possible to add multiple `onChange` callbacks on registration.\n *\n * TODO: A possible future extension is to offer type checking against the setting type by creating a customized\n * writable store that has an overloaded `set` method to provide type checking.\n */\nclass TJSGameSettings\n{\n   /** @type {string} */\n   #namespace;\n\n   /** @type {GameSettingData[]} */\n   #settings = [];\n\n   /**\n    * @type {Map<string, import('svelte/store').Writable>}\n    */\n   #stores = new Map();\n\n   /** @type {import('./types').UIControl} */\n   #uiControl;\n\n   /**\n    * Creates the TJSGameSettings instance.\n    *\n    * @param {string}   namespace - The namespace for all settings.\n    */\n   constructor(namespace)\n   {\n      if (typeof namespace !== 'string') { throw new TypeError(`'namespace' is not a string.`); }\n\n      this.#namespace = namespace;\n      this.#uiControl = new UIControl(this);\n   }\n\n   /**\n    * Creates a new writable for the given key.\n    *\n    * @param {*}  initialValue - An initial value to set to new stores.\n    *\n    * @returns {import('svelte/store').Writable} The new writable.\n    */\n   static #createStore(initialValue)\n   {\n      return writable(initialValue);\n   }\n\n   /**\n    * Provides an iterator / generator to return stored settings data.\n    *\n    * @returns {IterableIterator<GameSettingData>} An iterator of all game setting data.\n    * @yields {GameSettingData}\n    */\n   *[Symbol.iterator]()\n   {\n      for (const setting of this.#settings)\n      {\n         yield setting;\n      }\n   }\n\n   /**\n    * @returns {string} Returns namespace set in constructor.\n    */\n   get namespace()\n   {\n      return this.#namespace;\n   }\n\n   /**\n    * @returns {import('./types').UIControl} The associated UIControl.\n    */\n   get uiControl()\n   {\n      return this.#uiControl;\n   }\n\n   /**\n    * Gets a store from the `stores` Map or creates a new store for the key.\n    *\n    * @param {string}   key - Key to lookup in stores map.\n    *\n    * @param {string}   [initialValue] - An initial value to set to new stores.\n    *\n    * @returns {import('svelte/store').Writable} The store for the given key.\n    */\n   #getStore(key, initialValue)\n   {\n      let store = this.#stores.get(key);\n      if (store === void 0)\n      {\n         store = TJSGameSettings.#createStore(initialValue);\n         this.#stores.set(key, store);\n      }\n\n      return store;\n   }\n\n   /**\n    * Returns a readable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {import('svelte/store').Readable | undefined} The associated store for the given game setting key.\n    */\n   getReadableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getReadableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      const store = this.#getStore(key);\n\n      return { subscribe: store.subscribe };\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {import('svelte/store').Writable | undefined} The associated store for the given game setting key.\n    */\n   getStore(key)\n   {\n      return this.getWritableStore(key);\n   }\n\n   /**\n    * Returns a writable Game Settings store for the associated key.\n    *\n    * @param {string}   key - Game setting key.\n    *\n    * @returns {import('svelte/store').Writable | undefined} The associated store for the given game setting key.\n    */\n   getWritableStore(key)\n   {\n      if (!this.#stores.has(key))\n      {\n         console.warn(`TJSGameSettings - getWritableStore: '${key}' is not a registered setting.`);\n         return;\n      }\n\n      return this.#getStore(key);\n   }\n\n   /**\n    * Registers a setting with TJSGameSettings and Foundry core.\n    *\n    * Note: The specific store subscription handler assigned to the passed in store or store created for the setting\n    * internally is returned from this function. In some cases when setting up custom stores particularly of object\n    * types with several child property stores (`propertyStore`) it is necessary to only update the setting store and\n    * not all subscribers to the custom store as the `propertyStore` instances are also subscribers to the custom store.\n    *\n    * This allows the custom store in the `set` implementation to mainly only trigger the TJSGameSettings subscriber\n    * handler on updates and not all the connected `propertyStore` instances.\n    *\n    * @param {GameSetting} setting - A GameSetting instance to set to Foundry game settings.\n    *\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\n    *\n    * @returns {Function} The specific store subscription handler assigned to the passed in store.\n    */\n   register(setting, coreConfig = true)\n   {\n      if (!isObject(setting))\n      {\n         throw new TypeError(`TJSGameSettings - register: setting is not an object.`);\n      }\n\n      if (!isObject(setting.options))\n      {\n         throw new TypeError(`TJSGameSettings - register: 'setting.options' attribute is not an object.`);\n      }\n\n      if (typeof coreConfig !== 'boolean')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'coreConfig' is not an boolean.`);\n      }\n\n      if (setting.store !== void 0 && !isWritableStore(setting.store))\n      {\n         throw new TypeError(\n          `TJSGameSettings - register: 'setting.store' attribute is not a writable store.`);\n      }\n\n      const namespace = setting.namespace;\n      const key = setting.key;\n      const folder = setting.folder;\n\n      // The `config` parameter passed to Foundry core.\n      const foundryConfig = coreConfig ? setting.options.config : false;\n\n      if (typeof namespace !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'namespace' attribute is not a string.`);\n      }\n\n      if (typeof key !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'key' attribute is not a string.`);\n      }\n\n      if (folder !== void 0 && typeof folder !== 'string')\n      {\n         throw new TypeError(`TJSGameSettings - register: 'folder' attribute is not a string.`);\n      }\n\n      const store = setting.store;\n\n      /**\n       * @type {GameSettingOptions}\n       */\n      const options = setting.options;\n\n      const onchangeFunctions = [];\n\n      // When true prevents local store subscription from a loop when values are object data.\n      let gateSet = false;\n\n      // Provides an `onChange` callback to update the associated store.\n      onchangeFunctions.push((value) =>\n      {\n         const callbackStore = this.#getStore(key);\n         if (callbackStore && !gateSet)\n         {\n            gateSet = true;\n            callbackStore.set(value);\n            gateSet = false;\n         }\n      });\n\n      // Handle loading any existing `onChange` callbacks.\n      if (isIterable(options?.onChange))\n      {\n         for (const entry of options.onChange)\n         {\n            if (typeof entry === 'function') { onchangeFunctions.push(entry); }\n         }\n      }\n      else if (typeof options.onChange === 'function')\n      {\n         onchangeFunctions.push(options.onChange);\n      }\n\n      // Provides the final onChange callback that iterates over all the stored onChange callbacks.\n      const onChange = (value) =>\n      {\n         for (const entry of onchangeFunctions) { entry(value); }\n      };\n\n      globalThis.game.settings.register(namespace, key, { ...options, config: foundryConfig, onChange });\n\n      // Set new store value with existing setting or default value.\n      const targetStore = store ? store : this.#getStore(key, globalThis.game.settings.get(namespace, key));\n\n      // If a store instance is passed into register then initialize it with game settings data.\n      if (store)\n      {\n         this.#stores.set(key, targetStore);\n         store.set(globalThis.game.settings.get(namespace, key));\n      }\n\n      const storeHandler = async (value) =>\n      {\n         if (!gateSet && globalThis.game.settings.get(namespace, key) !== value)\n         {\n            gateSet = true;\n            await globalThis.game.settings.set(namespace, key, value);\n         }\n\n         gateSet = false;\n      };\n\n      // Subscribe to self to set associated game setting on updates after verifying that the new value does not match\n      // existing game setting.\n      subscribeIgnoreFirst(targetStore, storeHandler);\n\n      this.#settings.push({\n         namespace,\n         key,\n         folder,\n         ...options\n      });\n\n      return storeHandler;\n   }\n\n   /**\n    * Registers multiple settings.\n    *\n    * Please refer to the note in {@link TJSGameSettings.register} about the returned object of store subscriber handler\n    * functions.\n    *\n    * @param {Iterable<GameSetting>} settings - An iterable list of game setting configurations to register.\n    *\n    * @param {boolean}     coreConfig - When false this overrides the `setting.options.config` parameter when\n    *                                   registering the setting with Foundry. This allows the settings to be displayed\n    *                                   in the app itself, but removed from the standard Foundry configuration location.\n    *\n    * @returns { {[key: string]: Function} } An object containing all TJSGameSetting store subscriber handlers for each\n    *          setting `key` added.\n    */\n   registerAll(settings, coreConfig)\n   {\n      /** @type { {[key: string]: Function} } */\n      const storeHandlers = {};\n\n      if (!isIterable(settings)) { throw new TypeError(`TJSGameSettings - registerAll: settings is not iterable.`); }\n\n      for (const entry of settings)\n      {\n         if (!isObject(entry))\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings is not an object.`);\n         }\n\n         if (typeof entry.namespace !== 'string')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'namespace' attribute.`);\n         }\n\n         if (typeof entry.key !== 'string')\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'key' attribute.`);\n         }\n\n         if (!isObject(entry.options))\n         {\n            throw new TypeError(`TJSGameSettings - registerAll: entry in settings missing 'options' attribute.`);\n         }\n\n         storeHandlers[entry.key] = this.register(entry, coreConfig);\n      }\n\n      return storeHandlers;\n   }\n}\n\n/**\n * @typedef {object} GameSettingOptions\n *\n * @property {object} [choices] If choices are defined, the resulting setting will be a select menu.\n *\n * @property {boolean} [config=true] Specifies that the setting appears in the configuration view.\n *\n * @property {*} [default] A default value for the setting.\n *\n * @property {string} [hint] A description of the registered setting and its behavior.\n *\n * @property {string} name The displayed name of the setting.\n *\n * @property {Function|Iterable<Function>} [onChange] An onChange callback function or iterable list of callbacks to\n * directly receive callbacks from Foundry on setting change.\n *\n * @property {{min: number, max: number, step: number}} [range] If range is specified, the resulting setting will be\n * a range slider.\n *\n * @property {boolean} [requiresReload=false] If true then a prompt to reload after changes occurs.\n *\n * @property {('client' | 'world')} [scope='client'] Scope for setting.\n *\n * @property {object|Function} type A constructable object or function.\n */\n\n/**\n * @typedef {object} GameSetting Defines a game setting.\n *\n * @property {string} namespace The setting namespace; usually the ID of the module / system.\n *\n * @property {string} key The setting key to register.\n *\n * @property {string} folder The name of the TJSSvgFolder to put this setting in to group them.\n *\n * @property {import('svelte/store').Writable} [store] An existing store instance to use.\n *\n * @property {GameSettingOptions} options Configuration for setting data.\n */\n\n/**\n * @typedef {GameSettingOptions} GameSettingData Stores the primary TJS game setting keys w/ GameSettingOptions.\n *\n * @property {string} namespace The setting namespace; usually the ID of the module / system.\n *\n * @property {string} key The setting key to register.\n *\n * @property {string} folder The name of the TJSSvgFolder to put this setting in to group them.\n */\n\n/**\n * Provides an accessible JS object that is updated reactively from all or subset of TJSGameSettings stores.\n * Accessors are provided to directly get / set current setting data. Using a setter will update the setting and backing\n * store.\n *\n * Note: You can create a JSDoc / `@typedef` to apply with `@type` and achieve typing support in IDEs for the\n * customizable live settings instance. Please see the example at the end of this source file on how to accomplish this\n * task.\n *\n * TJSLiveGameSettings is also a readable Svelte store essentially providing a customizable derived store of all\n * settings tracked.\n *\n * Note: When using from JS a second subscriber function argument is the key that was updated.\n * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\n */\nclass TJSLiveGameSettings\n{\n   /**\n    * Stores the current parsed game setting data.\n    *\n    * @type {{}}\n    */\n   #currentData = {};\n\n   /**\n    * Map of all game settings stores and unsubscribe functions currently subscribed.\n    *\n    * @type {Map<string, { unsubscribe: Function, store: import('svelte/store').Writable }>}\n    */\n   #gameSettings = new Map();\n\n   /**\n    * Stores readable subscribers of this instance.\n    *\n    * Note: When using from JS a second argument is the key that was updated.\n    * From Svelte: Use 'lastKey' accessor to retrieve the last updated key.\n    *\n    * @type {((value: TJSLiveGameSettings, key?: string) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * Stores the last updated key.\n    *\n    * @type {string}\n    */\n   #lastKey = void 0;\n\n   /**\n    * Creates a live binding against the setting stores. All settings are configured by default, but can also be\n    * filtered by setting key with inclusive / exclusive Sets.\n    *\n    * @param {TJSGameSettings}   gameSettings - A game settings instance to subscribe to...\n    *\n    * @param {object}            [options] - TJSLiveGameSettings options.\n    *\n    * @param {Set<string>}       [options.include] - A Set of setting keys to include from subscribing.\n    *\n    * @param {Set<string>}       [options.exclude] - A Set of setting keys to exclude from subscribing.\n    */\n   constructor(gameSettings, { include, exclude } = {})\n   {\n      if (!(gameSettings instanceof TJSGameSettings))\n      {\n         throw new TypeError(`'gameSettings' is not a TJSGameSettings instance.`);\n      }\n\n      if (include !== void 0 && !(include instanceof Set)) { throw new TypeError(`'options.include' is not a Set.`); }\n      if (exclude !== void 0 && !(exclude instanceof Set)) { throw new TypeError(`'options.exclude' is not a Set.`); }\n\n      for (const setting of gameSettings)\n      {\n         const key = setting.key;\n\n         // Skip any keys that are in the include set.\n         if (include !== void 0 && !include.has(key)) { continue; }\n\n         // Skip any keys that are in the exclude set.\n         if (exclude !== void 0 && exclude.has(key)) { continue; }\n\n         if (typeof this[key] === 'function' || key === 'lastKey')\n         {\n            console.warn(`TJSLiveGameSettings warning: key (${key}) shadows a function. Skipping key.`);\n         }\n\n         const store = gameSettings.getStore(key);\n\n         // Update this instance storing setting data by key.\n         this.#gameSettings.set(key, {\n            store,\n            unsubscribe: store.subscribe((data) =>\n            {\n               if (this.#currentData !== void 0) { this.#currentData[key] = data; }\n\n               this.#lastKey = key;\n\n               // Notify any child instance that a particular key has updated.\n               this._update(key);\n\n               // Notify any readable store subscribers.\n               this.#updateSubscribers(key);\n            })\n         });\n\n         // Define new accessors for setting key.\n         Object.defineProperty(this, key, {\n            get: () =>\n            {\n               if (this.#currentData === void 0)\n               {\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\n               }\n               else\n               {\n                  return this.#currentData[key];\n               }\n            },\n            set: (data) =>\n            {\n               if (this.#currentData === void 0)\n               {\n                  throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`);\n               }\n               else\n               {\n                  this.#gameSettings.get(key).store.set(data);\n               }\n            }\n         });\n      }\n\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {string} Last updated setting key.\n    */\n   get lastKey()\n   {\n      return this.#lastKey;\n   }\n\n   // ----------------------------------------------------------------------------------------------------------------\n\n   /**\n    * Destroys this instance of TJSLiveGameSettings and unsubscribes from all game setting stores.\n    */\n   destroy()\n   {\n      for (const data of this.#gameSettings)\n      {\n         if (typeof data.unsubscribe === 'function') { data.unsubscribe(); }\n      }\n\n      this.#gameSettings.clear();\n      this.#currentData = void 0;\n   }\n\n   /**\n    * Returns an iterator / generator of all setting entries.\n    *\n    * @returns {IterableIterator<[key: string, value: any]>} An iterator returning setting entries.\n    * @yields {[key: string, value: any]}\n    */\n   *entries()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      for (const key in this.#currentData)\n      {\n         yield [key, this.#currentData[key]];\n      }\n   }\n\n   /**\n    * Returns an iterator / generator of all setting keys.\n    *\n    * @returns {IterableIterator<string>} An iterator returning setting keys.\n    * @yields {string}\n    */\n   *keys()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      for (const key in this.#currentData)\n      {\n         yield key;\n      }\n   }\n\n   /**\n    * Returns a string / JSON stringify of the current setting data.\n    *\n    * @returns {string} Tracked setting data.\n    */\n   toString()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      return JSON.stringify(this.#currentData);\n   }\n\n   /**\n    * Override to respond to setting update.\n    *\n    * @param {string} key - The setting / local key that updated.\n    *\n    * @protected\n    */\n   _update(key) {}   // eslint-disable-line no-unused-vars\n\n   /**\n    * Returns an iterator / generator of all values.\n    *\n    * @returns {IterableIterator<any>} An iterator returning setting values.\n    * @yields {any}\n    */\n   *values()\n   {\n      if (this.#currentData === void 0) { throw new Error(`This instance of TJSLiveGameSettings has been destroyed.`); }\n\n      for (const key in this.#currentData)\n      {\n         yield this.#currentData[key];\n      }\n   }\n\n   // Readable store implementation ----------------------------------------------------------------------------------\n\n   /**\n    * @param {(value: TJSLiveGameSettings, key?: string) => void} handler - Callback function that is invoked on\n    * update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(this, void 0);             // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Updates subscribers.\n    *\n    * @param {string} key - The key that was updated.\n    */\n   #updateSubscribers(key)\n   {\n      const subscriptions = this.#subscriptions;\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](this, key); }\n   }\n}\n\nexport { TJSGameSettings, TJSLiveGameSettings };\n//# sourceMappingURL=index.js.map\n","import { TJSGameSettings } from '#runtime/svelte/store/fvtt/settings';\nimport { camelCaseToTitleCase } from '~/src/helpers/Utility'\n\nimport { MODULE_ID } from '~/src/helpers/constants';\nclass DonationTrackerGameSettings extends TJSGameSettings {\n   constructor() {\n      super(MODULE_ID);\n   }\n\n   init() {\n      window.GAS.log.i('Registering Actor Studio Donation Tracker integration')\n      const namespace = this.namespace;\n      const allSettings = [];\n\n      allSettings.push({\n         namespace,\n         key: \"enable-donation-tracker\",\n         options: {\n            name: game.i18n.localize('GAS.Setting.DonationTrackerEnabled.Name'),\n            hint: game.i18n.localize('GAS.Setting.DonationTrackerEnabled.Hint'),\n            scope: \"world\",\n            config: true,\n            type: Boolean,\n            default: true,\n            onchange: () => {\n            }\n         }\n      });\n\n      allSettings.push({\n         namespace,\n         key: \"enable-donation-tracker-unregistered-access\",\n         options: {\n            name: game.i18n.localize('GAS.Setting.DonationTracker_UnregisteredAccess.Name'),\n            hint: game.i18n.localize('GAS.Setting.DonationTracker_UnregisteredAccess.Hint'),\n            scope: \"world\",\n            config: true,\n            type: Boolean,\n            default: false,\n            onchange: () => {\n            }\n         }\n      });\n\n      const membershipRanks = game.membership?.RANKS || []\n      // window.GAS.log.d('membershipRanks', membershipRanks)\n\n      if ( Object.keys(membershipRanks).length > 0) {\n         // window.GAS.log.d('Registering Donation Tracker Ranks')\n         for (const [rank, value] of Object.entries(membershipRanks)) {\n            // window.GAS.log.d('rank', rank)\n            if(value === -1) continue;\n            allSettings.push({\n               namespace,\n               key: `donation-tracker-rank-${rank}`,\n               options: {\n                  name: `${camelCaseToTitleCase(rank)}`,\n                  hint: `${game.i18n.localize('GAS.Setting.DonationTrackerRank.Hint')}: ${camelCaseToTitleCase(rank)}`,\n                  scope: \"world\",\n                  config: true,\n                  type: String,\n                  default: `${camelCaseToTitleCase(rank)}`,\n                  onchange: () => {\n                  }\n               }\n            });\n         }\n      }\n      // window.GAS.log.d('allSettings', allSettings)\n      this.registerAll(allSettings, !game.user.isGM);\n   }\n}\n\nexport default new DonationTrackerGameSettings();\n","<svelte:options accessors={true} />\n\n<script>\n   import { getContext }            from 'svelte';\n\n   import { TJSApplicationShell }   from '#runtime/svelte/component/core';\n   import { Timing }                from '#runtime/util';\n\n   import { TJSSettingsEdit }       from '#standard/component';\n\n   import SettingsFooter            from './SettingsFooter.svelte';\n\n   import DonationTrackerGameSettings  from './DonationTrackerGameSettings.js';\n\n   import { sessionConstants }      from '~/src/helpers/constants';\n\n   export let elementRoot;\n\n   const { application } = getContext('#external');\n\n   // Get a store that is synchronized with session storage.\n   const stateStore = application.reactive.sessionStorage.getStore(sessionConstants.appState);\n\n   // Application position store reference. Stores need to be a top level variable to be accessible for reactivity.\n   const position = application.position;\n\n   // A debounced callback that serializes application state after 500-millisecond delay.\n   const storePosition = Timing.debounce(() => $stateStore = application.state.get(), 500);\n\n\n   // Reactive statement to invoke debounce callback on Position changes.\n   $: storePosition($position);\n</script>\n\n<TJSApplicationShell bind:elementRoot>\n   <TJSSettingsEdit settings={DonationTrackerGameSettings} options={{ storage: application.reactive.sessionStorage }}>\n      <SettingsFooter slot=settings-footer />\n   </TJSSettingsEdit>\n</TJSApplicationShell>\n\n\n<style lang=\"sass\">\n   :root\n      --tjs-settings-edit-background-color: rgba(0,0,0,0.9)\n      --tjs-settings-edit-color: white\n      --tjs-settings-entry-hint-color: #999\n      --tjs-settings-entry-label-color: white\n\n   :global(#gas-donation-tracker-settings)\n      background-color: rgba(0,0,0,0.9)\n      color: white\n\n   :global(#gas-donation-tracker-settings .tjs-input)\n      color: white\n</style>","import { SvelteApplication }  from '#runtime/svelte/application';\n\nimport DonationTrackerSettingsAppShell  from './DonationTrackerSettingsAppShell.svelte';\n\n\nexport default class DonationTrackerSettingsApp extends SvelteApplication\n{\n   /** @inheritDoc */\n   constructor(options)\n   {\n      super(options);\n   }\n\n   /**\n    *\n    */\n   static get defaultOptions()\n   {\n      return foundry.utils.mergeObject(super.defaultOptions, {\n         title: 'GAS.Setting.DonationTracker.Name',\n         id: 'gas-donation-tracker-settings',\n         resizable: true,\n         minimizable: true,\n         width: 600,\n         height: 400,\n         minWidth: 550,\n         headerIcon: 'modules/foundryvtt-actor-studio/assets/actor-studio-logo-dragon-white.svg',\n\n         svelte: {\n            class: DonationTrackerSettingsAppShell,\n            target: document.body\n         }\n      });\n   }\n}","import DonationTrackerSettingsApp   from './DonationTrackerSettingsApp.js';\n\nexport default class DonationTrackerSettingsButton extends FormApplication\n{\n   static #dtSettingsApp;\n\n   static showSettings()\n   {\n      this.#dtSettingsApp = this.#dtSettingsApp ? this.#dtSettingsApp : new DonationTrackerSettingsApp();\n      this.#dtSettingsApp.render(true, { focus: true });\n\n      return this.#dtSettingsApp;\n   }\n\n   /**\n    * @inheritDoc\n    */\n   constructor(options = {})\n   {\n      super({}, options);\n      DonationTrackerSettingsButton.showSettings();\n   }\n\n   async _updateObject(event, formData) {}\n   render() { this.close(); }\n}","import CompendiumSourcesSubmenu from './compendiumSourcesSubmenu';\nimport DonationTrackerSettingsButton from './DonationTrackerSettingsButton';\nimport { MODULE_ID, LOG_PREFIX, DEFAULT_SOURCES } from '../helpers/constants';\n\n// settings not shown on the Module Settings - not modifiable by users\nexport const enum PrivateSettingKeys {\n  LAST_MIGRATION = 'lastMigration',\n}\n\nexport function registerSettings(app: Game): void {\n  window.GAS.log.d(\"Building module settings\");\n\n  Handlebars.registerHelper('checkedIf', function (condition) {\n    return condition ? 'checked' : '';\n  });\n\n  /**  Disabled settings */\n  // showRollsAsChatMessages();\n  // individualPanelScrolls();\n  // tokenDisplayNameMode();\n  // tokenDisplayBarsMode();\n  // equipmentBlacklist();\n  // subraceNameBlacklist();\n  // buttonOnDialogInsteadOfActorsDirectory();\n  // trimSubclasses();\n  // custom packs\n  // integrations\n  // useTokenizerIfAvailable();\n  // private settings\n  // lastMigration();\n  // abilityScoreMethods();\n  \n  \n  /** World Settings */\n  sourcesConfiguration();\n  donationTracker();\n  defaultStartingGoldDice();\n  allowManualInput();\n  allowStandardArray();\n  allowPointBuy();\n  pointBuyLimit();\n  allowRolling(app);\n  abilityRollFormula();\n  allowAbilityRollScoresToBeMoved();\n  showButtonInSideBar(app);\n  disableOtherActorCreationOptionsForPlayers();\n  nonGmsCanOnlyCreatePCs();\n  filterPackSourcesAppropriatelyByName();\n  showPackLabelInSelect();\n  illuminatedDescription();\n  illuminatedWidth();\n  illuminatedHeight();\n  enableEquipmentSelection();\n  showPackLabelInSelect();\n  windowX();\n  windowY();\n  enableLevelUp();\n  milestoneLeveling();\n  forceDnd5eLevelUpAutomation();\n  debugSetting();\n  debugHooksSetting();\n  disableAdvancementCapture();\n\n  /** User settings */\n  dontShowWelcome();\n}\n\nfunction illuminatedHeight() {\n  game.settings.register(MODULE_ID, 'illuminatedHeight', {\n    name: game.i18n.localize('GAS.Setting.illuminatedHeight.Name'),\n    hint: game.i18n.localize('GAS.Setting.illuminatedHeight.Hint'),\n    scope: 'world',\n    config: true,\n    default: '100',\n    type: String,\n  });\n}\nfunction illuminatedWidth() {\n  game.settings.register(MODULE_ID, 'illuminatedWidth', {\n    name: game.i18n.localize('GAS.Setting.illuminatedWidth.Name'),\n    hint: game.i18n.localize('GAS.Setting.illuminatedWidth.Hint'),\n    scope: 'world',\n    config: true,\n    default: '100',\n    type: String,\n  });\n}\n\nexport function filterPackSourcesAppropriatelyByName() {\n  game.settings.register(MODULE_ID, 'filterPackSourcesAppropriatelyByName', {\n    name: game.i18n.localize('GAS.Setting.FilterPackSourcesAppropriatelyByName.Name'),\n    hint: game.i18n.localize('GAS.Setting.FilterPackSourcesAppropriatelyByName.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\n\nexport function illuminatedDescription() {\n  game.settings.register(MODULE_ID, 'illuminatedDescription', {\n    name: game.i18n.localize('GAS.Setting.illuminatedDescription.Name'),\n    hint: game.i18n.localize('GAS.Setting.illuminatedDescription.Hint'),\n    scope: 'world',\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n}\n\nfunction allowAbilityRollScoresToBeMoved() {\n  game.settings.register(MODULE_ID, 'allowAbilityRollScoresToBeMoved', {\n    name: game.i18n.localize('GAS.Setting.AllowAbilityRollScoresToBeMoved.Name'),\n    hint: game.i18n.localize('GAS.Setting.AllowAbilityRollScoresToBeMoved.Hint'),\n    scope: 'world',\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n}\n\nfunction enableLevelUp() {\n  game.settings.register(MODULE_ID, 'enableLevelUp', {\n    name: game.i18n.localize('GAS.Setting.EnableLevelUp.Name'),\n    hint: game.i18n.localize('GAS.Setting.EnableLevelUp.Hint'),\n    scope: 'world',\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n}\n\nfunction showPackLabelInSelect() {\n  game.settings.register(MODULE_ID, 'showPackLabelInSelect', {\n    name: game.i18n.localize('GAS.Setting.ShowPackLabelInSelect.Name'),\n    hint: game.i18n.localize('GAS.Setting.ShowPackLabelInSelect.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\n\n\nfunction nonGmsCanOnlyCreatePCs() {\n  game.settings.register(MODULE_ID, 'nonGmsCanOnlyCreatePCs', {\n    name: game.i18n.localize('GAS.Setting.NonGmsCanOnlyCreatePCs.Name'),\n    hint: game.i18n.localize('GAS.Setting.NonGmsCanOnlyCreatePCs.Hint'),\n    scope: 'world',\n    config: true,\n    type: Boolean,\n    default: true\n  });\n}\nfunction disableOtherActorCreationOptionsForPlayers() {\n  game.settings.register(MODULE_ID, 'disableOtherActorCreationOptionsForPlayers', {\n    name: game.i18n.localize('GAS.Setting.DisableOtherActorCreationOptionsForPlayers.Name'),\n    hint: game.i18n.localize('GAS.Setting.DisableOtherActorCreationOptionsForPlayers.Hint'),\n    scope: 'world',\n    config: true,\n    type: Boolean,\n    default: false\n  });\n}\n\nfunction disableAdvancementCapture() {\n  game.settings.register(MODULE_ID, 'disableAdvancementCapture', {\n    name: game.i18n.localize('GAS.Setting.disableAdvancementCapture.Name'),\n    hint: game.i18n.localize('GAS.Setting.disableAdvancementCapture.Hint'),\n    scope: 'world',\n    config: true,\n    type: Boolean,\n    default: false\n  });\n}\n\nfunction sourcesConfiguration() {\n  game.settings.register(MODULE_ID, 'compendiumSources', {\n    scope: 'world',\n    config: false,\n    type: Object,\n    default: DEFAULT_SOURCES,\n  });\n  // Define a settings submenu which handles advanced configuration needs\n  game.settings.registerMenu(MODULE_ID, 'compendiumSources', {\n    name: game.i18n.localize('GAS.Setting.Sources.Name'),\n    hint: game.i18n.localize('GAS.Setting.Sources.Hint'),\n    label: game.i18n.localize('GAS.Setting.Sources.Label'),\n    icon: 'fas fa-atlas',\n    type: CompendiumSourcesSubmenu,\n    restricted: true,\n  });\n}\n\nfunction equipmentBlacklist() {\n  game.settings.register(MODULE_ID, 'equipmentsBlackList', {\n    name: game.i18n.localize('GAS.Setting.EquipmentBlacklist.Name'),\n    hint: game.i18n.localize('GAS.Setting.EquipmentBlacklist.Hint'),\n    scope: 'world',\n    config: true,\n    default:\n      'Potion of Climbing; Potion of Healing; Spell Scroll 1st Level; Spell Scroll Cantrip Level; Unarmed Strike',\n    type: String,\n  });\n}\n\nfunction subraceNameBlacklist() {\n  game.settings.register(MODULE_ID, 'subracesBlacklist', {\n    name: game.i18n.localize('GAS.Setting.SubraceNameBlacklist.Name'),\n    hint: game.i18n.localize('GAS.Setting.SubraceNameBlacklist.Hint'),\n    scope: 'world',\n    config: true,\n    default: 'Gnome Cunning; Halfling Nimbleness',\n    type: String,\n  });\n}\n\nfunction trimSubclasses() {\n  game.settings.register(MODULE_ID, 'trimSubclasses', {\n    name: game.i18n.localize('GAS.Setting.TrimSubclasses.Name'),\n    hint: game.i18n.localize('GAS.Setting.TrimSubclasses.Hint'),\n    scope: 'world',\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n}\n\nfunction milestoneLeveling() {\n  game.settings.register(MODULE_ID, 'milestoneLeveling', {\n    name: game.i18n.localize('GAS.Setting.milestoneLeveling.Name'),\n    hint: game.i18n.localize('GAS.Setting.milestoneLeveling.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\n\nfunction forceDnd5eLevelUpAutomation() {\n  game.settings.register(MODULE_ID, 'forceDnd5eLevelUpAutomation', {\n    name: game.i18n.localize('GAS.Setting.forceDnd5eLevelUpAutomation.Name'),\n    hint: game.i18n.localize('GAS.Setting.forceDnd5eLevelUpAutomation.Hint'),\n    scope: 'world',\n    config: true,\n    default: true,\n    type: Boolean,\n  });\n}\n\nfunction dontShowWelcome() {\n  game.settings.register(MODULE_ID, 'dontShowWelcome', {\n    name: game.i18n.localize('GAS.Setting.DontShowWelcome.Name'),\n    hint: game.i18n.localize('GAS.Setting.DontShowWelcome.Hint'),\n    scope: 'user',\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\n\nfunction defaultStartingGoldDice() {\n  game.settings.register(MODULE_ID, 'defaultGoldDice', {\n    name: game.i18n.localize('GAS.Setting.defaultGoldDice.Name'),\n    hint: game.i18n.localize('GAS.Setting.defaultGoldDice.Hint'),\n    scope: 'world',\n    config: true,\n    default: '5d4 * 10',\n    type: String,\n  });\n}\n\nfunction useTokenizerIfAvailable() {\n  game.settings.register(MODULE_ID, 'useTokenizer', {\n    name: game.i18n.localize('GAS.Setting.UseTokenizer.Name'),\n    hint: game.i18n.localize('GAS.Setting.UseTokenizer.Hint'),\n    scope: 'world',\n    config: true,\n    type: Boolean,\n    default: false,\n  });\n}\n\nfunction buttonOnDialogInsteadOfActorsDirectory() {\n  game.settings.register(MODULE_ID, 'buttonOnDialog', {\n    name: game.i18n.localize('GAS.Setting.ButtonOnDialogInsteadOfActorsDirectory.Name'),\n    hint: game.i18n.localize('GAS.Setting.ButtonOnDialogInsteadOfActorsDirectory.Hint'),\n    scope: 'world',\n    config: true,\n    type: Boolean,\n    default: false,\n  });\n}\n\nfunction tokenDisplayBarsMode() {\n  game.settings.register(MODULE_ID, 'displayBarsMode', {\n    name: game.i18n.localize('GAS.Setting.TokenBarMode.Name'),\n    scope: 'world',\n    config: true,\n    type: Number,\n    choices: {\n      0: 'Never Displayed',\n      10: 'When Controlled',\n      20: 'Hover by Owner',\n      30: 'Hover by Anyone',\n      40: 'Always for Owner',\n      50: 'Always for Anyone',\n    },\n    default: 20,\n  });\n}\n\nfunction tokenDisplayNameMode() {\n  game.settings.register(MODULE_ID, 'displayNameMode', {\n    name: game.i18n.localize('GAS.Setting.TokenNameMode.Name'),\n    scope: 'world',\n    config: true,\n    type: Number,\n    choices: {\n      0: 'Never Displayed',\n      10: 'When Controlled',\n      20: 'Hover by Owner',\n      30: 'Hover by Anyone',\n      40: 'Always for Owner',\n      50: 'Always for Anyone',\n    },\n    default: 20,\n  });\n}\n\nfunction showRollsAsChatMessages() {\n  game.settings.register(MODULE_ID, 'showRolls', {\n    name: game.i18n.localize('GAS.Setting.ShowRolls.Name'),\n    hint: game.i18n.localize('GAS.Setting.ShowRolls.Hint'),\n    scope: 'world',\n    config: true,\n    type: Boolean,\n    default: true,\n  });\n}\n\nfunction individualPanelScrolls() {\n  game.settings.register(MODULE_ID, 'individualScrolls', {\n    name: game.i18n.localize('GAS.Setting.IndividualPanelScroll.Name'),\n    hint: game.i18n.localize('GAS.Setting.IndividualPanelScroll.Hint'),\n    scope: 'client',\n    config: true,\n    type: Boolean,\n    default: false,\n  });\n}\n\n\nfunction pointBuyLimit() {\n  game.settings.register(MODULE_ID, 'pointBuyLimit', {\n    name: game.i18n.localize('GAS.Setting.AbilityEntry.PointBuyLimit.Name'),\n    hint: game.i18n.localize('GAS.Setting.AbilityEntry.PointBuyLimit.Hint'),\n    scope: 'world',\n    config: true,\n    default: 27,\n    type: Number,\n  });\n}\nfunction windowX() {\n  game.settings.register(MODULE_ID, 'windowX', {\n    name: game.i18n.localize('GAS.Setting.WindowX.Name'),\n    hint: game.i18n.localize('GAS.Setting.WindowX.Hint'),\n    scope: 'world',\n    config: true,\n    default: 720,\n    type: Number,\n  });\n}\nfunction windowY() {\n  game.settings.register(MODULE_ID, 'windowY', {\n    name: game.i18n.localize('GAS.Setting.WindowY.Name'),\n    hint: game.i18n.localize('GAS.Setting.WindowY.Hint'),\n    scope: 'world',\n    config: true,\n    default: 800,\n    type: Number,\n  });\n}\n\nfunction abilityRollFormula() {\n  game.settings.register(MODULE_ID, 'abiiltyRollFormula', {\n    name: game.i18n.localize('GAS.Setting.AbilityEntry.AbilityRollFormula.Name'),\n    hint: game.i18n.localize('GAS.Setting.AbilityEntry.AbilityRollFormula.Hint'),\n    scope: 'world',\n    config: true,\n    default: '4d6kh3',\n    type: String,\n    onChange: () => { console.log('allowPointBuy') },\n    updateSetting: () => { console.log('updateSetting'); },\n  });\n}\n\n\nfunction allowManualInput() {\n  game.settings.register(MODULE_ID, 'allowManualInput', {\n    name: game.i18n.localize('GAS.Setting.AbilityEntry.AllowManualInput.Name'),\n    hint: game.i18n.localize('GAS.Setting.AbilityEntry.AllowManualInput.Hint'),\n    scope: 'world',\n    config: true,\n    type: Boolean,\n    default: true,\n  });\n}\n\nfunction allowStandardArray() {\n  game.settings.register(MODULE_ID, 'allowStandardArray', {\n    name: game.i18n.localize('GAS.Setting.AbilityEntry.AllowStandardArray.Name'),\n    hint: game.i18n.localize('GAS.Setting.AbilityEntry.AllowStandardArray.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\n\nfunction allowPointBuy() {\n  game.settings.register(MODULE_ID, 'allowPointBuy', {\n    name: game.i18n.localize('GAS.Setting.AbilityEntry.AllowPointBuy.Name'),\n    hint: game.i18n.localize('GAS.Setting.AbilityEntry.AllowPointBuy.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    onChange: () => { console.log('allowPointBuy') },\n    updateSetting: () => { console.log('updateSetting'); },\n    type: Boolean,\n  });\n}\n\nfunction allowRolling(app) {\n  game.settings.register(MODULE_ID, 'allowRolling', {\n    name: game.i18n.localize('GAS.Setting.AbilityEntry.AllowRolling.Name'),\n    hint: game.i18n.localize('GAS.Setting.AbilityEntry.AllowRolling.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    onChange: () => { console.log('allowPointBuy') },\n    updateSetting: () => { console.log('updateSetting'); },\n    type: Boolean,\n  });\n}\n\nfunction showButtonInSideBar(app) {\n  game.settings.register(MODULE_ID, 'showButtonInSideBar', {\n    name: game.i18n.localize('GAS.Setting.showButtonInSideBar.Name'),\n    hint: game.i18n.localize('GAS.Setting.showButtonInSideBar.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\nfunction debugSetting() {\n  game.settings.register(MODULE_ID, 'debug', {\n    name: game.i18n.localize('GAS.Setting.debug.Name'),\n    hint: game.i18n.localize('GAS.Setting.debug.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\nfunction debugHooksSetting() {\n  game.settings.register(MODULE_ID, 'debug.hooks', {\n    name: game.i18n.localize('GAS.Setting.debugHooks.Name'),\n    hint: game.i18n.localize('GAS.Setting.debugHooks.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\n\nfunction donationTracker() {\n  if (!game.modules.get('donation-tracker')?.active) return;\n\n  Hooks.on('actor-studio-donation-tracker:settings', () => {\n    if (game.user.isGM) { DonationTrackerSettingsButton.showSettings(); }\n  });\n\n  game.settings.registerMenu(MODULE_ID, 'DonationTracker', {\n    name: game.i18n.localize('GAS.Setting.DonationTracker.Name'),\n    hint: game.i18n.localize('GAS.Setting.DonationTracker.Hint'),\n    label: game.i18n.localize('GAS.Setting.DonationTracker.Label'),\n    icon: 'fas fa-coins',\n    type: DonationTrackerSettingsButton,\n    restricted: true,\n    onChange: () => {\n      Hooks.call('actor-studio-donation-tracker:settings');\n    }\n  });\n\n}\n\n// PRIVATE SETTINGS\n\nfunction lastMigration() {\n  game.settings.register(MODULE_ID, PrivateSettingKeys.LAST_MIGRATION, {\n    scope: 'world',\n    config: false,\n    default: 0,\n    type: Number,\n  });\n}\n\nfunction enableEquipmentSelection() {\n  game.settings.register(MODULE_ID, 'enableEquipmentSelection', {\n    name: game.i18n.localize('GAS.Setting.EnableEquipmentSelection.Name'),\n    hint: game.i18n.localize('GAS.Setting.EnableEquipmentSelection.Hint'),\n    scope: 'world',\n    config: true,\n    default: false,\n    type: Boolean,\n  });\n}\n","import { MODULE_ID } from '../../helpers/constants';\n\nexport default class SubclassLevelPlugin {\n  static ID = 'subclass-level';\n\n  /**\n   * Initialize the plugin\n   */\n  static init() {\n    \n    if (window.GAS.dnd5eVersion > 3) {\n      window.GAS.log.i('Subclass Level Plugin is not supported for DND5E version 3 and above, as it is now handled by the DND5E system.');\n      return false;\n    }\n\n    this.registerHooks();\n  }\n\n  /**\n   * Register necessary hooks\n   */\n  static registerHooks() {\n    // Hook into advancement selection rendering\n    Hooks.on('renderAdvancementSelection', this._onRenderAdvancementSelection.bind(this));\n    Hooks.on('renderItemSheet5e', this._onRenderItemSheet5e.bind(this));\n\n  }\n\n  /**\n   * Handle rendering the advancement selection interface\n   */\n  static async _onRenderAdvancementSelection(app, html, data) {\n\n    // Only proceed if this is a class item\n    const item = app.item;\n    if (!item || item.type !== 'class') return;\n\n    // Add our subclass option to the types list\n    window.GAS.log.d('html', html);\n    window.GAS.log.d('$(html)', $(html));\n    const typeList = html.find('.items-list');\n    html.addClass('gas dnd5e v3x')\n    window.GAS.log.d('Type List: ', typeList);\n    const subclassOption = `\n      <li class=\"item flexrow\">\n        <div class=\"item-name flexrow\">\n          <div class=\"item-image\" style=\"background-image: url('modules/${MODULE_ID}/assets/dnd5e/3.x/subclass.svg')\"></div>\n          <h3>Subclass</h3>\n        </div>\n        <div class=\"item-controls flexrow\">\n          <input name=\"type\" type=\"radio\" value=\"Subclass\">\n        </div>\n        <div class=\"item-hint notes\">\n          Specify what level this class receives its subclass.\n        </div>\n      </li>\n    `;\n    typeList.append(subclassOption);\n    const button = html.find('[data-button=\"submit\"]');\n    window.GAS.log.d('Button: ', button);\n    \n    // Store the original click handler\n    const originalClickHandler = $._data(button[0], 'events')?.click?.[0]?.handler;\n    \n    button.off('click').on('click', async function(event) {\n      const selectedType = html.find('input[name=\"type\"]:checked').val();\n      if (selectedType === 'Subclass') {\n        await SubclassLevelPlugin._showLevelDialog(item);\n        app.close();\n      } else if (originalClickHandler) {\n        // Call the original handler for non-Subclass selections\n        originalClickHandler.call(this, event);\n      }\n    });\n  }\n\n  /**\n   * Show dialog for setting subclass level\n   */\n  static async _showLevelDialog(item) {\n    const currentLevel = this.getSubclassLevel(item);\n    const content = `\n      <form>\n        <div class=\"form-group\">\n          <label>Select Level</label>\n          <select name=\"level\">\n            ${Array.from({ length: 20 }, (_, i) => i + 1).map(level =>\n      `<option value=\"${level}\" ${currentLevel === level ? 'selected' : ''}>${level}</option>`\n    ).join('')}\n          </select>\n        </div>\n      </form>\n    `;\n\n    const dialog = new Dialog({\n      title: `Set Subclass Level for ${item.name}`,\n      content,\n      buttons: {\n        submit: {\n          label: \"Save\",\n          callback: async (html) => {\n            const level = Number(html.find('[name=\"level\"]').val());\n            await this.setSubclassLevel(item, level);\n          }\n        },\n        cancel: {\n          label: \"Cancel\"\n        }\n      },\n      default: \"submit\"\n    });\n\n    dialog.render(true);\n  }\n\n  static _onRenderItemSheet5e(app, html, data) {\n    window.GAS.log.d('_onRenderItemSheet5e called');\n    // Only proceed if this is a class item\n    const item = app.item;\n    window.GAS.log.d('item.type', item.type);\n    if (!item || item.type !== 'class') return;\n\n    // Add click listener to advancement tab\n    html.find('a.item[data-tab=\"advancement\"]').on('click', () => {\n      // Small delay to ensure tab is active when we re-render\n      setTimeout(() => app.render(false), 0);\n    });\n\n    // Only proceed with subclass rendering if advancement tab is active\n    if (!html.find('.tab.advancement.active').length) return;\n\n    window.GAS.log.d('html', html);\n\n    const subclassLevel = this.getSubclassLevel(item);\n    window.GAS.log.d('subclassLevel', subclassLevel);\n    if (!subclassLevel) return;\n\n    // Find the level group where we should insert the subclass\n    const levelHeader = html.find(`[data-level=\"${subclassLevel}\"]`);\n    window.GAS.log.d('levelHeader', levelHeader);\n    if (!levelHeader.length) return;\n\n    // Find the items-list that's a sibling of the level header\n    const itemsList = html.find(`[data-level=\"${subclassLevel}\"] + .item-list`);\n    // const itemsList = levelHeader.siblings('.item-list');\n    window.GAS.log.d('itemsList', itemsList);\n    if (!itemsList.length) return;\n\n    // Create the subclass advancement entry\n    const subclassEntry = `\n      <li class=\"advancement-item item flexrow\" data-advancement-type=\"subclass\">\n        <div class=\"item-name flexrow\">\n          <div class=\"item-image\" style=\"background-image: url('systems/dnd5e/icons/svg/items/subclass.svg')\"></div>\n          <h4>Subclass</h4>\n        </div>\n        <div class=\"item-controls flexrow\">\n          <a class=\"item-control item-edit\" title=\"Edit Subclass Level\"><i class=\"fas fa-edit\"></i></a>\n          <a class=\"item-control item-delete\" title=\"Delete Subclass Level\"><i class=\"fas fa-trash\"></i></a>\n        </div>\n      </li>\n    `;\n    itemsList.append(subclassEntry);\n\n    // Add edit handler\n    html.find('[data-advancement-type=\"subclass\"] .item-edit').on('click', async () => {\n      await this._showLevelDialog(item);\n    });\n\n    // Add delete handler\n    html.find('[data-advancement-type=\"subclass\"] .item-delete').on('click', async () => {\n      const confirmed = await Dialog.confirm({\n        title: \"Delete Subclass Level\",\n        content: `<p>Are you sure you want to remove the subclass level from ${item.name}?</p>`,\n        defaultYes: false\n      });\n      \n      if (confirmed) {\n        await item.unsetFlag(MODULE_ID, 'subclassLevel');\n        app.render();\n      }\n    });\n  }\n\n  /**\n   * Get the stored subclass level\n   * @param {Item} item - The class item\n   * @returns {number|null} The stored level or null\n   */\n  static getSubclassLevel(item) {\n    return item.getFlag(MODULE_ID, 'subclassLevel') || null;\n  }\n\n  /**\n   * Set the subclass level\n   * @param {Item} item - The class item\n   * @param {number} level - The level to set\n   */\n  static async setSubclassLevel(item, level) {\n    await item.setFlag(MODULE_ID, 'subclassLevel', level);\n  }\n} ","import '../styles/Variables.scss'; // Import any styles as this includes them in the build.\nimport '../styles/init.sass'; // Import any styles as this includes them in the build.\n\nimport WelcomeApplication from './app/WelcomeApplication.js';\nimport PCApplication from './app/PCApplication.js';\nimport dnd5e from \"~/config/systems/dnd5e.json\";\nimport packageJson from '../package.json';\nimport manifestJson from '../module.json';\n\nimport { MODULE_ID } from '~/src/helpers/constants';\nimport { userHasRightPermissions, log, getAllPackIdsFromAllSettings, getDnd5eVersion, getDndRulesVersion } from '~/src/helpers/Utility'\nimport { tabs, activeTab, dropItemRegistry, isLevelUp, levelUpTabs, preAdvancementSelections, race, background, characterClass, characterSubClass } from '~/src/stores/index.js';\nimport { initLevelup } from '~/src/plugins/level-up';\nimport { get } from 'svelte/store';\nimport { registerSettings } from '~/src/settings';\nimport DonationTrackerGameSettings from '~/src/settings/DonationTrackerGameSettings.js';\nimport SubclassLevelPlugin from './plugins/subclass-level';\n\nwindow.GAS = {};\n\nHooks.once(\"init\", (app, html, data) => {\n\n  window.GAS.log = log;\n  log.level = log.DEBUG;\n  \n  window.GAS.dnd5eVersion = getDnd5eVersion();\n  window.GAS.dnd5eRules = getDndRulesVersion();\n\n  //- these settings are for debugging / testing purposes only\n\n  if(packageJson.debug) {\n    window.GAS.debug = true;\n    window.GAS.race = \"Compendium.dnd-players-handbook.origins.Item.phbspOrc00000000\"\n    window.GAS.background = \"Compendium.dnd-players-handbook.origins.Item.phbbgFarmer00000\"\n    window.GAS.characterClass = \"Compendium.dnd-players-handbook.classes.Item.phbwlkWarlock000\"\n    // window.GAS.characterSubClass = \"Compendium.dnd-players-handbook.classes.Item.phbwlkCelestialP\"\n  }\n  \n  window.GAS.log.i(`Starting System ${MODULE_ID}`);\n  window.GAS.log.i('Initialising for foundry version:', game.version);\n  window.GAS.log.i('Initialising module manifest version:', manifestJson.version);\n  window.GAS.log.i('Initialising module package version:', packageJson.version);\n  window.GAS.log.i('Initialising game module version:', game.modules.get(MODULE_ID).version);\n\n  initLevelup();\n  registerSettings(app);\n  \n  if(game.settings.get(MODULE_ID, 'debug')) {\n    log.level = log.VERBOSE;\n  } else {\n    log.level = log.INFO;\n  }\n\n  if(game.settings.get(MODULE_ID, 'debug.hooks')) {\n    CONFIG.debug.hooks = true;\n  }\n\n  window.GAS.log.d('Debug mode is', game.settings.get(MODULE_ID, 'debug') ? 'enabled' : 'disabled');\n  window.GAS.log.d('Debug extended mode is', game.settings.get(MODULE_ID, 'debug.hooks') ? 'enabled' : 'disabled');\n  window.GAS.log.d('Log level: ',log.level)\n\n  Hooks.call(\"gas.initIsComplete\");\n\n});\n\nHooks.once(\"ready\", (app, html, data) => {\n  \n  if (!game.settings.get(MODULE_ID, 'dontShowWelcome')) {\n    new WelcomeApplication().render(true, { focus: true });\n  }\n\n  if (game.settings.get(MODULE_ID, 'forceDnd5eLevelUpAutomation')) {\n    game.settings.set(\"dnd5e\", \"disableAdvancements\", false);\n  }\n\n  Hooks.call(\"gas.readyIsComplete\");\n\n  // Initialize the subclass level plugin\n  SubclassLevelPlugin.init();\n});\n\n//- donation-tracker integration\nHooks.once(\"membershipReady\", (app, html, data) => {\n  const dtExists = game.modules.get('donation-tracker')?.active\n  window.GAS.log.i('Checking for Donation Tracker module: ', dtExists ? 'Found' : 'Not Found');\n  if (dtExists) {\n    DonationTrackerGameSettings.init();\n  }\n});\n\nconst isAppElementAppended = (appId) => {\n  const panelElement = $('#foundryvtt-actor-studio-pc-sheet .window-content main section.a .tab-content .content');\n  return panelElement.find(`[data-appid=\"${appId}\"]`).length > 0;\n};\n\nconst generateUniqueId = () => `app-${Math.random().toString(36).substr(2, 9)}`;\n\n\n// Helper to check if we're on first step based on version\nconst isFirstAdvancementStep = (app) => {\n  const version = window.GAS.dnd5eVersion;\n  if (version >= 4) {\n    return app.steps?.[0] === app.step;\n  }\n  return app._stepIndex === 0;\n};\n\n// Helper to get advancement element based on version\nconst getAdvancementElement = (currentProcess) => {\n  const version = window.GAS.dnd5eVersion;\n  const rawElement = currentProcess.app?.element;\n  \n  if (version >= 4) {\n    // v4 passes raw DOM element\n    return $(rawElement);\n  }\n  // v3 already provides jQuery element\n  return rawElement;\n};\n\nHooks.on('renderAdvancementManager', async (app, html, data) => {\n\n  // Check if the Actor Studio application is currently open by looking for its specific DOM element\n  const currentProcess = get(dropItemRegistry.currentProcess)\n  \n  if (currentProcess.id && isFirstAdvancementStep(app)) {\n    const appElement = $('#foundryvtt-actor-studio-pc-sheet');\n    if (appElement.length) {\n      const disableAdvancementCapture = game.settings.get(MODULE_ID, 'disableAdvancementCapture') || false;\n      if(disableAdvancementCapture) {\n        return;\n      }\n      dropItemRegistry.updateCurrentProcess({ app, html, data })\n      const advancementsTab = get(isLevelUp) ? get(levelUpTabs).find(x => x.id === \"advancements\") : get(tabs).find(x => x.id === \"advancements\");\n      // console.log('advancementsTab', advancementsTab)\n      if (advancementsTab) {\n        Hooks.call(\"gas.captureAdvancement\");\n      } else {\n        window.GAS.log.i('Advancements tab not found, adding it to the tabs')\n        // @why,- add the advancements tab to the store, which will trigger it's component to render, which will in turn call gas.captureAdvancement\n        if(get(isLevelUp)) {\n          await levelUpTabs.update(t => [...t, { label: \"Advancements\", id: \"advancements\", component: \"Advancements\" }]);\n        } else {\n          await tabs.update(t => [...t, { label: \"Advancements\", id: \"advancements\", component: \"Advancements\" }]);\n        }\n        activeTab.set('advancements');\n      }\n    }\n  }\n});\n\n\nHooks.on('renderCompendium', (pack, html, data ) => {\n  window.GAS.log.d('renderCompendium', pack);\n})\nHooks.on(\"renderFolderConfig\", (app, html, folder) => {\n  window.GAS.log.d(\"folder\", folder);\n})\nHooks.on(\"renderActorSheet\", (app, html, actor) => {\n  window.GAS.log.d(\"actor\", actor);\n})\nHooks.on(\"renderItemSheet5e\", (app, html, item) => {\n  window.GAS.log.d(\"item\", item);\n})\n\nHooks.on(\"dropActorSheetData\", (actor, type, info) => {\n  // window.GAS.log.d(\"dropActorSheetData\", actor, type, info);\n})\n\nHooks.on('gas.captureAdvancement', (initial = false) => {\n  window.GAS.log.d('[gas.captureAdvancement] initial', initial)\n  const skipDomMove = game.settings.get(MODULE_ID, 'disableAdvancementCapture');\n  if (skipDomMove) {\n    window.GAS.log.d('[gas.captureAdvancement] Dev setting: Skipping advancement DOM movement');\n    return;\n  }\n\n\n  const currentProcess = get(dropItemRegistry.currentProcess);\n  window.GAS.log.d('[gas.captureAdvancement] currentProcess in gas.captureAdvancement:', {\n    id: currentProcess?.id,\n    app: currentProcess?.app,\n    element: currentProcess?.app?.element\n  });\n\n  // Cache initial state if this is the first capture\n  if (initial) {\n    preAdvancementSelections.set({\n      race: get(race),\n      background: get(background),\n      class: get(characterClass),\n      subclass: get(characterSubClass)\n    });\n    window.GAS.log.d('[gas.captureAdvancement] Caching initial advancement state', get(preAdvancementSelections));\n  }\n\n  if (currentProcess) {\n    const panelElement = $('#foundryvtt-actor-studio-pc-sheet .window-content main section.a .tab-content .content');\n    if (!isAppElementAppended(currentProcess.id)) {\n      window.GAS.log.d(currentProcess);\n      const element = getAdvancementElement(currentProcess);\n      if(element) {\n        element.removeClass(); // Remove all classes from the root element itself\n        element.addClass('gas-advancements')\n        element.attr('gas-appid', currentProcess.id);\n        element.appendTo(panelElement);\n      }\n    }\n  }\n  \n});\n\nHooks.on('dnd5e.preAdvancementManagerComplete', (...args) => {\n  // window.GAS.log.d(args)\n})\n\nHooks.on('renderSettingsConfig', (app, html, context) => {\n  if (game.user.isGM) {\n    $(`section[data-tab=\"${MODULE_ID}\"] h2`, html).after(`<h3>${game.i18n.localize('GAS.Setting.World')}</h3>`)\n  }\n  $(`[data-setting-id=\"${MODULE_ID}.allowManualInput\"]`, html).before(`<h4 class=\"gas-settings-h4\">${game.i18n.localize('GAS.Setting.AbilityScoreEntryOptions')}</h4>`)\n  $(`[data-setting-id=\"${MODULE_ID}.enableLevelUp\"]`, html).before(`<h4 class=\"gas-settings-h4\">${game.i18n.localize('GAS.Setting.LevelingOptions')}</h4>`)\n  $(`[data-setting-id=\"${MODULE_ID}.showButtonInSideBar\"]`, html).before(`<h4 class=\"gas-settings-h4\">${game.i18n.localize('GAS.Setting.DisplayOptions')}</h4>`)\n  $(`[data-setting-id=\"${MODULE_ID}.debug\"]`, html).before(`<h4 class=\"gas-settings-h4\">${game.i18n.localize('GAS.Setting.DebugOptions')}</h4>`)\n  $(`[data-setting-id=\"${MODULE_ID}.dontShowWelcome\"]`, html).before(`<h3>${game.i18n.localize('GAS.Setting.User')}</h3>`)\n})\n\nHooks.on('renderCompendium', async (app, html, data) => {\n  // window.GAS.log.d('renderCompendium', app, html, data)\n  if (game.modules.get('donation-tracker')?.active && game.settings.get(MODULE_ID, 'enable-donation-tracker')) {\n\n    const pack = app.collection\n    if (pack.locked) return\n    if (pack.metadata.path.includes('systems/')) return\n    const allPacks = getAllPackIdsFromAllSettings();\n    const actionButtons = html.find('.action-buttons')\n    const DTaction = actionButtons.find('button.gas-add-dt-folders');\n\n    // don't render the button if it already exists\n    if (DTaction.length) {\n      window.GAS.log.i('Donation Tracker button already exists, skipping')\n      return;\n    }\n\n    // if the metadata.id of the pack matches any of the packs that are mapped to Actor Studio Sources, then render the DT folders button\n    if (!allPacks.includes(pack.metadata.id)) {\n      // @why commented out? Apparently these were annoying\n      // window.GAS.log.i('Pack is not mapped to Actor Studio Sources, skipping')\n      // ui.notifications.warn(`Pack ${pack.metadata.label} is not mapped to Actor Studio Sources. Please map it to enable the Donation Tracker feature.`)\n      return;\n    }\n\n    // if the DTfolders already exist, don't render the button\n    const membershipRanks = game.membership.RANKS\n    for (const [rank, value] of Object.entries(membershipRanks)) {\n      if (value === -1) continue;\n      const folder = pack.folders.find(f => f.name === game.settings.get(MODULE_ID, `donation-tracker-rank-${rank}`))\n      if (folder) {\n        window.GAS.log.i('Donation Tracker folders already exist, skipping')\n        return;\n      }\n    }\n\n    async function addDonationTrackerFolders() {\n      const membershipRanks = game.membership.RANKS\n      for (const [rank, value] of Object.entries(membershipRanks)) {\n        if (value === -1) continue;\n        const folder = pack.folders.find(f => f.name === game.settings.get(MODULE_ID, `donation-tracker-rank-${rank}`))\n        if (!folder) {\n          // pack.folders.createDocument({ name: game.settings.get(MODULE_ID, `donation-tracker-rank-${rank}`), type: \"JournalEntry\" });\n          const folderCls = getDocumentClass(\"Folder\");\n          // const myFolder = await folderCls.create({ name: game.settings.get(MODULE_ID, `donation-tracker-rank-${rank}`), type: \"JournalEntry\" });\n          await folderCls.create({ name: game.settings.get(MODULE_ID, `donation-tracker-rank-${rank}`), type: \"Item\" }, { pack: pack.metadata.id });\n        }\n      }\n    }\n\n    const button = $(`<button role=\"button\" class=\"gas-add-dt-folders\" datatitle=\"${game.i18n.localize('GAS.Setting.DonationTrackerAction.Name')}\" data-tooltip=\"${game.i18n.localize('GAS.Setting.DonationTrackerAction.Hint')}\"><i class=\"fas fa-folder\"></i> ${game.i18n.localize('GAS.Setting.DonationTrackerAction.Name')}</button>`);\n    button.on('click', addDonationTrackerFolders)\n    actionButtons.append(button)\n\n  }\n\n})\n\nfunction isActorTypeValid(actorTypes, type) {\n  // Check if the type exists as a key in the object and its value is true\n  return actorTypes.hasOwnProperty(type) && actorTypes[type] === true;\n}\n\nfunction getActorStudioButton(buttonId, text=false) {\n  const gasButton = $(\n    `<button id=\"${buttonId}\" type=\"button\" class='dialog-button default bright' data-gas_start style=\"display: flex; align-items: center; justify-content: center; background-color: white; padding: 0; margin: 0; height: 40px;\">\n      <img src=\"modules/${MODULE_ID}/assets/actor-studio-blue.svg\" alt=\"Actor Studio\" style=\"height: 100%; max-height: 30px; border: none; width: auto;\">\n      ${text ? `<span>${text}</span>` : ''}\n    </button>`,\n  );\n  return gasButton;\n}\n\n\n\nHooks.on('renderApplication', (app, html, data) => {\n  const createNewActorLocalized = game.i18n.format('DOCUMENT.Create', { type: game.i18n.localize('DOCUMENT.Actor') });\n  if (app.title === createNewActorLocalized) {\n    window.GAS.log.i('Adding Create New Actor button');\n\n    const select = $('select', html);\n    const systemActorDocumentTypes = dnd5e.actorTypes\n\n    function updateButton() {\n      const actorType = select.val();\n      // window.GAS.log.d('actorType', actorType)\n      if (isActorTypeValid(systemActorDocumentTypes, actorType)) {\n        // disable the button if the setting is enabled\n        const hideOtherButtons = !game.user.isGM && game.settings.get(MODULE_ID, 'disableOtherActorCreationOptionsForPlayers');\n        const nonGmsCanOnlyCreatePCs = !game.user.isGM && game.settings.get(MODULE_ID, 'nonGmsCanOnlyCreatePCs');\n        if (!game.user.isGM && hideOtherButtons) {\n          $('.dialog-buttons .dialog-button:not(#gas-dialog-button)', html).hide();\n        }\n        if (!game.user.isGM && nonGmsCanOnlyCreatePCs) {\n          $('#document-create .form-fields select', html).prop('disabled', true);\n        }\n        if (!$('#gas-dialog-button', html).length) {\n          const $gasButton = getActorStudioButton('gas-dialog-button');\n          // window.GAS.log.d('html', html)\n          $('button', html).last().after($gasButton); // Ensure button is added after the Create New Actor confirm button\n\n          const handleButtonClick = function (e) {\n            if (e.type === 'mousedown' || e.type === 'keydown' && (e.key === 'Enter' || e.key === ' ')) {\n              if (userHasRightPermissions()) {\n                //- check if Actor Studio is already open\n                if (document.querySelector('#foundryvtt-actor-studio-pc-sheet')) {\n                  ui.notifications.error('Actor Studio is already open and busy with another task. Please close the existing Actor Studio window before attempting to opening a new one.');\n                  return;\n                }\n                const actorName = $('input', html).val();\n                const folderName = $('select[name=\"folder\"]', html).val();\n                try {\n                  new PCApplication(new Actor.implementation({ name: actorName, folder: folderName, type: actorType })).render(true, { focus: true });\n                  app.close();\n                } catch (error) {\n                  ui.notifications.error(error.message);\n                }\n              }\n            }\n          };\n\n          $gasButton.on('mousedown', handleButtonClick);\n          $gasButton.on('keydown', handleButtonClick);\n\n        }\n        \n      } else {\n        $('#gas-dialog-button', html).remove(); // Remove button if actorType is not \"character\"\n      }\n    }\n\n    // Initial check\n    updateButton();\n\n    // Update button when the select value changes\n    select.on('change', updateButton);\n  }\n})\n\n\nHooks.on('renderActorDirectory', async (app) => {\n  if (!game.modules.get(MODULE_ID)?.active) return;\n  // Add Actor Studio button to the sidebar\n  if (app.constructor.name === \"ActorDirectory\") {\n    if (!game.settings.get(MODULE_ID, 'showButtonInSideBar')) return;\n    if ($('#gas-sidebar-button').length) return;\n    const $gasButton = getActorStudioButton('gas-sidebar-button');\n    $(app._element).find('header.directory-header').append($gasButton);\n\n    const handleButtonClick = function (e) {\n      if (e.type === 'mousedown' || e.type === 'keydown' && (e.key === 'Enter' || e.key === ' ')) {\n        if (userHasRightPermissions()) {\n          try {\n            // new PCApplication(new Actor.implementation({ name: actorName, flags: { [MODULE_ID]: {folderName}}, type: actorType })).render(true, { focus: true });\n            new PCApplication(new Actor.implementation({ name: game.user.name, folder: '', type: 'character' })).render(true, { focus: true });\n            app.close();\n          } catch (error) {\n            ui.notifications.error(error.message);\n          }\n        }\n      }\n    };\n\n    $gasButton.on('mousedown', handleButtonClick);\n    $gasButton.on('keydown', handleButtonClick);\n\n  }\n})"],"names":["url","now","element","text","type","hash","delay","detach","linear","tick","create_each_block","insert","update","instance","create_fragment","debug","document","version","cssVariables","styles","ctx","background","id","dispatch","set","subscribe","run","children","localize","get","duration","ease","interpolate","options","parent","active","create_if_block","s_REGEX_HTML","title","draggable","booleanStore","dragDefault","storeResizing","create_if_block_1","preventDefault","autoClose","pointBuyLimit","tabs","enableEquipmentSelection","storeDefinitions.tabs","storeDefinitions.levelUpTabs","storeDefinitions.pointBuyLimit","storeDefinitions.race","storeDefinitions.subRace","storeDefinitions.characterClass","storeDefinitions.characterSubClass","storeDefinitions.background","storeDefinitions.abilities","storeDefinitions.spells","storeDefinitions.isLevelUp","storeDefinitions.pointBuyScoreTotal","storeDefinitions.abilityRolls","storeDefinitions.isStandardArrayValues","storeDefinitions.newLevelValueForExistingClass","storeDefinitions.classUuidForLevelUp","storeDefinitions.level","storeDefinitions.activeTab","storeDefinitions.selectedMultiClassUUID","storeDefinitions.isActorCreated","storeDefinitions.actorInGame","storeDefinitions.abilityGenerationMethod","storeDefinitions.subClassesForClass","storeDefinitions.levelUpClassObject","storeDefinitions.activeRowClassKey","storeDefinitions.levelUpSubClassObject","storeDefinitions.levelUpCombinedHtml","storeDefinitions.goldRoll","storeDefinitions.readOnlyTabs","storeDefinitions.levelUpRichHTML","storeDefinitions.levelUpRichSubClassHTML","illuminatedDescription","log","level","isLevelUp","isNewMultiClass","adv","characterClass","MODULE_ID","dontShowWelcome","promise","writable","activeTab","initialTabs","race","characterSubClass","abilityGenerationMethod","totalSteps","pointBuyScoreTotal","abilityRolls","isStandardArrayValues","progress","equipmentSelections","goldRoll","areGoldChoicesComplete","completedGroups","create_if_block_4","create_if_block_2","$classUuidForLevelUp","$subClassUuidForLevelUp","$actorInGame","actor","illuminatedHeight","illuminatedWidth","DonationTrackerGameSettings","disableAdvancementCapture","membershipRanks","actorTypes","nonGmsCanOnlyCreatePCs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,74,75,76,77,78,79,80,81,82,83,84,85,91]}