{"version":3,"file":"Trait-CwVSyLPF.js","sources":["../src/components/molecules/dnd5e/Advancements/Trait.svelte"],"sourcesContent":["<script>\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import { log } from \"~/src/helpers/Utility\";\n\n  export let advancement = null;\n\n  let grants = [];\n\n\n  const morphPool = (p) => {\n    const arr = Array.from(p)\n    const nuarr = arr.map(x => {\n      const split = x.split(\":\")\n      // log.d('split', split);\n      if(split[2]) {\n        return {all: false, label: split[2], value: split[1]};\n      }\n      return { all: true, label: split[0], value: split[1]};\n    });\n    return nuarr\n  }\n\n  const fromAll = (p) => {\n    return p.some(x => {\n      return x.all\n    })\n  }\n\n  let choices = advancement.configuration.choices.map(c => {\n    return {\n      count: c.count,\n      pool: morphPool(c.pool)\n    }\n  });\n\n\n  $: if (advancement.configuration.grants.size > 0) {\n    grants = Array.from(advancement.configuration.grants).map((grant) => {\n      const split = grant.split(\":\");\n      // log.d('Trait split', split);\n      switch (split[0]) {\n        case \"languages\":\n        case \"tool\":\n          return { label: split[2], value: split[1] };\n          \n        case \"saves\":\n          return { label: game.system.config.abilities[split[1]].label, value: null };\n\n        case \"armor\":\n          return {label: game.system.config.armorProficiencies[split[1]], value: null};\n          \n\n        case \"weapon\":\n          return {label: game.system.config.weaponProficiencies[split[1]], value: null};\n          \n        default:\n          return {\n            label: game.system.config[split[0]][split[1]].label,\n            value: \"\",\n          };\n      }\n    });\n  }\n</script>\n\n<template lang=\"pug\">\n  .advancement.mt-sm(data-type=\"{advancement.type}\")\n    +if(\"grants.length > 0\")\n      +each(\"grants as grant\")\n        .flexrow\n          .flex.left {grant.label}\n          +if(\"grant.value\")\n            .flex0.right.badge.inset {grant.value}\n  \n    +if(\"choices.length > 0\")\n      +each(\"choices as choice\")\n        +if(\"!fromAll(choice.pool)\")\n          .flexrow\n            .flex \n              span Choose \n              span {choice.count} \n              span of the following:\n          +each(\"choice.pool as pool\")\n            .flexrow\n              .flex.left {pool.label}\n              +if(\"pool.value\")\n                .flex0.right.badge.inset {pool.value}\n          +else()\n            .flexrow\n              .flex \n                span Choose \n                span {choice.count} \n              .flex0.badge.inset.right any\n  \n  </template>\n  \n  <style lang=\"sass\">\n  @import \"../../../../../styles/Mixins.scss\"\n  .advancement\n    @include inset\n\n    .badge.inset\n      @include badge()\n      @include inset\n\n</style>"],"names":["ctx"],"mappings":"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"}