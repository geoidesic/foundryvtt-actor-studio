{"version":3,"file":"ExistingAbilities-DRQE6jBQ.js","sources":["../src/components/organisms/dnd5e/Tabs/ExistingAbilities.svelte"],"sourcesContent":["<script>\n  import SvelteSelect from \"svelte-select\";\n  import {\n    extractMapIteratorObjectProperties,\n    getPackFolders,\n    getRules\n  } from \"~/src/helpers/Utility\";\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import Tabs from \"~/src/components/molecules/Tabs.svelte\";\n  import ManualEntry from \"~/src/components/molecules/dnd5e/AbilityEntry/ManualEntry.svelte\";\n  import PointBuy from \"~/src/components/molecules/dnd5e/AbilityEntry/PointBuy.svelte\";\n  import Roll from \"~/src/components/molecules/dnd5e/AbilityEntry/Roll.svelte\";\n  import StandardArray from \"~/src/components/molecules/dnd5e/AbilityEntry/StandardArray.svelte\";\n  import IconSelect from \"~/src/components/atoms/select/IconSelect.svelte\";\n  import { localize as t } from \"~/src/helpers/Utility\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import { abilityGenerationMethod } from \"~/src/stores/index\";\n\n  const actor = getContext(\"#doc\");\n  const ruleConfig = {\n    journalId: \"0AGfrwZRzSG0vNKb\",\n    pageId: \"yuSwUFIjK31Mr3DI\",\n  };\n  const importAdvancements = async () => {\n    // window.GAS.log.d('options',options)\n    for (const option of options) {\n      try {\n        const module = await import(`~/src/components/molecules/dnd5e/AbilityEntry/${option.type}.svelte`);\n        advancementComponents[option.type] = module.default;\n      } catch (error) {\n        log.e(`Failed to load component for ${option.type}:`, error);\n      }\n    }\n  };\n\n  const selectHandler = async (option) => {\n    active = option.value;\n    $abilityGenerationMethod = option.value;\n    importAdvancements();\n  };\n  \n\n  let rules = \"\", active, value, placeHolder = 'Ability Generation Method'\n\n  $: actorObject = $actor.toObject();\n  $: advancementComponents = {};\n  $: richHTML = rules?.content || \"\";\n  $: options = [\n    {\n      value: 1,\n      label: t('Tabs.Abilities.ManualEntry'),\n      type: \"ManualEntry\",\n      setting: game.settings.get(MODULE_ID, \"allowManualInput\"),\n    },\n    {\n      value: 2,\n      label: t('Tabs.Abilities.PointBuy'),\n      type: \"PointBuy\",\n      setting: game.settings.get(MODULE_ID, \"allowPointBuy\"),\n    },\n    {\n      value: 3,\n      label: t('Tabs.Abilities.Roll'),\n      type: \"Roll\",\n      setting: game.settings.get(MODULE_ID, \"allowRolling\"),\n    },\n    {\n      value: 4,\n      label: t('Tabs.Abilities.StandardArray'),\n      type: \"StandardArray\",\n      setting: game.settings.get(MODULE_ID, \"allowStandardArray\"),\n    },\n  ].filter((obj) => obj.setting);\n\n  $: if (options.length === 1) {\n    // value = options[0];\n    $abilityGenerationMethod = options[0].value;\n  }\n\n  $: abilityModule = $abilityGenerationMethod ? advancementComponents[options.find(option => option.value === $abilityGenerationMethod).type] : null;\n\n  onMount(async () => {\n    rules = await getRules(ruleConfig);\n    await tick();\n    await importAdvancements();\n  });\n\n</script>\n\n<template lang=\"pug\">\n  div.content\n    .flexrow\n      .flex2.pr-sm.col-a\n        h3.left {t('Tabs.Abilities.HowCalculated')}\n        +if(\"options.length > 1\")\n          IconSelect.icon-select({options} {active} {placeHolder} handler=\"{selectHandler}\" id=\"ability-generation-method-select\" bind:value=\"{$abilityGenerationMethod}\" )\n          +else()\n            ol.properties-list\n              +each(\"options as option\")\n                li {option.label}\n        +if(\"$abilityGenerationMethod\")\n          svelte:component(this=\"{abilityModule}\")\n      .flex0.border-right.right-border-gradient-mask \n      .flex3.left.pl-md.scroll.col-b {@html richHTML}\n</template>\n\n<style lang=\"sass\" scoped>\n@import \"../../../../../styles/Mixins.sass\"\n.content \n  @include staticOptions\n\n  :global(.icon-select)\n    position: relative\n</style>\n"],"names":["ctx","t"],"mappings":"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"}