{"version":3,"file":"IconSelect-DRh--Pgu.js","sources":["../src/components/atoms/select/IconSelect.svelte"],"sourcesContent":["<script>\n\n  /**\n   * @author: Noel da Costa\n   * @copyright: Arc Digital Limited 11-05-2024\n   * @license: https://creativecommons.org/licenses/by/4.0/\n   */\n\n    import { onMount, onDestroy } from \"svelte\";\n    import { truncate } from \"~/src/helpers/Utility.js\";\n    import { MODULE_ID } from \"~/src/helpers/constants\";\n    import { enrichHTML } from \"~/src/helpers/Utility.js\";\n    import { derived } from 'svelte/store';\n\n    export let options = []; //- {value, label, link, icon || img}\n    export let value = \"\"; //- the currently selected uuid\n    export let disabled = false;\n    export let handler = void 0;\n    export let shrinkIfNoIcon = true;\n    export let placeHolder = false;\n    export let id = void 0;\n    export let noImg = false;\n    export let truncateWidth = 20;\n    export let enableEnrichment = false;\n    export let searchable = true\n    // groupBy: false (no grouping) or a string path into the option object (e.g. \"packLabel\" or \"pack.name\")\n    export let groupBy = false;\n\n    let isOpen = false;\n    let searchInput;\n    let highlightedIndex = -1; // Track the currently highlighted option index\n    \n    export let handleSelect = (option) => {\n      if (handler) {\n        if (handler(option.value)) {\n          value = option.value;\n        }\n      } else {\n        console.warn('You need to pass a click handler in')\n      }\n      toggleDropdown();\n    };\n\n    const showPackLabelInSelect = game.settings.get(MODULE_ID, 'showPackLabelInSelect');\n\n    function getLabel(option) {\n      if (!groupBy && showPackLabelInSelect && option.packLabel) {\n        return `[${option.packLabel}] ${option.label}`;\n      }\n      return option.label;\n    }\n\n    function toggleDropdown() {\n          if (disabled) {\n            isOpen = false;\n            return;\n          }\n          isOpen = !isOpen;\n          // reset search and highlight when opening dropdown\n          if (isOpen) {\n            searchTerm = '';\n            highlightedIndex = -1;\n          }\n    }\n\n    function handleKeydown(event) {\n      // Only handle keyboard navigation when dropdown is open\n      if (!isOpen) {\n        if (event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowDown') {\n          event.preventDefault();\n          toggleDropdown();\n        }\n        return;\n      }\n\n      // Handle keyboard navigation when dropdown is open\n      switch (event.key) {\n        case 'ArrowDown':\n          event.preventDefault();\n          if (navigableOptions.length > 0) {\n            highlightedIndex = highlightedIndex >= 0 ? highlightedIndex + 1 : 0;\n          }\n          break;\n        case 'ArrowUp':\n            event.preventDefault();\n            if (navigableOptions.length > 0) {\n              highlightedIndex = highlightedIndex > 0 ? highlightedIndex - 1 : navigableOptions.length - 1;\n            }\n            break;\n        case 'Enter':\n          event.preventDefault();\n          if (highlightedIndex >= 0 && highlightedIndex < navigableOptions.length) {\n            handleSelect(navigableOptions[highlightedIndex]);\n          }\n          break;\n        case 'Escape':\n          isOpen = false;\n          highlightedIndex = -1;\n          break;\n        case 'Tab':\n          // Allow tab to work normally for accessibility\n          isOpen = false;\n          highlightedIndex = -1;\n          break;\n      }\n    }\n\n\n    function isClickOutsideContainer(event, containerElement) {\n      try {\n        const targetElement = event.target;\n\n        // Check if the target element is the container itself\n        if (targetElement === containerElement) {\n          return false;\n        }\n\n        // Guard: if containerElement is null, treat as click outside\n        if (!containerElement) {\n          console.warn('[IconSelect] containerElement is null, treating as click outside');\n          return true;\n        }\n\n        // Guard: if targetElement is null, treat as click outside\n        if (!targetElement) {\n          console.warn('[IconSelect] targetElement is null, treating as click outside');\n          return true;\n        }\n\n        // Check if the target element is inside the container\n        return !containerElement.contains(targetElement);\n      } catch (error) {\n        console.error('[IconSelect] Error in isClickOutsideContainer:', error);\n        return true; // Treat as click outside on error\n      }\n    }\n\n    function handleClickOutside(event) {\n      try {\n        const containerElement = document.getElementById(id);\n        if (!containerElement) {\n          console.warn('[IconSelect] Element with id', id, 'not found, treating as click outside');\n          // Element not found, treat as click outside and close\n          isOpen = false;\n          return;\n        }\n        const isClickOutside = isClickOutsideContainer(event, containerElement);\n        if(isClickOutside) {\n          isOpen = false;\n        }\n      } catch (error) {\n        console.error('[IconSelect] Error in handleClickOutside:', error);\n        isOpen = false; // Close on error\n      }\n    }\n\n\n    onMount(() => {\n      window.addEventListener(\"click\", handleClickOutside);\n    });\n    onDestroy(() => {\n      window.removeEventListener(\"click\", handleClickOutside);\n    });\n\n\n    let textOnly = (option) => {\n      return option.icon || option.img ? false : true;\n    }\n    // Autocomplete state\n    let searchTerm = '';\n    let debounceTimeout;\n    // Debounced input handler\n    function handleInput(event) {\n      clearTimeout(debounceTimeout);\n      const val = event.target.value;\n      debounceTimeout = setTimeout(() => {\n        searchTerm = val;\n      }, 300);\n    }\n\n    let filteredOptions = [];\n    // Filter options by search term\n    $: filteredOptions = options.filter(option =>\n      option.label.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    // Helper to get nested value by a path like \"pack.name\"\n    function getValueAtPath(obj, path) {\n      if (!path || !obj) return undefined;\n      return path.split('.').reduce((acc, part) => (acc && acc[part] !== undefined) ? acc[part] : undefined, obj);\n    }\n\n    // Resolve group key. `groupBy` may be a string path or an array of string paths.\n    function getGroupKey(option, groupBySpec) {\n      if (!groupBySpec) return undefined;\n      if (Array.isArray(groupBySpec)) {\n        const parts = groupBySpec.map(p => {\n          const v = getValueAtPath(option, p);\n          return (v === undefined || v === null) ? '' : String(v).trim();\n        }).filter(Boolean);\n        return parts.length ? parts.join(' ') : undefined;\n      }\n      const v = getValueAtPath(option, groupBySpec);\n      return (v === undefined || v === null) ? undefined : String(v);\n    }\n\n    // Grouping state\n    let groupedOptions = {};\n    let groupedOptionKeys = [];\n\n    // When groupBy is provided, build groupedOptions and keys sorted alphabetically\n    $: if (groupBy) {\n      const map = {};\n      for (const opt of filteredOptions) {\n        const raw = getGroupKey(opt, groupBy);\n        const key = (raw === undefined || raw === null || raw === '') ? 'Other' : String(raw);\n        if (!map[key]) map[key] = [];\n        map[key].push(opt);\n      }\n      // sort options in each group\n      for (const k of Object.keys(map)) {\n        map[k].sort((a, b) => (a.label || '').localeCompare(b.label || ''));\n      }\n      const keys = Object.keys(map).sort((a, b) => a.localeCompare(b));\n      const sorted = {};\n      for (const k of keys) sorted[k] = map[k];\n      groupedOptions = sorted;\n      groupedOptionKeys = keys;\n    } else {\n      groupedOptions = {};\n      groupedOptionKeys = [];\n    }\n\n    // Flattened display list used by template. When grouping is enabled, insert group header objects\n    let displayOptions = [];\n    $: {\n      if (groupBy && groupedOptionKeys.length > 0) {\n        const arr = [];\n        for (const key of groupedOptionKeys) {\n          arr.push({ __group: true, label: key });\n          for (const opt of groupedOptions[key]) arr.push(opt);\n        }\n        displayOptions = arr;\n      } else {\n        displayOptions = filteredOptions.slice();\n      }\n    }\n\n    // Reset highlighted index when navigable options change\n    $: if (navigableOptions.length > 0 && highlightedIndex >= navigableOptions.length) {\n      highlightedIndex = navigableOptions.length - 1;\n    } else if (navigableOptions.length === 0) {\n      highlightedIndex = -1;\n    }\n\n    // Create a filtered list that excludes the currently selected option for keyboard navigation\n    $: navigableOptions = filteredOptions.filter(option => option?.value !== value);\n\n    // Focus search input when dropdown opens\n    $: if (isOpen && searchInput) {\n      searchInput.focus();\n    }\n\n  </script>\n\n<template lang=\"pug\">\ndiv.custom-select({...$$restProps} id=\"{id}\" role=\"combobox\" aria-expanded=\"{isOpen}\" aria-haspopup=\"listbox\" aria-controls=\"options-list\" tabindex=\"0\" on:keydown=\"{handleKeydown}\")\n  div.selected-option(on:click=\"{toggleDropdown}\" role=\"button\" aria-expanded=\"{isOpen}\" aria-haspopup=\"listbox\" tabindex=\"0\" class:selected=\"{isOpen}\" class:disabled=\"{disabled}\")\n    +if(\"placeHolder && !value\")\n      div.placeholder {placeHolder}\n    +each(\"options as option, index\")\n      +if(\"option && option?.value === value\")\n        +if(\"!noImg && !textOnly(option) && shrinkIfNoIcon\")\n          div.option-icon(class=\"{option.img ? option.img : ''}\")\n            +if(\"option.icon != undefined\")\n              i(class=\"{option.icon}\")\n              +else\n                img(src=\"{option.img}\" alt=\"{option.label}\")\n        div.option-label {truncate(option.label, truncateWidth)}\n    div.chevron-icon\n      i(class=\"fas fa-chevron-down\")\n\n  +if(\"isOpen\")\n    div.options-dropdown.dropshadow(id=\"options-list\" role=\"listbox\")\n      // search input for filtering options\n      +if(\"searchable\")\n        input.search-input(type=\"text\" value=\"{searchTerm}\" on:input=\"{handleInput}\" placeholder=\"Search...\" bind:this=\"{searchInput}\")\n\n      // Grouped rendering\n      +if(\"groupBy\")\n        +each(\"groupedOptionKeys as groupName\")\n          div.group-label {groupName}\n          +each(\"groupedOptions[groupName] as option\")\n            +if(\"option && option?.value !== value\")\n              div.option(\n                role=\"option\"\n                on:click|stopPropagation|preventDefault!=\"{handleSelect(option)}\"\n                tabindex=\"0\"\n                class:highlighted=\"{navigableOptions.indexOf(option) === highlightedIndex}\"\n                data-index=\"{navigableOptions.indexOf(option)}\"\n                aria-selected=\"{navigableOptions.indexOf(option) === highlightedIndex}\"\n              )\n                +if(\"!textOnly(option) && shrinkIfNoIcon\")\n                  div.option-icon(class=\"{option.img ? option.img : ''}\")\n                    +if(\"option.icon != undefined\")\n                      i(class=\"{option.icon}\")\n                      +else\n                        img(src=\"{option.img}\" alt=\"{option.label}\")\n                +if(\"enableEnrichment\")\n                  div.option-label {@html option.enrichedLabel}\n                  +else\n                    div.option-label {getLabel(option)}\n        +else\n          +each(\"filteredOptions as option\")\n            +if(\"option && option?.value !== value\")\n              div.option(\n                role=\"option\"\n                on:click|stopPropagation|preventDefault!=\"{handleSelect(option)}\"\n                tabindex=\"0\"\n                class:highlighted=\"{navigableOptions.indexOf(option) === highlightedIndex}\"\n                data-index=\"{navigableOptions.indexOf(option)}\"\n                aria-selected=\"{navigableOptions.indexOf(option) === highlightedIndex}\"\n              )\n                +if(\"!textOnly(option) && shrinkIfNoIcon\")\n                  div.option-icon(class=\"{option.img ? option.img : ''}\")\n                    +if(\"option.icon != undefined\")\n                      i(class=\"{option.icon}\")\n                      +else\n                        img(src=\"{option.img}\" alt=\"{option.label}\")\n                +if(\"enableEnrichment\")\n                  div.option-label {@html option.enrichedLabel}\n                  +else\n                    div.option-label {getLabel(option)}\n</template>\n\n<style lang=\"sass\">\n\n\n.custom-select\n  position: relative\n  display: inline-block\n  min-height: var(--tjs-select-height, 32px)\n\n.selected-option\n  display: flex\n  align-items: left\n  padding: 0.35rem 1.75rem 0.35rem 0.15rem\n  font-size: 0.875rem\n  font-weight: 400\n  color: #212529\n  background-color: #fff\n  border: 1px solid #ced4da\n  border-radius: 0.25rem\n  cursor: pointer\n  white-space: nowrap\n  overflow: hidden\n  text-overflow: ellipsis\n  position: relative\n\nimg\n  position: absolute\n  top: -3px\n  left: 0\n  width: 24px\n  height: 24px\n  vertical-align: middle\n\n.selected-option\n  &.disabled\n    cursor: not-allowed\n    opacity: 0.6\n    .chevron-icon\n      i\n        color: var(--color-text-disabled)\n        \n  &:selected\n    display: none\n    border-color: #80bdff\n  \n        \n.option-icon\n  position: relative\n  min-width: 24px\n  margin-right: 8px\n\n.option-label\n  flex-grow: 1\n  text-align: left\n\n.chevron-icon\n  position: absolute\n  right: 0.5rem\n\n.options-dropdown\n  position: absolute\n  top: calc(100% + 4px)\n  left: 0\n  width: 100%\n  background-color: #fff\n  border: 1px solid #ced4da\n  border-radius: 0.25rem\n  overflow: hidden\n  z-index: 999\n\n.group-label\n  margin-top: 1rem\n  color: var(--gas-color-text)\n  align-items: left\n  text-align: left\n  padding: 4px\n  font-weight: bold\n  font-size: 2rem\n  font-family: var(--dnd5e-font-modesto)\n.option\n  display: flex\n  align-items: left\n  padding: 4px\n  font-size: 0.875rem\n  font-weight: 400\n  line-height: 1.5\n  color: #212529\n  cursor: pointer\n\n  &:hover\n    background-color: var(--select-option-highlight-color)\n\n  &.highlighted\n    background-color: rgba(0, 0, 0, 0.3)\n    color: var(--gas-color-text)\n\n    &:hover\n      background-color: rgba(0, 0, 0, 0.4)\n\n.search-input\n  width: calc(100% - 8px)\n  padding: 4px 4px 4px 8px\n  font-size: 0.875rem\n  border: 1px solid #ced4da\n  border-radius: 0.25rem\n  margin: 4px\n  box-shadow: none\n  transition: border-color 0.2s\n\n  &:focus\n    outline: none\n    border-color: #80bdff\n\n:global(.theme-dark) .option.highlighted\n  background-color: rgba(255, 255, 255, 0.3)\n  color: var(--gas-color-text)\n\n  &:hover\n    background-color: rgba(255, 255, 255, 0.4)\n</style>\n"],"names":["ctx","v"],"mappings":"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"}