{"version":3,"file":"StandardArray-dd2shMG8.js","sources":["../src/components/molecules/dnd5e/AbilityEntry/StandardArray.svelte"],"sourcesContent":["<script>\n  import { Timing } from \"@typhonjs-fvtt/runtime/util\";\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import {\n    abilities,\n    race,\n    isStandardArrayValues,\n    abilityRolls,\n  } from \"~/src/stores/index\";\n  import { MODULE_ID, STANDARD_ARRAY } from \"~/src/helpers/constants\";\n  import { dnd5eModCalc, localize as t } from \"~/src/helpers/Utility\";\n\n  const doc = getContext(\"#doc\");\n  const updateDebounce = Timing.debounce(updateValue, 100);\n  const options = { system: { abilities: {} } };\n\n  // Track last reset document to ensure reset runs only once per actor/document\n  let lastResetDocName = null;\n\n  async function updateValue(attr, value) {\n    // move the value to the next ability according to the direction of the arrow\n    const abilities = Object.keys(STANDARD_ARRAY);\n    // get index of attr from abilities\n    const index = abilities.indexOf(attr);\n    switch (value) {\n      case -1:\n        // move the value to the next ability according to the direction of the arrow\n        if (index < abilities.length - 1) {\n          const nextAbility = abilities[index + 1];\n          const options = {\n            system: {\n              abilities: {\n                [attr]: { value: $doc.system.abilities[nextAbility].value },\n                [nextAbility]: { value: $doc.system.abilities[attr].value },\n              },\n            },\n          };\n          await $doc.updateSource(options);\n          if ($doc.render) {\n            $doc.render();\n          }\n        }\n        break;\n\n      default:\n        // move the value to the next ability according to the direction of the arrow\n        if (index > 0) {\n          const nextAbility = abilities[index - 1];\n          const options = {\n            system: {\n              abilities: {\n                [attr]: { value: $doc.system.abilities[nextAbility].value },\n                [nextAbility]: { value: $doc.system.abilities[attr].value },\n              },\n            },\n          };\n          await $doc.updateSource(options);\n          if ($doc.render) {\n            $doc.render();\n          }\n        }\n        break;\n    }\n  }\n\n  //- sets the values to the standard array\n  async function reset() {\n    $abilityRolls = {}; //- reset any existin rolls if that option is enabled\n    Object.keys(STANDARD_ARRAY).forEach((key) => {\n      options.system.abilities[key] = {\n        value: STANDARD_ARRAY[key],\n      };\n    });\n\n    await $doc.updateSource(options);\n    await tick();\n\n    if ($doc.render) {\n      $doc.render();\n    }\n  }\n\n  //- checks if the values match the standard array requirements\n  function arraysMatch(array1, array2) {\n    if (array1.length !== array2.length) return false;\n\n    const sortedArray1 = array1.slice().sort((a, b) => a - b);\n    const sortedArray2 = array2.slice().sort((a, b) => a - b);\n\n    return sortedArray1.every((value, index) => value === sortedArray2[index]);\n  }\n\n  $: systemAbilities = game.system.config.abilities;\n  $: systemAbilitiesArray = Object.entries(systemAbilities);\n  $: abilityAdvancements =\n    $race?.advancement?.byType?.AbilityScoreImprovement?.[0].configuration\n      ?.fixed;\n  $: actorAbilities = Object.entries($doc.system.abilities);\n  $: actorAbilityValues = Object.entries($doc.system.abilities).map(\n    (x) => x[1].value,\n  );\n  $: allTens = actorAbilityValues.reduce((acc, curr) => {\n    // window.GAS.log.p(\"curr\", curr);\n    if (curr == 10) {\n      acc = true;\n    }\n    return acc;\n  }, false);\n\n  // Compute if current abilities match the standard array (order-insensitive)\n  $: isStandardArrayCurrent = arraysMatch(\n    Object.values(STANDARD_ARRAY),\n    Object.keys(STANDARD_ARRAY).map((key) => $doc.system.abilities[key]?.value),\n  );\n\n\n  // Update the isStandardArrayValues store for progress tracking\n  $: isStandardArrayValues.set(isStandardArrayCurrent);\n\n\n  $: if (\n    $doc?.system?.abilities &&\n    $doc?.name &&\n    lastResetDocName !== $doc.name &&\n    Object.keys(STANDARD_ARRAY).every(key => $doc.system.abilities[key]?.value === 10) &&\n    !arraysMatch(\n      Object.keys(STANDARD_ARRAY).map(key => $doc.system.abilities[key]?.value),\n      Object.values(STANDARD_ARRAY)\n    )\n  ) {\n    // window.GAS.log.d('StandardArray: Triggering reset for doc name:', $doc.name);\n    lastResetDocName = $doc.name;\n    reset();\n  }\n\n  onMount(async () => {\n    if (allTens) {\n      reset();\n    }\n  });\n</script>\n\n<template lang=\"pug\">\n  .attribute-entry.mt-sm\n    table\n      thead\n        tr\n          th.ability Ability\n          th.center Base\n          +if(\"window.GAS.dnd5eRules == '2014'\")\n            th.center Origin\n          th.center Score\n          th.center Modifier\n      tbody\n        +each(\"systemAbilitiesArray as ability, index\")\n          tr\n            td.ability {ability[1].label}\n            td.center.relative\n              input.left.small.mainscore(disabled type=\"number\" value=\"{$doc.system.abilities[ability[0]]?.value}\")\n              .controls.ml-lg\n                .up.chevron\n                  +if(\"index != 0\")\n                    i.fas.fa-chevron-up(alt=\"{t('AltText.MoveUp')}\" on:click!=\"{updateDebounce(ability[0], 1)}\")\n                .down.chevron\n                  +if(\"index != 5\")\n                    i.fas.fa-chevron-down(alt=\"{t('AltText.MoveDown')}\" on:click!=\"{updateDebounce(ability[0], -1)}\")\n            +if(\"window.GAS.dnd5eRules == '2014'\")\n              td.center\n                +if(\"abilityAdvancements?.[ability[0]] > 0\")\n                  span +\n                span {abilityAdvancements?.[ability[0]] || 0}\n            td.center {(Number(abilityAdvancements?.[ability[0]]) || 0) + Number($doc.system.abilities[ability[0]]?.value || 0)}\n            td.center\n              +if(\"dnd5eModCalc(Number($doc.system.abilities[ability[0]]?.value) + (Number(abilityAdvancements?.[ability[0]]) || 0)) > 0\")\n                span +\n              span {dnd5eModCalc(Number($doc.system.abilities[ability[0]]?.value) + (Number(abilityAdvancements?.[ability[0]]) || 0))}\n        +if(\"!isStandardArrayCurrent\")\n          tr\n            td(colspan=\"5\")\n              hr\n              button.btn.btn-primary(on:click=\"{reset}\") Reset to Standard Array\n</template>\n\n<style lang=\"sass\">\n  table\n    width: 100%\n    border-collapse: separate\n   \n  th\n    padding: 0.1rem 0.5rem\n    text-align: left\n    font-family: var(--dnd5e-font-modesto)\n    &.center\n      text-align: center\n    &.ability\n      width: 25%\n   \n  td\n    text-align: left\n    &.center\n      text-align: center\n    &.ability\n      width: 25%\n \n  .green\n    color: green\n  .red\n    color: red\n  .mainscore\n    min-width: 33px\n    max-width: 33px\n  .controls\n    .chevron\n      position: absolute\n      font-size: 0.75rem\n      left: 70%\n      cursor: pointer\n      background-color: rgba(0, 0, 0, 0.1)\n      &:hover\n        background-color: rgba(140, 90, 0, 0.2)\n      &.up\n        padding: 1px 3px 0px 3px\n        top: 8px\n      &.down\n        padding: 1px 3px 0px 3px\n        bottom: 8px\n\n\n</style>\n"],"names":["t","ctx","attr","options"],"mappings":"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"}