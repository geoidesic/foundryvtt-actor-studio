{"version":3,"file":"AbilityScoreImprovement-DjxBUZZq.js","sources":["../src/components/molecules/dnd5e/Advancements/AbilityScoreImprovement.svelte"],"sourcesContent":["<script>\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import { log } from \"~/src/helpers/Utility\";\n  \n  export let advancement = null;\n  \n  $: improvements = [];\n  \n  function getNonZeroFixedValues(obj) {\n    if (!obj || typeof obj !== 'object' || !obj.fixed) {\n      throw new Error('Invalid input object');\n    }\n\n    const fixed = obj.fixed;\n    const nonZeroFixedArray = [];\n\n    for (const key in fixed) {\n      if (fixed.hasOwnProperty(key) && fixed[key] !== 0) {\n        nonZeroFixedArray.push({ label: key, value: fixed[key] });\n      }\n    }\n\n    return nonZeroFixedArray;\n  }\n\n  $: fixed = getNonZeroFixedValues(advancement.configuration)\n  $: points = advancement.configuration.points\n\n  $: if(fixed) {\n    improvements = fixed;\n  }\n  $: if(points)(\n    improvements = [\n      { label: 'Points', value: Number(points) }\n    ]\n  )\n\n  onMount(async () => {\n    // log.d('advancement', advancement)\n  });\n  \n</script>\n\n<template lang=\"pug\">\n.advancement.mt-sm(data-type=\"{advancement.type}\")\n  +each(\"improvements as improvement\")\n    .flexrow\n      .flex.left\n        span.label {improvement.label}\n      .flex.right\n        +if(\"Number(improvement.value) > 0\")\n          span +\n        span.value {improvement.value}\n</template>\n\n<style lang=\"sass\">\n  @import \"../../../../../styles/Mixins.scss\"\n  .advancement\n    @include inset\n\n</style>"],"names":["ctx","fixed"],"mappings":";;;;;;;;;;;;;;AA2C4P,aAAc,QAAA,MAAA,MAAA;AAAA;;;;;;;;;;;;AAAxG,MAAA;AAAA;AAAA,IAAA,OAAY,QAAK;AAAA;;;AAA2C,MAAA,UAAA;AAAA;AAAA,IAAO,IAAY,CAAA,EAAA;AAAA,EAAK,IAAI;;AAA0C,MAAA;AAAA;AAAA,IAAA,OAAY,QAAK;AAAA;;;;;;;;;;;;;;;;;;;;AAApN,aAAwO,QAAA,MAAA,MAAA;AAAnN,aAA2E,MAAA,IAAA;AAApD,aAA8C,MAAA,KAAA;;AAAM,aAAkI,MAAA,IAAA;;AAApD,aAA8C,MAAA,KAAA;;;;AAA3J,UAAA;AAAA,MAAA,KAAA,cAAA;AAAA,MAAAA,QAAY,QAAK,IAAA,UAAA,IAAA,QAAA;AAA2C,UAAA;AAAA,MAAA,EAAA,WAAA;AAAA;AAAA,QAAOA,KAAY,CAAA,EAAA;AAAA,MAAK,IAAI;;;;;;;;;;;;AAA0C,UAAA;AAAA,MAAA,KAAA,cAAA;AAAA,MAAAA,QAAY,QAAK,IAAA,UAAA,IAAA,QAAA;AAAA;;;;;;;;;;;;;;IAAhP,IAAY,CAAA;AAAA,EAAA;;iCAAjB,QAAI,KAAA,GAAA;;;;;;;;;;AAAzB,WAAA,KAAA,aAAA;AAAA,MAAA,OAAY,IAAI;AAAA;;AAA3D,aAAqV,QAAA,KAAA,MAAA;;;;;;;;;;;;UAAhRA,KAAY,CAAA;AAAA,QAAA;;mCAAjB,QAAI,KAAA,GAAA;;;;;;;;;;;;;wCAAJ;AAAA;AAArB,UAAA;AAAA,MAAA,KAAA,yBAAA;AAAA,MAAAA,QAAY,OAAI;;;;;;;;;;;;;;;;;;AAvC9C,MAAA,EAAA,cAAc,KAAI,IAAA;AAIpB,WAAA,sBAAsB,KAAG;AAC3B,QAAA,CAAA,cAAc,QAAQ,YAAa,CAAA,IAAI,OAAK;AACrC,YAAA,IAAA,MAAM,sBAAsB;AAAA;UAGlCC,SAAQ,IAAI;UACZ,oBAAiB,CAAA;AAEZ,eAAA,OAAOA,QAAK;UACjBA,OAAM,eAAe,GAAG,KAAKA,OAAM,GAAG,MAAM,GAAC;AAC/C,0BAAkB,KAAI,EAAG,OAAO,KAAK,OAAOA,OAAM,GAAG,EAAA,CAAA;AAAA;;WAIlD;AAAA;AAeT,UAAO,YAAA;AAAA;;;;;;;sBAZJ,QAAQ,sBAAsB,YAAY,aAAa,CAAA;AAAA;;;sBACvD,SAAS,YAAY,cAAc,MAAA;AAAA;;;UAEhC,OAAK;AACT,qBAAA,GAAA,eAAe,KAAK;AAAA;;;;AAEhB,UAAA,OACJ,cAAA,GAAA,eACI,CAAA,EAAA,OAAO,UAAU,OAAO,OAAO,MAAM,EAAA,CAAA,CAAA;AAAA;;kBA3BxC,eAAY,CAAA,CAAA;;;;;;;;;"}