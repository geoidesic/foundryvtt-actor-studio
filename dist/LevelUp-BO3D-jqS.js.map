{"version":3,"file":"LevelUp-BO3D-jqS.js","sources":["../node_modules/svelte/src/runtime/internal/globals.js","../src/components/atoms/button/LevelUpButtonInnards.svelte","../src/components/organisms/dnd5e/Tabs/LevelUp.svelte"],"sourcesContent":["/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","<script>\n  import { onMount } from \"svelte\";\n  import { activeClass, characterClass, newClassLevel, isMultiClass } from \"~/src/stores/index\";\n  import { ucfirst } from \"~/src/helpers/Utility.js\";\n\n  export let src = false;\n  export let level = false;\n  export let classKey = false;\n\n  const cancelLevelUp = () => {\n    $activeClass = false;\n    $characterClass = false\n    $newClassLevel = false\n  };\n\n  onMount(() => {\n    // window.GAS.log.d(\"mounted LevelUpButtonInnards\", src, level, classKey);\n  });\n</script>\n\n<template lang=\"pug\">\n+if(\"src && level && classKey\")\n  .flexrow.class-row\n    .flex0.icon\n      img(height=\"40\" width=\"40\" src=\"{src}\")\n    .flex3.flexrow\n      .flex3.left.pa-xs {ucfirst(classKey)} \n      .flex0.right.mr-sm\n        .lozenge.pa-xs {level} \n      .flex0.right.pr-md.py-xs\n        +if(\"!$activeClass\")\n          i(class=\"fas fa-plus\")\n        +if(\"$activeClass && !$isMultiClass\")\n          i(class=\"fas fa-times\" on:click!=\"{cancelLevelUp}\")\n</template>\n\n<style lang=\"sass\">\n  @import '../../../../styles/Mixins.scss'\n  .lozenge\n    background-color: var(--dnd5e-color-gold)\n    color: #000\n    border-radius: var(--border-radius)\n    box-shadow: 0 0 6px var(--dnd5e-shadow-45)\n  .gold-button-disabled\n    @include gold-button(null)\n  .gold-button\n    @include gold-button  \n  .class-row\n    padding: 0\n    justify-items: center\n    align-items: center\n  .icon\n    min-width: 40px\n</style>\n","<script>\n  import SvelteSelect from \"svelte-select\";\n  import IconSelect from \"~/src/components/atoms/select/IconSelect.svelte\";\n  import {\n    extractMapIteratorObjectProperties,\n    extractItemsFromPacksSync,\n    getFoldersFromMultiplePacks,\n    getPacksFromSettings,\n    ucfirst\n  } from \"~/src/helpers/Utility.js\";\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import {\n    characterClass,\n    characterSubClass,\n    level,\n    tabs,\n    newClassLevel,\n    activeClass,\n    isMultiClass\n  } from \"~/src/stores/index\";\n  import { localize } from \"#runtime/svelte/helper\";\n  import { TJSSelect } from \"@typhonjs-fvtt/svelte-standard/component\";\n  import DonationTracker from \"~/src/plugins/donation-tracker\"\n  import LevelUpExisting from \"~/src/components/organisms/dnd5e/Tabs/LevelUpExistingClassLeftCol.svelte\";\n  import LevelUpButtonInnards from \"~/src/components/atoms/button/LevelUpButtonInnards.svelte\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import StartingEquipment from \"~/src/components/molecules/dnd5e/StartingEquipment.svelte\";\n  import StartingGold from \"~/src/components/molecules/dnd5e/StartingGold.svelte\";\n\n  let richHTML = \"\",\n    richSubClassHTML = \"\",\n    activeClassKey = null,\n    activeSubClassUUID = null,\n    classValue = null,\n    subclassValue = null,\n    subClassesIndex,\n    subclasses,\n    classesPlaceholder = \"Classes\",\n    subclassesPlaceholder = \"Subclasses\",\n    packs = getPacksFromSettings(\"classes\"),\n    subClassesPack = game.packs.get('dnd5e.subclasses'),\n    subClassesPacks = getPacksFromSettings(\"subclasses\"),\n    classAdvancementArrayFiltered = [],\n    subClassAdvancementArrayFiltered = [],\n    mappedClassIndex = extractItemsFromPacksSync(packs, [\n      \"name->label\",\n      \"img\",\n      \"type\",\n      \"folder\",\n      \"uuid->value\",\n      \"_id\",\n    ])\n  ;\n\n  const levelOptions = [];\n  for (let i = 1; i <= 20; i++) {\n    levelOptions.push({ label: \"Level \" + i, value: i });\n  }\n\n  window.GAS.log.d('$characterClass', $characterClass)\n\n  const selectStyles = {\n    // width: '50%',\n    // display: 'inline-block',\n    // fontSize: 'smaller',\n  };\n\n  const actor = getContext(\"#doc\");\n\n  /** IMPORTERS */\n  const importClassAdvancements = async () => {\n    if (!classAdvancementArrayFiltered?.length) return;\n    for (const classAdvancement of classAdvancementArrayFiltered) {\n      try {\n        const module = await import(`~/src/components/molecules/dnd5e/Advancements/${classAdvancement.type}.svelte`);\n        classAdvancementComponents[classAdvancement.type] = module.default;\n      } catch (error) {\n        window.GAS.log.e(`Failed to load component for ${classAdvancement.type}:`, error);\n      }\n    }\n  };\n\n  const importSubClassAdvancements = async () => {\n    if (!subClassAdvancementArrayFiltered?.length) return;\n    for (const subClassAdvancement of subClassAdvancementArrayFiltered) {\n      try {\n        const module = await import(`~/src/components/molecules/dnd5e/Advancements/${subClassAdvancement.type}.svelte`);\n        await tick();\n        subClassAdvancementComponents[subClassAdvancement.type] = module.default;\n      } catch (error) {\n        window.GAS.log.e(`Failed to load component for ${subClassAdvancement.type}:`, error);\n      }\n    }\n  };\n\n  /** DECORATORS */\n  function existingClassesCssClassForRow(classKey) {\n    let css = getCharacterClass(classKey).uuid === $activeClass ? 'active' : ''\n    if($isMultiClass) {\n      css += ' gold-button-disabled'\n    } else {\n        css += ' gold-button'\n    }\n    return css\n  }\n\n  /** FILTERS */\n  const getFilteredSubclassIndex = async () => {\n    const filteredSubClassIndex = [];\n    for(let subClassesPack of subClassesPacks) {\n      let index = await subClassesPack.getIndex({\n        fields: [\"system.classIdentifier\"],\n      });\n      if(!subClassesPack) continue\n      let mappedSubClassIndex =  extractMapIteratorObjectProperties(index.entries(), [\n          \"name->label\",\n          \"img\",\n          \"type\",\n          \"folder\",\n          \"uuid->value\",\n          \"system\",\n          \"_id\",\n        ])\n\n      filteredSubClassIndex.push(mappedSubClassIndex?.filter(\n        (x) => x.system.classIdentifier == $characterClass.system.identifier,\n      ))\n    }\n    const output = filteredSubClassIndex.flat().sort((a, b) => a.label.localeCompare(b.label));\n    return output\n  };\n\n  /** GETTERS */\n  /**\n   * Retrieves class data for a specific class from the actor's classes\n   * @param {string} classKey - The key identifier for the character class\n   * @returns {Object} The class data object from the actor\n   */\n  const getCharacterClass = (classKey) => {\n    return $actor._classes[classKey];\n  }\n\n  /**\n   * Gets the current or new level for a specific class\n   * @param {string} classKey - The key identifier for the character class\n   * @returns {number} The current or new level value\n   */\n  function getClassCurrentLevel(classKey) {\n    const level = getCharacterClass(classKey)?.system?.levels\n    return level\n  }\n\n  /** EVENT HANDLERS */\n  /**\n   * Handles the selection of a new class for multiclassing\n   * Resets subclass state and updates available options\n   * @param {string} option - The UUID of the selected class\n   */\n  const selectClassHandler = async (option) => {\n    activeSubClassUUID = null;\n    $characterSubClass = null;\n    subclassValue = null;\n    richSubClassHTML = \"\";\n    $characterClass = await fromUuid(option);\n    $activeClass = option;\n    \n    await tick();\n    subClassesIndex = await getFilteredSubclassIndex();\n    await tick();\n    importClassAdvancements();\n    richHTML = await TextEditor.enrichHTML(html);\n  };\n\n  async function selectSubClassHandler(option) {\n    activeSubClassUUID = option.value ?? option ?? null;\n    $characterSubClass = await fromUuid(activeSubClassUUID);\n    subclassValue = activeSubClassUUID;\n    window.GAS.log.d('activeSubClassUUID', activeSubClassUUID)\n    await tick();\n    importSubClassAdvancements();\n    richSubClassHTML = await TextEditor.enrichHTML(\n      $characterSubClass?.system?.description?.value,\n    );\n  }\n\n  /**\n   * Handles cancellation of multiclass selection\n   * Resets all class and subclass related state\n   */\n  const clickCancelMulticlass = async () => {\n    $activeClass = false\n    classValue = null\n    activeSubClassUUID = null\n    activeClassKey = null\n    $characterClass = false\n  }\n\n  /**\n   * Handles adding a level to an existing class\n   * Updates state and loads relevant class advancements\n   * @param {string} classKey - The key identifier for the character class\n   */\n  async function clickAddLevel(classKey) {\n    if ($isMultiClass) return;\n    const isUnset = Boolean($activeClass) && Boolean($newClassLevel);\n    if(isUnset) return;\n\n    const classObj = getCharacterClass(classKey)\n\n    const uuid = classObj.uuid\n\n    activeSubClassUUID = null;\n    $characterSubClass = null;\n    subclassValue = null;\n    subClassAdvancementArrayFiltered = [];\n    richSubClassHTML = \"\";\n    $characterClass = await fromUuid(uuid);\n    $activeClass = uuid;\n    activeClassKey = classKey\n    \n    /**\n     * Updates the newClassLevel store with the next level for this class\n     * Calculates new level by adding 1 to the character's current level in this class\n     * Example: If a Fighter is level 3, this sets newClassLevel to 4\n     */\n    newClassLevel.set(classObj?.system?.levels + 1);\n    \n    await tick();\n    subClassesIndex = await getFilteredSubclassIndex();\n    await tick();\n    importClassAdvancements();\n    richHTML = await TextEditor.enrichHTML(html);\n  }\n\n  /** REACTIVE DECLARATIONS */\n  /**\n   * Reactive declarations for managing component state and UI updates\n   * These automatically recompute when their dependencies change\n   */\n  $: html = $characterClass?.system?.description.value || \"\";\n  $: subClassProp = activeSubClassUUID;\n  $: classProp = $activeClass;\n  $: combinedHtml = richHTML + (richSubClassHTML ? `<h1>${localize('GAS.SubClass')}</h1>` + richSubClassHTML : '');\n  $: classAdvancementComponents = {};\n  $: subClassAdvancementComponents = {};\n\n  /**\n   * Manages subclass list state\n   * Flattens and sorts subclass data when subClassesIndex changes\n   */\n  $: if(subClassesIndex?.length) {\n    subclasses = subClassesIndex.flat().sort((a, b) => a.label.localeCompare(b.label));\n  } else {\n    subclasses = [];\n  }\n\n\n\n  /**\n   * Filters class advancements for the current level\n   * Maps advancement data to include IDs for component rendering\n   */\n   $: if ($characterClass?.system?.advancement.length) {\n    classAdvancementArrayFiltered = $characterClass?.advancement?.byLevel[$newClassLevel]\n  } else {\n    classAdvancementArrayFiltered = [];\n  }\n  /**\n   * Filters subclass advancements for the current level\n   * Maps advancement data to include IDs for component rendering\n   */\n  $: if ($characterSubClass?.system?.advancement.length) {\n    // window.GAS.log.d('characterSubClass', $characterSubClass)\n    subClassAdvancementArrayFiltered =\n      $characterSubClass.advancement?.byLevel[$newClassLevel]\n  } else {\n    subClassAdvancementArrayFiltered = [];\n  }\n\n\n  /**\n   * Tracks existing class data and levels\n   * Updates when classes or active class changes\n   */\n  $: classKeys = Object.keys($actor._classes);\n  $: classLevels = classKeys.map((classKey) => {\n    const classObj = $actor._classes[classKey]\n    return classObj.uuid == $activeClass ? classObj.system.levels + 1 : classObj.system.levels;\n  });\n\n  $: activeClassObj = $actor._classes[activeClassKey];\n  $: activeClassIndex = classKeys.indexOf(activeClassKey);\n  $: activeClassLevel = classLevels[activeClassIndex];\n\n  $: subClassLevel = $characterClass.getFlag ? $characterClass.getFlag(MODULE_ID, \"subclassLevel\") : false;\n  $: classGetsSubclassThisLevel = subClassLevel && subClassLevel === $level;\n\n\n  /**\n   * Filters available classes for multiclassing\n   * Excludes classes the character already has and sorts alphabetically\n   */\n  $: filteredClassIndex = mappedClassIndex\n      .filter((i) => {\n        return i.type == 'class' \n        //- @why: don't include classes that are already in the character\n        !classKeys.includes(i.label.toLowerCase())\n      })\n      .sort((a, b) => a.label.localeCompare(b.label))\n\n  onMount(async () => {\n    if ($characterClass) {\n      classValue = $characterClass.uuid;\n      await tick();\n      importClassAdvancements();\n      richHTML = await TextEditor.enrichHTML(html);\n      subClassesIndex = await getFilteredSubclassIndex();\n    }\n    if ($characterSubClass) {\n      subclassValue = $characterSubClass.uuid;\n      await tick();\n      importSubClassAdvancements();\n      richSubClassHTML = await TextEditor.enrichHTML(\n        $characterSubClass?.system?.description?.value,\n      );\n    }\n    // window.GAS.log.d(\"classKeys\", classKeys);\n    // window.GAS.log.d(typeof classKeys);\n    // window.GAS.log.d(classKeys.length);\n    // window.GAS.log.d(Array.isArray(classKeys.length));\n    // window.GAS.log.d(getCharacterClass('fighter'))\n    // window.GAS.log.d($characterClass)\n  });\n\n\n\n</script>\n\n<template lang=\"pug\">\n  .content\n    //- pre isMultiClass {$isMultiClass}\n    //- pre activeClass {$activeClass}\n    //- pre characterClass {$characterClass}\n    //- pre newClassLevel {$newClassLevel}\n    .flexrow\n      .flex2.pr-sm.col-a\n        h1.flex Existing Classes\n        +each(\"classKeys as classKey, index\")\n          //- pre {$actor._classes[classKey]?.system?.levels}\n          //- pre classKey {classKey}\n          //- pre getCharacterClass(classKey) {getCharacterClass(classKey).system.img}\n          //- pre getCharacterClass(classKey)?.system?.img {getCharacterClass(classKey)?.system?.img}\n          +if(\"$activeClass && !$newClassLevel\")\n            .class-row(class=\"{existingClassesCssClassForRow(classKey)}\")\n              LevelUpButtonInnards(src=\"{getCharacterClass(classKey)?.img}\" level=\"{classLevels[index]}\" classKey=\"{classKey}\")  \n            +else()\n              .class-row(class=\"{existingClassesCssClassForRow(classKey)}\" role=\"button\" aria-role=\"button\" aria-label=\"{localize('GAS.LevelUp.Button')+' '+classKey}\" data-tooltip=\"{localize('GAS.LevelUp.Button')+' '+classKey}\" on:mousedown!=\"{clickAddLevel(classKey)}\")\n                LevelUpButtonInnards(src=\"{getCharacterClass(classKey)?.img}\" level=\"{classLevels[index]}\" classKey=\"{classKey}\")  \n        +if(\"!$newClassLevel\") \n          h1.flexrow.mt-md\n            .flex2.left Add Multiclass\n            +if(\"classProp\")\n              .flex0\n                button.pr-none.mt-sm.gold-button(type=\"button\" role=\"button\" on:mousedown=\"{clickCancelMulticlass}\")\n                  i(class=\"fas fa-times\")\n          IconSelect.icon-select( options=\"{filteredClassIndex}\" placeHolder=\"{classesPlaceholder}\" handler=\"{selectClassHandler}\" id=\"characterClass-select\" bind:value=\"{classValue}\" )\n        \n        +if(\"$characterClass\")\n          +if(\"activeClassObj\")\n            h3.left.mt-md Advancements\n            LevelUpExisting(classAdvancementArrayFiltered=\"{classAdvancementArrayFiltered}\" level=\"{$newClassLevel}\")\n            \n            // Add the StartingEquipment component here\n            +if(\"$characterClass?.system?.startingEquipment?.length\")\n              StartingEquipment(startingEquipment=\"{$characterClass.system.startingEquipment}\")\n              StartingGold(characterClass=\"{$characterClass}\")\n          +if(\"subclasses.length && classGetsSubclassThisLevel\")\n            ul.icon-list\n              li.left \n                .flexrow\n                  .flex0.relative.image\n                    img.icon(src=\"{`modules/${MODULE_ID}/assets/dnd5e/3.x/subclass.svg`}\" alt=\"Subclass\")\n                  .flex2 {localize('GAS.SubClass')}\n                  \n            h3.left.mt-md Subclass\n            IconSelect.icon-select(active=\"{subClassProp}\" options=\"{subclasses}\"  placeHolder=\"{subclassesPlaceholder}\" handler=\"{selectSubClassHandler}\" id=\"subClass-select\" bind:value=\"{subclassValue}\" truncateWidth=\"17\" )\n        \n        +if(\"subclasses.length\")\n          +if(\"$characterSubClass && $characterClass\")\n            //- h3.left.mt-sm Description\n            //- .left.sub-class(bind:innerHTML=\"{richSubClassHTML}\" contenteditable)\n            +if(\"subClassAdvancementArrayFiltered\")\n              h3.left.mt-sm.flexrow\n                .flex {localize('GAS.Tabs.Classes.SubClass')} {localize('GAS.Advancements')}\n                .flex0.div.badge.right.inset.ml-sm.mb-xs {localize('GAS.Level')} {$newClassLevel}\n              ul.icon-list\n                +if(\"!subClassAdvancementArrayFiltered.length && !classGetsSubclassThisLevel\")\n                  li.left {localize('GAS.NoAdvancements')}\n                  +else()\n                    +each(\"subClassAdvancementArrayFiltered as advancement\")\n                      //- @todo: this should be broken out into components for each advancement.type\n                      li.left(data-type=\"{advancement.type}\")\n                        .flexrow(data-tooltip=\"{advancement.configuration?.hint || null}\" data-tooltip-locked=\"true\" data-tooltip-class=\"gas-tooltip dnd5e2 dnd5e-tooltip item-tooltip\" )\n                          .flex0.relative.image\n                            img.icon(src=\"{advancement.icon}\" alt=\"{advancement.title}\")\n                          .flex2 {advancement.title}\n                        .flexrow\n                          svelte:component(this=\"{subClassAdvancementComponents[advancement.type]}\" advancement=\"{advancement}\")\n  \n      .flex0.border-right.right-border-gradient-mask \n      .flex3.left.pl-md.scroll.col-b {@html combinedHtml}\n  \n  </template>\n\n<style lang=\"sass\">\n  @import \"../../../../../styles/Mixins.scss\"\n  .content \n    @include staticOptions\n    .badge.inset\n      @include badge()\n      @include inset\n      display: inline-block\n      white-space: nowrap\n\n\n  :global(.icon-select)\n    position: relative\n\n\n  .gold-button-disabled\n    @include gold-button(null)\n  .gold-button\n    @include gold-button  \n\n  .sub-class\n    height: 100px\n    overflow-y: auto\n    padding: 0.5rem\n    border: 1px solid transparent\n    border-radius: 5px\n    box-shadow: 0 0 5px rgba(0,0,0,0.3) inset\n    font-size: smaller\n\n</style>\n"],"names":["create_if_block_2","create_if_block_1","ctx","create_if_block","level"],"mappings":"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","x_google_ignoreList":[0]}