{"version":3,"file":"Equipment-Bbfn5-3G.js","sources":["../src/components/molecules/dnd5e/v4/StartingGold.svelte","../src/components/molecules/dnd5e/EquipmentSelection/EquipmentSelectorDetail.svelte","../src/components/molecules/dnd5e/EquipmentSelection/PlannedInventory.svelte","../src/components/organisms/dnd5e/Tabs/Equipment.svelte"],"sourcesContent":["<script>\n  import { localize } from \"#runtime/svelte/helper\";\n  import { getContext, onDestroy, onMount } from \"svelte\";\n  import { goldRoll } from \"~/src/stores/storeDefinitions\";\n  import { goldChoices, setClassGoldChoice, setBackgroundGoldChoice, clearGoldChoices } from \"~/src/stores/goldChoices\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import { clearEquipmentSelections } from \"~/src/stores/equipmentSelections\";\n  import IconButton from \"~/src/components/atoms/button/IconButton.svelte\";\n  export let characterClass;\n  export let background;\n  export let disabled = false;\n\n  let classGoldOnly = 0;\n  let classGoldWithEquipment = 0;\n  let backgroundGoldOnly = 0;\n  let backgroundGoldWithEquipment = 0;\n\n  // Function to extract gold value from description text\n  function extractGoldFromDescription(description) {\n    if (!description) return 0;\n    \n    // Look for pattern \", X GP;\" where X is a number\n    const match = description.match(/,\\s*(\\d+)\\s*GP;/i);\n    if (match && match[1]) {\n      return parseInt(match[1]);\n    }\n    return 0;\n  }\n\n  $: {\n    if (characterClass) {\n      // Gold only amount comes from system.wealth\n      classGoldOnly = characterClass.system.wealth || 0;\n      // With equipment amount comes from description\n      classGoldWithEquipment = extractGoldFromDescription(characterClass.system.description?.value) || 0;\n    }\n    \n    if (background) {\n      // Gold only amount comes from system.wealth\n      backgroundGoldOnly = background.system.wealth || 0;\n      // With equipment amount comes from description\n      backgroundGoldWithEquipment = extractGoldFromDescription(background.system.description?.value) || 0;\n    }\n  }\n\n  function handleClassChoice(choice) {\n    if (disabled) return;\n    const goldValue = choice === 'equipment' ? classGoldWithEquipment : classGoldOnly;\n    setClassGoldChoice(choice, goldValue);\n  }\n\n  function handleBackgroundChoice(choice) {\n    if (disabled) return;\n    const goldValue = choice === 'equipment' ? backgroundGoldWithEquipment : backgroundGoldOnly;\n    setBackgroundGoldChoice(choice, goldValue);\n  }\n\n  function makeClassChoiceHandler(choice) {\n    return function classChoiceHandler() {\n      handleClassChoice(choice);\n    };\n  }\n\n  function makeBackgroundChoiceHandler(choice) {\n    return function backgroundChoiceHandler() {\n      handleBackgroundChoice(choice);\n    };\n  }\n\n  function handleEdit() {\n    clearGoldChoices();\n    clearEquipmentSelections();\n  }\n\n  $: classChoice = $goldChoices.fromClass.choice;\n  $: backgroundChoice = $goldChoices.fromBackground.choice;\n  $: totalGold = parseInt($goldChoices.fromClass.goldValue) + parseInt($goldChoices.fromBackground.goldValue);\n  $: hasChoices = characterClass || background;\n  $: isComplete = classChoice && backgroundChoice;\n  $: showEditButton = classChoice && backgroundChoice;\n</script>\n\n<template lang=\"pug\">\nsection.starting-gold\n  .flexrow\n    +if(\"!disabled\")\n      .flex0.required(class!=\"{!classChoice || !backgroundChoice ? 'active' : ''}\")\n        span *\n    .flex3\n      h2.left\n        span {localize('GAS.Equipment.Gold')}\n    +if(\"showEditButton\")\n      .flex0.right\n        IconButton.option(\n          on:click!=\"{handleEdit}\"\n          disabled!=\"{disabled}\"\n          icon=\"fas fa-pencil\"\n        )\n  \n  .flexcol.gold-section.gap-10(class!=\"{disabled ? 'disabled' : ''}\")\n    \n    +if(\"background\")\n      .equipment-group\n        .flexrow.left\n          .flex.group-label {background.name} Options\n        .options\n          button.option(\n            class!=\"{backgroundChoice === 'equipment' ? 'selected' : ''} {disabled ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeBackgroundChoiceHandler('equipment')}\"\n            disabled!=\"{disabled}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-sack-dollar\n              .flex2.left.name\n                span Equipment + {backgroundGoldWithEquipment} gp\n          button.option(\n            class!=\"{backgroundChoice === 'gold' ? 'selected' : ''} {disabled ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeBackgroundChoiceHandler('gold')}\"\n            disabled!=\"{disabled}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-coins\n              .flex2.left.name\n                span {backgroundGoldOnly} gp\n    \n    +if(\"characterClass\")\n      .equipment-group\n        .flexrow.left\n          .flex.group-label {characterClass.name} Options\n        .options\n          button.option(\n            class!=\"{classChoice === 'equipment' ? 'selected' : ''} {disabled ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeClassChoiceHandler('equipment')}\"\n            disabled!=\"{disabled}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-sack-dollar\n              .flex2.left.name\n                span Equipment + {classGoldWithEquipment} gp\n          button.option(\n            class!=\"{classChoice === 'gold' ? 'selected' : ''} {disabled ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeClassChoiceHandler('gold')}\"\n            disabled!=\"{disabled}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-coins\n              .flex2.left.name\n                span {classGoldOnly} gp\n    \n    +if(\"classChoice && backgroundChoice\")\n      .equipment-group\n        .flexrow.left.result\n          .label\n            span Total Gold:\n          .value\n            span {totalGold} gp\n</template>\n\n<style lang=\"sass\">\n@import \"../../../../../styles/Mixins.scss\"\n.badge\n  +badge()\n.starting-gold\n  background: rgba(0, 0, 0, 0.2)\n  border-radius: var(--border-radius)\n  padding: 0.5rem\n\n.gold-section\n  padding: 0.5rem\n  border-radius: var(--border-radius)\n  &:not(.disabled)\n    border: 1px solid var(--dnd5e-color-gold)\n    background: rgba(0, 0, 0, 0.2)\n    background: #000000\n    color: var(--dnd5e-color-gold)\n\n.equipment-group\n  margin-bottom: 0.75rem\n  margin-right: 0.2rem\n  padding: 0.5rem\n  border-radius: var(--border-radius)\n  background: rgba(0, 0, 0, 0.2)\n  \n  &:last-child\n    margin-bottom: 0\n\n.group-label\n  display: block\n  font-size: 1em\n  color: var(--dnd5e-color-gold)\n  margin-bottom: 0.5rem\n  font-style: italic\n\n.options\n  display: grid\n  grid-template-columns: repeat(1, 1fr)\n  gap: 0.2rem\n\n.option\n  display: flex\n  padding: 0.3rem 0.5rem\n  border: 1px solid rgba(255, 255, 255, 0.1)\n  border-radius: 4px\n  background: rgba(0, 0, 0, 0.4)\n  color: var(--li-background-color)\n  transition: all 0.2s ease\n  cursor: pointer\n  \n  &:hover:not(.disabled)\n    background: rgba(0, 0, 0, 0.6)\n    border-color: rgba(255, 255, 255, 0.2)\n\n  &.selected\n    background: rgba(0, 0, 0, 0.8)\n    border-color: #b59e54\n    box-shadow: 0 0 10px rgba(181, 158, 84, 0.2)\n\n  &.disabled\n    cursor: not-allowed\n    opacity: 0.5\n\n  &.confirm\n    background: var(--color-positive)\n    border-color: var(--color-positive)\n    color: white\n    &:hover\n      background: var(--color-positive-dark)\n\n.icon\n  min-width: 32px\n  max-height: 32px\n  margin-right: 0.2rem\n  display: flex\n  align-items: center\n  justify-content: center\n  i\n    font-size: 1.2em\n    color: var(--dnd5e-color-gold)\n\n.name\n  font-size: smaller\n  line-height: 2rem\n\n.result\n  margin-top: 1rem\n  .label\n    color: var(--color-text-dark-secondary)\n    margin-right: 0.5rem\n  .value\n    color: var(--color-text-highlight)\n    font-weight: bold\n\n.mt-sm\n  margin-top: 0.5rem\n</style> ","<script>\nimport { getContext, onMount } from \"svelte\";\nimport { equipmentSelections, addGranularSelection, removeGranularSelection, getEquipmentIcon, initializeGroup, addChildGranularSelection, getRequiredSelectionsCount, editGroup } from \"~/src/stores/equipmentSelections\";\nimport { localize } from \"#runtime/svelte/helper\";\nimport IconSelect from \"~/src/components/atoms/select/IconSelect.svelte\";\nimport { extractItemsFromPacksAsync, getPacksFromSettings } from \"~/src/helpers/Utility.js\";\nimport { MODULE_ID } from \"~/src/helpers/constants\";\n\n// Types that need additional configuration\nconst CONFIGURABLE_TYPES = ['tool', 'weapon', 'armor', 'focus'];\n\n// Get equipment sources\nlet packs = getPacksFromSettings(\"equipment\");\nlet allEquipmentItemsFromPacks = [];\n\nonMount(async () => {\n  // Fetch full item data including system data\n  const rawItems = await extractItemsFromPacksAsync(packs, [\n    \"name->label\",\n    \"img\",\n    \"type\",\n    \"folder\",\n    \"uuid->value\",\n    \"_id\"\n  ], [\"system.type\", \"system.magicalBonus\", \"system.properties\"]);\n\n  // Process items to only keep the needed system fields\n  allEquipmentItemsFromPacks = rawItems.map(item => ({\n    ...item,\n    system: item.system ? {\n      type: item.system.type,\n      magicalBonus: item.system.magicalBonus,\n      properties: item.system.properties\n    } : undefined\n  }));\n\n  // window.GAS.log.d('EquipmentSelectorDetail mounted', { \n  //   configurableSelections, \n  //   equipmentByType,\n  //   allEquipmentItemsFromPacks: allEquipmentItemsFromPacks.filter(item => item.type === 'focus')\n  // });\n});\n\nconst showPackLabelInSelect = game.settings.get(MODULE_ID, 'showPackLabelInSelect');\n\n// Get the currently selected items that need configuration\n$: configurableSelections = Object.values($equipmentSelections)\n  .filter(group => {\n    \n\n    // Skip if no selected item\n    if (!group.selectedItem) {\n     \n      return false;\n    }\n\n    // For OR groups with selected AND children, check if the AND group needs configuration\n    if (group.selectedItem.parent?.type === 'OR' && group.selectedItem.type === 'AND') {\n      const hasConfigurableChildren = group.selectedItem.children?.some(child => {\n        const isConfigurable = CONFIGURABLE_TYPES.includes(child.type);\n        const childSelections = group.granularSelections?.children?.[child._id]?.selections;\n        const requiredCount = getRequiredSelectionsCount(child);\n        const needsSelection = !childSelections?.length || childSelections.length < requiredCount;\n        \n       \n        \n        return isConfigurable && needsSelection;\n      });\n\n     \n\n      return hasConfigurableChildren;\n    }\n\n    // For direct OR group children that are configurable\n    if (group.selectedItem.parent?.type === 'OR') {\n      const isConfigurable = CONFIGURABLE_TYPES.includes(group.selectedItem.type);\n      const selfSelections = group.granularSelections?.self;\n      const requiredCount = getRequiredSelectionsCount(group.selectedItem);\n      const needsSelection = !selfSelections?.length || selfSelections.length < requiredCount;\n\n\n      return isConfigurable && needsSelection;\n    }\n\n    // Handle AND groups with configurable children\n    if (group.selectedItem.type === 'AND' && group.selectedItem.children) {\n      const hasConfigurableChildren = group.selectedItem.children.some(child => {\n        const isConfigurable = CONFIGURABLE_TYPES.includes(child.type);\n        const childSelections = group.granularSelections?.children?.[child._id]?.selections;\n        const requiredCount = getRequiredSelectionsCount(child);\n        const needsSelection = !childSelections?.length || childSelections.length < requiredCount;\n        \n        \n        return isConfigurable && needsSelection;\n      });\n\n      window.GAS.log.d('[EquipSelect DETAIL] AND group evaluation result:', {\n        groupId: group.id,\n        hasConfigurableChildren,\n        willInclude: hasConfigurableChildren\n      });\n\n      return hasConfigurableChildren;\n    }\n    \n    // Regular check for configurable items\n    const isConfigurable = CONFIGURABLE_TYPES.includes(group.selectedItem.type);\n    const selfSelections = group.granularSelections?.self;\n    const requiredCount = getRequiredSelectionsCount(group.selectedItem);\n    const needsSelection = !selfSelections?.length || selfSelections.length < requiredCount;\n    \n\n    return isConfigurable && needsSelection;\n  })\n  .flatMap(group => {\n    window.GAS.log.d('[EquipSelect DETAIL] Processing filtered group for flatMap:', {\n      groupId: group.id,\n      type: group.selectedItem?.type,\n      hasChildren: !!group.selectedItem?.children,\n      fullGroup: group\n    });\n\n    // If this is an AND group, create a config entry for each configurable child that needs selection\n    if (group.selectedItem?.type === 'AND' && group.selectedItem.children) {\n      const configurableChildren = group.selectedItem.children\n        .filter(child => {\n          const isConfigurable = CONFIGURABLE_TYPES.includes(child.type);\n          const childSelections = group.granularSelections?.children?.[child._id]?.selections;\n          const requiredCount = getRequiredSelectionsCount(child);\n          const needsSelection = !childSelections?.length || childSelections.length < requiredCount;\n     \n          \n          return isConfigurable && needsSelection;\n        })\n        .map(child => {\n          const result = {\n            ...group,\n            selectedItem: child,\n            parentGroup: group\n          };\n         \n          \n          return result;\n        });\n\n\n      return configurableChildren;\n    }\n\n    // For OR groups, ensure we process the selected item\n    if (group.selectedItem.parent?.type === 'OR') {\n      \n    }\n\n\n    return [group];\n  });\n\n\n// Filter equipment items by type for each configurable selection\n$: equipmentByType = configurableSelections.reduce((acc, group) => {\n  const type = group.selectedItem.type;\n  //- accumulate the items by group type\n  if (!acc[type]) {\n    acc[type] = allEquipmentItemsFromPacks\n      .filter(item => {\n        if (type === 'weapon' && group.selectedItem?.key) {\n          if (item.type !== type) return false;\n          // Handle composite weapon types\n          if (group.selectedItem.key === 'sim') {\n            return ['simpleM', 'simpleR'].includes(item.system?.type?.value) && !item.system?.magicalBonus && !item.system.properties?.includes('mgc');\n          }\n          if (group.selectedItem.key === 'mar') {\n            return ['martialM', 'martialR'].includes(item.system?.type?.value) && !item.system?.magicalBonus && !item.system.properties?.includes('mgc');\n          }\n          // Handle specific weapon types\n          if (['martialM', 'martialR', 'simpleM', 'simpleR'].includes(group.selectedItem.key)) {\n            return item.system?.type?.value === group.selectedItem.key && !item.system?.magicalBonus && !item.system.properties?.includes('mgc');\n          }\n          // Handle base item matching\n          return item.system?.baseItem === group.selectedItem.key;\n        }\n        if(type === 'focus' && group.selectedItem?.key) {\n          // window.GAS.log.d('EQUIPMENT DETAIL | Item matches type:', item, item.type, type );\n\n          return item.system?.properties?.includes('foc') && !item.system.properties?.includes('mgc');\n        }\n        if(type === 'armor' && group.selectedItem?.key) {\n          return item.system?.type?.value === group.selectedItem.key && !item.system.properties?.includes('mgc');\n        }\n        if(type === 'tool' && group.selectedItem?.key) {\n          return item.type === type && item.system.type.value === group.selectedItem.key && !item.system.properties?.includes('mgc');\n        }\n        return true;\n      })\n      .sort((a, b) => a.label.localeCompare(showPackLabelInSelect ? b.compoundLabel : b.label));\n  }\n  return acc;\n}, {});\n\n$: if(configurableSelections.length > 0) {\n  window.GAS.log.d('[EquipmentSelectorDetail] Configurable selections:', configurableSelections);\n  window.scrollTo(0, 0);\n  \n  // Delay scrolling to ensure the element is rendered\n  setTimeout(() => {\n    const firstEquipmentSelect = document.querySelector('.equipment-select');\n    if (firstEquipmentSelect) {\n      firstEquipmentSelect.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, 100); // Adjust the delay as necessary\n}\n\nfunction handleSelection(groupId, option, parentGroup) {\n  \n\n  const value = typeof option === 'object' ? option.value : option;\n  \n  if (parentGroup) {\n   \n    addChildGranularSelection(parentGroup.id, groupId._id, value);\n  } else {\n    \n    addGranularSelection(groupId, value);\n  }\n}\n\n/**\n * @description Create a handler factory function\n * @why The handler can only accept the selected value as a parameter, \n * so to pass the remaining parameters for the group, we need to create a factory function\n * which runs on mount and returns the handler function with the group details included\n * Then once selected, the handler is called with the selected value and the group details are included\n * @param {string} groupId - The id of the group\n * @param {object} parentGroup - The parent group\n * @returns {function} - The selection handler\n */\nfunction createSelectionHandler(groupId, parentGroup) {\n  \n  \n  return function selectionHandler(option) {\n    \n    handleSelection(groupId, option, parentGroup);\n  }\n}\n\n// Add this function to handle cancel\nfunction handleCancelSelection(group) {\n  const groupId = group.parentGroup ? group.parentGroup.id : group.id;\n  editGroup(groupId);\n}\n</script>\n\n<template lang=\"pug\">\nsection\n  +if(\"configurableSelections.length > 0\")\n    +each(\"configurableSelections as group\")\n      .equipment-config-item\n        .flexrow.justify-flexrow-vertical.no-wrap\n          .flex0.relative\n            img.icon(\n              src=\"{getEquipmentIcon(group.selectedItem.type)}\" \n              alt=\"{group.selectedItem.type}\"\n            )\n          .flex2.left.name.ml-sm\n            span {group.selectedItem.label}\n          .flex0.right\n            button.cancel-button(on:click!=\"{handleCancelSelection(group)}\")\n              i.fas.fa-times\n        \n        .equipment-select\n          +if(\"group.parentGroup\")\n            IconSelect.mb-md.icon-select(\n              options=\"{equipmentByType[group.selectedItem.type] || []}\"\n              active=\"{group.parentGroup.granularSelections?.children?.[group.selectedItem._id]?.selections?.[0]}\"\n              placeHolder=\"Select {group.selectedItem.type}\"\n              handler=\"{createSelectionHandler(group.selectedItem, group.parentGroup)}\"\n              id=\"equipment-select-{group.selectedItem._id}\"\n            )\n          +if(\"!group.parentGroup\")\n            IconSelect.mb-md.icon-select(\n              options=\"{equipmentByType[group.selectedItem.type] || []}\"\n              active=\"{group.granularSelections?.self?.[0]}\"\n              placeHolder=\"Select {group.selectedItem.type}\"\n              handler=\"{createSelectionHandler(group.id)}\"\n              id=\"equipment-select-{group.selectedItem._id}\"\n            )\n</template>\n\n<style lang=\"sass\">\n\n.empty-state\n  text-align: center\n  color: var(--color-text-dark-secondary)\n  font-style: italic\n  padding: 1rem\n\n.equipment-type-section\n  margin-bottom: 1.5rem\n  \n  &:last-child\n    margin-bottom: 0\n\n.type-header\n  color: var(--color-text-highlight)\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1)\n  padding-bottom: 0.5rem\n  margin-bottom: 1rem\n\n.equipment-config-item\n  background: rgba(0, 0, 0, 0.3)\n  border-radius: var(--border-radius)\n  padding: 0.3rem 1rem\n  margin-bottom: 0.3rem\n\n  &:last-child\n    margin-bottom: 0\n\n.icon\n  margin-right: 2rem\n  border: none\n  filter: brightness(1) drop-shadow(0 2px 3px rgba(0, 0, 0, 0.5))\n\n.name\n  font-size: 1.1em\n  line-height: 32px\n  color: var(--color-text-dark-primary)\n\n// Configuration section styles\n.tool-config,\n.armor-config,\n.weapon-config,\n.focus-config\n  margin-top: 0.3rem\n  padding-top: 0.3rem\n  border-top: 1px solid rgba(255, 255, 255, 0.1)\n\n.equipment-select\n  margin-top: 0.3rem\n  padding-top: 0.3  rem\n  border-top: 1px solid rgba(255, 255, 255, 0.1)\n\n:global(.icon-select)\n  position: relative\n\n.cancel-button\n  background: none\n  border: none\n  color: var(--color-text-dark-secondary)\n  padding: 0.5rem\n  cursor: pointer\n  transition: color 0.2s ease\n\n  &:hover\n    color: var(--color-text-highlight)\n\n  i\n    font-size: 1.2em\n</style>","<script>\nimport { getContext, onMount } from \"svelte\";\nimport { equipmentSelections, flattenedSelections } from \"~/src/stores/equipmentSelections\";\nimport { localize } from \"#runtime/svelte/helper\";\n\nlet plannedItems = [];\n\n// Track the raw selections\n$: rawSelections = $flattenedSelections || [];\n\n$: window.GAS.log.d('PLANNED INVENTORY | flattenedSelections', $flattenedSelections);\n\n// Handle async updates when selections change and group identical items\n$: {\n  Promise.all(rawSelections.map(async (selection) => {\n    if(selection.type === 'linked') {\n      return await fromUuid(selection.key);\n    }\n    if(selection.key) {\n      return await fromUuid(selection.key);\n    }\n    return selection;\n  })).then(items => {\n    // Group identical items and sum their quantities\n    const groupedItems = items.reduce((acc, item) => {\n      if (!item) return acc;\n      \n      const key = item.uuid || item._id;\n      if (!acc[key]) {\n        acc[key] = {\n          ...item,\n          system: {\n            ...item.system,\n            quantity: 1\n          },\n          uuid: key\n        };\n      } else {\n        acc[key].system.quantity = (acc[key].system.quantity || 1) + 1;\n      }\n      return acc;\n    }, {});\n\n    plannedItems = Object.values(groupedItems);\n  });\n}\n\nfunction getItemName(item) {\n  window.GAS.log.d('PLANNED INVENTORY | getItemName', item);\n  return `@UUID[${item?.uuid}]{${item?.name}}`\n}\n\n// $: window.GAS.log.d('[PlannedInventory] flattenedSelections', $flattenedSelections);\n// $: window.GAS.log.d('[PlannedInventory] plannedItems', plannedItems);\nlet unsubscribe;\n\nonMount(() => {\n\n});\n</script>\n\n<template lang=\"pug\">\n.planned-inventory\n  h3 {localize('GAS.Equipment.PlannedInventory')}\n  table.inventory-table\n    thead\n      tr\n        th \n        th.white {localize('GAS.Item')}\n        th.white {localize('GAS.Equipment.Weight')}\n        th.white {localize('GAS.Equipment.Quantity')}\n    tbody\n      +if('plannedItems.length === 0')\n        tr\n          td(colspan=\"4\").empty-message {localize('GAS.Equipment.NoItemsSelected')}\n        +else()\n          +each('plannedItems as item')\n            tr\n              td\n                +if('item && item.img')\n                  img(src=\"{item.img}\" width=\"32\" height=\"32\")\n                  +else()\n                    img(src=\"icons/svg/item-bag.svg\" width=\"32\" height=\"32\")\n              +await(\"TextEditor.enrichHTML(getItemName(item) || '')\")\n                +then(\"Html\")\n                  td= \"{@html Html || '--'}\"\n              td.weight= \"{item?.system?.weight?.value || 0}\"\n              td.quantity= \"{item?.system?.quantity || 1}\"\n</template>\n\n<style lang=\"sass\">\n.planned-inventory\n  margin-top: 1rem\n  padding: 1rem\n  background: rgba(0, 0, 0, 0.05)\n  border-radius: var(--border-radius)\n\n.inventory-table\n  width: 100%\n  border-collapse: collapse\n  margin-top: 0.5rem\n\n  th, td\n    text-align: left\n    padding: 0 0.5rem\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1)\n\n    img\n      margin-top: 0.3rem\n  th\n    font-weight: bold\n    color: var(--color-text-dark-primary)\n\n  td.quantity, td.weight\n    text-align: center\n\n  tbody tr:hover\n    background: rgba(0, 0, 0, 0.03)\n\n  .empty-message\n    text-align: center\n    color: var(--color-text-dark-secondary)\n    font-style: italic\n</style>","<script>\n  import { goldRoll } from \"~/src/stores/storeDefinitions\";\n  import { areGoldChoicesComplete } from \"~/src/stores/goldChoices\";\n  import { localize } from \"#runtime/svelte/helper\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import { getContext } from \"svelte\";\n  import { characterClass, characterSubClass, background } from \"~/src/stores/index\";\n  import { compatibleStartingEquipment } from \"~/src/stores/startingEquipment\";\n  import { goldChoices } from \"../../../../stores/goldChoices\";\n  import StartingGold from \"~/src/components/molecules/dnd5e/StartingGold.svelte\";\n  import StartingGoldv4 from \"~/src/components/molecules/dnd5e/v4/StartingGold.svelte\";\n  import StartingEquipment from \"~/src/components/molecules/dnd5e/StartingEquipment.svelte\";\n  import EquipmentSelectorDetail from \"~/src/components/molecules/dnd5e/EquipmentSelection/EquipmentSelectorDetail.svelte\";\n  import PlannedInventory from \"~/src/components/molecules/dnd5e/EquipmentSelection/PlannedInventory.svelte\";\n  const doc = getContext(\"#doc\");\n\n  // Get equipment selection setting\n  $: equipmentSelectionEnabled = game.settings.get(MODULE_ID, \"enableEquipmentSelection\");\n\n  // Track if gold has been rolled/selected based on version\n  $: isGoldComplete = window.GAS.dnd5eVersion === 4  && window.GAS.dnd5eRules === \"2024\" ? $areGoldChoicesComplete : $goldRoll > 0;\n\n  // Get proficiencies from actor\n  $: proficiencies = $doc.system?.proficiencies || {};\n\n  $: window.GAS.log.d(\"Equipment goldChoices\", $goldChoices);\n\n\n  $: window.GAS.log.d(\"Equipment compatibleStartingEquipment\", $compatibleStartingEquipment);\n  \n</script>\n\n<template lang=\"pug\">\n.container\n  .content\n    .flexrow\n      .flex2.pr-sm.col-a\n        h3 {localize('GAS.Equipment.Selection')}\n        section.equipment-flow\n          +if(\"window.GAS.dnd5eVersion === 4 && window.GAS.dnd5eRules === '2024'\")\n            StartingGoldv4(characterClass=\"{$characterClass}\" background=\"{$background}\" disabled=\"{false}\")\n            +else()\n              StartingGold(characterClass=\"{$characterClass}\" disabled=\"{false}\")\n          pre isGoldComplete {isGoldComplete}\n          +if(\"isGoldComplete\")\n            StartingEquipment(startingEquipment=\"{$compatibleStartingEquipment}\" proficiencies=\"{proficiencies}\" disabled=\"{false}\")\n      .flex0.border-right.right-border-gradient-mask\n      .flex3.left.scroll.col-b\n        PlannedInventory\n        EquipmentSelectorDetail\n</template>\n\n<style lang=\"sass\">\n.container\n  height: 100%\n  \n  .col-a\n      max-width: 325px\n.content\n  height: 100%\n  overflow-y: auto\n\n.equipment-flow\n  margin-top: 1rem\n  display: flex\n  flex-direction: column\n  gap: 1rem\n\n\nsection\n  background: rgba(0, 0, 0, 0.05)\n  border-radius: var(--border-radius)\n  padding: 1rem\n\n:global(.equipment-flow .starting-gold)\n  background: transparent !important\n  margin-top: 0 !important\n  padding: 0 !important\n\n:global(.equipment-flow .starting-equipment)\n  background: transparent !important\n  margin-top: 0 !important\n  padding: 0 !important\n</style> "],"names":["ctx","create_if_block_2","create_if_block_1","create_if_block","characterClass","background","isConfigurable","requiredCount","needsSelection","selfSelections"],"mappings":"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"}