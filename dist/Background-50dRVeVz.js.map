{"version":3,"file":"Background-50dRVeVz.js","sources":["../src/components/organisms/dnd5e/Tabs/Background.svelte"],"sourcesContent":["<script>\n  import SvelteSelect from \"svelte-select\";\n  import IconSelect from \"~/src/components/atoms/select/IconSelect.svelte\";\n  import {\n    getFoldersFromMultiplePacks,\n    extractItemsFromPacks,\n    getPacksFromSettings,\n    log,\n  } from \"~/src/helpers/Utility.js\";\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import { localize } from \"#runtime/svelte/helper\";\n  import { background } from \"~/src/helpers/store\";\n\n  let active = null,\n    value = null,\n    placeHolder = \"Backgrounds\";\n  let packs = getPacksFromSettings(\"backgrounds\");\n  // let folders = getFoldersFromMultiplePacks(packs, 1);\n  // let folderIds = folders.map((x) => x._id);\n  let allItems = extractItemsFromPacks(packs, [\n    \"name->label\",\n    \"img\",\n    \"type\",\n    \"folder\",\n    \"uuid->value\",\n    \"_id\",\n  ]);\n  let itemDefinitions = allItems\n    .filter((x) => x.type == \"background\")\n    .sort((a, b) => a.label.localeCompare(b.label));\n  const actor = getContext(\"#doc\");\n\n  $: options = itemDefinitions;\n  $: advancementComponents = {};\n  $: html = $background?.system?.description.value || \"\";\n  $: backgrounds = allItems.filter((x) => x.type == \"background\");\n  $: advancementArray = $background?.advancement?.byId\n    ? Object.entries($background.advancement.byId).map(([id, value]) => ({\n        ...value,\n        id,\n      }))\n    : [];\n\n  let richHTML = \"\";\n\n  const importAdvancements = async () => {\n    for (const advancement of advancementArray) {\n      try {\n        const module = await import(`~/src/components/molecules/dnd5e/Advancements/${advancement.type}.svelte`);\n        advancementComponents[advancement.type] = module.default;\n      } catch (error) {\n        log.e(`Failed to load component for ${advancement.type}:`, error);\n      }\n    }\n  };\n  \n  const selectHandler = async (option) => {\n    $background = await fromUuid(option);\n    log.d('background', $background)\n    active = option;\n    await tick();\n    await importAdvancements();\n    richHTML = await TextEditor.enrichHTML(html);\n  };\n\n  onMount(async () => {\n    if ($background) {\n      log.d('background', background)\n      value = $background.uuid;\n      await tick();\n      await importAdvancements();\n      richHTML = await TextEditor.enrichHTML(html);\n    }\n  });\n\n</script>\n\n<template lang=\"pug\">\ndiv.content\n  .flexrow\n    .flex2.pr-sm.col-a\n      IconSelect.icon-select({options} {active} {placeHolder} handler=\"{selectHandler}\" id=\"background-select\" bind:value )\n     \n\n      +if(\"advancementArray.length\")\n        h3.left {localize('GAS.Advancements')}\n        ul.icon-list\n          +each(\"advancementArray as advancement\")\n            //- @todo: this should be broken out into components for each advancement.type\n            li.left\n              .flexrow(data-tooltip=\"{advancement.configuration?.hint || null}\"  data-tooltip-class=\"gas-tooltip dnd5e2 dnd5e-tooltip item-tooltip\")\n                .flex0.relative.image\n                  img.icon(src=\"{advancement.icon}\" alt=\"{advancement.title}\")\n                .flex2 {advancement.title}\n              .flexrow\n                svelte:component(this=\"{advancementComponents[advancement.type]}\" advancement=\"{advancement}\")\n\n    .flex0.border-right.right-border-gradient-mask \n    .flex3.left.pl-md.scroll.col-b {@html richHTML}\n\n</template>\n\n<style lang=\"sass\">\n  @import \"../../../../../styles/Mixins.scss\"\n  .content \n    @include staticOptions\n\n  :global(.icon-select)\n    position: relative\n\n</style>\n"],"names":["ctx","value"],"mappings":"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"}