{"version":3,"file":"LevelUp-CqKdbfBa.js","sources":["../src/components/organisms/dnd5e/Tabs/LevelUp.svelte"],"sourcesContent":["<script>\n  import SvelteSelect from \"svelte-select\";\n  import IconSelect from \"~/src/components/atoms/select/IconSelect.svelte\";\n  import {\n    extractMapIteratorObjectProperties,\n    extractItemsFromPacks,\n    getFoldersFromMultiplePacks,\n    getPacksFromSettings,\n    ucfirst\n  } from \"~/src/helpers/Utility.js\";\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import {\n    characterClass,\n    characterSubClass,\n    level,\n    tabs,\n    newClassLevel,\n    activeClass\n  } from \"~/src/helpers/store\";\n  import { localize } from \"#runtime/svelte/helper\";\n  import { TJSSelect } from \"@typhonjs-fvtt/svelte-standard/component\";\n  import DonationTracker from \"~/src/plugins/donation-tracker\"\n  import LevelUpExisting from \"~/src/components/organisms/dnd5e/Tabs/LevelUpExistingClassLeftCol.svelte\";\n    import { log } from \"../../../../helpers/Utility\";\n\n  let richHTML = \"\",\n    richSubClassHTML = \"\",\n    activeClassKey = null,\n    activeSubClass = null,\n    classValue = null,\n    subclassValue = null,\n    subClassesIndex,\n    subclasses,\n    classesPlaceholder = \"Classes\",\n    subclassesPlaceholder = \"Subclasses\",\n    packs = getPacksFromSettings(\"classes\"),\n    subClassesPack = game.packs.get('dnd5e.subclasses'),\n    subClassesPacks = getPacksFromSettings(\"subclasses\"),\n    mappedClassIndex = extractItemsFromPacks(packs, [\n      \"name->label\",\n      \"img\",\n      \"type\",\n      \"folder\",\n      \"uuid->value\",\n      \"_id\",\n    ])\n  ;\n\n  const levelOptions = [];\n  for (let i = 1; i <= 20; i++) {\n    levelOptions.push({ label: \"Level \" + i, value: i });\n  }\n\n  const selectStyles = {\n    // width: '50%',\n    // display: 'inline-block',\n    // fontSize: 'smaller',\n  };\n\n  const actor = getContext(\"#doc\");\n\n  const levelSelectHandler = async (option) => {\n    subClassesIndex = await getFilteredSubclassIndex();\n    await tick();\n    importClassAdvancements();\n    importSubClassAdvancements();\n  };\n\n  const getFilteredSubclassIndex = async () => {\n    const filteredSubClassIndex = [];\n    for(let subClassesPack of subClassesPacks) {\n      let index = await subClassesPack.getIndex({\n        fields: [\"system.classIdentifier\"],\n      });\n      if(!subClassesPack) continue\n      let mappedSubClassIndex =  extractMapIteratorObjectProperties(index.entries(), [\n          \"name->label\",\n          \"img\",\n          \"type\",\n          \"folder\",\n          \"uuid->value\",\n          \"system\",\n          \"_id\",\n        ])\n\n      filteredSubClassIndex.push(mappedSubClassIndex?.filter(\n        (x) => x.system.classIdentifier == $characterClass.system.identifier,\n      ))\n    }\n    const output = filteredSubClassIndex.flat().sort((a, b) => a.label.localeCompare(b.label));\n    return output\n  };\n \n  const selectClassHandler = async (option) => {\n    activeSubClass = null;\n    $characterSubClass = null;\n    subclassValue = null;\n    subClassAdvancementArrayFiltered = [];\n    richSubClassHTML = \"\";\n    $characterClass = await fromUuid(option);\n    $activeClass = option;\n    \n    await tick();\n    subClassesIndex = await getFilteredSubclassIndex();\n    await tick();\n    importClassAdvancements();\n    richHTML = await TextEditor.enrichHTML(html);\n  };\n\n  const importClassAdvancements = async () => {\n    for (const classAdvancement of classAdvancementArrayFiltered) {\n      try {\n        const module = await import(`~/src/components/molecules/dnd5e/Advancements/${classAdvancement.type}.svelte`);\n        classAdvancementComponents[classAdvancement.type] = module.default;\n      } catch (error) {\n        log.e(`Failed to load component for ${classAdvancement.type}:`, error);\n      }\n    }\n  };\n\n  const selectSubClassHandler = async (option) => {\n    $characterSubClass = await fromUuid(option);\n    activeSubClass = option;\n    await tick();\n    importClassAdvancements()\n    importSubClassAdvancements()\n    richSubClassHTML = await TextEditor.enrichHTML(\n      $characterSubClass.system.description.value,\n    );\n  };\n\n  const importSubClassAdvancements = async () => {\n    for (const subClassAdvancement of subClassAdvancementArrayFiltered) {\n      try {\n        const module = await import(`~/src/components/molecules/dnd5e/Advancements/${subClassAdvancement.type}.svelte`);\n        await tick();\n        subClassAdvancementComponents[subClassAdvancement.type] = module.default;\n      } catch (error) {\n        log.e(`Failed to load component for ${subClassAdvancement.type}:`, error);\n      }\n    }\n  };\n\n  const clickCancelMulticlass = async () => {\n    $activeClass = null\n    activeSubClass = null\n  }\n\n  $: html = $characterClass?.system?.description.value || \"\";\n  $: subClassProp = activeSubClass;\n  $: classProp = $activeClass;\n  $: combinedHtml = richHTML + (richSubClassHTML ? `<h1>${localize('GAS.SubClass')}</h1>` + richSubClassHTML : '');\n  $: classAdvancementComponents = {};\n  $: subClassAdvancementComponents = {};\n\n  $: if(subClassesIndex?.length) {\n    subclasses = subClassesIndex.flat().sort((a, b) => a.label.localeCompare(b.label));\n  } else {\n    subclasses = [];\n  }\n\n  $: subClassAdvancementArrayFiltered = $characterSubClass?.advancement?.byId\n    ? Object.entries($characterSubClass.advancement.byId)\n        .filter(([id, value]) => value.level === $level)\n        .map(([id, value]) => ({ ...value, id }))\n    : [];\n\n  $: classAdvancementArrayFiltered = $characterClass?.advancement?.byId\n    ? Object.entries($characterClass.advancement.byId)\n        .filter(([id, value]) => value.level === $level)\n\n        .map(([id, value]) => ({ ...value, id }))\n    : [];\n\n  $: classKeys = Object.keys($actor._classes);\n\n  $: classLevels = classKeys.map((classKey) => {\n    const classObj = $actor._classes[classKey]\n    return classObj.uuid == $activeClass ? classObj.system.levels + 1 : classObj.system.levels;\n  });\n\n  $: activeClassObj = $actor._classes[activeClassKey];\n  $: activeClassIndex = classKeys.indexOf(activeClassKey);\n  $: activeClassLevel = classLevels[activeClassIndex];\n\n\n  $: filteredClassIndex = mappedClassIndex\n      .filter((i) => {\n        return i.type == 'class' \n        && DonationTracker.canViewItem(i)\n        //- @why: don't include classes that are already in the character\n        && !classKeys.includes(i.label.toLowerCase())\n      })\n      .sort((a, b) => a.label.localeCompare(b.label))\n\n  const getCharacterClass = (classKey) => {\n    return $actor._classes[classKey];\n  }\n\n  async function clickAddLevel(classKey) {\n\n    log.d(getCharacterClass(classKey).uuid)\n    const uuid = getCharacterClass(classKey).uuid\n    activeSubClass = null;\n    $characterSubClass = null;\n    subclassValue = null;\n    subClassAdvancementArrayFiltered = [];\n    richSubClassHTML = \"\";\n    $characterClass = await fromUuid(uuid);\n    $activeClass = uuid;\n    activeClassKey = classKey\n    newClassLevel.set($actor._classes[classKey]?.system?.levels + 1);\n    \n    await tick();\n    subClassesIndex = await getFilteredSubclassIndex();\n    await tick();\n    importClassAdvancements();\n    richHTML = await TextEditor.enrichHTML(html);\n\n  }\n\n  function getLevel(classKey) {\n    const level = $newClassLevel ? $newClassLevel : getCharacterClass(classKey)?.system?.levels\n    return level\n  }\n\n  onMount(async () => {\n    if ($characterClass) {\n      classValue = $characterClass.uuid;\n      await tick();\n      importClassAdvancements();\n      richHTML = await TextEditor.enrichHTML(html);\n      subClassesIndex = await getFilteredSubclassIndex();\n    }\n    if ($characterSubClass) {\n      subclassValue = $characterSubClass.uuid;\n      await tick();\n      importSubClassAdvancements();\n      richSubClassHTML = await TextEditor.enrichHTML(\n        $characterSubClass.system.description.value,\n      );\n    }\n    log.d(\"classKeys\", classKeys);\n    log.d(typeof classKeys);\n    log.d(classKeys.length);\n    log.d(Array.isArray(classKeys.length));\n    log.d(getCharacterClass('fighter'))\n    log.d($characterClass)\n  });\n\n\n\n</script>\n\n<template lang=\"pug\">\n  .content\n    .flexrow\n      .flex2.pr-sm.col-a\n        h1.flex Existing Classes\n        +each(\"classKeys as classKey, index\")\n          .class-row.gold-button.flexrow(class=\"{getCharacterClass(classKey).uuid === $activeClass ? 'active' : ''}\" role=\"button\" aria-role=\"button\" aria-label=\"{localize('GAS.LevelUp.Button')+' '+classKey}\" data-tooltip=\"{localize('GAS.LevelUp.Button')+' '+classKey}\" on:mousedown!=\"{clickAddLevel(classKey)}\")\n            .flex.icon\n              img(height=\"40\" src=\"{getCharacterClass(classKey)?.img}\")\n            .flex3.flexrow\n              .flex3 {ucfirst(classKey)} \n              .flex0\n                .lozenge {classLevels[index]} \n              .flex1.right.pr-md\n                +if(\"!$activeClass\")\n                  i(class=\"fas fa-plus\")\n        //- h1.flexrow.mt-md\n        //-   .flex2.left Add Multiclass\n        //-   +if(\"classProp\")\n        //-     .flex0\n        //-       button.mt-sm.gold-button(type=\"button\" role=\"button\" on:mousedown=\"{clickCancelMulticlass}\")\n        //-         i(class=\"fas fa-times\")\n        //- IconSelect.icon-select(bind:active=\"{$activeClass}\" options=\"{filteredClassIndex}\"  placeHolder=\"{classesPlaceholder}\" handler=\"{selectClassHandler}\" id=\"characterClass-select\" bind:value=\"{classValue}\" )\n        +if(\"$characterClass\")\n          //- +if(\"subclasses.length\")\n          //-   h3.left.mt-md Subclass\n          //-   IconSelect.icon-select(active=\"{subClassProp}\" options=\"{subclasses}\"  placeHolder=\"{subclassesPlaceholder}\" handler=\"{selectSubClassHandler}\" id=\"subClass-select\" bind:value=\"{subclassValue}\" truncateWidth=\"17\" )\n          //- h3.left.mt-sm {localize('GAS.Tabs.Classes.FilterByLevel')}\n          +if(\"activeClassObj\")\n            h3 {activeClassObj.name} {levelOptions[1].label}\n            //- .flexrow\n            //-   .flex2.left\n            //-     TJSSelect( options=\"{levelOptions}\" store=\"{level}\" on:change=\"{levelSelectHandler}\" styles=\"{selectStyles}\" )\n            LevelUpExisting(classAdvancementArrayFiltered=\"{classAdvancementArrayFiltered}\" level=\"{getLevel(activeClassKey)}\")\n        //- +if(\"subclasses.length\")\n        //-   +if(\"$characterSubClass\")\n        //-     //- h3.left.mt-sm Description\n        //-     //- .left.sub-class(bind:innerHTML=\"{richSubClassHTML}\" contenteditable)\n        //-     +if(\"subClassAdvancementArrayFiltered\")\n        //-       h3.left.mt-sm.flexrow\n        //-         .flex {localize('GAS.Tabs.Classes.SubClass')} {localize('GAS.Advancements')}\n        //-         .flex0.div.badge.right.inset.ml-sm.mb-xs {localize('GAS.Level')} {$level}\n        //-       ul.icon-list\n        //-         +if(\"!subClassAdvancementArrayFiltered.length\")\n        //-           li.left {localize('GAS.NoAdvancements')}\n        //-           +else()\n        //-             +each(\"subClassAdvancementArrayFiltered as advancement\")\n        //-               //- @todo: this should be broken out into components for each advancement.type\n        //-               li.left(data-type=\"{advancement.type}\")\n        //-                 .flexrow(data-tooltip=\"{advancement.configuration?.hint || null}\" data-tooltip-locked=\"true\" data-tooltip-class=\"gas-tooltip dnd5e2 dnd5e-tooltip item-tooltip\" )\n        //-                   .flex0.relative.image\n        //-                     img.icon(src=\"{advancement.icon}\" alt=\"{advancement.title}\")\n        //-                   .flex2 {advancement.title}\n        //-                 .flexrow\n        //-                   svelte:component(this=\"{subClassAdvancementComponents[advancement.type]}\" advancement=\"{advancement}\")\n  \n      .flex0.border-right.right-border-gradient-mask \n      .flex3.left.pl-md.scroll.col-b {@html combinedHtml}\n  \n  </template>\n\n<style lang=\"sass\">\n  @import \"../../../../../styles/Mixins.scss\"\n  .content \n    @include staticOptions\n    .badge.inset\n      @include badge()\n      @include inset\n      display: inline-block\n      white-space: nowrap\n\n\n  :global(.icon-select)\n    position: relative\n\n  .class-row\n    padding: 0\n    justify-items: center\n    align-items: center\n  \n  .lozenge\n    background-color: var(--dnd5e-color-gold)\n    color: #000\n    border-radius: var(--border-radius)\n    box-shadow: 0 0 6px var(--dnd5e-shadow-45)\n    padding: 0 0.2rem\n  \n  .gold-button\n    position: relative\n    border: 3px solid transparent\n    border-radius: var(--border-radius)\n    background: var(--dnd5e-color-black)\n    color: var(--dnd5e-color-gold)\n    margin: 0 0 3px 0\n    box-shadow: 0 0 6px var(--dnd5e-shadow-45)\n    font-size: var(--font-size-14)\n    line-height: normal\n    overflow: hidden\n    //- cursor:  cell\n    cursor: pointer\n    &.active .lozenge\n      border: 3px solid var(-as-blue)\n      background: var(--as-blue)\n      color: #fff\n  .icon\n    min-width: 20px\n  .sub-class\n    height: 100px\n    overflow-y: auto\n    padding: 0.5rem\n    border: 1px solid transparent\n    border-radius: 5px\n    box-shadow: 0 0 5px rgba(0,0,0,0.3) inset\n    font-size: smaller\n</style>\n"],"names":["ctx","level"],"mappings":"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"}