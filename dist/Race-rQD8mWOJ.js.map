{"version":3,"file":"Race-rQD8mWOJ.js","sources":["../src/components/organisms/dnd5e/Tabs/Race.svelte"],"sourcesContent":["<script>\n  import SvelteSelect from \"svelte-select\";\n  import IconSelect from \"~/src/components/atoms/select/IconSelect.svelte\";\n  import {\n    getFoldersFromMultiplePacks,\n    extractItemsFromPacksSync,\n    getPacksFromSettings,\n    getAdvancementValue,\n    illuminatedDescription\n  } from \"~/src/helpers/Utility.js\";\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import { localize } from \"#runtime/svelte/helper\";\n  import { race, subRace, readOnlyTabs } from \"~/src/stores/index\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n\n  let active = null,\n    value = null,\n    placeHolder = \"Races\",\n    richHTML = \"\";\n  let packs = getPacksFromSettings(\"races\");\n  let allRaceItems = extractItemsFromPacksSync(packs, [\n    \"name->label\",\n    \"img\",\n    \"type\",\n    \"folder\",\n    \"uuid->value\",\n    \"_id\",\n  ]);\n  const showPackLabelInSelect = game.settings.get(MODULE_ID, 'showPackLabelInSelect');\n  const importPath = \"components/molecules/dnd5e/Advancements/\";\n\n  // window.GAS.log.d('allRaceItems', allRaceItems)\n  let raceDefinitions = allRaceItems\n    .filter((x) => x.type == \"race\")\n    .sort((a, b) => a.label.localeCompare(showPackLabelInSelect ? b.compoundLabel : b.label));\n\n  const actor = getContext(\"#doc\");\n  let advancementComponents = {};\n\n  async function importAdvancements(advancements) {\n    if (!advancements || !Array.isArray(advancements)) return;\n    \n    // window.GAS.log.d('advancementArray',advancements)\n    for (const advancement of advancements) {\n      try {\n        const module = await import(`~/src/components/molecules/dnd5e/Advancements/${advancement.type}.svelte`);\n        advancementComponents[advancement.type] = module.default;\n      } catch (error) {\n        window.GAS.log.e(`Failed to load component for ${advancement.type}:`, error);\n      }\n    }\n  };\n\n  async function selectRaceHandler(option) {\n    if (isDisabled) return; // Don't allow changes in readonly mode\n    \n    const selectedRace = await fromUuid(option);\n    $race = selectedRace;\n    active = option;\n    if(!value) {\n      value = option;\n    }\n    \n    const advancements = getAdvancements($race);\n    await importAdvancements(advancements);\n    richHTML = await illuminatedDescription(html, $race);\n\n    Hooks.call('gas.richhtmlReady', richHTML);\n  };\n\n  // Get the advancement array safely\n  function getAdvancements(race) {\n    if (!race || !race.system || !race.system.advancement) return [];\n    \n    return race.system.advancement.filter(\n      (value) => !(value.type == \"Trait\" && value.title == \"Dwarven Resilience\")\n    );\n  }\n\n  // Function to update richHTML based on current race\n  async function updateRichHTML() {\n    if ($race) {\n      const advancements = getAdvancements($race);\n      await importAdvancements(advancements);\n      richHTML = await illuminatedDescription($race.system?.description?.value || \"\", $race);\n    }\n  }\n\n  $: actorObject = $actor.toObject();\n  $: options = raceDefinitions;\n  $: html = $race?.system?.description?.value || \"\";\n  $: movement = $race?.system?.movement;\n  $: senses = $race?.system?.senses;\n  $: units = $race?.system?.movement?.units || \"\";\n  $: type = $race?.system?.type || \"\";\n  $: source = $race?.system?.source || \"\";\n  $: book = source?.book || \"\";\n  $: page = source?.page ? \", p. \" + source.page : \"\";\n  $: isDisabled = $readOnlyTabs.includes(\"race\");\n  \n  // Calculate advancements\n  $: advancementArray = getAdvancements($race);\n  \n  // Make sure to update active/value when race changes to ensure display in readonly mode\n  $: if ($race && (!active || !value)) {\n    active = $race.uuid;\n    value = $race.uuid;\n    updateRichHTML();\n  }\n\n  // Also update richHTML when html changes (dependency of illuminatedDescription)\n  $: if ($race && html) {\n    updateRichHTML();\n  }\n\n  $: filteredMovement = movement\n    ? Object.keys(movement)\n        .filter((key) => key !== \"units\" && movement[key])\n        .map((key) => ({ label: key, value: movement[key] }))\n    : [];\n\n  $: filteredSenses = senses\n    ? Object.keys(senses)\n        .filter((key) => key !== \"units\" && senses[key])\n        .map((key) => ({ label: key, value: senses[key] }))\n    : [];\n\n  // Debug logs\n  $: window.GAS.log.d(\"Race component:\", { \n    isDisabled, \n    race: $race, \n    active, \n    value, \n    readOnlyTabs: $readOnlyTabs,\n    richHTML: richHTML ? richHTML.substring(0, 50) + \"...\" : \"\", // truncate for logging\n    advancementArray: advancementArray?.length || 0\n  });\n\n  onMount(async () => {\n    // Log mount\n    window.GAS.log.d(\"Race tab mounted\");\n    \n    let raceUuid;\n    if (window.GAS.debug) {\n      raceUuid = window.GAS.race;\n    }\n    if (raceUuid) {\n      await selectRaceHandler(raceUuid);\n    }\n    \n    // If we have a race in the store but no active selection, set the active selection\n    if ($race && (!active || !value)) {\n      window.GAS.log.d(\"Setting active/value from $race:\", $race);\n      active = $race.uuid;\n      value = $race.uuid;\n      await updateRichHTML();\n    }\n  });\n\n</script>\n\n<template lang=\"pug\">\ndiv.content\n  .flexrow\n    .flex2.pr-sm.col-a\n      .flexrow\n        .flex0.required(class=\"{$race ? '' : 'active'}\") *\n        .flex3 \n          IconSelect.mb-md.icon-select({options} {active} {placeHolder} handler=\"{selectRaceHandler}\" id=\"race-select\" bind:value disabled=\"{isDisabled}\")\n          +if(\"isDisabled\")\n            .info-message This tab is read-only during advancement selection\n      +if(\"value\")\n        +if(\"source\")\n          //- h3.left {localize('GAS.Source')}\n          ol.properties-list\n            li {book} {page} {type.value ? ', ' + type.value : ''} \n\n        +if(\"filteredMovement\")\n          h3.left {localize('GAS.Tabs.Races.Movement')}\n          ol.properties-list\n            +each(\"filteredMovement as movement\")\n              li.left {movement.label} : {movement.value} {units}\n        +if(\"filteredSenses\")\n          h3.left {localize('GAS.Tabs.Races.Senses')}\n          ol.properties-list\n            +each(\"filteredSenses as senses\")\n              li.left {senses.label} : {senses.value} {units}\n        +if(\"advancementArray\")\n          h3.left {localize('GAS.Advancements')}\n          ul.icon-list\n            +each(\"advancementArray as advancement\")\n              //- @todo: this should be broken out into components for each advancement.type\n              li.left\n                .flexrow(data-tooltip=\"{getAdvancementValue(advancement, 'hint')}\" data-tooltip-class=\"gas-tooltip dnd5e2 dnd5e-tooltip item-tooltip\")\n                  .flex0.relative.image\n                    img.icon(src=\"{advancement.icon}\" alt=\"{advancement.title}\")\n                  .flex2 {advancement.title}\n                .flexrow\n                  svelte:component(this=\"{advancementComponents[advancement.type]}\" advancement=\"{advancement}\")\n                    \n                  \n                \n    .flex0.border-right.right-border-gradient-mask \n    .flex3.left.pl-md.scroll.col-b {@html richHTML}\n\n</template>\n\n<style lang=\"sass\">\n  @use \"../../../../../styles/Mixins.scss\" as mixins\n  .content \n    +mixins.staticOptions\n\n    .col-a\n      max-width: 325px\n\n  :global(.icon-select)\n    position: relative\n\n  .info-message\n    font-size: 0.8rem\n    color: #666\n    font-style: italic\n    margin-top: -0.5rem\n    margin-bottom: 0.5rem\n</style>\n"],"names":["ctx","race"],"mappings":"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"}