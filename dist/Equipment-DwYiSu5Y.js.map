{"version":3,"file":"Equipment-DwYiSu5Y.js","sources":["../src/components/molecules/dnd5e/StartingGold.svelte","../src/components/atoms/button/IconButton.svelte","../src/components/molecules/dnd5e/v4/StartingGold.svelte","../src/components/atoms/dnd5e/2024/StartingEquipmentGroups.svelte","../src/components/atoms/dnd5e/2014/StartingEquipmentGroups.svelte","../src/components/molecules/dnd5e/StartingEquipment.svelte","../src/components/molecules/dnd5e/EquipmentSelection/EquipmentSelectorDetail.svelte","../src/components/molecules/dnd5e/EquipmentSelection/PlannedInventory.svelte","../src/components/organisms/dnd5e/Tabs/Equipment.svelte"],"sourcesContent":["<script>\n  import { localize } from \"#runtime/svelte/helper\";\n  import { getContext, onDestroy, onMount } from \"svelte\";\n  import { goldRoll } from \"~/src/stores/storeDefinitions\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import { writable } from 'svelte/store';\n\n  export let characterClass;\n  export let disabled = false;\n\n  let formula = \"\";\n\n  $: {\n    if (characterClass?.system?.wealth) {\n      formula = characterClass.system.wealth;\n      // If formula doesn't contain 'd', set goldRoll directly\n      if (!formula.includes('d')) {\n        $goldRoll = parseInt(formula) || 0;\n      }\n    } else {\n      // Use default gold dice from settings if no class-specific formula\n      formula = game.settings.get(MODULE_ID, \"defaultGoldDice\") || \"5d4 * 10\";\n    }\n  }\n\n  // Derive hasRolled from the goldRoll store value\n  $: hasRolled = $goldRoll > 0;\n\n  async function rollGold() {\n    if (disabled) return;\n    const roll = await new Roll(formula).evaluate();\n    const className = characterClass?.name || \"Character\";\n    const flavor = `Rolling starting gold for ${className}`;\n    roll.toMessage({\n      flavor,\n      speaker: ChatMessage.getSpeaker()\n    }, {rollMode: game.settings.get('core', 'rollMode')});\n\n    $goldRoll = roll.total;\n  }\n\n  export function resetGoldRoll() {\n    goldRoll.set(0);\n  }\n</script>\n\n<template lang=\"pug\">\n  section.starting-gold\n    .flexrow\n      +if(\"!disabled\")\n        .flex0.required(class=\"{!hasRolled ? 'active' : ''}\") *\n      .flex3\n        h2.left {localize('GAS.Equipment.Gold')}\n    \n    .flexcol.gold-section.gap-10(class=\"{disabled ? 'disabled' : ''}\")\n      +if(\"!hasRolled\")\n        .flexrow.left.gap-4\n          .flex1 Formula: \n          .flex1.badge.center {formula}\n      +if(\"!disabled\")\n        .flexrow.left.justify-flexrow-vertical\n          .flex3 \n            +if(\"hasRolled\")\n              .result.final-gold-result\n                .flexrow.justify-flexrow-vertical.no-wrap\n                  .flex0.relative.icon\n                    i.fas.fa-coins\n                  .flex2.left\n                    span.label Result: \n                    span.value {$goldRoll} gp\n          .flex0.right.controls(class=\"{hasRolled || disabled ? '' : 'active'}\" alt=\"Roll\" on:click!=\"{rollGold}\")\n            i.fas.fa-dice\n</template>\n\n<style lang=\"sass\">\n  @import \"../../../../styles/Mixins.scss\"\n  .badge\n    +badge()\n  .starting-gold\n    background: rgba(0, 0, 0, 0.2)\n    border-radius: var(--border-radius)\n    padding: 0.5rem\n\n  .gold-section\n    padding: 0.5rem\n    border-radius: var(--border-radius)\n    &:not(.disabled)\n      border: 1px solid var(--dnd5e-color-gold)\n      background: rgba(0, 0, 0, 0.2)\n      background: #000000\n      color: var(--dnd5e-color-gold)\n\n\n  .formula\n    .label\n      color: var(--color-text-dark-secondary)\n      margin-right: 0.5rem\n    .value\n      font-family: monospace\n\n  .controls\n    cursor: pointer\n    min-width: 24px\n    font-size: 1rem\n    background-color: rgba(0, 0, 0, 0.1)\n    padding: 2px 1px 0px 0px\n    visibility: hidden\n    border: 1px solid var(--color-positive)\n    border-radius: 4px\n    color: var(--color-positive)\n    &:hover\n      cursor: pointer\n      background-color: rgba(140, 90, 0, 0.2)\n    &.active\n      visibility: visible\n      border: 1px solid var(--dnd5e-color-gold)\n      color: var(--dnd5e-color-gold)\n      animation: pulse 1s infinite\n\n  .result\n    &.final-gold-result\n      padding: 0.5rem\n      border-radius: var(--border-radius)\n      border: 1px solid var(--dnd5e-color-gold)\n      background: #000000\n      color: var(--dnd5e-color-gold)\n      margin-top: 0.5rem\n      \n      .icon\n        min-width: 32px\n        max-height: 32px\n        margin-right: 0.5rem\n        display: flex\n        align-items: center\n        justify-content: center\n        \n        i\n          color: var(--dnd5e-color-gold)\n          font-size: 1.2em\n      \n      .label\n        color: var(--dnd5e-color-gold)\n        margin-right: 0.5rem\n      \n      .value\n        color: var(--dnd5e-color-gold)\n        font-weight: bold\n      font-weight: bold\n</style> ","<script>\n  import preventDefault from \"~/src/helpers/svelte-actions/PreventDefault.js\";\n\n  export let icon = void 0;\n  export let disabled = false;\n</script>\n\n<button on:click on:mousedown={preventDefault} {disabled}>\n  <div><i class={icon} /></div>\n</button>\n\n<style lang=\"scss\">\n  @import \"../../../../styles/Mixins.scss\";\n  button {\n    @include icon-button;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n    clip-path: var(--tjs-icon-button-clip-path, none);\n    transform-style: preserve-3d;\n  }\n\n  button:hover {\n    background: radial-gradient(var(--button-background-highlight), var(--button-background));\n    clip-path: var(--tjs-icon-button-clip-path-hover, var(--tjs-icon-button-clip-path, none));\n  }\n</style>\n","<script>\n  import { localize as t } from \"#runtime/svelte/helper\";\n  import { getContext, onDestroy, onMount } from \"svelte\";\n  import { goldRoll } from \"~/src/stores/storeDefinitions\";\n  import { goldChoices, setClassGoldChoice, setBackgroundGoldChoice, clearGoldChoices } from \"~/src/stores/goldChoices\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import { clearEquipmentSelections } from \"~/src/stores/equipmentSelections\";\n  import IconButton from \"~/src/components/atoms/button/IconButton.svelte\";\n  \n  export let characterClass;\n  export let background;\n\n\n  let classGoldOnly = 0;\n  let classGoldWithEquipment = 0;\n  let backgroundGoldOnly = 0;\n  let backgroundGoldWithEquipment = 0;\n\n  export const scrape2024SecondaryGoldAward = (item) => {\n    // Extract awards using a regular expression\n    const awards = item.system?.description?.value?.match(/\\[\\[\\/award (\\d+)GP\\]\\]/g);\n    \n    if (awards) {\n      const extractedAwards = awards.map(award => parseInt(award.match(/(\\d+)GP/)[1], 10));\n      const max = Math.max(...extractedAwards);\n      const min = Math.min(...extractedAwards);\n      \n      return {max, min};\n    } else {\n      console.log('No awards found.');\n      return 0\n    }\n  }\n  \n  // @deprecated: not accurate.\n  // Function to extract gold value from description text\n  export function scrapeGoldFromBackground(background) {\n    // Look for pattern \", X GP;\" where X is a number\n    // const match = background.system.description?.value.match(/,\\s*(\\d+)\\s*GP;/i);\n    // Match all occurrences of digits followed by a space and 'GP'\n    const matches = background.system.description?.value.match(/(\\d+)\\s*GP/gi);\n    // Extract the number values as integers\n    const goldValues = matches ? matches.map(m => parseInt(m.match(/\\d+/)[0], 10)) : [];\n    window.GAS.log.d(\"scrapeGoldFromBackground goldValues\", goldValues);\n    if(goldValues) {\n      const max = Math.max(...goldValues);\n      const min = Math.min(...goldValues);\n      \n      return {max, min};\n    } else {\n      console.warn('No gold value found in description.');\n      return 0;\n    }\n\n  }\n\n  $: {\n    if (characterClass) {\n      // Gold only amount comes from system.wealth\n      classGoldOnly = characterClass.system.wealth || 0;\n      // With equipment amount comes from description\n      classGoldWithEquipment = scrape2024SecondaryGoldAward(characterClass)?.min || 0\n    }\n    \n    if (background) {\n      // Gold only amount comes from system.wealth\n      backgroundGoldOnly = background.system.wealth || 0;\n      // With equipment amount comes from description\n      backgroundGoldWithEquipment = scrapeGoldFromBackground(background)?.min || 0;\n    }\n  }\n\n  function handleClassChoice(choice) {\n    if (showEditButton) return;\n    const goldValue = choice === 'equipment' ? classGoldWithEquipment : classGoldOnly;\n    setClassGoldChoice(choice, goldValue);\n  }\n\n  function handleBackgroundChoice(choice) {\n    if (showEditButton) return;\n    const goldValue = choice === 'equipment' ? backgroundGoldWithEquipment : backgroundGoldOnly;\n    setBackgroundGoldChoice(choice, goldValue);\n  }\n\n  function makeClassChoiceHandler(choice) {\n    return function classChoiceHandler() {\n      handleClassChoice(choice);\n    };\n  }\n\n  function makeBackgroundChoiceHandler(choice) {\n    return function backgroundChoiceHandler() {\n      handleBackgroundChoice(choice);\n    };\n  }\n\n  function handleEdit() {\n    clearGoldChoices();\n    clearEquipmentSelections();\n  }\n\n  $: classChoice = $goldChoices.fromClass.choice;\n  $: backgroundChoice = $goldChoices.fromBackground.choice;\n  $: totalGold = parseInt($goldChoices.fromClass.goldValue) + parseInt($goldChoices.fromBackground.goldValue);\n  $: hasChoices = characterClass || background;\n  $: isComplete = classChoice && backgroundChoice;\n  $: showEditButton = classChoice && backgroundChoice;\n</script>\n\n<template lang=\"pug\">\nsection.starting-gold\n  .flexrow\n    +if(\"!showEditButton\")\n      .flex0.required(class!=\"{!classChoice || !backgroundChoice ? 'active' : ''}\")\n        span *\n    .flex3\n      h2.left\n        span {t('GAS.Equipment.Gold')}\n    +if(\"showEditButton\")\n      .flex0.right\n        IconButton.option(\n          on:click!=\"{handleEdit}\"\n          icon=\"fas fa-pencil\"\n        )\n  \n  .flexcol.gold-section.gap-10(class!=\"{showEditButton ? 'disabled' : ''}\")\n    \n    +if(\"background\")\n      .equipment-group\n        .flexrow.left\n          .flex.group-label {background.name} Options\n        .options\n          button.option(\n            class!=\"{backgroundChoice === 'equipment' ? 'selected' : ''} {showEditButton ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeBackgroundChoiceHandler('equipment')}\"\n            disabled!=\"{showEditButton}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-sack-dollar\n              .flex2.left.name\n                span {t('GAS.Equipment.Label')} + {backgroundGoldWithEquipment} gp\n          button.option(\n            class!=\"{backgroundChoice === 'gold' ? 'selected' : ''} {showEditButton ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeBackgroundChoiceHandler('gold')}\"\n            disabled!=\"{showEditButton}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-coins\n              .flex2.left.name\n                span {backgroundGoldOnly} gp\n    \n    +if(\"characterClass\")\n      .equipment-group\n        .flexrow.left\n          .flex.group-label {characterClass.name} Options\n        .options\n          button.option(\n            class!=\"{classChoice === 'equipment' ? 'selected' : ''} {showEditButton ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeClassChoiceHandler('equipment')}\"\n            disabled!=\"{showEditButton}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-sack-dollar\n              .flex2.left.name\n                span {t('GAS.Equipment.Label')} + {classGoldWithEquipment} gp\n          button.option(\n            class!=\"{classChoice === 'gold' ? 'selected' : ''} {showEditButton ? 'disabled' : ''}\"\n            on:mousedown!=\"{makeClassChoiceHandler('gold')}\"\n            disabled!=\"{showEditButton}\"\n          )\n            .flexrow.justify-flexrow-vertical.no-wrap\n              .flex0.relative.icon\n                i.fas.fa-coins\n              .flex2.left.name\n                span {classGoldOnly} gp\n    \n    +if(\"classChoice && backgroundChoice\")\n      .equipment-group.final-gold\n        .flexrow.left.result\n          .flex0.relative.icon\n            i.fas.fa-coins\n          .flex2.left\n            .label\n              span Total Gold:\n            .value\n              span {totalGold} gp\n</template>\n\n<style lang=\"sass\">\n@import \"../../../../../styles/Mixins.scss\"\n.badge\n  +badge()\n.starting-gold\n  background: rgba(0, 0, 0, 0.2)\n  border-radius: var(--border-radius)\n  padding: 0.5rem\n\n.gold-section\n  padding: 0.5rem\n  border-radius: var(--border-radius)\n  &:not(.disabled)\n    border: 1px solid var(--dnd5e-color-gold)\n    background: rgba(0, 0, 0, 0.2)\n    background: #000000\n    color: var(--dnd5e-color-gold)\n\n.equipment-group\n  margin-bottom: 0.75rem\n  margin-right: 0.2rem\n  padding: 0.5rem\n  border-radius: var(--border-radius)\n  background: rgba(0, 0, 0, 0.2)\n  \n  &:last-child\n    margin-bottom: 0\n\n  &.final-gold\n    border: 1px solid var(--dnd5e-color-gold)\n    background: #000000\n    color: var(--dnd5e-color-gold)\n    \n    .icon\n      min-width: 32px\n      max-height: 32px\n      margin-right: 0.5rem\n      display: flex\n      align-items: center\n      justify-content: center\n      \n      i\n        color: var(--dnd5e-color-gold)\n        font-size: 1.2em\n    \n    .label\n      color: var(--dnd5e-color-gold)\n      margin-right: 0.5rem\n    \n    .value\n      color: var(--dnd5e-color-gold)\n      font-weight: bold\n\n.group-label\n  display: block\n  font-size: 1em\n  color: var(--dnd5e-color-gold)\n  margin-bottom: 0.5rem\n  font-style: italic\n\n.options\n  display: grid\n  grid-template-columns: repeat(1, 1fr)\n  gap: 0.2rem\n\n.option\n  display: flex\n  padding: 0.3rem 0.5rem\n  border: 1px solid rgba(255, 255, 255, 0.1)\n  border-radius: 4px\n  background: rgba(0, 0, 0, 0.4)\n  color: var(--li-background-color)\n  cursor: pointer\n  transition: all 0.5s ease\n  \n  &:hover:not(.disabled)\n    background: var(--dnd5e-color-gold)\n    border-color: rgba(255, 255, 255, 0.2)\n\n    .icon\n      i\n        color: var(--dnd5e-color-dark)\n    span\n      color: var(--dnd5e-color-dark)\n  &.selected\n    background: rgba(0, 0, 0, 0.8)\n    border-color: #b59e54\n    box-shadow: 0 0 10px rgba(181, 158, 84, 0.2)\n    &:hover:not(.disabled)\n      background: rgba(0, 0, 0, 0.8)\n      border-color: #b59e54\n      box-shadow: 0 0 10px rgba(181, 158, 84, 0.2)\n      span\n        color: #fff\n      .icon\n        i\n          color: #fff\n\n  &.disabled\n    cursor: not-allowed\n    opacity: 0.5\n    transition: opacity 0.5s ease\n\n  &.confirm\n    background: var(--color-positive)\n    border-color: var(--color-positive)\n    color: white\n    &:hover\n      background: var(--color-positive-dark)\n\n.icon\n  min-width: 32px\n  max-height: 32px\n  margin-right: 0.2rem\n  display: flex\n  align-items: center\n  justify-content: center\n  i\n    font-size: 1.2em\n    color: var(--dnd5e-color-gold)\n\n.name\n  font-size: smaller\n  line-height: 2rem\n\n.mt-sm\n  margin-top: 0.5rem\n</style> ","<script>\n  import { getEquipmentIcon, getEquipmentItemClasses, getOptionClasses, handleSelection, isOptionDisabled, isGroupFromSource, isGroupEditable, matchingGroupsForSource } from \"~/src/stores/equipmentSelections\";\n  import IconButton from \"~/src/components/atoms/button/IconButton.svelte\";\n\n  export let equipmentBySource;\n  export let sortedGroups;\n  export let handleEditGroup;\n  export let disabled;\n  export let selectedItems;\n</script>\n\n<template lang=\"pug\">\ndiv\n  +each(\"equipmentBySource as sourceGroup\")\n    +if(\"sourceGroup.equipment?.length\")\n      .equipment-source-section.ml-md\n        h3.source-header.left {sourceGroup.label} Equipment\n        +if(\"!matchingGroupsForSource(sortedGroups, sourceGroup).length\") \n          p.left None selected\n        //- Process each group within this source\n        +each(\"sortedGroups as group\")\n          +if(\"(group.completed || group.inProgress) && isGroupFromSource(group, sourceGroup.equipment)\")\n            .equipment-group\n              .flexrow.justify-flexrow-vertical.no-wrap\n                .flex3.left\n                  +if(\"group.type === 'choice'\")\n                    +if(\"group.completed\")\n                      span.group-label Completed:\n                      +else()\n                        span.group-label Choose one...\n                +if(\"isGroupEditable(group)\")\n                  .flex0.right\n                    IconButton.option(\n                      on:click=\"{handleEditGroup(group.id)}\"\n                      disabled=\"{disabled}\"\n                      icon=\"fas fa-pencil\"\n                    )\n              .options\n                +if(\"group.type === 'standalone'\")\n                  .equipment-group\n                    .flexrow.justify-flexrow-vertical.no-wrap\n                      .flex3.left\n                        +if(\"!group.completed\")\n                          span.group-label All of the following:\n                    +if(\"group.items[0].type === 'AND'\")\n                      +each(\"group.items[0].children as item\")\n                        .equipment-item.option(\n                          class=\"{getEquipmentItemClasses(group, item, disabled)}\"\n                          on:click!=\"{item.type !== 'linked' ? handleSelection(disabled, group.id, item) : null}\"\n                        )\n                          .flexrow.justify-flexrow-vertical.no-wrap\n                            .flex0.relative.icon\n                              img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                            .flex2.left.name.black-link\n                              span {@html item.label}\n                      +else()\n                        +each(\"group.items as item\")\n                          .equipment-item.option(\n                            class=\"{getEquipmentItemClasses(group, item, disabled)}\"\n                            on:click!=\"{item.type !== 'linked' ? handleSelection(disabled, group.id, item) : null}\"\n                          )\n                            .flexrow.justify-flexrow-vertical.no-wrap\n                              .flex0.relative.icon\n                                img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                              .flex2.left.name.black-link\n                                span {@html item.label}\n                  +else()\n                    +each(\"group.items as item\")\n                      .equipment-item.option(\n                        class=\"{getOptionClasses(disabled, group, item)}\"\n                        on:click!=\"{handleSelection(disabled, group.id, item)}\"\n                      )\n                        .flexrow.justify-flexrow-vertical.no-wrap\n                          .flex0.relative.icon\n                            img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                          .flex2.left.name.black-link\n                            span {@html item.label}\n                            +if(\"group.selectedItemId === item._id && $selectedItems[group.id]\")\n                              span.selected-name &nbsp;({$selectedItems[group.id].name})\n</template>\n\n<style lang=\"scss\">\n  @import '../../../../../styles/features/starting-equipment.sass';\n</style>\n  ","<script>\n  import { getEquipmentIcon, getEquipmentItemClasses, getOptionClasses, handleSelection, isOptionDisabled, isGroupFromSource, isGroupEditable } from \"~/src/stores/equipmentSelections\";\n  import IconButton from \"~/src/components/atoms/button/IconButton.svelte\";\n\n  export let equipmentBySource;\n  export let sortedGroups;\n  export let handleEditGroup;\n  export let disabled;\n  export let selectedItems;\n</script>\n\n<template lang=\"pug\">\ndiv\n  +each(\"sortedGroups as group\")\n    +if(\"group.completed || group.inProgress\")\n      .equipment-group\n        .flexrow.justify-flexrow-vertical.no-wrap\n          .flex3.left\n            +if(\"group.type === 'choice'\")\n              +if(\"group.completed\")\n                span.group-label Completed:\n                +else()\n                  span.group-label Choose one...\n          +if(\"isGroupEditable(group)\")\n            .flex0.right\n              IconButton.option(\n                on:click=\"{handleEditGroup(group.id)}\"\n                disabled=\"{disabled}\"\n                icon=\"fas fa-pencil\"\n              )\n        .options\n          +if(\"group.type === 'standalone'\")\n            .equipment-group\n              .flexrow.justify-flexrow-vertical.no-wrap\n                .flex3.left\n                  +if(\"!group.completed\")\n                    span.group-label All of the following:\n              +if(\"group.items[0].type === 'AND'\")\n                +each(\"group.items[0].children as item\")\n                  .equipment-item.option(\n                    class=\"{getEquipmentItemClasses(group, item, disabled)}\"\n                    on:click!=\"{item.type !== 'linked' ? handleSelection(disabled, group.id, item) : null}\"\n                  )\n                    .flexrow.justify-flexrow-vertical.no-wrap\n                      .flex0.relative.icon\n                        img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                      .flex2.left.name.black-link\n                        span {@html item.label}\n                +else()\n                  +each(\"group.items as item\")\n                    .equipment-item.option(\n                      class=\"{getEquipmentItemClasses(group, item, disabled)}\"\n                      on:click!=\"{item.type !== 'linked' ? handleSelection(disabled, group.id, item) : null}\"\n                    )\n                      .flexrow.justify-flexrow-vertical.no-wrap\n                        .flex0.relative.icon\n                          img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                        .flex2.left.name.black-link\n                          span {@html item.label}\n            +else()\n              .flex3.left\n                +if(\"group.completed\")\n                  +if(\"group.items?.length > 0\")\n                    span.group-label Pre-selected:\n                  +else()\n                    span.group-label None selected\n              +each(\"group.items as item\")\n                button.option(\n                  class=\"{getOptionClasses(disabled, group, item)}\"\n                  on:click!=\"{handleSelection(disabled, group.id, item)}\"\n                  disabled=\"{isOptionDisabled(disabled, group, item)}\"\n                )\n                  .flexrow.justify-flexrow-vertical.no-wrap\n                    .flex0.relative.icon\n                      img.icon(src=\"{getEquipmentIcon(item.type, group)}\" alt=\"{item.type}\")\n                    .flex2.left.name.black-link\n                      span {@html item.label}\n                      +if(\"group.selectedItemId === item._id && $selectedItems[group.id]\")\n                        span.selected-name &nbsp;({$selectedItems[group.id].name})\n</template>\n\n\n<style lang=\"scss\">\n  @import '../../../../../styles/features/starting-equipment.sass';\n</style>\n    ","<script>\n  import { localize } from \"#runtime/svelte/helper\";\n  import { getContext, onDestroy, onMount, tick } from \"svelte\";\n  import {\n    equipmentSelections,\n    selectEquipment,\n    initializeGroup,\n    editGroup,\n    getEquipmentIcon,\n    selectedItems,\n    getEquipmentItemClasses,\n    getOptionClasses,\n    handleSelection,\n    isOptionDisabled,\n    matchingGroupsForSource,\n    isGroupFromSource,\n    isGroupNonEditable,\n  } from \"~/src/stores/equipmentSelections\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n\n  import IconButton from \"~/src/components/atoms/button/IconButton.svelte\";\n  import ImageButton from \"~/src/components/atoms/button/ImageButton.svelte\";\n  import StartingEquipmentGroups2024 from \"~/src/components/atoms/dnd5e/2024/StartingEquipmentGroups.svelte\";\n  import StartingEquipmentGroups2014 from \"~/src/components/atoms/dnd5e/2014/StartingEquipmentGroups.svelte\";\n  // import EquipmentSelector from \"~/src/components/molecules/dnd5e/EquipmentSelector.svelte\";\n\n  export let startingEquipment = [];\n  export let classEquipment = [];\n  export let backgroundEquipment = [];\n  export let characterClass = null;\n  export let background = null;\n  export let disabled = false;\n  export let allEquipmentItems = [];\n\n  // Check if equipment selection is enabled in settings\n  const equipmentSelectionEnabled = game.settings.get(\n    MODULE_ID,\n    \"enableEquipmentSelection\",\n  );\n\n  function getGroupFromSelection(groupId) {\n    return $equipmentSelections[groupId];\n  }\n\n  $: window.GAS.log.d(\"StartingEquipment startingEquipment\", startingEquipment);\n\n  $: window.GAS.log.d(\n    \"StartingEquipment equipmentSelections\",\n    $equipmentSelections,\n  );\n\n  // Group equipment by source for 2024 rules - main grouping function\n  $: equipmentBySource = (() => {\n    if (window.GAS.dnd5eVersion < 4 || window.GAS.dnd5eRules !== \"2024\") {\n      // For non-2024 rules, just return equipment without source grouping\n      return [{ source: null, equipment: startingEquipment }];\n    }\n\n    const groups = [];\n\n    // Add class equipment if available\n    if (classEquipment?.length > 0) {\n      groups.push({\n        source: \"class\",\n        label: characterClass?.name || \"Class\",\n        equipment: classEquipment,\n      });\n    }\n\n    // Add background equipment if available\n    if (backgroundEquipment?.length > 0) {\n      groups.push({\n        source: \"background\",\n        label: background?.name || \"Background\",\n        equipment: backgroundEquipment,\n      });\n    }\n\n    return groups;\n  })();\n\n  let previousGroupId = null;\n  \n  // Reactive statement to initialize groups when equipment data changes\n  $: {\n    startingEquipment.forEach((entry, index) => {\n\n        // For each entry in startingEquipment, process based on its type\n    // Only process OR entries that are at the top level (no parent group)\n    if (entry.type === \"OR\") {\n      if (entry.group) {\n        // Skip OR entries that belong to a parent group\n      } else {\n        \n        // Find all children belonging to this OR group\n        const children = startingEquipment.filter(\n          (item) => item.group === entry._id,\n        );\n\n        // If there's only one child in this OR group, treat it as a standalone entry\n        if (children.length === 1) {\n          const singleChild = children[0];\n          initializeGroup(entry._id, {\n            type: \"standalone\",\n            label: singleChild.label || entry.label,\n            items: [singleChild],\n            sort: entry.sort,\n          });\n        } else if (children.length > 1) {\n          // Normal OR group with multiple choices: initialize as a choice group\n          initializeGroup(entry._id, {\n            type: \"choice\",\n            label: \"Choose one...\",\n            items: children,\n            sort: entry.sort,\n          });\n        }\n        // Update previousGroupId to the current OR group's id for the next iteration\n        previousGroupId = entry._id;\n      }\n    } else if (entry.type === \"AND\" && !entry.group) {\n      // Process top-level AND groups - find all children and build the group\n      const children = startingEquipment.filter(\n        (item) => item.group === entry._id,\n      );\n\n      // Separate OR children from regular children\n      const orChildren = children.filter(child => child.type === \"OR\");\n      const regularChildren = children.filter(child => child.type !== \"OR\");\n\n      window.GAS.log.d('[StartingEquipment] Processing AND group', {\n        andEntryId: entry._id,\n        childrenCount: children.length,\n        orChildrenCount: orChildren.length,\n        regularChildrenCount: regularChildren.length\n      });\n\n      // Create choice groups for each OR child\n      orChildren.forEach(orChild => {\n        const orGrandchildren = startingEquipment.filter(\n          (item) => item.group === orChild._id,\n        );\n        \n        if (orGrandchildren.length > 1) {\n          // Create a separate choice group for this OR\n          initializeGroup(orChild._id, {\n            type: \"choice\",\n            label: orChild.label || \"Choose one...\",\n            items: orGrandchildren,\n            sort: orChild.sort || entry.sort, // Use OR's sort or fallback to AND's sort\n            parentGroup: entry._id // Track that this belongs to the AND group\n          });\n          \n          window.GAS.log.d('[StartingEquipment] Created choice group for OR', {\n            orChildId: orChild._id,\n            orChildLabel: orChild.label,\n            orGrandchildrenCount: orGrandchildren.length,\n            parentGroupId: entry._id,\n            parentGroupLabel: entry.label\n          });\n        }\n      });\n\n      // Build the AND item with ALL children (including OR items for display)\n      // The OR items won't be interactive but will show what choice needs to be made\n      const andItemWithChildren = {\n        ...entry,\n        children: children // Keep all children for display\n      };\n\n      window.GAS.log.d('[StartingEquipment] Final AND item with all children', {\n        andItemId: entry._id,\n        totalChildrenCount: children.length\n      });\n\n      initializeGroup(entry._id, {\n        type: \"standalone\",\n        label: entry.label,\n        items: [andItemWithChildren],\n        sort: entry.sort,\n      });\n      \n      previousGroupId = entry._id;\n    } else if (!entry.group) {\n      // Standalone entry (not part of a group): initialize as its own group\n      initializeGroup(entry._id || \"standalone\", {\n        type: \"standalone\",\n        label: entry.label,\n        items: [entry],\n        sort: entry.sort,\n      });\n      // Update previousGroupId to this standalone's id\n      previousGroupId = entry._id || \"standalone\";\n    }\n  });\n  }\n\n  // Sort groups by their sort value\n  $: sortedGroups = Object.values($equipmentSelections).sort(\n    (a, b) => (a.sort || 0) - (b.sort || 0),\n  );\n\n\n\n  // Group items by type for specialized handling\n  $: groupedByType = sortedGroups.reduce((acc, group) => {\n    // window.GAS.log.d(\"StartingEquipment groupedByType group\", group);\n    const itemTypes = group.items.map((item) => item.type);\n    if (itemTypes.includes(\"focus\")) {\n      if (!acc.focus) acc.focus = [];\n      acc.focus.push(group);\n    } else if (itemTypes.includes(\"weapon\")) {\n      if (!acc.weapon) acc.weapon = [];\n      acc.weapon.push(group);\n    } else if (itemTypes.includes(\"armor\")) {\n      if (!acc.armor) acc.armor = [];\n      acc.armor.push(group);\n    } else if (itemTypes.includes(\"tool\")) {\n      if (!acc.tool) acc.tool = [];\n      acc.tool.push(group);\n    } else {\n      if (!acc.standard) acc.standard = [];\n      acc.standard.push(group);\n    }\n    return acc;\n  }, {});\n\n  // $: window.GAS.log.d(\"StartingEquipment equipmentSelections\", $equipmentSelections);\n  // $: window.GAS.log.d(\"StartingEquipment sortedGroups\", sortedGroups);\n  // $: window.GAS.log.d(\"StartingEquipment groupedByType\", groupedByType);\n  // $: window.GAS.log.d('$equipmentSelections', $equipmentSelections);\n\n  function handleEditGroup(groupId) {\n    // window.GAS.log.d(\"[Starting Equipment] editGroup\", { groupId });\n    editGroup(groupId);\n  }\n\n  onMount(async () => {\n    // window.GAS.log.d(\"StartingEquipment\", startingEquipment);\n  });\n\n</script>\n\n<template lang=\"pug\">\n  +if(\"startingEquipment?.length\")\n    section.starting-equipment\n      .flexrow\n        +if(\"!disabled\")\n          .flex0.required(class=\"{equipmentSelectionEnabled ? 'active' : ''}\") *\n        .flex3\n          h2.left {localize('GAS.Equipment.Label')}\n      \n      //- For 2024 rules, group by source\n      +if(\"window.GAS.dnd5eVersion >= 4 && window.GAS.dnd5eRules === '2024' && equipmentBySource.length > 1\")\n        StartingEquipmentGroups2024(\n          equipmentBySource=\"{equipmentBySource}\"\n          sortedGroups=\"{sortedGroups}\"\n          handleEditGroup=\"{handleEditGroup}\"\n          disabled=\"{disabled}\"\n          selectedItems=\"{selectedItems}\"\n        )\n        +else()\n          //- Fallback for single source or non-2024 rules\n          StartingEquipmentGroups2014(\n            equipmentBySource=\"{equipmentBySource}\"\n            sortedGroups=\"{sortedGroups}\"\n            handleEditGroup=\"{handleEditGroup}\"\n            disabled=\"{disabled}\"\n            selectedItems=\"{selectedItems}\"\n          )\n</template>\n\n","<script>\nimport { getContext, onMount } from \"svelte\";\nimport { equipmentSelections, addGranularSelection, removeGranularSelection, getEquipmentIcon, initializeGroup, addChildGranularSelection, getRequiredSelectionsCount, editGroup } from \"~/src/stores/equipmentSelections\";\nimport { readOnlyTabs } from \"~/src/stores/index\";\nimport { localize } from \"#runtime/svelte/helper\";\nimport IconSelect from \"~/src/components/atoms/select/IconSelect.svelte\";\nimport { extractItemsFromPacksAsync, getPacksFromSettings } from \"~/src/helpers/Utility.js\";\nimport { MODULE_ID } from \"~/src/helpers/constants\";\n\n// Types that need additional configuration\nconst CONFIGURABLE_TYPES = ['tool', 'weapon', 'armor', 'focus'];\n\n// Check if equipment tab is readonly\n$: isDisabled = $readOnlyTabs.includes(\"equipment\");\n\n// Get equipment sources\nlet packs = getPacksFromSettings(\"equipment\");\nlet allEquipmentItemsFromPacks = [];\n\nonMount(async () => {\n  // Fetch full item data including system data\n  const rawItems = await extractItemsFromPacksAsync(packs, [\n    \"name->label\",\n    \"img\",\n    \"type\",\n    \"folder\",\n    \"uuid->value\",\n    \"_id\"\n  ], [\"system.type\", \"system.magicalBonus\", \"system.properties\"]);\n\n  // Process items to only keep the needed system fields\n  allEquipmentItemsFromPacks = rawItems.map(item => ({\n    ...item,\n    system: item.system ? {\n      type: item.system.type,\n      magicalBonus: item.system.magicalBonus,\n      properties: item.system.properties\n    } : undefined\n  }));\n\n  window.GAS.log.d('EquipmentSelectorDetail mounted', { \n    configurableSelections, \n    equipmentByType,\n    allEquipmentItemsFromPacks: allEquipmentItemsFromPacks.filter(item => item.type === 'focus')\n  });\n});\n\nconst showPackLabelInSelect = game.settings.get(MODULE_ID, 'showPackLabelInSelect');\n\n// Get the currently selected items that need configuration\n$: configurableSelections = Object.values($equipmentSelections).filter(group => {\n  // Log all groups for debugging\n  window.GAS.log.d('[EquipmentSelectorDetail] Evaluating group', {\n    groupId: group.id,\n    groupType: group.type,\n    hasSelectedItem: !!group.selectedItem,\n    selectedItemType: group.selectedItem?.type,\n    inProgress: group.inProgress,\n    completed: group.completed\n  });\n\n  // Only include groups that have a selected item and are configurable\n  if (!group.selectedItem || !group.inProgress) {\n    return false;\n  }\n\n  // Debug logging for all groups being evaluated\n  if (group.selectedItem && (CONFIGURABLE_TYPES.includes(group.selectedItem?.type) || group.selectedItem?.type === 'AND')) {\n    window.GAS.log.d('[EquipmentSelectorDetail] Configurable group found', {\n      groupId: group.id,\n      selectedItemType: group.selectedItem.type,\n      inProgress: group.inProgress,\n      isAND: group.selectedItem.type === 'AND',\n      hasConfigurableChildren: group.selectedItem?.type === 'AND' && \n        group.selectedItem?.children?.some(child => CONFIGURABLE_TYPES.includes(child.type))\n    });\n  }\n\n  // Include groups that are directly configurable OR are AND groups with configurable children\n  return CONFIGURABLE_TYPES.includes(group.selectedItem?.type) || \n         (group.selectedItem?.type === 'AND' && \n          group.selectedItem?.children?.some(child => CONFIGURABLE_TYPES.includes(child.type)));\n}).flatMap(group => {\n  // Handle AND groups with configurable children\n  if (group.selectedItem?.type === 'AND' && group.selectedItem?.children) {\n    window.GAS.log.d('[EquipSelect DETAIL] Processing AND group with children', {\n      groupId: group.id,\n      children: group.selectedItem.children.map(child => ({\n        type: child.type,\n        label: child.label,\n        _id: child._id\n      }))\n    });\n    \n    return group.selectedItem.children\n      .filter(child => CONFIGURABLE_TYPES.includes(child.type))\n      .map(child => ({ ...group, selectedItem: child, parentGroup: group }));\n  }\n\n  // If this group has a parentGroup that's a string ID, resolve it to the actual group object\n  if (group.parentGroup && typeof group.parentGroup === 'string') {\n    const parentGroupObject = $equipmentSelections[group.parentGroup];\n    window.GAS.log.d('[EquipmentSelectorDetail] Resolving parentGroup from string ID', {\n      groupId: group.id,\n      parentGroupId: group.parentGroup,\n      parentGroupObject: parentGroupObject ? {\n        id: parentGroupObject.id,\n        type: parentGroupObject.type,\n        label: parentGroupObject.label\n      } : null,\n      resolved: !!parentGroupObject\n    });\n    return [{ ...group, parentGroup: parentGroupObject }];\n  }\n\n  return [group];\n});\n\n// Filter equipment items by type for each configurable selection\n$: equipmentByType = configurableSelections.reduce((acc, group) => {\n  const type = group.selectedItem.type;\n  //- accumulate the items by group type\n  if (!acc[type]) {\n    acc[type] = allEquipmentItemsFromPacks\n      .filter(item => {\n        if (type === 'weapon' && group.selectedItem?.key) {\n          if (item.type !== type) return false;\n          // Handle composite weapon types\n          if (group.selectedItem.key === 'sim') {\n            return ['simpleM', 'simpleR'].includes(item.system?.type?.value) && !item.system?.magicalBonus && !item.system.properties?.includes('mgc');\n          }\n          if (group.selectedItem.key === 'mar') {\n            return ['martialM', 'martialR'].includes(item.system?.type?.value) && !item.system?.magicalBonus && !item.system.properties?.includes('mgc');\n          }\n          // Handle specific weapon types\n          if (['martialM', 'martialR', 'simpleM', 'simpleR'].includes(group.selectedItem.key)) {\n            return item.system?.type?.value === group.selectedItem.key && !item.system?.magicalBonus && !item.system.properties?.includes('mgc');\n          }\n          // Handle base item matching\n          return item.system?.baseItem === group.selectedItem.key;\n        }\n        if(type === 'focus' && group.selectedItem?.key) {\n          // window.GAS.log.d('EQUIPMENT DETAIL | Item matches type:', item, item.type, type );\n\n          return item.system?.properties?.includes('foc') && !item.system.properties?.includes('mgc');\n        }\n        if(type === 'armor' && group.selectedItem?.key) {\n          return item.system?.type?.value === group.selectedItem.key && !item.system.properties?.includes('mgc');\n        }\n        if(type === 'tool' && group.selectedItem?.key) {\n          return item.type === type && item.system.type.value === group.selectedItem.key && !item.system.properties?.includes('mgc');\n        }\n        return true;\n      })\n      .sort((a, b) => a.label.localeCompare(showPackLabelInSelect ? b.compoundLabel : b.label));\n  }\n  return acc;\n}, {});\n\n$: if(configurableSelections.length > 0) {\n  window.GAS.log.d('[EquipmentSelectorDetail] Configurable selections:', configurableSelections);\n  window.scrollTo(0, 0);\n  \n  // Delay scrolling to ensure the element is rendered\n  setTimeout(() => {\n    const firstEquipmentSelect = document.querySelector('.equipment-select');\n    if (firstEquipmentSelect) {\n      firstEquipmentSelect.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, 100); // Adjust the delay as necessary\n}\n\nfunction handleSelection(groupId, option, parentGroup) {\n  window.GAS.log.d('[EquipmentSelectorDetail] handleSelection called', {\n    groupId,\n    groupIdType: typeof groupId,\n    option,\n    parentGroup: parentGroup ? {\n      id: parentGroup.id,\n      type: parentGroup.type\n    } : null,\n    hasParentGroup: !!parentGroup,\n    willUseChildGranular: !!parentGroup\n  });\n\n  const value = typeof option === 'object' ? option.value : option;\n  \n  if (parentGroup) {\n    window.GAS.log.d('[EquipmentSelectorDetail] Calling addChildGranularSelection', {\n      parentGroupId: parentGroup.id,\n      childId: groupId,\n      value\n    });\n    addChildGranularSelection(parentGroup.id, groupId, value);\n  } else {\n    window.GAS.log.d('[EquipmentSelectorDetail] Calling addGranularSelection', {\n      groupId,\n      value\n    });\n    addGranularSelection(groupId, value);\n  }\n}\n\n/**\n * @description Create a handler factory function\n * @why The handler can only accept the selected value as a parameter, \n * so to pass the remaining parameters for the group, we need to create a factory function\n * which runs on mount and returns the handler function with the group details included\n * Then once selected, the handler is called with the selected value and the group details are included\n * @param {string} groupId - The id of the group\n * @param {object} parentGroup - The parent group\n * @returns {function} - The selection handler\n */\nfunction createSelectionHandler(groupId, parentGroup) {\n  \n  \n  return function selectionHandler(option) {\n    \n    handleSelection(groupId, option, parentGroup);\n  }\n}\n\n// Add this function to handle cancel\nfunction handleCancelSelection(group) {\n  const groupId = group.parentGroup ? group.parentGroup.id : group.id;\n  editGroup(groupId);\n}\n</script>\n\n<template lang=\"pug\">\nsection\n  +if(\"configurableSelections.length > 0 && !isDisabled\")\n    +each(\"configurableSelections as group\")\n      .equipment-config-item\n        .flexrow.justify-flexrow-vertical.no-wrap\n          .flex0.relative\n            img.icon(\n              src=\"{getEquipmentIcon(group.selectedItem.type)}\" \n              alt=\"{group.selectedItem.type}\"\n            )\n          .flex2.left.name.ml-sm\n            span {group.selectedItem.label}\n          +if(\"!isDisabled\")\n            .flex0.right\n              button.cancel-button(on:click!=\"{handleCancelSelection(group)}\")\n                i.fas.fa-times\n        \n        .equipment-select\n          +if(\"group.parentGroup\")\n            IconSelect.mb-md.icon-select(\n              options=\"{equipmentByType[group.selectedItem.type] || []}\"\n              active=\"{group.parentGroup.granularSelections?.children?.[group.id === group.parentGroup.id ? group.selectedItem._id : group.id]?.selections?.[0]}\"\n              placeHolder=\"Select {group.selectedItem.type}\"\n              handler=\"{createSelectionHandler(group.id === group.parentGroup.id ? group.selectedItem._id : group.id, group.parentGroup)}\"\n              id=\"equipment-select-{group.selectedItem._id}\"\n            )\n          +if(\"!group.parentGroup\")\n            IconSelect.mb-md.icon-select(\n              options=\"{equipmentByType[group.selectedItem.type] || []}\"\n              active=\"{group.granularSelections?.self?.[0]}\"\n              placeHolder=\"Select {group.selectedItem.type}\"\n              handler=\"{createSelectionHandler(group.id)}\"\n              id=\"equipment-select-{group.selectedItem._id}\"\n            )\n</template>\n\n<style lang=\"sass\">\n\n.empty-state\n  text-align: center\n  color: var(--color-text-dark-secondary)\n  font-style: italic\n  padding: 1rem\n\n.equipment-type-section\n  margin-bottom: 1.5rem\n  \n  &:last-child\n    margin-bottom: 0\n\n.type-header\n  color: var(--color-text-highlight)\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1)\n  padding-bottom: 0.5rem\n  margin-bottom: 1rem\n\n.equipment-config-item\n  background: rgba(0, 0, 0, 0.3)\n  border-radius: var(--border-radius)\n  padding: 0.3rem 1rem\n  margin-bottom: 0.3rem\n\n  &:last-child\n    margin-bottom: 0\n\n.icon\n  margin-right: 2rem\n  border: none\n  filter: brightness(1) drop-shadow(0 2px 3px rgba(0, 0, 0, 0.5))\n\n.name\n  font-size: 1.1em\n  line-height: 32px\n  color: var(--color-text-dark-primary)\n\n// Configuration section styles\n.tool-config,\n.armor-config,\n.weapon-config,\n.focus-config\n  margin-top: 0.3rem\n  padding-top: 0.3rem\n  border-top: 1px solid rgba(255, 255, 255, 0.1)\n\n.equipment-select\n  margin-top: 0.3rem\n  padding-top: 0.3  rem\n  border-top: 1px solid rgba(255, 255, 255, 0.1)\n\n:global(.icon-select)\n  position: relative\n\n.cancel-button\n  background: none\n  border: none\n  color: var(--color-text-dark-secondary)\n  padding: 0.5rem\n  cursor: pointer\n  transition: color 0.2s ease\n\n  &:hover\n    color: var(--color-text-highlight)\n\n  i\n    font-size: 1.2em\n</style>","<script>\nimport { getContext, onMount } from \"svelte\";\nimport { equipmentSelections, flattenedSelections } from \"~/src/stores/equipmentSelections\";\nimport { localize } from \"#runtime/svelte/helper\";\n\nlet plannedItems = [];\n\n// Track the raw selections\n$: rawSelections = $flattenedSelections || [];\n\n// $: window.GAS.log.d('PLANNED INVENTORY | flattenedSelections', $flattenedSelections);\n\n// Handle async updates when selections change and group identical items\n$: {\n  Promise.all(rawSelections.map(async (selection) => {\n    if(selection.type === 'linked') {\n      return await fromUuid(selection.key);\n    }\n    if(selection.key) {\n      return await fromUuid(selection.key);\n    }\n    return selection;\n  })).then(items => {\n    // Group identical items and sum their quantities\n    const groupedItems = items.reduce((acc, item) => {\n      if (!item) return acc;\n      \n      const key = item.uuid || item._id;\n      if (!acc[key]) {\n        acc[key] = {\n          ...item,\n          system: {\n            ...item.system,\n            quantity: 1\n          },\n          uuid: key\n        };\n      } else {\n        acc[key].system.quantity = (acc[key].system.quantity || 1) + 1;\n      }\n      return acc;\n    }, {});\n\n    plannedItems = Object.values(groupedItems);\n  });\n}\n\nfunction getItemName(item) {\n  // window.GAS.log.d('PLANNED INVENTORY | getItemName', item);\n  return `@UUID[${item?.uuid}]{${item?.name}}`\n}\n\n// $: window.GAS.log.d('[PlannedInventory] flattenedSelections', $flattenedSelections);\n// $: window.GAS.log.d('[PlannedInventory] plannedItems', plannedItems);\nlet unsubscribe;\n\nonMount(() => {\n\n});\n</script>\n\n<template lang=\"pug\">\n.planned-inventory\n  h3 {localize('GAS.Equipment.PlannedInventory')}\n  table.inventory-table\n    thead\n      tr\n        th \n        th.white {localize('GAS.Item')}\n        th.white {localize('GAS.Equipment.Weight')}\n        th.white {localize('GAS.Equipment.Quantity')}\n    tbody\n      +if('plannedItems.length === 0')\n        tr\n          td(colspan=\"4\").empty-message {localize('GAS.Equipment.NoItemsSelected')}\n        +else()\n          +each('plannedItems as item')\n            tr\n              td(width=\"50\")\n                +if('item && item.img')\n                  img(src=\"{item.img}\" width=\"32\" height=\"32\")\n                  +else()\n                    img(src=\"icons/svg/item-bag.svg\" width=\"32\" height=\"32\")\n              +await(\"TextEditor.enrichHTML(getItemName(item) || '')\")\n                +then(\"Html\")\n                  td= \"{@html Html || '--'}\"\n              td.weight= \"{item?.system?.weight?.value || 0}\"\n              td.quantity= \"{item?.system?.quantity || 1}\"\n</template>\n\n<style lang=\"sass\">\n.planned-inventory\n  margin-top: 1rem\n  padding: 1rem\n  background: rgba(0, 0, 0, 0.05)\n  border-radius: var(--border-radius)\n\n.inventory-table\n  width: 100%\n  border-collapse: collapse\n  margin-top: 0.5rem\n  th, td\n    text-align: left\n    padding: 0 0.5rem\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1)\n\n    img\n      margin-top: 0.3rem\n  th\n    font-weight: bold\n    color: var(--color-text-dark-primary)\n\n  td.quantity, td.weight\n    text-align: center\n\n  tbody tr:hover\n    background: rgba(0, 0, 0, 0.03)\n\n  .empty-message\n    text-align: center\n    color: var(--color-text-dark-secondary)\n    font-style: italic\n\n.inventory-table th:first-child,\n.inventory-table td:first-child\n  width: 50px\n  min-width: 50px\n  max-width: 50px\n</style>","<script>\n\n  import { goldRoll } from \"~/src/stores/storeDefinitions\";\n  import { localize as t } from \"#runtime/svelte/helper\";\n  import { MODULE_ID } from \"~/src/helpers/constants\";\n  import { getContext } from \"svelte\";\n  import { goldChoices } from \"../../../../stores/goldChoices\";\n  import { areGoldChoicesComplete } from \"~/src/stores/goldChoices\";\n\n  import { compatibleStartingEquipment, classStartingEquipment, backgroundStartingEquipment } from \"~/src/stores/startingEquipment\";\n  import { characterClass, characterSubClass, background, readOnlyTabs } from \"~/src/stores/index\";\n  import StartingGold from \"~/src/components/molecules/dnd5e/StartingGold.svelte\";\n  import StartingGoldv4 from \"~/src/components/molecules/dnd5e/v4/StartingGold.svelte\";\n  \n  import StartingEquipment from \"~/src/components/molecules/dnd5e/StartingEquipment.svelte\";\n  import EquipmentSelectorDetail from \"~/src/components/molecules/dnd5e/EquipmentSelection/EquipmentSelectorDetail.svelte\";\n  import PlannedInventory from \"~/src/components/molecules/dnd5e/EquipmentSelection/PlannedInventory.svelte\";\n  const doc = getContext(\"#doc\");\n\n  // Get equipment selection setting\n  $: equipmentSelectionEnabled = game.settings.get(MODULE_ID, \"enableEquipmentSelection\");\n\n  // Track if gold has been rolled/selected based on version\n  $: isGoldComplete = window.GAS.dnd5eVersion >= 4  && window.GAS.dnd5eRules === \"2024\" ? $areGoldChoicesComplete : $goldRoll > 0;\n\n  // Get proficiencies from actor\n  $: proficiencies = $doc.system?.proficiencies || {};\n\n  // Check if equipment tab is readonly\n  $: isDisabled = $readOnlyTabs.includes(\"equipment\");\n\n  $: window.GAS.log.d(\"Equipment goldChoices\", $goldChoices);\n\n  $: window.GAS.log.d(\"Equipment compatibleStartingEquipment\", $compatibleStartingEquipment);\n\n  $: window.GAS.log.d(\"Equipment component:\", {\n    isDisabled,\n    readOnlyTabs: $readOnlyTabs\n  });\n\n\n\n</script>\n\n<template lang=\"pug\">\n.container\n  .content\n    .flexrow\n      .flex2.pr-sm.col-a\n        //- pre dnd5eVersion { window.GAS.dnd5eVersion}\n        //- pre dnd5eRules { window.GAS.dnd5eRules}\n        h3 {t('GAS.Equipment.StartingGold')}\n        +if(\"isDisabled\")\n          .info-message Equipment has been confirmed and is now read-only\n        \n        +if(\"!isDisabled\")\n          section.equipment-flow\n            +if(\"window.GAS.dnd5eVersion >= 4 && window.GAS.dnd5eRules === '2024'\")\n              StartingGoldv4(characterClass=\"{$characterClass}\" background=\"{$background}\")\n              +else()\n                StartingGold(characterClass=\"{$characterClass}\")\n            +if(\"isGoldComplete\")\n              StartingEquipment(\n                startingEquipment=\"{$compatibleStartingEquipment}\" \n                classEquipment=\"{$classStartingEquipment}\"\n                backgroundEquipment=\"{$backgroundStartingEquipment}\"\n                characterClass=\"{$characterClass}\"\n                background=\"{$background}\"\n                proficiencies=\"{proficiencies}\"\n                disabled=\"{isDisabled}\"\n              )\n      .flex0.border-right.right-border-gradient-mask\n      .flex3.left.scroll.col-b\n        PlannedInventory\n        EquipmentSelectorDetail\n</template>\n\n<style lang=\"sass\">\n.container\n  height: 100%\n  \n  .col-a\n      // max-width: 325px\n.content\n  height: 100%\n  overflow-y: auto\n\n.equipment-flow\n  margin-top: 1rem\n  display: flex\n  flex-direction: column\n  gap: 1rem\n\n\nsection\n  background: rgba(0, 0, 0, 0.05)\n  border-radius: var(--border-radius)\n  padding: 1rem\n\n:global(.equipment-flow .starting-gold)\n  background: transparent !important\n  margin-top: 0 !important\n  padding: 0 !important\n\n:global(.equipment-flow .starting-equipment)\n  background: transparent !important\n  margin-top: 0 !important\n  padding: 0 !important\n\n.info-message\n  font-size: 0.8rem\n  color: #666\n  font-style: italic\n  margin-top: 1rem\n  margin-bottom: 0.5rem\n  padding: 1rem\n  background: rgba(0, 0, 0, 0.05)\n  border-radius: var(--border-radius)\n</style> "],"names":["ctx","create_if_block_1","create_if_block_3","create_if_block_2","create_if_block","characterClass","t","create_if_block_4","background","create_if_block_7","create_if_block_8","create_if_block_5","selectedItems","handleSelection"],"mappings":"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"}