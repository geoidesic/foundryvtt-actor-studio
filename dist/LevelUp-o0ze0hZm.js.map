{"version":3,"file":"LevelUp-o0ze0hZm.js","sources":["../node_modules/svelte/src/runtime/internal/globals.js","../src/plugins/level-up/LevelUpButtonInnards.svelte","../src/plugins/level-up/ClassLevelRow.svelte","../src/plugins/level-up/LevelUpExistingClassLeftCol.svelte","../src/components/organisms/dnd5e/Tabs/LevelUp.svelte"],"sourcesContent":["/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","<script>\n  import { onMount } from \"svelte\";\n  import { ucfirst } from \"~/src/helpers/Utility.js\";\n  import { readOnlyTabs } from \"~/src/stores/index\"\n  export let src = false;\n  export let oldLevel = false;\n  export let newLevel = false;\n  export let classKey = false;\n  export let iconClass = 'fas fa-plus';\n\n  onMount(() => {\n  });\n</script>\n\n<template lang=\"pug\">\n+if(\"src && oldLevel && classKey\")\n  .flexrow.class-row\n    .flex0.icon\n      img(height=\"40\" width=\"40\" src=\"{src}\")\n    .flex3.flexrow\n      .flex3.left.pa-xs {ucfirst(classKey)} \n      .center.mr-sm(class=\"{newLevel ? 'flex2' : 'flex0'}\")\n        .lozenge.pa-xs {oldLevel} {newLevel ? 'â†’ ' + newLevel : ''} \n      +if(\"!$readOnlyTabs.includes('level-up')\")\n        .flex0.right.pr-md.py-xs\n          i(class=\"{iconClass}\")\n</template>\n\n<style lang=\"sass\">\n  @use '../../../styles/Mixins.sass' as mixins\n  .lozenge\n    background-color: var(--dnd5e-color-gold)\n    color: #000\n    border-radius: var(--border-radius)\n    box-shadow: 0 0 6px var(--dnd5e-shadow-45)\n  .gold-button-disabled\n    +mixins.gold-button(null)\n  .gold-button\n    +mixins.gold-button  \n  .class-row\n    padding: 0\n    justify-items: center\n    align-items: center\n  .icon\n    min-width: 40px\n  i\n    &:not(.fa-plus):not(.fa-times)\n      margin-right: 0.8em\n</style>\n","<script>\nimport { getContext, onMount } from \"svelte\";\nimport { isLevelUpAdvancementInProgress } from \"~/src/stores\";\nimport LevelUpButtonInnards from \"~/src/plugins/level-up/LevelUpButtonInnards.svelte\";\n\nexport let cssClasses;\nexport let tooltip = 'Cancel';\nexport let eventHandler = () => {};\nexport let imgSrc;\nexport let oldLevel;\nexport let newLevel = false;\nexport let classKey;\nexport let iconClass;\nexport let disabled = false;\n\nonMount(async () => {\n  console.log('ClassLevelRow');\n});\n</script>\n<template lang=\"pug\">\n//- pre isLevelUpAdvancementInProgress {$isLevelUpAdvancementInProgress}\n.class-row(\n  class=\"{cssClasses} {disabled ? 'disabled' : ''}\" \n  role=\"button\" \n  aria-role=\"button\" \n  aria-label=\"{tooltip}\" \n  data-tooltip=\"{tooltip}\" \n  on:mousedown!=\"{$isLevelUpAdvancementInProgress ? () => {} : eventHandler}\"\n)\n  LevelUpButtonInnards(\n    src=\"{imgSrc}\" \n    oldLevel=\"{oldLevel}\" \n    newLevel=\"{newLevel}\" \n    classKey=\"{classKey}\" \n    iconClass=\"{iconClass}\"\n  )\n</template>\n<style lang=\"sass\">\n@use '../../../styles/Mixins.sass' as mixins\n\n.gold-button-disabled\n  +mixins.gold-button(null)\n  \n.gold-button\n  +mixins.gold-button\n  &.disabled\n    opacity: 0.3\n    cursor: not-allowed\n</style>","<script>\n  import { onMount, tick } from \"svelte\";\n  import { localize as t } from \"~/src/helpers/Utility\";\n  import { getAdvancementValue } from \"~/src/helpers/Utility.js\";\n  \n  export let classAdvancementArrayFiltered = [];\n  export let level = 0;\n\n  const importClassAdvancements = async () => {\n    for (const classAdvancement of classAdvancementArrayFiltered) {\n      try {\n        const module = await import(\n          `~/src/components/molecules/dnd5e/Advancements/${classAdvancement.type}.svelte`\n        );\n        classAdvancementComponents[classAdvancement.type] = module.default;\n      } catch (error) {\n        gmae.system.log.e(`Failed to load component for ${classAdvancement.type}:`, error);\n      }\n    }\n  };\n\n  $: classAdvancementComponents = {};\n\n  onMount(async () => {\n    await tick();\n    await importClassAdvancements();\n  });\n</script>\n\n<template lang=\"pug\">\n  .component\n    //- pre level {level}\n    +if(\"classAdvancementArrayFiltered\")\n      ul.icon-list\n        +if(\"!classAdvancementArrayFiltered.length\")\n          li.left {t('NoAdvancements')}\n          +else()\n            +each(\"classAdvancementArrayFiltered as advancement\")\n              //- pre advancement {advancement.type}\n              //- @todo: this should be broken out into components for each advancement.type\n              li.left(data-type=\"{advancement.type}\")\n                .flexrow(data-tooltip=\"{getAdvancementValue(advancement, 'hint')}\" data-tooltip-class=\"gas-tooltip dnd5e2 dnd5e-tooltip item-tooltip\")\n                  .flex0.relative.image.mr-sm\n                    img.icon(src=\"{advancement.icon}\" alt=\"{advancement.title}\")\n                  .flex2 {advancement.title}\n                .flexrow\n                  svelte:component(this=\"{classAdvancementComponents[advancement.type]}\" advancement=\"{advancement}\")\n\n</template>\n\n<style lang=\"sass\">\n</style>\n","<script>\nimport { getContext, onMount, tick, onDestroy } from \"svelte\";\nimport { MODULE_ID } from \"~/src/helpers/constants\";\nimport { localize as t } from \"~/src/helpers/Utility\";\n\nimport { \n  classUuidForLevelUp, \n  levelUpClassObject,\n  subClassUuidForLevelUp,\n  levelUpSubClassObject,\n  selectedMultiClassUUID,\n  newLevelValueForExistingClass,\n  resetLevelUpStores,\n  isLevelUp,\n  levelUpClassGetsSubclassThisLevel,\n  subclassLevelForLevelUp,\n  isNewMultiClassSelected,\n  isLevelUpAdvancementInProgress,\n  activeRowClassKey,\n  levelUpCombinedHtml,\n  levelUpRichHTML,\n  levelUpRichSubClassHTML,\n  levelUpPreAdvancementSelections\n} from \"~/src/stores\";\nimport { readOnlyTabs } from \"~/src/stores\";\n\nimport {\n  extractItemsFromPacksSync,\n  extractMapIteratorObjectProperties,\n  getPacksFromSettings,\n  illuminatedDescription,\n  extractItemsFromPacksAsync\n} from \"~/src/helpers/Utility.js\";\n\nimport IconSelect from \"~/src/components/atoms/select/IconSelect.svelte\";\nimport ClassLevelRow from \"~/src/plugins/level-up/ClassLevelRow.svelte\";\nimport LeftColDetails from \"~/src/plugins/level-up/LevelUpExistingClassLeftCol.svelte\";\n\n/** LOCAL VARIABLES */\nlet \n  classValue = null,\n  selectedMultiClassUUIDKey = null, //- tracks which class key (i.e. which existing class row) was selected\n  subclassValue = null,\n  subClassesIndex = [],\n  classAdvancementArrayFiltered = [],\n  subClassAdvancementArrayFiltered = [],\n  classesPlaceholder = t('LevelUp.SelectMulticlass'),\n  rowTooltip = \"\",\n  richSubClassHTML = \"\",\n  packs = getPacksFromSettings(\"classes\"),\n  subclasses,\n  subClassesPacks = getPacksFromSettings(\"subclasses\"),\n  subclassesPlaceholder = t('Tabs.Classes.SubclassPlaceholder'),\n  mapKeys = [\"name->label\", \"img\", \"type\", \"folder\", \"uuid->value\", \"_id\"], //- keys to extract from the packs map\n  mappedClassIndex = extractItemsFromPacksSync(packs, mapKeys)\n;\n\n/** CONTEXT VARIABLES */\nconst actor = getContext(\"#doc\");\n\n/** DECORATORS */\nconst decorators = {\n  existingClassesCssClassForRow(classKey) {\n    let css = getters.getCharacterClass(classKey).uuid === $selectedMultiClassUUID ? 'active' : ''\n    if($isNewMultiClassSelected) {\n      css += ' gold-button-disabled'\n    } else {\n        css += ' gold-button'\n    }\n    return css\n  }\n}\n\n/** FILTERS*/\nconst filters = {\n  getFilteredSubclassIndex: async () => {\n    let mappedSubClassIndex = await extractItemsFromPacksAsync(\n      subClassesPacks,\n      [\"name->label\", \"img\", \"type\", \"folder\", \"uuid->value\", \"_id\"],\n      [\"system.classIdentifier\"],\n    );\n\n    mappedSubClassIndex = mappedSubClassIndex.filter((x) => {\n      return x.system?.classIdentifier == $levelUpClassObject?.system?.identifier;\n    });\n\n    const output = mappedSubClassIndex\n      .flat()\n      .sort((a, b) => a.label.localeCompare(b.label));\n    return output;\n  }\n}\n\n/** GETTERS */\nconst getters = {\n  /**\n   * Retrieves class data for a specific class from the actor's classes\n   * @param {string} classKey - The key identifier for the character class\n   * @returns {Object} The class data object from the actor\n   */\n  getCharacterClass(classKey) {\n    return classes[classKey];\n  },\n  /**\n   * Checks if a class row is active based on the selected class\n   * @param {string} classKey - The key identifier for the character class\n   * @returns {boolean} True if the class row is active, false otherwise\n   */\n  isRowActive(classKey) {\n  //   window.GAS.log.d('classKey', classKey)\n  //   window.GAS.log.d('$classUuidForLevelUp', $classUuidForLevelUp)\n    if(!$classUuidForLevelUp) return false;\n  //   window.GAS.log.d('classKey', classKey)\n  //   window.GAS.log.d('$levelUpClassObject.name.toLowerCase()', $levelUpClassObject.name.toLowerCase())\n    return classKey === $levelUpClassObject.name.toLowerCase()\n  },\n  rowTooltip(classKey) {\n    // Check if the class row is active\n    if ($classUuidForLevelUp && classKey === $levelUpClassObject.name.toLowerCase()) {\n      if(!$isLevelUpAdvancementInProgress) {\n        return t('Cancel'); // Return \"Cancel\" if the row is active\n      } else {\n        return t('LevelUp.DisabledTooltip');\n      }\n    }\n    return t('LevelUp.Button') + ' ' + classKey; // Default tooltip\n  }\n}\n\n/** IMPORTERS */\nconst importers = {\n  async importClassAdvancements() {\n    if (!classAdvancementArrayFiltered?.length) return;\n    for (const classAdvancement of classAdvancementArrayFiltered) {\n      try {\n        const module = await import(`~/src/components/molecules/dnd5e/Advancements/${classAdvancement.type}.svelte`);\n        classAdvancementComponents[classAdvancement.type] = module.default;\n      } catch (error) {\n        window.GAS.log.e(`Failed to load component for ${classAdvancement.type}:`, error);\n      }\n    }\n  },\n  async importSubClassAdvancements() {\n    if (!subClassAdvancementArrayFiltered?.length) return;\n    for (const subClassAdvancement of subClassAdvancementArrayFiltered) {\n      try {\n        const module = await import(`~/src/components/molecules/dnd5e/Advancements/${subClassAdvancement.type}.svelte`);\n        await tick();\n        subClassAdvancementComponents[subClassAdvancement.type] = module.default;\n      } catch (error) {\n        window.GAS.log.e(`Failed to load component for ${subClassAdvancement.type}:`, error);\n      }\n    }\n  },\n}\n\n/** EVENT HANDLERS */\nconst eventHandlers = {\n  /**\n   * Handles adding a level to an existing class\n   * Updates state and loads relevant class advancements\n   * @param {string} classKey - The key identifier for the character class\n   */\n  clickAddLevel: async (classKey) => {\n    if ($readOnlyTabs.includes('level-up')) return; // Freeze interactions when read-only\n    if ($isNewMultiClassSelected) return;\n    const isUnset = Boolean($selectedMultiClassUUID) && Boolean($newLevelValueForExistingClass);\n    if(isUnset) return;\n\n    window.GAS.log.d('classKey', classKey)\n    $levelUpClassObject = getters.getCharacterClass(classKey)\n    window.GAS.log.d('classKey', classKey)\n    window.GAS.log.d('$levelUpClassObject', $levelUpClassObject)\n    $classUuidForLevelUp = $levelUpClassObject.uuid\n    $subClassUuidForLevelUp = null;\n    $levelUpSubClassObject = null;\n    subclassValue = null;\n    subClassAdvancementArrayFiltered = [];\n    richSubClassHTML = \"\";\n    $selectedMultiClassUUID = false\n    $activeRowClassKey = classKey;\n    $levelUpPreAdvancementSelections.characterClass = classKey\n    $levelUpPreAdvancementSelections.isMultiClass = false\n    /**\n     * Updates the newLevelValueForExistingClass store with the next level for this class\n     * Calculates new level by adding 1 to the character's current level in this class\n     * Example: If a Fighter is level 3, this sets newLevelValueForExistingClass to 4\n     */\n    $newLevelValueForExistingClass = $levelUpClassObject?.system?.levels + 1\n    \n    await tick();\n    subClassesIndex = await filters.getFilteredSubclassIndex();\n    await tick();\n    importers.importClassAdvancements();\n    $levelUpRichHTML = await illuminatedDescription(html, $levelUpClassObject);\n  },\n  /**\n   * Handles cancellation of multiclass selection\n   * Resets all class and subclass related state\n   */\n  clickCancel: async () => {\n    if ($readOnlyTabs.includes('level-up')) return; // Freeze interactions when read-only\n    $selectedMultiClassUUID = false\n    classValue = null\n    $subClassUuidForLevelUp = null\n    selectedMultiClassUUIDKey = null\n    $classUuidForLevelUp = false\n    newLevelValueForExistingClass.set(false)\n    $activeRowClassKey = null;\n\n    delete $levelUpPreAdvancementSelections.characterClass\n    delete $levelUpPreAdvancementSelections.isMultiClass\n  },\n  /**\n   * Click will either add a level to the clicked class or cancel the level up selection\n   * @param classKey\n   */\n  handleRowActivation: (classKey) => {\n    return () => {\n      if ($readOnlyTabs.includes('level-up')) return; // Freeze interactions when read-only\n      const nameOfClickedClass = getters.getCharacterClass(classKey).name;\n      const isMultiClassMode = $classUuidForLevelUp && nameOfClickedClass == $levelUpClassObject.name;\n\n      if(isMultiClassMode) {\n        eventHandlers.clickCancel();\n      } else {\n        eventHandlers.clickAddLevel(classKey);\n      }\n    };\n  },\n  handleRowDeactivation: (classKey) => {\n    return () => {\n      if ($readOnlyTabs.includes('level-up')) return; // Freeze interactions when read-only\n      eventHandlers.clickCancel();\n    };\n  },\n  /**\n   * Handles the selection of a new class for multiclassing\n   * Resets subclass state and updates available options\n   * @param {string} option - The UUID of the selected class\n   */\n  selectMultiClassHandler: async (option) => {\n    if ($readOnlyTabs.includes('level-up')) return; // Freeze interactions when read-only\n    $subClassUuidForLevelUp = null;\n    $levelUpSubClassObject = null;\n    subclassValue = null;\n    richSubClassHTML = \"\";\n    window.GAS.log.d('option', option)\n    $levelUpClassObject = await fromUuid(option);\n    window.GAS.log.d('levelUpClassObject', $levelUpClassObject)\n    $selectedMultiClassUUID = option;\n    $classUuidForLevelUp = option;\n    $activeRowClassKey = null;\n    $levelUpPreAdvancementSelections.multiClass = option;\n    $levelUpPreAdvancementSelections.isMultiClass = true;\n    \n    \n    await tick();\n    subClassesIndex = await filters.getFilteredSubclassIndex();\n    await tick();\n    importers.importClassAdvancements();\n    $levelUpRichHTML = await illuminatedDescription(html, $levelUpClassObject);\n\n    Hooks.call('gas.richhtmlReady', $levelUpRichHTML);\n\n    // window.GAS.log.d('subClassesIndex', subClassesIndex)\n  },\n  /**\n   * Handles the selection of a subclass\n   * Updates state and loads relevant subclass advancements\n   * @param {string} option - The UUID of the selected subclass\n   */\n  selectSubClassHandler: async (option) => {\n    if ($readOnlyTabs.includes('level-up')) return; // Freeze interactions when read-only\n    $subClassUuidForLevelUp = option.value ?? option ?? null;\n    $levelUpSubClassObject = await fromUuid($subClassUuidForLevelUp);\n    subclassValue = $subClassUuidForLevelUp;\n    // window.GAS.log.d('$subClassUuidForLevelUp', $subClassUuidForLevelUp)\n    await tick();\n    importers.importSubClassAdvancements();\n    richSubClassHTML = await illuminatedDescription(\n      $levelUpSubClassObject?.system?.description?.value,\n      $levelUpSubClassObject\n    );\n    $levelUpPreAdvancementSelections.subClass = $subClassUuidForLevelUp;\n  }\n}\n\n\n/** REACTIVE VARIABLES */\n$: classAdvancementComponents = {};\n$: subClassAdvancementComponents = {};\n$: subClassProp = $subClassUuidForLevelUp;\n$: classProp = $selectedMultiClassUUID;\n$: classes = window.GAS.dnd5eVersion >= 4 ? $actor.classes : $actor._classes;\n$: classKeys = Object.keys(classes);\n$: html = $levelUpClassObject?.system?.description.value || \"\";\n// $: combinedHtml = $classUuidForLevelUp ? $levelUpRichHTML + (richSubClassHTML ? `<h1>${t('SubClass')}</h1>` + richSubClassHTML : '') : '';\n$: newLevel = $isNewMultiClassSelected ? 1 : $newLevelValueForExistingClass;\n$: if($classUuidForLevelUp) {\n  $levelUpCombinedHtml = $levelUpRichHTML + (richSubClassHTML ? `<h1>${t('SubClass')}</h1>` + richSubClassHTML : '')\n} else {\n  $levelUpCombinedHtml = '';\n}\n/**\n * Filters available classes for multiclassing\n * Excludes classes the character already has and sorts alphabetically\n */\n  $: filteredClassIndex = mappedClassIndex\n    .filter((i) => {\n      // First check if it's a class type\n      if (i.type !== 'class') return false;\n      \n      // Then check if the class is already in the character's classes\n      // Compare by name (case-insensitive)\n      const classNameLower = i.label.toLowerCase();\n      return !classKeys.some(key => key.toLowerCase() === classNameLower);\n    })\n    .sort((a, b) => a.label.localeCompare(b.label))\n/**\n * Tracks existing class data and levels\n * Updates when classes or active class changes\n */\n  $: existingCLassLevels = classKeys.map((classKey, index) => {\n    const classObj = classes[classKey]\n    // window.GAS.log.d('classObj_' + index, classObj)\n    // window.GAS.log.d('classObj.system.levels', classObj.system.levels)\n    return classObj.system.levels;\n  });\n/**\n * Manages subclass list state\n * Flattens and sorts subclass data when subClassesIndex changes\n */\n   $: if(subClassesIndex?.length) {\n    subclasses = subClassesIndex.flat().sort((a, b) => a.label.localeCompare(b.label));\n  } else {\n    subclasses = [];\n  }\n/**\n * Filters class advancements for the current level\n * Maps advancement data to include IDs for component rendering\n */\n   $: if ($levelUpClassObject?.system?.advancement.length) {\n    classAdvancementArrayFiltered = $levelUpClassObject?.advancement?.byLevel[newLevel]\n  } else {\n    classAdvancementArrayFiltered = [];\n  }\n\n// $: window.GAS.log.d('$classUuidForLevelUp', $classUuidForLevelUp)\n\nonMount(async () => {\n  // resetLevelUpStores();\n  // window.GAS.log.d('$levelUpPreAdvancementSelections', $levelUpPreAdvancementSelections)\n  if($levelUpPreAdvancementSelections.isMultiClass) {\n    await eventHandlers.selectMultiClassHandler($levelUpPreAdvancementSelections.multiClass);\n  } else {\n    if($levelUpPreAdvancementSelections.characterClass) {\n      await eventHandlers.clickAddLevel($levelUpPreAdvancementSelections.characterClass);\n    }\n    if($levelUpPreAdvancementSelections.subClass) {\n      await eventHandlers.selectSubClassHandler($levelUpPreAdvancementSelections.subClass);\n    }\n  }\n});\n\nonDestroy(() => {\n  // resetLevelUpStores();\n});\n</script>\n<template lang=\"pug\">\n.content\n  .flexrow\n    .flex2.pr-sm.col-a\n\n      +if(\"window.GAS.debug\")\n        //- pre classUuidForLevelUp {$classUuidForLevelUp}\n        //- pre selectedMultiClassUUID {$selectedMultiClassUUID}\n        //- pre isLevelUpAdvancementInProgress {$isLevelUpAdvancementInProgress}\n        //- pre newLevelValueForExistingClass {$newLevelValueForExistingClass}\n        //- pre levelUpClassObject {$levelUpClassObject}\n        //- pre classUuidForLevelUp {$classUuidForLevelUp}\n        //- pre levelUpSubClassObject {$levelUpSubClassObject}\n        //- pre subClassUuidForLevelUp {$subClassUuidForLevelUp}\n        //- pre activeRowClassKey {$activeRowClassKey}\n        //- pre selectedMultiClassUUID {$selectedMultiClassUUID}\n        //- pre levelUpClassGetsSubclassThisLevel {$levelUpClassGetsSubclassThisLevel}\n        //- pre subclasses {subclasses}\n        //- pre classKeys {classKeys}\n\n        \n      +if(\"!$selectedMultiClassUUID\")\n        h1.flex {t('LevelUp.ExistingClassesTitle')}\n        +if(\"$classUuidForLevelUp\")\n          p.left {$isLevelUpAdvancementInProgress ? t('LevelUp.DisabledDescription') : t('LevelUp.CancelDescription')}\n          +else \n            p.left {t('LevelUp.ExistingClassesDescription')}\n        +each(\"classKeys as classKey, index\")\n          \n          +if(\"$activeRowClassKey == classKey\")\n            //- Active row with \"Cancel\" tooltip\n            ClassLevelRow(\n              cssClasses=\"{decorators.existingClassesCssClassForRow(classKey)}\"\n              eventHandler!=\"{eventHandlers.handleRowDeactivation(classKey)}\"\n              imgSrc=\"{getters.getCharacterClass(classKey)?.img}\"\n              oldLevel=\"{existingCLassLevels[index]}\"\n              classKey=\"{classKey}\"\n              iconClass=\"fas fa-times\"\n              newLevel=\"{$newLevelValueForExistingClass}\"\n              tooltip=\"{getters.rowTooltip(classKey)}\"\n\n              disabled=\"{$isLevelUpAdvancementInProgress}\"\n            )\n            +else\n              //- Inactive row with default tooltip\n              +if(\"!$classUuidForLevelUp\")\n                ClassLevelRow(\n                  imgSrc=\"{getters.getCharacterClass(classKey)?.img}\"\n                  cssClasses=\"{decorators.existingClassesCssClassForRow(classKey)}\"\n                  eventHandler!=\"{eventHandlers.handleRowActivation(classKey)}\"\n                  oldLevel=\"{existingCLassLevels[index]}\"\n                  classKey=\"{classKey}\"\n                  tooltip=\"{getters.rowTooltip(classKey)}\"\n                  iconClass=\"{$classUuidForLevelUp ? '' : 'fas fa-plus'}\"\n                )\n\n      +if(\"!$newLevelValueForExistingClass\") \n        h1.flexrow.mt-md\n          .flex2.left {t('LevelUp.NewClassTitle')}\n          +if(\"$selectedMultiClassUUID\")\n            .flex0\n              button.mt-sm.gold-button(style=\"padding-right: 2px\" type=\"button\" role=\"button\" on:mousedown=\"{eventHandlers.clickCancel}\")\n                i(class=\"fas fa-times\")\n        IconSelect.icon-select( options=\"{filteredClassIndex}\" data-tooltip=\"{t('LevelUp.SelectClass')}\" placeHolder=\"{classesPlaceholder}\" handler=\"{eventHandlers.selectMultiClassHandler}\" id=\"characterClass-select\" bind:value=\"{$selectedMultiClassUUID}\" )\n\n      +if(\"$classUuidForLevelUp\")\n        h2.flexrow.mt-md {t('LevelUp.LevelAdvancements')}\n\n        //- pre subclasses {subclasses.length}\n        //- pre levelUpClassGetsSubclassThisLevel {$levelUpClassGetsSubclassThisLevel}\n        //- pre subclassLevelForLevelUp {$subclassLevelForLevelUp}\n        //- pre window.GAS.dnd5eVersion {window.GAS.dnd5eVersion}\n        //- pre window.GAS.dnd5eRules {window.GAS.dnd5eRules}\n        //- +if(\"selectedMultiClassUUID\")\n\n        LeftColDetails(classAdvancementArrayFiltered=\"{classAdvancementArrayFiltered}\" level=\"{newLevel}\" )\n        \n        //- Subclass selection section\n        +if(\"subclasses.length && $levelUpClassGetsSubclassThisLevel && (window.GAS.dnd5eVersion < 4 || window.GAS.dnd5eRules == '2014')\")\n          ul.icon-list\n            li.left\n              .flexrow\n                .flex0.relative.image\n                  img.icon(src=\"{`modules/${MODULE_ID}/assets/dnd5e/3.x/subclass.svg`}\" alt=\"{t('AltText.Subclass')}\")\n                .flex2 {t('SubClass')}\n        \n        +if(\"subclasses.length && $levelUpClassGetsSubclassThisLevel\")  \n          h3.left.mt-md {t('LevelUp.Subclass')}\n          +if(\"window.GAS.debug\")\n            //- pre levelUpClassGetsSubclassThisLevel {$levelUpClassGetsSubclassThisLevel}\n          IconSelect.icon-select(\n            active=\"{subClassProp}\" \n            options=\"{subclasses}\"  \n            placeHolder=\"{subclassesPlaceholder}\" \n            handler=\"{eventHandlers.selectSubClassHandler}\" \n            id=\"subClass-select\" \n            bind:value=\"{subclassValue}\" \n            truncateWidth=\"17\"\n            disabled=\"{$isLevelUpAdvancementInProgress}\"\n          )\n          +else\n            \n\n            p\n              i.fas.fa-exclamation-triangle.icon(style=\"color: #ff6b6b;\").left.mr-sm\n              | No subclasses available. Ask your GM to check compendium sources for subclasses are assigned in the settings.\n\n      \n    .flex0.border-right.right-border-gradient-mask \n    .flex3.left.pl-md.scroll.col-b \n      //- pre isLevelUp: {$isLevelUp}\n      +if(\"$classUuidForLevelUp\")\n        h1 {$levelUpClassObject?.name || ''}\n      | {@html $levelUpCombinedHtml}\n</template>\n<style lang=\"sass\">\n  @use \"../../../../../styles/Mixins.sass\" as mixins\n\n  :global(.icon-select)\n    position: relative\n\n  .gold-button-disabled\n    +mixins.gold-button(null)\n  .gold-button\n    +mixins.gold-button  \n\n  .content \n    +mixins.staticOptions\n    .badge.inset\n      +mixins.badge\n      +mixins.inset\n      display: inline-block\n      white-space: nowrap\n\n    .col-a\n      // max-width: 325px\n</style>"],"names":["ctx","create_if_block","t"],"mappings":"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","x_google_ignoreList":[0]}