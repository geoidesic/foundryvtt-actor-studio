{
  "rules": {
    "modifications": {
      "understand_before_edit": true,
      "preserve_functionality": true,
      "comment_required": true
    },
    "pug_template": {
      "indentation": {
        "description": "In Pug templates, +else() statements must be indented one level deeper than their parent +if() statement. This maintains proper template hierarchy and readability.",
        "example": {
          "correct": `
+if("condition")
  element
  +else()
    other-element`,
          "incorrect": `
+if("condition")
  element
+else()
  other-element`
        }
      },
      "content": {
        "description": "Content must always be contained within an element, never as a bare pipe beneath an +if statement or other control flow.",
        "example": {
          "correct": `
+if("condition")
  span content here`,
          "incorrect": `
+if("condition")
  | content here`
        }
      },
      "conditional_logic": {
        "description": "When using svelte-preprocess, only separate +if() and +else() statements are supported. Never use if-else combinators or variations. Instead, structure your logic as separate conditional blocks.",
        "example": {
          "correct": `
+if("type === 'tool'")
  .tool-config
+if("type === 'armor'")
  .armor-config
+if("type === 'weapon'")
  .weapon-config`,
          "incorrect": `
+if("type === 'tool'")
  .tool-config
+else if("type === 'armor'")
  .armor-config
+else if("type === 'weapon'")
  .weapon-config`
        }
      },
      "event_handlers": {
        "description": "Event handlers in templates must use the != operator to prevent HTML encoding of function calls and expressions. Never use arrow functions or the = operator for event handlers.",
        "example": {
          "correct": [
            `// For function calls with parameters:
button(on:click!="{handleClick(param)}")`,
            `// For simple function references:
button(on:click!="{handleClick})"`,
            `// For attribute values that need expressions:
div(class!="{isActive ? 'active' : ''}")`
          ],
          "incorrect": [
            `// Never use arrow functions:
button(on:click="{() => handleClick(param)}")`,
            `// Never use = operator for function calls:
button(on:click="{handleClick(param)}")`,
            `// Never use = operator for expressions:
div(class="{isActive ? 'active' : ''}")`
          ]
        }
      }
    }
  }
} 